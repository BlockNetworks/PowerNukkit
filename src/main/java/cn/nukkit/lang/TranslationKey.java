/*
 * https://PowerNukkit.org - The Nukkit you know but Powerful!
 * Copyright (C) 2021  José Roberto de Araújo Júnior
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package cn.nukkit.lang;

import cn.nukkit.api.PowerNukkitOnly;
import cn.nukkit.api.Since;
import cn.nukkit.utils.TextFormat;
import lombok.NonNull;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import java.util.Arrays;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;

/**
 * @author joserobjr
 * @since 2021-07-03
 */
@FunctionalInterface
public interface TranslationKey {
    //<editor-fold desc="enum entries" defaultstate="collapsed">
    @PowerNukkitOnly @Since("FUTURE")
    enum Accessibility implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") DISABLETTS("accessibility.disableTTS"), // Text To Speech disabled
        @PowerNukkitOnly @Since("FUTURE") ENABLETTS("accessibility.enableTTS"), // Text To Speech enabled
        @PowerNukkitOnly @Since("FUTURE") CHAT_TTS_GAMEPAD_BACK("accessibility.chat.tts.gamepad.back"), // Press the %s to go back
        @PowerNukkitOnly @Since("FUTURE") CHAT_TTS_GAMEPAD_EXITCHAT("accessibility.chat.tts.gamepad.exitChat"), // Press the %s to exit chat
        @PowerNukkitOnly @Since("FUTURE") CHAT_TTS_GAMEPAD_SENDMESSAGE("accessibility.chat.tts.gamepad.sendMessage"), // Press the %s to send message
        @PowerNukkitOnly @Since("FUTURE") CHAT_TTS_SAYS("accessibility.chat.tts.says"), // %s says %s
        @PowerNukkitOnly @Since("FUTURE") CHAT_TTS_HIDECHAT("accessibility.chat.tts.hideChat"), // Hide chat
        @PowerNukkitOnly @Since("FUTURE") CHAT_TTS_KEYBOARD("accessibility.chat.tts.keyboard"), // Keyboard
        @PowerNukkitOnly @Since("FUTURE") CHAT_TTS_MUTECHATTOGGLE("accessibility.chat.tts.muteChatToggle"), // Mute All
        @PowerNukkitOnly @Since("FUTURE") CHAT_TTS_SENDCHATMESSAGE("accessibility.chat.tts.sendChatMessage"), // Send
        @PowerNukkitOnly @Since("FUTURE") CHAT_TTS_TEXTBOXTITLE("accessibility.chat.tts.textboxTitle"), // Chat
        @PowerNukkitOnly @Since("FUTURE") GAME_PLAYERVIEW("accessibility.game.playerView"), // Player view
        @PowerNukkitOnly @Since("FUTURE") LOADING_DONE("accessibility.loading.done"), // Done
        @PowerNukkitOnly @Since("FUTURE") SAVING_DONE("accessibility.saving.done"), // Done
        @PowerNukkitOnly @Since("FUTURE") DOWNLOADING_START("accessibility.downloading.start"), // Download begun
        @PowerNukkitOnly @Since("FUTURE") DOWNLOADING_PROGRESS("accessibility.downloading.Progress"), // Downloading %s percent
        @PowerNukkitOnly @Since("FUTURE") DOWNLOADING_CANCELED("accessibility.downloading.canceled"), // Download canceled
        @PowerNukkitOnly @Since("FUTURE") DOWNLOADING_COMPLETE("accessibility.downloading.complete"), // Download complete
        @PowerNukkitOnly @Since("FUTURE") IMPORTING_START("accessibility.importing.start"), // Import begun
        @PowerNukkitOnly @Since("FUTURE") IMPORTING_PROGRESS("accessibility.importing.Progress"), // Importing %s percent
        @PowerNukkitOnly @Since("FUTURE") IMPORTING_CANCELED("accessibility.importing.canceled"), // Import canceled
        @PowerNukkitOnly @Since("FUTURE") IMPORTING_COMPLETE("accessibility.importing.complete"), // Import complete
        @PowerNukkitOnly @Since("FUTURE") SIGNIN_XBL("accessibility.signin.xbl"), // Signing into X box live
        @PowerNukkitOnly @Since("FUTURE") CHAT_HOWTOOPEN("accessibility.chat.howtoopen"), // Press %s to open chat
        @PowerNukkitOnly @Since("FUTURE") KEY_MOUSEBUTTON("accessibility.key.mouseButton"), // Mouse Button %s
        @PowerNukkitOnly @Since("FUTURE") KEY_GAMEPAD("accessibility.key.gamepad"), // Controller %s
        @PowerNukkitOnly @Since("FUTURE") LIST_OR_TWO("accessibility.list.or.two"), // %s or %s
        @PowerNukkitOnly @Since("FUTURE") LIST_OR_THREE_OR_MORE_FIRST("accessibility.list.or.three_or_more.first"), // %s
        @PowerNukkitOnly @Since("FUTURE") LIST_OR_THREE_OR_MORE_INNER("accessibility.list.or.three_or_more.inner"), // , %s
        @PowerNukkitOnly @Since("FUTURE") LIST_OR_THREE_OR_MORE_LAST("accessibility.list.or.three_or_more.last"), // , or %s
        @PowerNukkitOnly @Since("FUTURE") BUTTON_TTS_TITLE("accessibility.button.tts.title"), // Button
        @PowerNukkitOnly @Since("FUTURE") CHECKBOX_TTS_TITLE("accessibility.checkbox.tts.title"), // Checkbox
        @PowerNukkitOnly @Since("FUTURE") CHECKBOX_TTS_STATUS("accessibility.checkbox.tts.status"), // status %s		## Status will be checked or unchecked
        @PowerNukkitOnly @Since("FUTURE") DROPDOWN_TTS_TITLE("accessibility.dropdown.tts.title"), // Dropdown
        @PowerNukkitOnly @Since("FUTURE") SLIDER_TTS_TITLE("accessibility.slider.tts.title"), // Slider
        @PowerNukkitOnly @Since("FUTURE") TAB_TTS_TITLE("accessibility.tab.tts.title"), // Tab
        @PowerNukkitOnly @Since("FUTURE") TEXTBOX_TTS_TITLE("accessibility.textbox.tts.title"), // Textbox
        @PowerNukkitOnly @Since("FUTURE") TOGGLE_TTS_TITLE("accessibility.toggle.tts.title"), // Toggle
        @PowerNukkitOnly @Since("FUTURE") BUTTON_CLOSE("accessibility.button.close"), // close
        @PowerNukkitOnly @Since("FUTURE") BUTTON_BACK("accessibility.button.back"), // back
        @PowerNukkitOnly @Since("FUTURE") BUTTON_EXIT("accessibility.button.exit"), // Exit
        @PowerNukkitOnly @Since("FUTURE") DROPDOWN_LISTITEM("accessibility.dropdown.listItem"), // List item
        @PowerNukkitOnly @Since("FUTURE") SECTIONNAME("accessibility.sectionName"), // Section %s: 
        @PowerNukkitOnly @Since("FUTURE") STATE_ON("accessibility.state.on"), // : on
        @PowerNukkitOnly @Since("FUTURE") STATE_OFF("accessibility.state.off"), // : off
        @PowerNukkitOnly @Since("FUTURE") STATE_CHECKED("accessibility.state.checked"), // : checked
        @PowerNukkitOnly @Since("FUTURE") STATE_UNCHECKED("accessibility.state.unchecked"), // : unchecked
        @PowerNukkitOnly @Since("FUTURE") STATE_SELECTED("accessibility.state.selected"), // : selected
        @PowerNukkitOnly @Since("FUTURE") STATE_UNSELECTED("accessibility.state.unselected"), // : unselected
        @PowerNukkitOnly @Since("FUTURE") INDEX("accessibility.index"), //  %s of %s	## This is numbering, which number out of the total number of objects is available for interaction. Example: 1 of 3
        @PowerNukkitOnly @Since("FUTURE") SLIDER_TTS_PERCENTVALUE("accessibility.slider.tts.percentValue"), // %s percent
        @PowerNukkitOnly @Since("FUTURE") PLAY_EDITWORLD("accessibility.play.editWorld"), // Edit World
        @PowerNukkitOnly @Since("FUTURE") PLAY_EDITREALM("accessibility.play.editRealm"), // Edit Realm
        @PowerNukkitOnly @Since("FUTURE") PLAY_EDITSERVER("accessibility.play.editServer"), // Edit Server
        @PowerNukkitOnly @Since("FUTURE") PLAY_IMPORTWORLD("accessibility.play.importWorld"), // Import World
        @PowerNukkitOnly @Since("FUTURE") PLAY_LEAVEREALM("accessibility.play.leaveRealm"), // Leave Realm
        @PowerNukkitOnly @Since("FUTURE") PLAY_REALMFEED("accessibility.play.realmFeed"), // Realm Feed
        @PowerNukkitOnly @Since("FUTURE") PLAY_TABLEFT("accessibility.play.tabLeft"), // Press the %s to tab left
        @PowerNukkitOnly @Since("FUTURE") PLAY_TABRIGHT("accessibility.play.tabRight"), // Press the %s to tab right
        @PowerNukkitOnly @Since("FUTURE") PLAY_LEGACYWORLDSDELETE("accessibility.play.legacyWorldsDelete"), // Delete Legacy World
        @PowerNukkitOnly @Since("FUTURE") PAUSE_PERMISSIONS("accessibility.pause.permissions"), // Permissions
        @PowerNukkitOnly @Since("FUTURE") PAUSE_PROFILE("accessibility.pause.profile"), // Choose Profile
        @PowerNukkitOnly @Since("FUTURE") START_BUTTONHELPER("accessibility.start.buttonHelper"), // %s : %s	## Used for on-screen gamepad helpers (eg. "Y Button : Change User")
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_ACHIEVEMENTS("accessibility.screenName.achievements"), // Achievements Screen
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_CHAT("accessibility.screenName.chat"), // Chat Screen
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_CHATSETTINGS("accessibility.screenName.chatSettings"), // Chat Settings Screen
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_CREATENEW("accessibility.screenName.createNew"), // Create New Screen
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_CREATEWORLD("accessibility.screenName.createWorld"), // Create World Settings Screen
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_EDITCHARACTER("accessibility.screenName.editCharacter"), // Edit Character Screen
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_EDITWORLDSETTINGS("accessibility.screenName.editWorldSettings"), // Edit World Settings Screen
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_ERROR("accessibility.screenName.error"), // Error Screen
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_HOWTOPLAY("accessibility.screenName.howToPlay"), // How To Play Screen
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_INVITETOGAME("accessibility.screenName.inviteToGame"), // Invite To Game Screen
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_MODALDIALOG("accessibility.screenName.modalDialog"), // Popup dialog
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_PATCHNOTES("accessibility.screenName.patchNotes"), // Patch Notes Screen
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_PAUSE("accessibility.screenName.pause"), // Pause Screen
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_PERMISSIONS("accessibility.screenName.permissions"), // Permissions Screen
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_PLAY("accessibility.screenName.play"), // Play Screen
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_PROFILE("accessibility.screenName.profile"), // Profile Screen
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_REALMSETTINGS("accessibility.screenName.realmSettings"), // Realm Settings Screen
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_SETTINGS("accessibility.screenName.settings"), // Game Settings Screen
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_SKINPICKER("accessibility.screenName.skinPicker"), // Choose Skin Screen
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_START("accessibility.screenName.start"), // Main Menu
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_VRALIGNMENT("accessibility.screenName.vrAlignment"), // VR Alignment Screen 
        @PowerNukkitOnly @Since("FUTURE") SCREENNAME_EMOTEWHEEL("accessibility.screenName.emoteWheel"), // Emotes Screen
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_RESET("accessibility.settings.reset"), // reset
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_CHOOSESEED("accessibility.settings.chooseSeed"), // Choose Seed
        @PowerNukkitOnly @Since("FUTURE") START_FEEDBACK("accessibility.start.feedback"), // Submit Feedback
        @PowerNukkitOnly @Since("FUTURE") START_NEW("accessibility.start.new"), // New
        @PowerNukkitOnly @Since("FUTURE") START_PROFILE("accessibility.start.profile"), // Choose Profile
        @PowerNukkitOnly @Since("FUTURE") START_SKINPICKER("accessibility.start.skinPicker"), // Choose Skin
        @PowerNukkitOnly @Since("FUTURE") STORE_TAG("accessibility.store.tag"), // Tag
        @PowerNukkitOnly @Since("FUTURE") TEXTBOX_EDITING("accessibility.textbox.editing"), // Editing
        @PowerNukkitOnly @Since("FUTURE") TEXT_PERIOD("accessibility.text.period"), // Period
        @PowerNukkitOnly @Since("FUTURE") TEXT_PERIOD_URL("accessibility.text.period.url"), // Dot				## Pronunciation for a period inside of a URL, as in "www dot microsoft dot com"
        @PowerNukkitOnly @Since("FUTURE") TEXT_COMMA("accessibility.text.comma"), // Comma
        @PowerNukkitOnly @Since("FUTURE") TEXT_COLON("accessibility.text.colon"), // Colon
        @PowerNukkitOnly @Since("FUTURE") TEXT_APOSTROPHE("accessibility.text.apostrophe"), // Apostrophe
        @PowerNukkitOnly @Since("FUTURE") TEXT_SEMICOLON("accessibility.text.semiColon"), // Semi Colon
        @PowerNukkitOnly @Since("FUTURE") TEXT_QUESTIONMARK("accessibility.text.questionMark"), // Question Mark
        @PowerNukkitOnly @Since("FUTURE") TEXT_QUOTATIONMARK("accessibility.text.quotationMark"), // Quotation Mark
        @PowerNukkitOnly @Since("FUTURE") TEXT_SPACE("accessibility.text.space"), // Space
        @PowerNukkitOnly @Since("FUTURE") TEXT_TILDE("accessibility.text.tilde"), // Tilde
        @PowerNukkitOnly @Since("FUTURE") TEXT_GRAVEACCENT("accessibility.text.graveAccent"), // Grave Accent
        @PowerNukkitOnly @Since("FUTURE") TEXT_LESSTHAN("accessibility.text.lessThan"), // Less Than
        @PowerNukkitOnly @Since("FUTURE") TEXT_GREATERTHAN("accessibility.text.greaterThan"), // Greater Than
        @PowerNukkitOnly @Since("FUTURE") TEXT_LEFTBRACE("accessibility.text.leftBrace"), // Left Brace
        @PowerNukkitOnly @Since("FUTURE") TEXT_RIGHTBRACE("accessibility.text.rightBrace"), // Right Brace
        @PowerNukkitOnly @Since("FUTURE") TEXT_RIGHTBRACKET("accessibility.text.rightBracket"), // Right Bracket
        @PowerNukkitOnly @Since("FUTURE") TEXT_LEFTBRACKET("accessibility.text.leftBracket"), // Left Bracket
        @PowerNukkitOnly @Since("FUTURE") TEXT_VERTICALBAR("accessibility.text.verticalBar"), // Vertical Bar
        @PowerNukkitOnly @Since("FUTURE") TEXT_FORWARDSLASH("accessibility.text.forwardSlash"), // Slash
        @PowerNukkitOnly @Since("FUTURE") TEXT_BACKWARDSLASH("accessibility.text.backwardSlash"), // Back Slash
        @PowerNukkitOnly @Since("FUTURE") TEXT_EXCLAMATIONPOINT("accessibility.text.exclamationPoint"), // Exclamation Point
        @PowerNukkitOnly @Since("FUTURE") TEXT_ATSIGN("accessibility.text.atSign"), // At
        @PowerNukkitOnly @Since("FUTURE") TEXT_HASHTAG("accessibility.text.hashTag"), // Hash Tag
        @PowerNukkitOnly @Since("FUTURE") TEXT_DOLLARSIGN("accessibility.text.dollarSign"), // Dollar
        @PowerNukkitOnly @Since("FUTURE") TEXT_PERCENT("accessibility.text.percent"), // Percent
        @PowerNukkitOnly @Since("FUTURE") TEXT_CARET("accessibility.text.caret"), // Caret
        @PowerNukkitOnly @Since("FUTURE") TEXT_AMPERSAND("accessibility.text.ampersand"), // And
        @PowerNukkitOnly @Since("FUTURE") TEXT_ASTERISK("accessibility.text.asterisk"), // Asterisk
        @PowerNukkitOnly @Since("FUTURE") TEXT_LEFTPARENTHESIS("accessibility.text.leftParenthesis"), // Left Parenthesis
        @PowerNukkitOnly @Since("FUTURE") TEXT_RIGHTPARENTHESIS("accessibility.text.rightParenthesis"), // Right Parenthesis
        @PowerNukkitOnly @Since("FUTURE") TEXT_HYPHEN("accessibility.text.hyphen"), // Hyphen
        @PowerNukkitOnly @Since("FUTURE") TEXT_UNDERSCORE("accessibility.text.underScore"), // Under Score
        @PowerNukkitOnly @Since("FUTURE") TEXT_PLUS("accessibility.text.plus"), // Plus
        @PowerNukkitOnly @Since("FUTURE") TEXT_EQUALS("accessibility.text.equals"), // Equals
        @PowerNukkitOnly @Since("FUTURE") TEXT_UNSUPPORTED("accessibility.text.unsupported"), // Unknown Character
        @PowerNukkitOnly @Since("FUTURE") TOAST("accessibility.toast"), // Notification	## This is the name of the popup that appears when a player gets a notification for a game invite or achievement unlocked
        @PowerNukkitOnly @Since("FUTURE") WORLDTEMPLATES_HELP("accessibility.worldTemplates.help"), // Help
        @PowerNukkitOnly @Since("FUTURE") POPUP_TITLE("accessibility.popup.title"), // Turn Off Screen Reader?
        @PowerNukkitOnly @Since("FUTURE") POPUP_MESSAGE_LINE1("accessibility.popup.message.line1"), // Welcome to Minecraft!
        @PowerNukkitOnly @Since("FUTURE") POPUP_MESSAGE_DEFAULT("accessibility.popup.message.default"), // On your device, screen reader support is enabled by default.
        @PowerNukkitOnly @Since("FUTURE") POPUP_MESSAGE_PLATFORM("accessibility.popup.message.platform"), // We've detected that your system has a screen reader enabled and have automatically enabled Minecraft's screen reader.
        @PowerNukkitOnly @Since("FUTURE") POPUP_MESSAGE_TOUCH("accessibility.popup.message.touch"), // Touch and drag to find controls on the screen, and double tap controls to select. To scroll on a screen, double tap and hold while swiping up or down.
        @PowerNukkitOnly @Since("FUTURE") POPUP_MESSAGE_XBL("accessibility.popup.message.xbl"), // We've detected that your account has "Let games read to me" enabled and have automatically enabled Minecraft's screen reader.
        @PowerNukkitOnly @Since("FUTURE") POPUP_MESSAGE_LINE3("accessibility.popup.message.line3"), // Would you like to turn this off?
        @PowerNukkitOnly @Since("FUTURE") POPUP_LEFT_BUTTON_TEXT("accessibility.popup.left_button_text"), // Turn Off
        @PowerNukkitOnly @Since("FUTURE") POPUP_RIGHT_BUTTON_TEXT("accessibility.popup.right_button_text"), // Leave On
        @PowerNukkitOnly @Since("FUTURE") CONTROLLERLAYOUTSCREEN_BUTTONREMAPPED("accessibility.controllerLayoutScreen.buttonRemapped"), // %s is now bound to %s
        @PowerNukkitOnly @Since("FUTURE") CONTROLLERLAYOUTSCREEN_BUTTONBOUNDTO("accessibility.controllerLayoutScreen.buttonBoundTo"), // %s button: %s
        @PowerNukkitOnly @Since("FUTURE") CONTROLLERLAYOUTSCREEN_BUTTONREMAPPING("accessibility.controllerLayoutScreen.buttonRemapping"), // Select input to bind for %s
        @PowerNukkitOnly @Since("FUTURE") GAMEPAD_FACEBUTTON_DOWN("accessibility.gamepad.faceButton.down"), // Button A
        @PowerNukkitOnly @Since("FUTURE") GAMEPAD_FACEBUTTON_RIGHT("accessibility.gamepad.faceButton.right"), // Button B
        @PowerNukkitOnly @Since("FUTURE") GAMEPAD_FACEBUTTON_LEFT("accessibility.gamepad.faceButton.left"), // Button X
        @PowerNukkitOnly @Since("FUTURE") GAMEPAD_FACEBUTTON_UP("accessibility.gamepad.faceButton.up"), // Button Y
        @PowerNukkitOnly @Since("FUTURE") GAMEPAD_BUTTON_SYSTEMLEFT("accessibility.gamepad.button.systemLeft"), // View Button
        @PowerNukkitOnly @Since("FUTURE") GAMEPAD_BUTTON_SYSTEMRIGHT("accessibility.gamepad.button.systemRight"), // Menu Button
        @PowerNukkitOnly @Since("FUTURE") GAMEPAD_DPAD_DOWN("accessibility.gamepad.dpad.down"), // D-Pad Down
        @PowerNukkitOnly @Since("FUTURE") GAMEPAD_DPAD_UP("accessibility.gamepad.dpad.up"), // D-Pad Up
        @PowerNukkitOnly @Since("FUTURE") GAMEPAD_DPAD_LEFT("accessibility.gamepad.dpad.left"), // D-Pad Left
        @PowerNukkitOnly @Since("FUTURE") GAMEPAD_DPAD_RIGHT("accessibility.gamepad.dpad.right"), // D-Pad Right
        @PowerNukkitOnly @Since("FUTURE") GAMEPAD_STICK_LEFT("accessibility.gamepad.stick.left"), // Left Stick
        @PowerNukkitOnly @Since("FUTURE") GAMEPAD_STICK_RIGHT("accessibility.gamepad.stick.right"), // Right Stick
        @PowerNukkitOnly @Since("FUTURE") GAMEPAD_TRIGGER_RIGHT("accessibility.gamepad.trigger.right"), // Right Trigger
        @PowerNukkitOnly @Since("FUTURE") GAMEPAD_TRIGGER_LEFT("accessibility.gamepad.trigger.left"), // Left Trigger
        @PowerNukkitOnly @Since("FUTURE") GAMEPAD_BUMPER_RIGHT("accessibility.gamepad.bumper.right"), // Right Bumper
        @PowerNukkitOnly @Since("FUTURE") GAMEPAD_BUMPER_LEFT("accessibility.gamepad.bumper.left"), // Left Bumper
        @PowerNukkitOnly @Since("FUTURE") KEYBOARD_LEFTBRACKET("accessibility.keyboard.leftBracket"), // Left square bracket key		## left square bracket means '[' on the english keyboard
        @PowerNukkitOnly @Since("FUTURE") KEYBOARD_RIGHTBRACKET("accessibility.keyboard.rightBracket"), // Right square bracket key	## right square bracket means ']' on the english keyboard
        @PowerNukkitOnly @Since("FUTURE") EMOTES_HOVERED("accessibility.emotes.hovered"), // %s, emote button %d, %d of %d
        @PowerNukkitOnly @Since("FUTURE") EMOTES_ASSIGNED("accessibility.emotes.assigned"), // The %s emote assigned
        @PowerNukkitOnly @Since("FUTURE") EMOTES_UNASSIGNED("accessibility.emotes.unassigned"), // Unassigned
        @PowerNukkitOnly @Since("FUTURE") EMOTES_PLAYSUCCESS("accessibility.emotes.playSuccess"), // Play emote
        @PowerNukkitOnly @Since("FUTURE") EMOTES_PLAYFAILED("accessibility.emotes.playFailed"), // No emote assigned to this button, press %s the Change Emotes button
        @PowerNukkitOnly @Since("FUTURE") EMOTES_CHANGEEMOTESINSTRUCTION_BUTTON("accessibility.emotes.changeEmotesInstruction.button"), // the %s to access
        @PowerNukkitOnly @Since("FUTURE") EMOTES_KEYBOARD_ARROW("accessibility.emotes.keyboard.arrow"), // arrow
        @PowerNukkitOnly @Since("FUTURE") EMOTES_INSTRUCTION_KEYBOARD("accessibility.emotes.instruction.keyboard"), // Press right or left to cycle through emote buttons. Press the down arrow to access the Change Emotes button.
        ;
        private final String code; Accessibility(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Accounts implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") NAME("accounts.name"), // Name: %s (%s)
        @PowerNukkitOnly @Since("FUTURE") SIGNEDINAS("accounts.signedInAs"), // Signed in as
        @PowerNukkitOnly @Since("FUTURE") SIGNOUTCONFIRMATION("accounts.signOutConfirmation"), // Do you want to sign out and switch accounts?
        @PowerNukkitOnly @Since("FUTURE") SWITCH("accounts.switch"), // Switch Accounts
        ;
        private final String code; Accounts(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Achievement implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ALTERNATIVEFUEL("achievement.alternativeFuel"), // Alternative Fuel
        @PowerNukkitOnly @Since("FUTURE") ALTERNATIVEFUEL_DESC("achievement.alternativeFuel.desc"), // Power a furnace with a kelp block
        @PowerNukkitOnly @Since("FUTURE") ACQUIREIRON("achievement.acquireIron"), // Acquire Hardware
        @PowerNukkitOnly @Since("FUTURE") ACQUIREIRON_DESC("achievement.acquireIron.desc"), // Smelt an iron ingot
        @PowerNukkitOnly @Since("FUTURE") BAKECAKE("achievement.bakeCake"), // The Lie
        @PowerNukkitOnly @Since("FUTURE") BAKECAKE_DESC("achievement.bakeCake.desc"), // Wheat, sugar, milk and eggs!
        @PowerNukkitOnly @Since("FUTURE") BLAZE_ROD("achievement.blaze_rod"), // Into Fire
        @PowerNukkitOnly @Since("FUTURE") BLAZE_ROD_DESC("achievement.blaze_rod.desc"), // Relieve a Blaze of its rod
        @PowerNukkitOnly @Since("FUTURE") BOOKCASE("achievement.bookcase"), // Librarian
        @PowerNukkitOnly @Since("FUTURE") BOOKCASE_DESC("achievement.bookcase.desc"), // Build some bookshelves to improve your enchantment table
        @PowerNukkitOnly @Since("FUTURE") BREEDCOW("achievement.breedCow"), // Repopulation
        @PowerNukkitOnly @Since("FUTURE") BREEDCOW_DESC("achievement.breedCow.desc"), // Breed two cows with wheat
        @PowerNukkitOnly @Since("FUTURE") BUILDBETTERPICKAXE("achievement.buildBetterPickaxe"), // Getting an Upgrade
        @PowerNukkitOnly @Since("FUTURE") BUILDBETTERPICKAXE_DESC("achievement.buildBetterPickaxe.desc"), // Construct a better pickaxe
        @PowerNukkitOnly @Since("FUTURE") BUILDFURNACE("achievement.buildFurnace"), // Hot Topic
        @PowerNukkitOnly @Since("FUTURE") BUILDFURNACE_DESC("achievement.buildFurnace.desc"), // Construct a furnace out of eight stone blocks
        @PowerNukkitOnly @Since("FUTURE") BUILDHOE("achievement.buildHoe"), // Time to Farm!
        @PowerNukkitOnly @Since("FUTURE") BUILDHOE_DESC("achievement.buildHoe.desc"), // Use planks and sticks to make a hoe
        @PowerNukkitOnly @Since("FUTURE") BUILDPICKAXE("achievement.buildPickaxe"), // Time to Mine!
        @PowerNukkitOnly @Since("FUTURE") BUILDPICKAXE_DESC("achievement.buildPickaxe.desc"), // Use planks and sticks to make a pickaxe
        @PowerNukkitOnly @Since("FUTURE") BUILDSWORD("achievement.buildSword"), // Time to Strike!
        @PowerNukkitOnly @Since("FUTURE") BUILDSWORD_DESC("achievement.buildSword.desc"), // Use planks and sticks to make a sword
        @PowerNukkitOnly @Since("FUTURE") BUILDWORKBENCH("achievement.buildWorkBench"), // Benchmarking
        @PowerNukkitOnly @Since("FUTURE") BUILDWORKBENCH_DESC("achievement.buildWorkBench.desc"), // Craft a workbench with four blocks of planks
        @PowerNukkitOnly @Since("FUTURE") COOKFISH("achievement.cookFish"), // Delicious Fish
        @PowerNukkitOnly @Since("FUTURE") COOKFISH_DESC("achievement.cookFish.desc"), // Catch and cook fish!
        @PowerNukkitOnly @Since("FUTURE") DIAMONDS("achievement.diamonds"), // DIAMONDS!
        @PowerNukkitOnly @Since("FUTURE") DIAMONDS_DESC("achievement.diamonds.desc"), // Acquire diamonds with your iron tools
        @PowerNukkitOnly @Since("FUTURE") DIAMONDSTOYOU("achievement.diamondsToYou"), // Diamonds to you!
        @PowerNukkitOnly @Since("FUTURE") DIAMONDSTOYOU_DESC("achievement.diamondsToYou.desc"), // Throw diamonds at another player.
        @PowerNukkitOnly @Since("FUTURE") ENCHANTMENTS("achievement.enchantments"), // Enchanter
        @PowerNukkitOnly @Since("FUTURE") ENCHANTMENTS_DESC("achievement.enchantments.desc"), // Use a book, obsidian and diamonds to construct an enchantment table
        @PowerNukkitOnly @Since("FUTURE") EXPLOREALLBIOMES("achievement.exploreAllBiomes"), // Adventuring Time
        @PowerNukkitOnly @Since("FUTURE") EXPLOREALLBIOMES_DESC("achievement.exploreAllBiomes.desc"), // Discover all biomes
        @PowerNukkitOnly @Since("FUTURE") FLYPIG("achievement.flyPig"), // When Pigs Fly
        @PowerNukkitOnly @Since("FUTURE") FLYPIG_DESC("achievement.flyPig.desc"), // Fly a pig off a cliff
        @PowerNukkitOnly @Since("FUTURE") FULLBEACON("achievement.fullBeacon"), // Beaconator
        @PowerNukkitOnly @Since("FUTURE") FULLBEACON_DESC("achievement.fullBeacon.desc"), // Create a full beacon
        @PowerNukkitOnly @Since("FUTURE") GET("achievement.get"), // Achievement get!
        @PowerNukkitOnly @Since("FUTURE") GHAST("achievement.ghast"), // Return to Sender
        @PowerNukkitOnly @Since("FUTURE") GHAST_DESC("achievement.ghast.desc"), // Destroy a Ghast with a fireball
        @PowerNukkitOnly @Since("FUTURE") KILLCOW("achievement.killCow"), // Cow Tipper
        @PowerNukkitOnly @Since("FUTURE") KILLCOW_DESC("achievement.killCow.desc"), // Harvest some leather
        @PowerNukkitOnly @Since("FUTURE") KILLENEMY("achievement.killEnemy"), // Monster Hunter
        @PowerNukkitOnly @Since("FUTURE") KILLENEMY_DESC("achievement.killEnemy.desc"), // Attack and destroy a monster
        @PowerNukkitOnly @Since("FUTURE") KILLWITHER("achievement.killWither"), // The Beginning.
        @PowerNukkitOnly @Since("FUTURE") KILLWITHER_DESC("achievement.killWither.desc"), // Kill the Wither
        @PowerNukkitOnly @Since("FUTURE") MAKEBREAD("achievement.makeBread"), // Bake Bread
        @PowerNukkitOnly @Since("FUTURE") MAKEBREAD_DESC("achievement.makeBread.desc"), // Turn wheat into bread
        @PowerNukkitOnly @Since("FUTURE") MINEWOOD("achievement.mineWood"), // Getting Wood
        @PowerNukkitOnly @Since("FUTURE") MINEWOOD_DESC("achievement.mineWood.desc"), // Attack a tree until a block of wood pops out
        @PowerNukkitOnly @Since("FUTURE") NOTIFICATION_DESCRIPTION("achievement.notification.description"), // Achievement unlocked
        @PowerNukkitOnly @Since("FUTURE") ONARAIL("achievement.onARail"), // On A Rail
        @PowerNukkitOnly @Since("FUTURE") ONARAIL_DESC("achievement.onARail.desc"), // Travel by minecart at least 1 km from where you started
        @PowerNukkitOnly @Since("FUTURE") OPENINVENTORY("achievement.openInventory"), // Taking Inventory
        @PowerNukkitOnly @Since("FUTURE") OPENINVENTORY_DESC("achievement.openInventory.desc"), // Press '%1$s' to open your inventory.
        @PowerNukkitOnly @Since("FUTURE") OVERKILL("achievement.overkill"), // Overkill
        @PowerNukkitOnly @Since("FUTURE") OVERKILL_DESC("achievement.overkill.desc"), // Deal nine hearts of damage in a single hit
        @PowerNukkitOnly @Since("FUTURE") OVERPOWERED("achievement.overpowered"), // Overpowered
        @PowerNukkitOnly @Since("FUTURE") OVERPOWERED_DESC("achievement.overpowered.desc"), // Build a Notch apple
        @PowerNukkitOnly @Since("FUTURE") PORTAL("achievement.portal"), // We Need to Go Deeper
        @PowerNukkitOnly @Since("FUTURE") PORTAL_DESC("achievement.portal.desc"), // Build a portal to the Nether
        @PowerNukkitOnly @Since("FUTURE") POTION("achievement.potion"), // Local Brewery
        @PowerNukkitOnly @Since("FUTURE") POTION_DESC("achievement.potion.desc"), // Brew a potion
        @PowerNukkitOnly @Since("FUTURE") REQUIRES("achievement.requires"), // Requires '%1$s'
        @PowerNukkitOnly @Since("FUTURE") SNIPESKELETON("achievement.snipeSkeleton"), // Sniper Duel
        @PowerNukkitOnly @Since("FUTURE") SNIPESKELETON_DESC("achievement.snipeSkeleton.desc"), // Kill a skeleton with an arrow from more than 50 meters
        @PowerNukkitOnly @Since("FUTURE") SPAWNWITHER("achievement.spawnWither"), // The Beginning?
        @PowerNukkitOnly @Since("FUTURE") SPAWNWITHER_DESC("achievement.spawnWither.desc"), // Spawn the Wither
        @PowerNukkitOnly @Since("FUTURE") TAKEN("achievement.taken"), // Taken!
        @PowerNukkitOnly @Since("FUTURE") THEEND("achievement.theEnd"), // The End?
        @PowerNukkitOnly @Since("FUTURE") THEEND_DESC("achievement.theEnd.desc"), // Locate the End
        @PowerNukkitOnly @Since("FUTURE") THEEND2("achievement.theEnd2"), // The End.
        @PowerNukkitOnly @Since("FUTURE") THEEND2_DESC("achievement.theEnd2.desc"), // Defeat the Ender Dragon
        @PowerNukkitOnly @Since("FUTURE") UNKNOWN("achievement.unknown"), // ???
        @PowerNukkitOnly @Since("FUTURE") UNINITSCORE("achievement.uninitScore"), // --
        ;
        private final String code; Achievement(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum AchievementScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTS_("achievementScreen.achievements:"), // Achievements:
        @PowerNukkitOnly @Since("FUTURE") GAMERSCORE_("achievementScreen.gamerscore:"), // Gamerscore:
        @PowerNukkitOnly @Since("FUTURE") HOUR("achievementScreen.hour"), // %d hour
        @PowerNukkitOnly @Since("FUTURE") HOURS("achievementScreen.hours"), // %d hours
        @PowerNukkitOnly @Since("FUTURE") TIMEPLAYED_("achievementScreen.timeplayed:"), // Time played:
        @PowerNukkitOnly @Since("FUTURE") FETCHINGACHIEVEMENTS("achievementScreen.fetchingAchievements"), // Fetching Achievements...
        @PowerNukkitOnly @Since("FUTURE") REWARD("achievementScreen.reward"), // Reward
        ;
        private final String code; AchievementScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Action implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") HINT_EXIT_BOAT("action.hint.exit.boat"), // Tap jump to exit the boat
        @PowerNukkitOnly @Since("FUTURE") HINT_EXIT_MINECART("action.hint.exit.minecart"), // Tap jump to exit the minecart
        @PowerNukkitOnly @Since("FUTURE") HINT_EXIT_PIG("action.hint.exit.pig"), // Tap sneak to dismount
        @PowerNukkitOnly @Since("FUTURE") HINT_EXIT_HORSE("action.hint.exit.horse"), // Tap sneak to dismount
        @PowerNukkitOnly @Since("FUTURE") HINT_EXIT_STRIDER("action.hint.exit.strider"), // Tap sneak to dismount
        @PowerNukkitOnly @Since("FUTURE") HINT_EXIT_DONKEY("action.hint.exit.donkey"), // Tap sneak to dismount
        @PowerNukkitOnly @Since("FUTURE") HINT_EXIT_MULE("action.hint.exit.mule"), // Tap sneak to dismount
        @PowerNukkitOnly @Since("FUTURE") HINT_EXIT_LLAMA("action.hint.exit.llama"), // Tap sneak to dismount
        @PowerNukkitOnly @Since("FUTURE") HINT_EXIT_SKELETON_HORSE("action.hint.exit.skeleton_horse"), // Tap sneak to dismount
        @PowerNukkitOnly @Since("FUTURE") INTERACT_CREEPER("action.interact.creeper"), // Ignite
        @PowerNukkitOnly @Since("FUTURE") INTERACT_EDIT("action.interact.edit"), // Edit
        @PowerNukkitOnly @Since("FUTURE") INTERACT_EXIT_BOAT("action.interact.exit.boat"), // Leave Boat
        @PowerNukkitOnly @Since("FUTURE") INTERACT_FEED("action.interact.feed"), // Feed
        @PowerNukkitOnly @Since("FUTURE") INTERACT_FISHING("action.interact.fishing"), // Fish
        @PowerNukkitOnly @Since("FUTURE") INTERACT_MILK("action.interact.milk"), // Milk
        @PowerNukkitOnly @Since("FUTURE") INTERACT_MOOSHEAR("action.interact.mooshear"), // Shear
        @PowerNukkitOnly @Since("FUTURE") INTERACT_MOOSTEW("action.interact.moostew"), // Milk Stew
        @PowerNukkitOnly @Since("FUTURE") INTERACT_RIDE_BOAT("action.interact.ride.boat"), // Board
        @PowerNukkitOnly @Since("FUTURE") INTERACT_RIDE_MINECART("action.interact.ride.minecart"), // Ride
        @PowerNukkitOnly @Since("FUTURE") INTERACT_RIDE_HORSE("action.interact.ride.horse"), // Ride
        @PowerNukkitOnly @Since("FUTURE") INTERACT_RIDE_STRIDER("action.interact.ride.strider"), // Ride
        @PowerNukkitOnly @Since("FUTURE") INTERACT_SHEAR("action.interact.shear"), // Shear
        @PowerNukkitOnly @Since("FUTURE") INTERACT_SIT("action.interact.sit"), // Sit
        @PowerNukkitOnly @Since("FUTURE") INTERACT_STAND("action.interact.stand"), // Stand
        @PowerNukkitOnly @Since("FUTURE") INTERACT_TALK("action.interact.talk"), // Talk
        @PowerNukkitOnly @Since("FUTURE") INTERACT_TAME("action.interact.tame"), // Tame
        @PowerNukkitOnly @Since("FUTURE") INTERACT_DYE("action.interact.dye"), // Dye
        @PowerNukkitOnly @Since("FUTURE") INTERACT_CURE("action.interact.cure"), // Cure
        @PowerNukkitOnly @Since("FUTURE") INTERACT_OPENCONTAINER("action.interact.opencontainer"), // Open
        @PowerNukkitOnly @Since("FUTURE") INTERACT_CREATEMAP("action.interact.createMap"), // Create Map
        @PowerNukkitOnly @Since("FUTURE") INTERACT_TAKEPICTURE("action.interact.takepicture"), // Take Picture
        @PowerNukkitOnly @Since("FUTURE") INTERACT_SADDLE("action.interact.saddle"), // Saddle
        @PowerNukkitOnly @Since("FUTURE") INTERACT_MOUNT("action.interact.mount"), // Mount
        @PowerNukkitOnly @Since("FUTURE") INTERACT_BOOST("action.interact.boost"), // Boost
        @PowerNukkitOnly @Since("FUTURE") INTERACT_WRITE("action.interact.write"), // Write
        @PowerNukkitOnly @Since("FUTURE") INTERACT_LEASH("action.interact.leash"), // Leash
        @PowerNukkitOnly @Since("FUTURE") INTERACT_UNLEASH("action.interact.unleash"), // Unleash
        @PowerNukkitOnly @Since("FUTURE") INTERACT_NAME("action.interact.name"), // Name
        @PowerNukkitOnly @Since("FUTURE") INTERACT_ATTACHCHEST("action.interact.attachchest"), // Attach Chest
        @PowerNukkitOnly @Since("FUTURE") INTERACT_TRADE("action.interact.trade"), // Trade
        @PowerNukkitOnly @Since("FUTURE") INTERACT_ARMORSTAND_POSE("action.interact.armorstand.pose"), // Pose
        @PowerNukkitOnly @Since("FUTURE") INTERACT_ARMORSTAND_EQUIP("action.interact.armorstand.equip"), // Equip
        @PowerNukkitOnly @Since("FUTURE") INTERACT_READ("action.interact.read"), // Read
        @PowerNukkitOnly @Since("FUTURE") INTERACT_WAKEVILLAGER("action.interact.wakevillager"), // Wake Villager
        @PowerNukkitOnly @Since("FUTURE") INTERACT_BARTER("action.interact.barter"), // Barter
        ;
        private final String code; Action(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum AdvMode implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ALLENTITIES("advMode.allEntities"), // @e = all entities
        @PowerNukkitOnly @Since("FUTURE") ALLPLAYERS("advMode.allPlayers"), // @a = all players
        @PowerNukkitOnly @Since("FUTURE") COMMAND("advMode.command"), // Command Input
        @PowerNukkitOnly @Since("FUTURE") NEARESTPLAYER("advMode.nearestPlayer"), // @p = nearest player
        @PowerNukkitOnly @Since("FUTURE") NOTALLOWED("advMode.notAllowed"), // Must be an opped player in creative mode
        @PowerNukkitOnly @Since("FUTURE") NOTENABLED("advMode.notEnabled"), // Command blocks are not enabled on this server
        @PowerNukkitOnly @Since("FUTURE") PREVIOUSOUTPUT("advMode.previousOutput"), // Previous Output
        @PowerNukkitOnly @Since("FUTURE") RANDOMPLAYER("advMode.randomPlayer"), // @r = random player
        @PowerNukkitOnly @Since("FUTURE") SELF("advMode.self"), // @s = self
        @PowerNukkitOnly @Since("FUTURE") SETCOMMAND("advMode.setCommand"), // Set Console Command for Block
        @PowerNukkitOnly @Since("FUTURE") SETCOMMAND_SUCCESS("advMode.setCommand.success"), // Command set: %s
        ;
        private final String code; AdvMode(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Apple implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ICLOUDDISABLED_TITLE("apple.iCloudDisabled.title"), // Don't Lose Your Worlds!
        @PowerNukkitOnly @Since("FUTURE") ICLOUDDISABLED_MESSAGE("apple.iCloudDisabled.message"), // Your worlds are not getting saved properly. They might not be here next time you play Minecraft. Go to your Apple TV settings and turn on iCloud to make sure all of your worlds get saved.
        @PowerNukkitOnly @Since("FUTURE") ICLOUDDISABLED_BUTTON_TURNONICLOUD("apple.iCloudDisabled.button.turnOnICloud"), // Turn on iCloud
        @PowerNukkitOnly @Since("FUTURE") ICLOUDNOSPACE_MESSAGE("apple.iCloudNoSpace.message"), // You do not have enough iCloud space free to save your worlds properly. They might not be here next time you play Minecraft. Free up space on your iCloud account to make sure all of your worlds get saved.
        @PowerNukkitOnly @Since("FUTURE") ICLOUDNOSPACE_BUTTON_MANAGEICLOUD("apple.iCloudNoSpace.button.manageICloud"), // Manage iCloud
        @PowerNukkitOnly @Since("FUTURE") ICLOUDNOINTERNET_MESSAGE("apple.iCloudNoInternet.message"), // You need an internet connection to save your worlds properly. They might not be here next time you play Minecraft. Reconnect to the internet to make sure all of your worlds get saved.
        @PowerNukkitOnly @Since("FUTURE") ICLOUDSIGNINREQUIRED_TITLE("apple.iCloudSignInRequired.title"), // Sign In
        @PowerNukkitOnly @Since("FUTURE") ICLOUDSIGNINREQUIRED_MESSAGE("apple.iCloudSignInRequired.message"), // You need to be signed in to iCloud to play Minecraft. Go to your Apple TV settings and turn on iCloud.
        @PowerNukkitOnly @Since("FUTURE") ICLOUDUSERCHANGED_MESSAGE("apple.iCloudUserChanged.message"), // A new iCloud account has signed in. You will need to restart Minecraft to play.
        @PowerNukkitOnly @Since("FUTURE") LOCALNETWORKPERMISSION_MESSAGE("apple.LocalNetworkPermission.message"), // Minecraft wants to access your local network. This allows you and others on your local network to play together. Declining this permission does not affect online features or gameplay. But will prevent you and others, on the same network, from playing together.
        ;
        private final String code; Apple(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Attribute implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") MODIFIER_PLUS_0("attribute.modifier.plus.0"), // +%d %s
        @PowerNukkitOnly @Since("FUTURE") MODIFIER_PLUS_1("attribute.modifier.plus.1"), // +%d%% %s
        @PowerNukkitOnly @Since("FUTURE") MODIFIER_PLUS_2("attribute.modifier.plus.2"), // +%d%% %s
        @PowerNukkitOnly @Since("FUTURE") MODIFIER_TAKE_0("attribute.modifier.take.0"), // -%d %s
        @PowerNukkitOnly @Since("FUTURE") MODIFIER_TAKE_1("attribute.modifier.take.1"), // -%d%% %s
        @PowerNukkitOnly @Since("FUTURE") MODIFIER_TAKE_2("attribute.modifier.take.2"), // -%d%% %s
        @PowerNukkitOnly @Since("FUTURE") NAME_MINECRAFT_ATTACK_DAMAGE("attribute.name.minecraft:attack_damage"), // Attack Damage
        @PowerNukkitOnly @Since("FUTURE") NAME_MINECRAFT_FOLLOW_RANGE("attribute.name.minecraft:follow_range"), // Mob Follow Range
        @PowerNukkitOnly @Since("FUTURE") NAME_MINECRAFT_KNOCKBACK_RESISTANCE("attribute.name.minecraft:knockback_resistance"), // Knockback Resistance
        @PowerNukkitOnly @Since("FUTURE") NAME_GENERIC_MAXHEALTH("attribute.name.generic.maxHealth"), // Max Health
        @PowerNukkitOnly @Since("FUTURE") NAME_GENERIC_ATTACKDAMAGE("attribute.name.generic.attackDamage"), // Attack Damage
        @PowerNukkitOnly @Since("FUTURE") NAME_GENERIC_KNOCKBACKRESISTANCE("attribute.name.generic.knockbackResistance"), // Knockback Resistance
        @PowerNukkitOnly @Since("FUTURE") NAME_MINECRAFT_MOVEMENT("attribute.name.minecraft:movement"), // Speed
        @PowerNukkitOnly @Since("FUTURE") NAME_HORSE_JUMPSTRENGTH("attribute.name.horse.jumpStrength"), // Horse Jump Strength
        @PowerNukkitOnly @Since("FUTURE") NAME_ZOMBIE_SPAWNREINFORCEMENTS("attribute.name.zombie.spawnReinforcements"), // Zombie Reinforcements
        ;
        private final String code; Attribute(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Attribution implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") GOBACK("attribution.goBack"), // Go Back
        @PowerNukkitOnly @Since("FUTURE") VIEWATTRIBUTION("attribution.viewAttribution"), // To view attributions, please visit https://minecraft.net/attribution in any web browser.
        ;
        private final String code; Attribution(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Authentication implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") DEMO_BODY_DEFAULT("authentication.demo.body.default"), // Starting the demo experience...
        @PowerNukkitOnly @Since("FUTURE") DEMO_BODY_ERROR("authentication.demo.body.error"), // We're sorry, but this lesson is not currently available.
        @PowerNukkitOnly @Since("FUTURE") DEMO_TITLE("authentication.demo.title"), // Loading the Demo
        @PowerNukkitOnly @Since("FUTURE") DEMO_TITLE_ERROR("authentication.demo.title.error"), // Lesson Not Available
        @PowerNukkitOnly @Since("FUTURE") PLEASESIGNIN("authentication.pleaseSignIn"), // You must sign in with your School account in order to play Minecraft: Education Edition.
        @PowerNukkitOnly @Since("FUTURE") LOGGINGIN("authentication.loggingin"), // Signing in...
        @PowerNukkitOnly @Since("FUTURE") SIGNIN("authentication.signIn"), // Sign in
        @PowerNukkitOnly @Since("FUTURE") SIGNIN_TRYAGAIN("authentication.signIn.tryAgain"), // Try again
        @PowerNukkitOnly @Since("FUTURE") SIGNINGINTO("authentication.signingInTo"), // Signing into %s
        @PowerNukkitOnly @Since("FUTURE") UNABLETOCONNECT("authentication.unableToConnect"), // Unable to Connect
        @PowerNukkitOnly @Since("FUTURE") UNAUTHENTICATED("authentication.unauthenticated"), // This account is not eligible to use Minecraft: Education Edition.
        @PowerNukkitOnly @Since("FUTURE") LOCATION("authentication.location"), // For more information:
        @PowerNukkitOnly @Since("FUTURE") HYPERLINK("authentication.hyperlink"), // http://education.minecraft.net/eligibility
        @PowerNukkitOnly @Since("FUTURE") TRYAGAIN("authentication.tryagain"), // Sign in with a different account
        @PowerNukkitOnly @Since("FUTURE") WELCOME("authentication.welcome"), // Welcome, %s!
        @PowerNukkitOnly @Since("FUTURE") EXITINGGAME("authentication.exitingGame"), // Goodbye, come back soon.
        @PowerNukkitOnly @Since("FUTURE") TRIALMESSAGETITLE("authentication.trialMessageTitle"), // Minecraft: Education Edition Free Trial
        @PowerNukkitOnly @Since("FUTURE") TRIALWELCOME("authentication.trialWelcome"), // Welcome! You have %d trials of Minecraft: Education Edition before your school will need to purchase a license. Every time you open Minecraft: Education Edition, you will use one trial. Enjoy!
        @PowerNukkitOnly @Since("FUTURE") TRIALWARNING("authentication.trialWarning"), // You have %d trials of Minecraft: Education Edition remaining after this session. After these trial plays, your school will need to purchase a license. Thanks!
        @PowerNukkitOnly @Since("FUTURE") TRIALENDED("authentication.trialEnded"), // Your trial of Minecraft: Education Edition is complete. Your school will need to purchase a license for you to continue to use Minecraft: Education Edition. Thanks!
        @PowerNukkitOnly @Since("FUTURE") TRIALENDEDTITLE("authentication.trialEndedTitle"), // Trial Ended
        @PowerNukkitOnly @Since("FUTURE") CLICKTOPURCHASEMESSAGE("authentication.clickToPurchaseMessage"), // Ask your Educator to purchase a license for you at: 
        @PowerNukkitOnly @Since("FUTURE") CLICKTOPURCHASESTUDENT("authentication.clickToPurchaseStudent"), // http://aka.ms/meestore
        @PowerNukkitOnly @Since("FUTURE") CLICKTOPURCHASETEACHER("authentication.clickToPurchaseTeacher"), // Purchase license
        @PowerNukkitOnly @Since("FUTURE") ADALEXCEPTION("authentication.adalException"), // We can't connect to the service you need right now. Please check your internet connection and try again.
        @PowerNukkitOnly @Since("FUTURE") BUYMINECRAFT("authentication.buyMinecraft"), // Go to the App Store
        @PowerNukkitOnly @Since("FUTURE") EDU_LEAVEGAME_TITLE("authentication.edu.leaveGame.title"), // You've been logged out
        @PowerNukkitOnly @Since("FUTURE") EDU_LEAVEGAME_BODY("authentication.edu.leaveGame.body"), // Another device has logged in using your account.
        @PowerNukkitOnly @Since("FUTURE") EDU_LEAVEGAME_HELP("authentication.edu.leaveGame.help"), // Help
        @PowerNukkitOnly @Since("FUTURE") EDUCATIONONLY("authentication.educationOnly"), // If you are not an education user, go to the app store to download the standard version.
        @PowerNukkitOnly @Since("FUTURE") MINECRAFTINSTEAD("authentication.minecraftInstead"), // App Store
        @PowerNukkitOnly @Since("FUTURE") SIGNINBUTTON("authentication.signInButton"), // Sign in with your school account
        @PowerNukkitOnly @Since("FUTURE") SIGNINREQUIRED("authentication.signInRequired"), // Sign-in Required
        @PowerNukkitOnly @Since("FUTURE") STORE_CONFIRM_BUTTON("authentication.store.confirm.button"), // Confirm
        @PowerNukkitOnly @Since("FUTURE") STORE_CONFIRMPURCHASE("authentication.store.confirmPurchase"), // Confirm Purchase
        @PowerNukkitOnly @Since("FUTURE") STORE_INTRO("authentication.store.intro"), // Your trial of Minecraft: Education Edition is complete. To continue playing Minecraft: Education Edition, you will need to purchase a license.
        @PowerNukkitOnly @Since("FUTURE") STORE_POPUP_PURCHASEFAILED_TITLE("authentication.store.popup.purchaseFailed.title"), // Something Went Wrong
        @PowerNukkitOnly @Since("FUTURE") STORE_POPUP_PURCHASEFAILED_MSG("authentication.store.popup.purchaseFailed.msg"), // Sorry, we were unable to complete your purchase. Maybe check your internet connection?
        @PowerNukkitOnly @Since("FUTURE") STORE_PURCHASE_BUTTON("authentication.store.purchase.button"), // Purchase license (%s/year)
        @PowerNukkitOnly @Since("FUTURE") STORE_TERMS("authentication.store.terms"), // Terms of Use
        @PowerNukkitOnly @Since("FUTURE") STORE_VIEWTERMSANDCONDITIONS("authentication.store.viewTermsAndConditions"), // Terms and Conditions
        @PowerNukkitOnly @Since("FUTURE") STORE_VIEWPRIVACYPOLICY("authentication.store.viewPrivacyPolicy"), // Privacy Policy
        @PowerNukkitOnly @Since("FUTURE") TOAST_REFRESHFAILED_TITLE("authentication.toast.refreshFailed.title"), // Account
        @PowerNukkitOnly @Since("FUTURE") TOAST_REFRESHFAILED_BODY("authentication.toast.refreshFailed.body"), // There's something wrong with your account info. Please sign in again to continue using multiplayer features.
        ;
        private final String code; Authentication(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Eula implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") INTRO("eula.intro"), // To use Minecraft: Education Edition you must accept the End-User Licensing Agreement.
        @PowerNukkitOnly @Since("FUTURE") LOCATION("eula.location"), // The EULA is at:
        @PowerNukkitOnly @Since("FUTURE") HYPERLINK("eula.hyperlink"), // http://education.minecraft.net/eula
        @PowerNukkitOnly @Since("FUTURE") TITLE("eula.title"), // End-User Licensing Agreement
        @PowerNukkitOnly @Since("FUTURE") VIEW("eula.view"), // View EULA
        @PowerNukkitOnly @Since("FUTURE") CALLTOACTION("eula.callToAction"), // Click Accept to accept the terms of this agreement.
        @PowerNukkitOnly @Since("FUTURE") ACCEPTBUTTON("eula.acceptButton"), // Accept
        ;
        private final String code; Eula(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Book implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") BYAUTHOR("book.byAuthor"), // by
        @PowerNukkitOnly @Since("FUTURE") DEFAULTAUTHOR("book.defaultAuthor"), // Author Unknown
        @PowerNukkitOnly @Since("FUTURE") EDITTITLE("book.editTitle"), // Enter Book Title:
        @PowerNukkitOnly @Since("FUTURE") EXPORT("book.export"), // Export
        @PowerNukkitOnly @Since("FUTURE") FINALIZEBUTTON("book.finalizeButton"), // Sign and Close
        @PowerNukkitOnly @Since("FUTURE") FINALIZEWARNING("book.finalizeWarning"), // Note! When you sign the book, it will no longer be editable.
        @PowerNukkitOnly @Since("FUTURE") GENERATION_0("book.generation.0"), // Original
        @PowerNukkitOnly @Since("FUTURE") GENERATION_1("book.generation.1"), // Copy of original
        @PowerNukkitOnly @Since("FUTURE") GENERATION_2("book.generation.2"), // Copy of a copy
        @PowerNukkitOnly @Since("FUTURE") GENERATION_3("book.generation.3"), // Tattered
        @PowerNukkitOnly @Since("FUTURE") PAGEINDICATOR("book.pageIndicator"), // Page %1$s of %2$s
        @PowerNukkitOnly @Since("FUTURE") SIGNBUTTON("book.signButton"), // Sign
        @PowerNukkitOnly @Since("FUTURE") TITLEHERE("book.titleHere"), // [Enter title here]
        ;
        private final String code; Book(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Build implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TOOHIGH("build.tooHigh"), // Height limit for building is %s blocks
        @PowerNukkitOnly @Since("FUTURE") TOOLOW("build.tooLow"), // Minimum height for building is %s blocks
        ;
        private final String code; Build(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum ChalkboardScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") HEADER("chalkboardScreen.header"), // Edit Text
        @PowerNukkitOnly @Since("FUTURE") LOCKED("chalkboardScreen.locked"), // Locked
        @PowerNukkitOnly @Since("FUTURE") UNLOCKED("chalkboardScreen.unlocked"), // Unlocked
        ;
        private final String code; ChalkboardScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Chat implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") CANNOTSEND("chat.cannotSend"), // Cannot send chat message
        @PowerNukkitOnly @Since("FUTURE") COPY("chat.copy"), // Copy to Clipboard
        @PowerNukkitOnly @Since("FUTURE") LINK_CONFIRM("chat.link.confirm"), // Are you sure you want to open the following website?
        @PowerNukkitOnly @Since("FUTURE") LINK_CONFIRMTRUSTED("chat.link.confirmTrusted"), // Do you want to open this link or copy it to your clipboard?
        @PowerNukkitOnly @Since("FUTURE") LINK_OPEN("chat.link.open"), // Open in browser
        @PowerNukkitOnly @Since("FUTURE") LINK_WARNING("chat.link.warning"), // Never open links from people that you don't trust!
        @PowerNukkitOnly @Since("FUTURE") MENTIONS_AUTOCOMPLETE_ALLPLAYERS("chat.mentions.autocomplete.allPlayers"), // mention all players
        @PowerNukkitOnly @Since("FUTURE") MUTE("chat.mute"), // Mute Chat
        @PowerNukkitOnly @Since("FUTURE") REALMSFILTERDISABLED("chat.realmsFilterDisabled"), // This Realm has chat filtering turned off.
        @PowerNukkitOnly @Since("FUTURE") SETTINGS("chat.settings"), // Chat Settings
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_DEFAULTCHATCOLOR("chat.settings.defaultChatColor"), // Default Chat Color
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_CHATCOLOR("chat.settings.chatColor"), // Chat Color
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_CHATFONT("chat.settings.chatFont"), // Chat Font
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_COLOR("chat.settings.color"), // Color
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_FONT("chat.settings.font"), // Font
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_FONTCOLOR("chat.settings.fontColor"), // Font Color
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_FONTSIZE("chat.settings.fontSize"), // Size: %s
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_FONTSIZE_DISABLED("chat.settings.fontSize.disabled"), // Size: Available with %s
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_LINESPACING("chat.settings.lineSpacing"), // Line Spacing
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_LINESPACINGNUMBER("chat.settings.lineSpacingNumber"), // x%s
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_MENTIONS("chat.settings.mentions"), // My Mentions
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_MENTIONSCOLOR("chat.settings.mentionsColor"), // My Mentions Color
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_MUTEALL("chat.settings.muteAll"), // Mute All Chat
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_UNMUTEALL("chat.settings.unmuteAll"), // Unmute All Chat
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_TTS("chat.settings.tts"), // Text To Speech For Chat
        @PowerNukkitOnly @Since("FUTURE") STREAM_EMOTE("chat.stream.emote"), // (%s) * %s %s
        @PowerNukkitOnly @Since("FUTURE") STREAM_TEXT("chat.stream.text"), // (%s) <%s> %s
        @PowerNukkitOnly @Since("FUTURE") TITLE("chat.title"), // Chat
        @PowerNukkitOnly @Since("FUTURE") TITLE_CHEATS("chat.title.cheats"), // Chat and Commands
        @PowerNukkitOnly @Since("FUTURE") TYPE_ACHIEVEMENT("chat.type.achievement"), // %s has just earned the achievement %s
        @PowerNukkitOnly @Since("FUTURE") TYPE_ACHIEVEMENT_TAKEN("chat.type.achievement.taken"), // %s has lost the achievement %s
        @PowerNukkitOnly @Since("FUTURE") TYPE_ADMIN("chat.type.admin"), // [%s: %s]
        @PowerNukkitOnly @Since("FUTURE") TYPE_ANNOUNCEMENT("chat.type.announcement"), // [%s] %s
        @PowerNukkitOnly @Since("FUTURE") TYPE_EMOTE("chat.type.emote"), // * %s %s
        @PowerNukkitOnly @Since("FUTURE") TYPE_SLEEPING("chat.type.sleeping"), // %s is sleeping in a bed. To skip to dawn, all players need to sleep in beds at the same time.
        @PowerNukkitOnly @Since("FUTURE") TYPE_TEXT("chat.type.text"), // <%s> %s
        @PowerNukkitOnly @Since("FUTURE") RENAMED("chat.renamed"), // You have been temporarily renamed to '%s' on this server
        ;
        private final String code; Chat(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum ChestScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") HEADER_LARGE("chestScreen.header.large"), // Large Chest
        @PowerNukkitOnly @Since("FUTURE") HEADER_PLAYER("chestScreen.header.player"), // Inventory
        @PowerNukkitOnly @Since("FUTURE") HEADER_SMALL("chestScreen.header.small"), // Chest
        ;
        private final String code; ChestScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum ChooseRealmScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") HEADER("chooseRealmScreen.header"), // Choose a Realm Server
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUSBUTTONTEXT("chooseRealmScreen.realmsplusbuttontext"), // Add a 10 player Realm
        @PowerNukkitOnly @Since("FUTURE") REALMSBUTTONTEXT("chooseRealmScreen.realmsbuttontext"), // Add a 2 player Realm
        ;
        private final String code; ChooseRealmScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum CustomTemplatesScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") HEADER("customTemplatesScreen.header"), // Imported Templates
        ;
        private final String code; CustomTemplatesScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum CraftingScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TAB_SEARCH("craftingScreen.tab.search"), // All
        @PowerNukkitOnly @Since("FUTURE") TAB_SEARCH_FILTER("craftingScreen.tab.search.filter"), // Craftable
        @PowerNukkitOnly @Since("FUTURE") TAB_CONSTRUCTION("craftingScreen.tab.construction"), // Construction
        @PowerNukkitOnly @Since("FUTURE") TAB_NATURE("craftingScreen.tab.nature"), // Nature
        @PowerNukkitOnly @Since("FUTURE") TAB_EQUIPMENT("craftingScreen.tab.equipment"), // Equipment
        @PowerNukkitOnly @Since("FUTURE") TAB_ITEMS("craftingScreen.tab.items"), // Items
        @PowerNukkitOnly @Since("FUTURE") TAB_SURVIVAL("craftingScreen.tab.survival"), // Inventory
        @PowerNukkitOnly @Since("FUTURE") TAB_ARMOR("craftingScreen.tab.armor"), // Armor
        ;
        private final String code; CraftingScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Credits implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") SKIP("credits.skip"), // Skip
        ;
        private final String code; Credits(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum CauldronScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") HEADER("cauldronScreen.header"), // Cauldron
        ;
        private final String code; CauldronScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum CodeScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") CHOOSEEDITOR("codeScreen.chooseEditor"), // Choose your editor:
        @PowerNukkitOnly @Since("FUTURE") EDITOR_DESCRIPTION_MAKECODE("codeScreen.editor.description.makeCode"), // Microsoft MakeCode brings computer science to life with Minecraft
        @PowerNukkitOnly @Since("FUTURE") EDITOR_DESCRIPTION_TYNKER("codeScreen.editor.description.tynker"), // Mod your world with Tynker! Build mini-games, create instant structures, and make your own mods with code.
        @PowerNukkitOnly @Since("FUTURE") MEMORYWARNING("codeScreen.memoryWarning"), // This device does not meet the recommended memory amount. Editors may not work as expected.
        @PowerNukkitOnly @Since("FUTURE") MEMORYERROR("codeScreen.memoryError"), // Error in editor process, check if your device has enough memory.
        @PowerNukkitOnly @Since("FUTURE") NEEDCHEATS("codeScreen.needCheats"), // Cheats must be enabled in the level to code!
        @PowerNukkitOnly @Since("FUTURE") NETWORKERROR("codeScreen.networkError"), // Unable to connect to network, check your network settings.
        @PowerNukkitOnly @Since("FUTURE") RESETWARNING("codeScreen.resetWarning"), // Are you sure you want to reset Code Builder? All unsaved work will be lost...
        @PowerNukkitOnly @Since("FUTURE") TITLE("codeScreen.title"), // Code Builder
        @PowerNukkitOnly @Since("FUTURE") BUTTONTTS_SPLITLEFT("codeScreen.buttonTTS.splitLeft"), // Move Left
        @PowerNukkitOnly @Since("FUTURE") BUTTONTTS_SPLITRIGHT("codeScreen.buttonTTS.splitRight"), // Move Right
        @PowerNukkitOnly @Since("FUTURE") BUTTONTTS_SELECTEDITOR("codeScreen.buttonTTS.selectEditor"), // Select Editor
        @PowerNukkitOnly @Since("FUTURE") BUTTONTTS_MAXIMIZE("codeScreen.buttonTTS.maximize"), // Maximize
        @PowerNukkitOnly @Since("FUTURE") BUTTONTTS_RESTORE("codeScreen.buttonTTS.restore"), // Restore
        ;
        private final String code; CodeScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Color implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") BLACK("color.black"), // Black
        @PowerNukkitOnly @Since("FUTURE") DARK_BLUE("color.dark_blue"), // Dark Blue
        @PowerNukkitOnly @Since("FUTURE") DARK_GREEN("color.dark_green"), // Dark Green
        @PowerNukkitOnly @Since("FUTURE") DARK_AQUA("color.dark_aqua"), // Dark Aqua
        @PowerNukkitOnly @Since("FUTURE") DARK_RED("color.dark_red"), // Dark Red
        @PowerNukkitOnly @Since("FUTURE") DARK_PURPLE("color.dark_purple"), // Dark Purple
        @PowerNukkitOnly @Since("FUTURE") GOLD("color.gold"), // Gold
        @PowerNukkitOnly @Since("FUTURE") GRAY("color.gray"), // Gray
        @PowerNukkitOnly @Since("FUTURE") DARK_GRAY("color.dark_gray"), // Dark Gray
        @PowerNukkitOnly @Since("FUTURE") BLUE("color.blue"), // Blue
        @PowerNukkitOnly @Since("FUTURE") GREEN("color.green"), // Green
        @PowerNukkitOnly @Since("FUTURE") AQUA("color.aqua"), // Aqua
        @PowerNukkitOnly @Since("FUTURE") RED("color.red"), // Red
        @PowerNukkitOnly @Since("FUTURE") LIGHT_PURPLE("color.light_purple"), // Light Purple
        @PowerNukkitOnly @Since("FUTURE") YELLOW("color.yellow"), // Yellow
        @PowerNukkitOnly @Since("FUTURE") WHITE("color.white"), // White
        ;
        private final String code; Color(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum CommandBlockScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") BLOCKTYPE("commandBlockScreen.blockType"), // Block Type:
        @PowerNukkitOnly @Since("FUTURE") BLOCKTYPE_IMPULSE("commandBlockScreen.blockType.impulse"), // Impulse
        @PowerNukkitOnly @Since("FUTURE") BLOCKTYPE_CHAIN("commandBlockScreen.blockType.chain"), // Chain
        @PowerNukkitOnly @Since("FUTURE") BLOCKTYPE_REPEAT("commandBlockScreen.blockType.repeat"), // Repeat
        @PowerNukkitOnly @Since("FUTURE") CONDITION("commandBlockScreen.condition"), // Condition:
        @PowerNukkitOnly @Since("FUTURE") CONDITION_CONDITIONAL("commandBlockScreen.condition.conditional"), // Conditional
        @PowerNukkitOnly @Since("FUTURE") CONDITION_UNCONDITIONAL("commandBlockScreen.condition.unconditional"), // Unconditional
        @PowerNukkitOnly @Since("FUTURE") REDSTONE("commandBlockScreen.redstone"), // Redstone:
        @PowerNukkitOnly @Since("FUTURE") REDSTONE_NEEDS_REDSTONE("commandBlockScreen.redstone.needs_redstone"), // Needs Redstone
        @PowerNukkitOnly @Since("FUTURE") REDSTONE_ALWAYS_ON("commandBlockScreen.redstone.always_on"), // Always Active
        @PowerNukkitOnly @Since("FUTURE") TICKDELAY("commandBlockScreen.tickDelay"), // Delay in Ticks:
        @PowerNukkitOnly @Since("FUTURE") EXECUTEFIRSTTICK("commandBlockScreen.executeFirstTick"), // Execute on First Tick
        @PowerNukkitOnly @Since("FUTURE") DISPLAYOUTPUTMODE("commandBlockScreen.displayOutputMode"), // O
        @PowerNukkitOnly @Since("FUTURE") HIDEOUTPUTMODE("commandBlockScreen.hideOutputMode"), // X
        @PowerNukkitOnly @Since("FUTURE") HOVERNOTE("commandBlockScreen.hoverNote"), // Hover Note
        @PowerNukkitOnly @Since("FUTURE") TITLE("commandBlockScreen.title"), // Command Block
        ;
        private final String code; CommandBlockScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum SeargeSays implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") SEARGE("seargeSays.searge"), // Searge says: %s
        @PowerNukkitOnly @Since("FUTURE") SEARGE1("seargeSays.searge1"), // Yolo
        @PowerNukkitOnly @Since("FUTURE") SEARGE2("seargeSays.searge2"), // /achievement take achievement.understandCommands @p
        @PowerNukkitOnly @Since("FUTURE") SEARGE3("seargeSays.searge3"), // Ask for help on twitter
        @PowerNukkitOnly @Since("FUTURE") SEARGE4("seargeSays.searge4"), // /deop @p
        @PowerNukkitOnly @Since("FUTURE") SEARGE5("seargeSays.searge5"), // Scoreboard deleted, commands blocked
        @PowerNukkitOnly @Since("FUTURE") SEARGE6("seargeSays.searge6"), // Contact helpdesk for help
        @PowerNukkitOnly @Since("FUTURE") SEARGE7("seargeSays.searge7"), // /testfornoob @p
        @PowerNukkitOnly @Since("FUTURE") SEARGE8("seargeSays.searge8"), // /trigger warning
        @PowerNukkitOnly @Since("FUTURE") SEARGE9("seargeSays.searge9"), // Oh my god, it's full of stats
        @PowerNukkitOnly @Since("FUTURE") SEARGE10("seargeSays.searge10"), // /kill @p[name=!Searge]
        @PowerNukkitOnly @Since("FUTURE") SEARGE11("seargeSays.searge11"), // Have you tried turning it off and on again?
        @PowerNukkitOnly @Since("FUTURE") SEARGE12("seargeSays.searge12"), // Sorry, no help today
        ;
        private final String code; SeargeSays(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum CommandBlock implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") SHORTNAME("commandBlock.shortName"), // @
        @PowerNukkitOnly @Since("FUTURE") GENERICNAME("commandBlock.genericName"), // Command Block
        ;
        private final String code; CommandBlock(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Commands implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ABILITY_DESCRIPTION("commands.ability.description"), // Sets a player's ability.
        @PowerNukkitOnly @Since("FUTURE") ABILITY_NOABILITY("commands.ability.noability"), // No ability called '%1$s' is available
        @PowerNukkitOnly @Since("FUTURE") ABILITY_GRANTED("commands.ability.granted"), // The '%1$s' ability has been granted to you
        @PowerNukkitOnly @Since("FUTURE") ABILITY_REVOKED("commands.ability.revoked"), // The '%1$s' ability has been revoked from you
        @PowerNukkitOnly @Since("FUTURE") ABILITY_SUCCESS("commands.ability.success"), // Ability has been updated
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENT_ALREADYHAVE("commands.achievement.alreadyHave"), // Player %1$s already has achievement %2$s
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENT_DESCRIPTION("commands.achievement.description"), // Gives or removes an achievement from a player.
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENT_DONTHAVE("commands.achievement.dontHave"), // Player %1$s doesn't have achievement %2$s
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENT_GIVE_SUCCESS_ALL("commands.achievement.give.success.all"), // Successfully given all achievements to %1$s
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENT_GIVE_SUCCESS_ONE("commands.achievement.give.success.one"), // Successfully given %1$s the stat %2$s
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENT_STATTOOLOW("commands.achievement.statTooLow"), // Player %1$s does not have the stat %2$s
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENT_TAKE_SUCCESS_ALL("commands.achievement.take.success.all"), // Successfully taken all achievements from %1$s
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENT_TAKE_SUCCESS_ONE("commands.achievement.take.success.one"), // Successfully taken the stat %1$s from %2$s
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENT_UNKNOWNACHIEVEMENT("commands.achievement.unknownAchievement"), // Unknown achievement or statistic '%1$s'
        @PowerNukkitOnly @Since("FUTURE") AGENT_ATTACK_SUCCESS("commands.agent.attack.success"), // Agent attack successful
        @PowerNukkitOnly @Since("FUTURE") AGENT_ATTACK_FAILED("commands.agent.attack.failed"), // Agent failed to attack
        @PowerNukkitOnly @Since("FUTURE") AGENT_COLLECT_SUCCESS("commands.agent.collect.success"), // Agent collect successful
        @PowerNukkitOnly @Since("FUTURE") AGENT_COLLECT_FAILED("commands.agent.collect.failed"), // Agent failed to collect
        @PowerNukkitOnly @Since("FUTURE") AGENT_CREATEAGENT_SUCCESS("commands.agent.createagent.success"), // Created Agent
        @PowerNukkitOnly @Since("FUTURE") AGENT_CREATEAGENT_FAILED("commands.agent.createagent.failed"), // Unable to create Agent
        @PowerNukkitOnly @Since("FUTURE") AGENT_DESTROY_SUCCESS("commands.agent.destroy.success"), // Agent destroyed a block
        @PowerNukkitOnly @Since("FUTURE") AGENT_DESTROY_FAILED("commands.agent.destroy.failed"), // Agent destroy failed
        @PowerNukkitOnly @Since("FUTURE") AGENT_DETECT_SUCCESS("commands.agent.detect.success"), // Agent detect successful
        @PowerNukkitOnly @Since("FUTURE") AGENT_DETECT_FAILED("commands.agent.detect.failed"), // Agent failed to detect
        @PowerNukkitOnly @Since("FUTURE") AGENT_DETECTREDSTONE_SUCCESS("commands.agent.detectredstone.success"), // Agent detectredstone successful
        @PowerNukkitOnly @Since("FUTURE") AGENT_DETECTREDSTONE_FAILED("commands.agent.detectredstone.failed"), // Agent failed to detectredstone
        @PowerNukkitOnly @Since("FUTURE") AGENT_DROP_SUCCESS("commands.agent.drop.success"), // Agent drop successful
        @PowerNukkitOnly @Since("FUTURE") AGENT_DROP_FAILED("commands.agent.drop.failed"), // Agent failed to drop
        @PowerNukkitOnly @Since("FUTURE") AGENT_DROPALL_SUCCESS("commands.agent.dropall.success"), // Agent dropall successful
        @PowerNukkitOnly @Since("FUTURE") AGENT_DROPALL_FAILED("commands.agent.dropall.failed"), // Agent failed to dropall
        @PowerNukkitOnly @Since("FUTURE") AGENT_GETITEMCOUNT_SUCCESS("commands.agent.getitemcount.success"), // Agent getitemcount successful
        @PowerNukkitOnly @Since("FUTURE") AGENT_GETITEMCOUNT_FAILED("commands.agent.getitemcount.failed"), // Agent failed to getitemcount
        @PowerNukkitOnly @Since("FUTURE") AGENT_GETITEMSPACE_SUCCESS("commands.agent.getitemspace.success"), // Agent getitemspace successful
        @PowerNukkitOnly @Since("FUTURE") AGENT_GETITEMSPACE_FAILED("commands.agent.getitemspace.failed"), // Agent failed to getitemspace
        @PowerNukkitOnly @Since("FUTURE") AGENT_GETITEMDETAIL_SUCCESS("commands.agent.getitemdetail.success"), // Agent getitemdetail successful
        @PowerNukkitOnly @Since("FUTURE") AGENT_GETITEMDETAIL_FAILED("commands.agent.getitemdetail.failed"), // Agent failed to getitemdetail
        @PowerNukkitOnly @Since("FUTURE") AGENT_GETPOSITION_SUCCESS("commands.agent.getposition.success"), // Agent getposition successful
        @PowerNukkitOnly @Since("FUTURE") AGENT_GETPOSITION_FAILED("commands.agent.getposition.failed"), // Agent getposition failed
        @PowerNukkitOnly @Since("FUTURE") AGENT_INSPECT_SUCCESS("commands.agent.inspect.success"), // Agent inspect successful
        @PowerNukkitOnly @Since("FUTURE") AGENT_INSPECT_FAILED("commands.agent.inspect.failed"), // Agent failed to inspect
        @PowerNukkitOnly @Since("FUTURE") AGENT_INSPECTDATA_SUCCESS("commands.agent.inspectdata.success"), // Agent inspect data successful
        @PowerNukkitOnly @Since("FUTURE") AGENT_INSPECTDATA_FAILED("commands.agent.inspectdata.failed"), // Agent failed to inspect data
        @PowerNukkitOnly @Since("FUTURE") AGENT_MOVE_SUCCESS("commands.agent.move.success"), // Agent move successful
        @PowerNukkitOnly @Since("FUTURE") AGENT_MOVE_FAILED("commands.agent.move.failed"), // Unable to move Agent
        @PowerNukkitOnly @Since("FUTURE") AGENT_OUTOFRANGE("commands.agent.outofrange"), // Cannot issue command, Agent is out of range
        @PowerNukkitOnly @Since("FUTURE") AGENT_PLACE_SUCCESS("commands.agent.place.success"), // Agent place successful
        @PowerNukkitOnly @Since("FUTURE") AGENT_PLACE_FAILED("commands.agent.place.failed"), // Agent failed to place
        @PowerNukkitOnly @Since("FUTURE") AGENT_SETITEM_SUCCESS("commands.agent.setitem.success"), // Agent set item successful
        @PowerNukkitOnly @Since("FUTURE") AGENT_SETITEM_FAILED("commands.agent.setitem.failed"), // Agent failed to set item
        @PowerNukkitOnly @Since("FUTURE") AGENT_TURN_SUCCESS("commands.agent.turn.success"), // Agent turn successful
        @PowerNukkitOnly @Since("FUTURE") AGENT_TURN_FAILED("commands.agent.turn.failed"), // Unable to turn Agent
        @PowerNukkitOnly @Since("FUTURE") AGENT_TILL_SUCCESS("commands.agent.till.success"), // Agent till successful
        @PowerNukkitOnly @Since("FUTURE") AGENT_TILL_FAILED("commands.agent.till.failed"), // Agent failed to till
        @PowerNukkitOnly @Since("FUTURE") AGENT_TPAGENT_DESCRIPTION("commands.agent.tpagent.description"), // Teleport your Agent.
        @PowerNukkitOnly @Since("FUTURE") AGENT_TPAGENT_SUCCESS("commands.agent.tpagent.success"), // Agent teleported
        @PowerNukkitOnly @Since("FUTURE") AGENT_TPAGENT_FAILED("commands.agent.tpagent.failed"), // Agent failed to teleport
        @PowerNukkitOnly @Since("FUTURE") AGENT_TRANSFER_SUCCESS("commands.agent.transfer.success"), // Agent transfer successful
        @PowerNukkitOnly @Since("FUTURE") AGENT_TRANSFER_FAILED("commands.agent.transfer.failed"), // Agent failed to transfer
        @PowerNukkitOnly @Since("FUTURE") ALWAYS_DAY("commands.always.day"), // Day-Night cycle %1$s
        @PowerNukkitOnly @Since("FUTURE") ALWAYS_DAY_LOCKED("commands.always.day.locked"), // Day-Night cycle locked
        @PowerNukkitOnly @Since("FUTURE") ALWAYS_DAY_UNLOCKED("commands.always.day.unlocked"), // Day-Night cycle unlocked
        @PowerNukkitOnly @Since("FUTURE") BAN_DESCRIPTION("commands.ban.description"), // Adds player to banlist.
        @PowerNukkitOnly @Since("FUTURE") AUTOCOMPLETE_A("commands.autocomplete.a"), // all players
        @PowerNukkitOnly @Since("FUTURE") AUTOCOMPLETE_C("commands.autocomplete.c"), // my Agent
        @PowerNukkitOnly @Since("FUTURE") AUTOCOMPLETE_E("commands.autocomplete.e"), // all entities
        @PowerNukkitOnly @Since("FUTURE") AUTOCOMPLETE_P("commands.autocomplete.p"), // closest player
        @PowerNukkitOnly @Since("FUTURE") AUTOCOMPLETE_R("commands.autocomplete.r"), // random player
        @PowerNukkitOnly @Since("FUTURE") AUTOCOMPLETE_S("commands.autocomplete.s"), // yourself
        @PowerNukkitOnly @Since("FUTURE") AUTOCOMPLETE_V("commands.autocomplete.v"), // all Agents
        @PowerNukkitOnly @Since("FUTURE") BAN_FAILED("commands.ban.failed"), // Could not ban player %1$s
        @PowerNukkitOnly @Since("FUTURE") BAN_SUCCESS("commands.ban.success"), // Banned player %1$s
        @PowerNukkitOnly @Since("FUTURE") BANIP_DESCRIPTION("commands.banip.description"), // Adds IP address to banlist.
        @PowerNukkitOnly @Since("FUTURE") BANIP_INVALID("commands.banip.invalid"), // You have entered an invalid IP address or a player that is not online
        @PowerNukkitOnly @Since("FUTURE") BANIP_SUCCESS("commands.banip.success"), // Banned IP address %1$s
        @PowerNukkitOnly @Since("FUTURE") BANIP_SUCCESS_PLAYERS("commands.banip.success.players"), // Banned IP address %1$s belonging to %2$s
        @PowerNukkitOnly @Since("FUTURE") BANLIST_IPS("commands.banlist.ips"), // There are %1$d total banned IP addresses:
        @PowerNukkitOnly @Since("FUTURE") BANLIST_PLAYERS("commands.banlist.players"), // There are %1$d total banned players:
        @PowerNukkitOnly @Since("FUTURE") BLOCKDATA_DESCRIPTION("commands.blockdata.description"), // Modifies the data tag of a block.
        @PowerNukkitOnly @Since("FUTURE") BLOCKDATA_PLACEFAILED("commands.blockdata.placeFailed"), // You cannot place blocks here
        @PowerNukkitOnly @Since("FUTURE") BLOCKDATA_DESTROYFAILED("commands.blockdata.destroyFailed"), // You cannot dig here
        @PowerNukkitOnly @Since("FUTURE") BLOCKDATA_FAILED("commands.blockdata.failed"), // The data tag did not change: %1$s
        @PowerNukkitOnly @Since("FUTURE") BLOCKDATA_NOTVALID("commands.blockdata.notValid"), // The target block is not a data holder block
        @PowerNukkitOnly @Since("FUTURE") BLOCKDATA_OUTOFWORLD("commands.blockdata.outOfWorld"), // Cannot change block outside of the world
        @PowerNukkitOnly @Since("FUTURE") BLOCKDATA_SUCCESS("commands.blockdata.success"), // Block data updated to: %1$s
        @PowerNukkitOnly @Since("FUTURE") BLOCKDATA_TAGERROR("commands.blockdata.tagError"), // Data tag parsing failed: %1$s
        @PowerNukkitOnly @Since("FUTURE") BLOCKSTATE_INVALIDSTATE("commands.blockstate.invalidState"), // '%1$s' is not a valid Block State.
        @PowerNukkitOnly @Since("FUTURE") BLOCKSTATE_STATEERROR("commands.blockstate.stateError"), // Block State: '%1$s' is invalid on Block: '%2$s'.
        @PowerNukkitOnly @Since("FUTURE") BLOCKSTATE_TYPEERROR("commands.blockstate.typeError"), // Invalid value type for Block State: '%1$s'.
        @PowerNukkitOnly @Since("FUTURE") BLOCKSTATE_VALUEERROR("commands.blockstate.valueError"), // Invalid value for Block State: '%1$s'.
        @PowerNukkitOnly @Since("FUTURE") BOSSBAR_ADD_SUCCESS("commands.bossbar.add.success"), // Created custom bossbar [%1$s]
        @PowerNukkitOnly @Since("FUTURE") BOSSBAR_ADD_FAILURE_INVALID("commands.bossbar.add.failure.invalid"), // Invalid bossbar ID. IDs should be of the form namespace:id or id (defaults to minecraft namespace).
        @PowerNukkitOnly @Since("FUTURE") BOSSBAR_ADD_FAILURE_EXISTS("commands.bossbar.add.failure.exists"), // A bossbar already exists with the ID '%1$s'
        @PowerNukkitOnly @Since("FUTURE") BOSSBAR_DESCRIPTION("commands.bossbar.description"), // Creates and modifies boss bars
        @PowerNukkitOnly @Since("FUTURE") BOSSBAR_GET_MAX("commands.bossbar.get.max"), // Custom bossbar [%1$s] has a maximum of %2$d
        @PowerNukkitOnly @Since("FUTURE") BOSSBAR_GET_PLAYERS("commands.bossbar.get.players"), // Custom bossbar [%1$s] has %2$s players currently online: %3$s
        @PowerNukkitOnly @Since("FUTURE") BOSSBAR_GET_PLAYERS_NONE("commands.bossbar.get.players.none"), // Custom bossbar [%1$s] has no players currently online
        @PowerNukkitOnly @Since("FUTURE") BOSSBAR_GET_PLAYERS_ONE("commands.bossbar.get.players.one"), // Custom bossbar [%1$s] has 1 player currently online: %2$s
        @PowerNukkitOnly @Since("FUTURE") BOSSBAR_GET_VALUE("commands.bossbar.get.value"), // Custom bossbar [%1$s] has a value of %2$d
        @PowerNukkitOnly @Since("FUTURE") BOSSBAR_GET_VISIBLE_TRUE("commands.bossbar.get.visible.true"), // Custom bossbar [%1$s] is currently shown
        @PowerNukkitOnly @Since("FUTURE") BOSSBAR_GET_VISIBLE_FALSE("commands.bossbar.get.visible.false"), // Custom bossbar [%1$s] is currently hidden
        @PowerNukkitOnly @Since("FUTURE") BOSSBAR_LIST("commands.bossbar.list"), // There are %1$s custom bossbars active: %2$s
        @PowerNukkitOnly @Since("FUTURE") BOSSBAR_LIST_NONE("commands.bossbar.list.none"), // There are no custom bossbars active
        @PowerNukkitOnly @Since("FUTURE") BOSSBAR_LIST_ONE("commands.bossbar.list.one"), // There is 1 custom bossbar active: %1$s
        @PowerNukkitOnly @Since("FUTURE") BOSSBAR_NOTFOUND("commands.bossbar.notFound"), // No bossbar exists with the ID '%1$s'
        @PowerNukkitOnly @Since("FUTURE") BOSSBAR_REMOVE("commands.bossbar.remove"), // Removed custom bossbar [%1$s]
        @PowerNukkitOnly @Since("FUTURE") CHANGE_SETTING_DESCRIPTION("commands.change-setting.description"), // Changes a setting on the dedicated server while it's running.
        @PowerNukkitOnly @Since("FUTURE") CHANGE_SETTING_SUCCESS("commands.change-setting.success"), // %1$s has been changed
        @PowerNukkitOnly @Since("FUTURE") CHUNKINFO_COMPILED("commands.chunkinfo.compiled"), // Chunk is compiled.
        @PowerNukkitOnly @Since("FUTURE") CHUNKINFO_DATA("commands.chunkinfo.data"), // First 64 vertices are: %1$s
        @PowerNukkitOnly @Since("FUTURE") CHUNKINFO_EMPTY("commands.chunkinfo.empty"), // Chunk is empty.
        @PowerNukkitOnly @Since("FUTURE") CHUNKINFO_HASLAYERS("commands.chunkinfo.hasLayers"), // Chunk has layers: %1$s
        @PowerNukkitOnly @Since("FUTURE") CHUNKINFO_HASNORENDERABLELAYERS("commands.chunkinfo.hasNoRenderableLayers"), // Chunk has no renderable layers.
        @PowerNukkitOnly @Since("FUTURE") CHUNKINFO_ISEMPTY("commands.chunkinfo.isEmpty"), // Chunk has empty layers: %1$s
        @PowerNukkitOnly @Since("FUTURE") CHUNKINFO_LOCATION("commands.chunkinfo.location"), // Chunk location: (%1$d, %2$d, %3$d)
        @PowerNukkitOnly @Since("FUTURE") CHUNKINFO_NOCHUNK("commands.chunkinfo.noChunk"), // No chunk found at chunk position %1$d, %2$d, %3$d
        @PowerNukkitOnly @Since("FUTURE") CHUNKINFO_NOTCOMPILED("commands.chunkinfo.notCompiled"), // Chunk is not compiled.
        @PowerNukkitOnly @Since("FUTURE") CHUNKINFO_NOTEMPTY("commands.chunkinfo.notEmpty"), // Chunk is not empty.
        @PowerNukkitOnly @Since("FUTURE") CHUNKINFO_VERTICES("commands.chunkinfo.vertices"), // %1$s layer's buffer contains %2$d vertices
        @PowerNukkitOnly @Since("FUTURE") CLASSROOMMODE_DESCRIPTION("commands.classroommode.description"), // Attempt to launch and connect to Classroom Mode.
        @PowerNukkitOnly @Since("FUTURE") CLASSROOMMODE_SUCCESS("commands.classroommode.success"), // Attempting to launch Classroom Mode...
        @PowerNukkitOnly @Since("FUTURE") CLEAR_DESCRIPTION("commands.clear.description"), // Clears items from player inventory.
        @PowerNukkitOnly @Since("FUTURE") CLEAR_FAILURE("commands.clear.failure"), // Could not clear the inventory of %1$s
        @PowerNukkitOnly @Since("FUTURE") CLEAR_FAILURE_NO_ITEMS("commands.clear.failure.no.items"), // Could not clear the inventory of %1$s, no items to remove
        @PowerNukkitOnly @Since("FUTURE") CLEAR_SUCCESS("commands.clear.success"), // Cleared the inventory of %1$s, removing %2$d items
        @PowerNukkitOnly @Since("FUTURE") CLEAR_TAGERROR("commands.clear.tagError"), // Data tag parsing failed: %1$s
        @PowerNukkitOnly @Since("FUTURE") CLEAR_TESTING("commands.clear.testing"), // %1$s has %2$d items that match the criteria
        @PowerNukkitOnly @Since("FUTURE") CLEARFIXEDINV_DESCRIPTION("commands.clearfixedinv.description"), // Removes all Fixed Inventory Slots.
        @PowerNukkitOnly @Since("FUTURE") CLEARFIXEDINV_SUCCESS("commands.clearfixedinv.success"), // Cleared the Fixed Inventory
        @PowerNukkitOnly @Since("FUTURE") CLONE_DESCRIPTION("commands.clone.description"), // Clones blocks from one region to another.
        @PowerNukkitOnly @Since("FUTURE") CLONE_FAILED("commands.clone.failed"), // No blocks cloned
        @PowerNukkitOnly @Since("FUTURE") CLONE_FILTERED_ERROR("commands.clone.filtered.error"), // Filtered usage requires a filter block to be specified
        @PowerNukkitOnly @Since("FUTURE") CLONE_NOOVERLAP("commands.clone.noOverlap"), // Source and destination can not overlap
        @PowerNukkitOnly @Since("FUTURE") CLONE_SUCCESS("commands.clone.success"), // %1$d blocks cloned
        @PowerNukkitOnly @Since("FUTURE") CLONE_TOOMANYBLOCKS("commands.clone.tooManyBlocks"), // Too many blocks in the specified area (%1$d > %2$d)
        @PowerNukkitOnly @Since("FUTURE") CLOSECHAT_DESCRIPTION("commands.closechat.description"), // Closes the chat window of the local player if it is open.
        @PowerNukkitOnly @Since("FUTURE") CLOSECHAT_SUCCESS("commands.closechat.success"), // Chat closed
        @PowerNukkitOnly @Since("FUTURE") CLOSECHAT_FAILURE("commands.closechat.failure"), // Chat was not open
        @PowerNukkitOnly @Since("FUTURE") CLOSEWEBSOCKET_DESCRIPTION("commands.closewebsocket.description"), // Closes websocket connection if there is one.
        @PowerNukkitOnly @Since("FUTURE") CODE_DESCRIPTION("commands.code.description"), // Launches Code Builder.
        @PowerNukkitOnly @Since("FUTURE") CODE_SUCCESS("commands.code.success"), // Launched Code Builder.
        @PowerNukkitOnly @Since("FUTURE") COMPARE_FAILED("commands.compare.failed"), // Source and destination are not identical
        @PowerNukkitOnly @Since("FUTURE") COMPARE_SUCCESS("commands.compare.success"), // %1$d blocks compared
        @PowerNukkitOnly @Since("FUTURE") COMPARE_TOOMANYBLOCKS("commands.compare.tooManyBlocks"), // Too many blocks in the specified area (%1$d > %2$d)
        @PowerNukkitOnly @Since("FUTURE") CORRUPTWORLD_DESCRIPTION("commands.corruptworld.description"), // Corrupts the world loaded on the server.
        @PowerNukkitOnly @Since("FUTURE") CORRUPTWORLD_SUCCESS("commands.corruptworld.success"), // Successfully corrupted the world.
        @PowerNukkitOnly @Since("FUTURE") DAYLOCK_DESCRIPTION("commands.daylock.description"), // Locks and unlocks the day-night cycle.
        @PowerNukkitOnly @Since("FUTURE") DEBUG_DESCRIPTION("commands.debug.description"), // Starts or stops a debugging session.
        @PowerNukkitOnly @Since("FUTURE") DEBUG_NOTSTARTED("commands.debug.notStarted"), // Can't stop profiling when we haven't started yet!
        @PowerNukkitOnly @Since("FUTURE") DEBUG_START("commands.debug.start"), // Started debug profiling
        @PowerNukkitOnly @Since("FUTURE") DEBUG_STOP("commands.debug.stop"), // Stopped debug profiling after %.2f seconds (%1$d ticks)
        @PowerNukkitOnly @Since("FUTURE") DEFAULTGAMEMODE_DESCRIPTION("commands.defaultgamemode.description"), // Sets the default game mode.
        @PowerNukkitOnly @Since("FUTURE") DEFAULTGAMEMODE_SUCCESS("commands.defaultgamemode.success"), // The world's default game mode is now %1$s
        @PowerNukkitOnly @Since("FUTURE") DEOP_DESCRIPTION("commands.deop.description"), // Revokes operator status from a player.
        @PowerNukkitOnly @Since("FUTURE") DEOP_FAILED("commands.deop.failed"), // Could not de-op (permission level too high): %s
        @PowerNukkitOnly @Since("FUTURE") DEOP_SUCCESS("commands.deop.success"), // De-opped: %s
        @PowerNukkitOnly @Since("FUTURE") DEOP_MESSAGE("commands.deop.message"), // You have been de-opped
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY_DESCRIPTION("commands.difficulty.description"), // Sets the difficulty level.
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY_USAGE("commands.difficulty.usage"), // /difficulty <new difficulty>
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY_SUCCESS("commands.difficulty.success"), // Set game difficulty to %1$s
        @PowerNukkitOnly @Since("FUTURE") DOWNFALL_SUCCESS("commands.downfall.success"), // Toggled downfall
        @PowerNukkitOnly @Since("FUTURE") EFFECT_DESCRIPTION("commands.effect.description"), // Add or remove status effects.
        @PowerNukkitOnly @Since("FUTURE") EFFECT_FAILURE_NOTACTIVE("commands.effect.failure.notActive"), // Couldn't take %1$s from %2$s as they do not have the effect
        @PowerNukkitOnly @Since("FUTURE") EFFECT_FAILURE_NOTACTIVE_ALL("commands.effect.failure.notActive.all"), // Couldn't take any effects from %1$s as they do not have any
        @PowerNukkitOnly @Since("FUTURE") EFFECT_FAILURE_NOTAMOB("commands.effect.failure.notAMob"), // %1$s cannot have effects
        @PowerNukkitOnly @Since("FUTURE") EFFECT_NOTFOUND("commands.effect.notFound"), // There is no such mob effect with ID %s
        @PowerNukkitOnly @Since("FUTURE") EFFECT_SUCCESS("commands.effect.success"), // Gave %1$s * %2$d to %3$s for %4$d seconds
        @PowerNukkitOnly @Since("FUTURE") EFFECT_SUCCESS_REMOVED("commands.effect.success.removed"), // Took %1$s from %2$s
        @PowerNukkitOnly @Since("FUTURE") EFFECT_SUCCESS_REMOVED_ALL("commands.effect.success.removed.all"), // Took all effects from %1$s
        @PowerNukkitOnly @Since("FUTURE") ENCHANT_CANTCOMBINE("commands.enchant.cantCombine"), // %1$s can't be combined with %2$s
        @PowerNukkitOnly @Since("FUTURE") ENCHANT_INVALIDLEVEL("commands.enchant.invalidLevel"), // %1$s does not support level %2$d
        @PowerNukkitOnly @Since("FUTURE") ENCHANT_CANTENCHANT("commands.enchant.cantEnchant"), // The selected enchantment can't be added to the target item: %1$s
        @PowerNukkitOnly @Since("FUTURE") ENCHANT_DESCRIPTION("commands.enchant.description"), // Adds an enchantment to a player's selected item.
        @PowerNukkitOnly @Since("FUTURE") ENCHANT_NOITEM("commands.enchant.noItem"), // The target doesn't hold an item: %1$s
        @PowerNukkitOnly @Since("FUTURE") ENCHANT_NOTFOUND("commands.enchant.notFound"), // There is no such enchantment with ID %1$d
        @PowerNukkitOnly @Since("FUTURE") ENCHANT_SUCCESS("commands.enchant.success"), // Enchanting succeeded for %1$s
        @PowerNukkitOnly @Since("FUTURE") ENTITYDATA_DESCRIPTION("commands.entitydata.description"), // Modifies the data tag of an entity.
        @PowerNukkitOnly @Since("FUTURE") ENTITYDATA_FAILED("commands.entitydata.failed"), // The data tag did not change: %1$s
        @PowerNukkitOnly @Since("FUTURE") ENTITYDATA_NOPLAYERS("commands.entitydata.noPlayers"), // %1$s is a player and cannot be changed
        @PowerNukkitOnly @Since("FUTURE") ENTITYDATA_SUCCESS("commands.entitydata.success"), // Entity data updated to: %1$s
        @PowerNukkitOnly @Since("FUTURE") ENTITYDATA_TAGERROR("commands.entitydata.tagError"), // Data tag parsing failed: %1$s
        @PowerNukkitOnly @Since("FUTURE") EVENT_DESCRIPTION("commands.event.description"), // Triggers an event for the specified object(s)
        @PowerNukkitOnly @Since("FUTURE") EVENT_ERROR_EMPTY("commands.event.error.empty"), // Event name cannot be empty
        @PowerNukkitOnly @Since("FUTURE") EVENT_ERROR_FAILED("commands.event.error.failed"), // %1$s could not be executed on: %2$s					##1: Event Name ##2: List of failed entities for which the event could not be executed
        @PowerNukkitOnly @Since("FUTURE") EVENT_SUCCESS("commands.event.success"), // %1$s successfully executed on: %2$s						##1: Event Name ##2: List of entities
        @PowerNukkitOnly @Since("FUTURE") EXECUTE_ALLINVOCATIONSFAILED("commands.execute.allInvocationsFailed"), // All invocations failed: '%1$s'
        @PowerNukkitOnly @Since("FUTURE") EXECUTE_FAILED("commands.execute.failed"), // Failed to execute '%1$s' as %2$s
        @PowerNukkitOnly @Since("FUTURE") EXECUTE_DESCRIPTION("commands.execute.description"), // Executes a command on behalf of one or more entities.
        @PowerNukkitOnly @Since("FUTURE") FILL_DESCRIPTION("commands.fill.description"), // Fills all or parts of a region with a specific block.
        @PowerNukkitOnly @Since("FUTURE") FILL_FAILED("commands.fill.failed"), // No blocks filled
        @PowerNukkitOnly @Since("FUTURE") FILL_OUTOFWORLD("commands.fill.outOfWorld"), // Cannot place blocks outside of the world
        @PowerNukkitOnly @Since("FUTURE") FILL_SUCCESS("commands.fill.success"), // %1$d blocks filled
        @PowerNukkitOnly @Since("FUTURE") FILL_TAGERROR("commands.fill.tagError"), // Data tag parsing failed: %1$s
        @PowerNukkitOnly @Since("FUTURE") FILL_TOOMANYBLOCKS("commands.fill.tooManyBlocks"), // Too many blocks in the specified area (%1$d > %2$d)
        @PowerNukkitOnly @Since("FUTURE") FILL_REPLACE_AUXVALUE_INVALID("commands.fill.replace.auxvalue.invalid"), // Invalid replace data value for block %1$s
        @PowerNukkitOnly @Since("FUTURE") FOG_DESCRIPTION("commands.fog.description"), // Add or remove fog settings file
        @PowerNukkitOnly @Since("FUTURE") FOG_INVALIDFOGID("commands.fog.invalidFogId"), // Invalid Fog Setting Id : %1$s
        @PowerNukkitOnly @Since("FUTURE") FOG_INVALIDUSERID("commands.fog.invalidUserId"), // No fog settings with the id were found for %1$s
        @PowerNukkitOnly @Since("FUTURE") FOG_LIMITREACHED("commands.fog.limitReached"), // Size limit reached for fog identifiers for %1$s
        @PowerNukkitOnly @Since("FUTURE") FOG_SUCCESS_POP("commands.fog.success.pop"), // Last pushed fog setting with id %2$s was successfully removed from %1$s
        @PowerNukkitOnly @Since("FUTURE") FOG_SUCCESS_PUSH("commands.fog.success.push"), // Fog setting was successfully added for %1$s with id %2$s
        @PowerNukkitOnly @Since("FUTURE") FOG_SUCCESS_REMOVE("commands.fog.success.remove"), // Fog settings with id %2$s were successfully removed from %1$s
        @PowerNukkitOnly @Since("FUTURE") FUNCTION_DESCRIPTION("commands.function.description"), // Runs commands found in the corresponding function file.
        @PowerNukkitOnly @Since("FUTURE") FUNCTION_FUNCTIONNAMENOTFOUND("commands.function.functionNameNotFound"), // Function %1$s not found.
        @PowerNukkitOnly @Since("FUTURE") FUNCTION_INVALIDCHARACTERS("commands.function.invalidCharacters"), // Function with title '%s' is invalid, character '%s' is not allowed in function names.
        @PowerNukkitOnly @Since("FUTURE") FUNCTION_NOENGINEVERSIONSPECIFIED("commands.function.noEngineVersionSpecified"), // Function %s could not be run. You must specify a min_engine_version in the behavior pack's manifest.json.
        @PowerNukkitOnly @Since("FUTURE") FUNCTION_SUCCESS("commands.function.success"), // Successfully executed %1$d function entries.
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_DESCRIPTION("commands.gamemode.description"), // Sets a player's game mode.
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_SUCCESS_OTHER("commands.gamemode.success.other"), // Set %2$s's game mode to %1$s
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_SUCCESS_SELF("commands.gamemode.success.self"), // Set own game mode to %1$s
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_FAIL_INVALID("commands.gamemode.fail.invalid"), // Game mode '%1$s' is invalid
        @PowerNukkitOnly @Since("FUTURE") GAMERULE_DESCRIPTION("commands.gamerule.description"), // Sets or queries a game rule value.
        @PowerNukkitOnly @Since("FUTURE") GAMERULE_TYPE_INVALID("commands.gamerule.type.invalid"), // Invalid type used for game rule '%1$s'
        @PowerNukkitOnly @Since("FUTURE") GAMERULE_TYPE_NOCHEATSENABLED("commands.gamerule.type.nocheatsenabled"), // Game rule '%1$s' can only be used if cheats are enabled in this world.
        @PowerNukkitOnly @Since("FUTURE") GAMERULE_NOPERMISSION("commands.gamerule.nopermission"), // Only server owners can change '%1$s'
        @PowerNukkitOnly @Since("FUTURE") GAMERULE_NORULE("commands.gamerule.norule"), // No game rule called '%1$s' is available
        @PowerNukkitOnly @Since("FUTURE") GAMERULE_SUCCESS("commands.gamerule.success"), // Game rule %1$s has been updated to %2$s
        @PowerNukkitOnly @Since("FUTURE") GENERIC_ASYNC_INITIATED("commands.generic.async.initiated"), // '%1$s' command started (async step %2$d)
        @PowerNukkitOnly @Since("FUTURE") GENERIC_BOOLEAN_INVALID("commands.generic.boolean.invalid"), // '%1$s' is not true or false
        @PowerNukkitOnly @Since("FUTURE") GENERIC_CHUNK_NOTFOUND("commands.generic.chunk.notFound"), // Specified chunk not found
        @PowerNukkitOnly @Since("FUTURE") GENERIC_COMPONENTERROR("commands.generic.componentError"), // Component list parsing failed
        @PowerNukkitOnly @Since("FUTURE") GENERIC_DIMENSION_NOTFOUND("commands.generic.dimension.notFound"), // Specified dimension not found
        @PowerNukkitOnly @Since("FUTURE") GENERIC_DISABLED("commands.generic.disabled"), // Cheats aren't enabled in this level.
        @PowerNukkitOnly @Since("FUTURE") GENERIC_DISABLED_TEMPLATELOCKED("commands.generic.disabled.templateLocked"), // Settings are currently locked. Unlock Template World Options in the Game Settings menu to change them.
        @PowerNukkitOnly @Since("FUTURE") GENERIC_DOUBLE_TOOBIG("commands.generic.double.tooBig"), // The number you have entered (%.2f) is too big, it must be at most %.2f
        @PowerNukkitOnly @Since("FUTURE") GENERIC_DOUBLE_TOOSMALL("commands.generic.double.tooSmall"), // The number you have entered (%.2f) is too small, it must be at least %.2f
        @PowerNukkitOnly @Since("FUTURE") GENERIC_DUPLICATETYPE("commands.generic.duplicateType"), // Duplicate type arguments
        @PowerNukkitOnly @Since("FUTURE") GENERIC_DUPLICATESELECTORARGUMENT("commands.generic.duplicateSelectorArgument"), // Duplicate %s selector arguments
        @PowerNukkitOnly @Since("FUTURE") GENERIC_ENCRYPTION_BADKEY("commands.generic.encryption.badkey"), // Bad public key given. Expected 120 byte key after PEM formatting.
        @PowerNukkitOnly @Since("FUTURE") GENERIC_ENCRYPTION_BADSALT("commands.generic.encryption.badsalt"), // Bad salt given. Expected a 16 bytes before base 64 encoding.
        @PowerNukkitOnly @Since("FUTURE") GENERIC_ENCRYPTION_REQUIRED("commands.generic.encryption.required"), // Encrypted session required
        @PowerNukkitOnly @Since("FUTURE") GENERIC_ENTITY_INVALIDTYPE("commands.generic.entity.invalidType"), // Entity type '%1$s' is invalid
        @PowerNukkitOnly @Since("FUTURE") GENERIC_ENTITY_INVALIDUUID("commands.generic.entity.invalidUuid"), // The entity UUID provided is in an invalid format
        @PowerNukkitOnly @Since("FUTURE") GENERIC_ENTITY_NOTFOUND("commands.generic.entity.notFound"), // That entity cannot be found
        @PowerNukkitOnly @Since("FUTURE") GENERIC_EXCEPTION("commands.generic.exception"), // An unknown error occurred while attempting to perform this command
        @PowerNukkitOnly @Since("FUTURE") GENERIC_INVALIDAGENTTYPE("commands.generic.invalidAgentType"), // Type argument applied to Agent-only selector
        @PowerNukkitOnly @Since("FUTURE") GENERIC_INVALIDCONTEXT("commands.generic.invalidcontext"), // Invalid context provided for given command type
        @PowerNukkitOnly @Since("FUTURE") GENERIC_INVALIDDEVICE("commands.generic.invalidDevice"), // The command you entered, %s, is not supported on this device
        @PowerNukkitOnly @Since("FUTURE") GENERIC_INVALIDPLAYERTYPE("commands.generic.invalidPlayerType"), // Type argument applied to player-only selector
        @PowerNukkitOnly @Since("FUTURE") GENERIC_INVALIDTYPE("commands.generic.invalidType"), // Unknown type argument
        @PowerNukkitOnly @Since("FUTURE") GENERIC_LEVELERROR("commands.generic.levelError"), // Max level has to be larger than min level
        @PowerNukkitOnly @Since("FUTURE") GENERIC_MALFORMED_BODY("commands.generic.malformed.body"), // Body is missing or malformed
        @PowerNukkitOnly @Since("FUTURE") GENERIC_MALFORMED_TYPE("commands.generic.malformed.type"), // Invalid request type
        @PowerNukkitOnly @Since("FUTURE") GENERIC_NOTIMPLEMENTED("commands.generic.notimplemented"), // Not implemented
        @PowerNukkitOnly @Since("FUTURE") GENERIC_NUM_INVALID("commands.generic.num.invalid"), // '%1$s' is not a valid number
        @PowerNukkitOnly @Since("FUTURE") GENERIC_NUM_TOOBIG("commands.generic.num.tooBig"), // The number you have entered (%1$d) is too big, it must be at most %2$d
        @PowerNukkitOnly @Since("FUTURE") GENERIC_NUM_TOOSMALL("commands.generic.num.tooSmall"), // The number you have entered (%1$d) is too small, it must be at least %2$d
        @PowerNukkitOnly @Since("FUTURE") GENERIC_OUTOFWORLD("commands.generic.outOfWorld"), // Cannot access blocks outside of the world
        @PowerNukkitOnly @Since("FUTURE") GENERIC_PARAMETER_INVALID("commands.generic.parameter.invalid"), // '%1$s' is not a valid parameter
        @PowerNukkitOnly @Since("FUTURE") GENERIC_PERMISSION_SELECTOR("commands.generic.permission.selector"), // <insufficient permissions for selector expansion>
        @PowerNukkitOnly @Since("FUTURE") GENERIC_PLAYER_NOTFOUND("commands.generic.player.notFound"), // That player cannot be found
        @PowerNukkitOnly @Since("FUTURE") GENERIC_PROTOCOL_MISMATCH("commands.generic.protocol.mismatch"), // Provided protocol version doesn't match Minecraft's protocol version
        @PowerNukkitOnly @Since("FUTURE") GENERIC_RADIUSERROR("commands.generic.radiusError"), // Minimum selector radius must be smaller than maximum
        @PowerNukkitOnly @Since("FUTURE") GENERIC_RADIUSNEGATIVE("commands.generic.radiusNegative"), // Radius cannot be negative
        @PowerNukkitOnly @Since("FUTURE") GENERIC_ROTATIONERROR("commands.generic.rotationError"), // Rotation out of range
        @PowerNukkitOnly @Since("FUTURE") GENERIC_RUNNING("commands.generic.running"), // The command is already running
        @PowerNukkitOnly @Since("FUTURE") GENERIC_STEP_FAILED("commands.generic.step.failed"), // Command step failed
        @PowerNukkitOnly @Since("FUTURE") GENERIC_SYNTAX("commands.generic.syntax"), // Syntax error: Unexpected "%2$s": at "%1$s>>%2$s<<%3$s"
        @PowerNukkitOnly @Since("FUTURE") GENERIC_NOTARGETMATCH("commands.generic.noTargetMatch"), // No targets matched selector
        @PowerNukkitOnly @Since("FUTURE") GENERIC_TARGETNOTPLAYER("commands.generic.targetNotPlayer"), // Selector must be player-type
        @PowerNukkitOnly @Since("FUTURE") GENERIC_TOOMANYNAMES("commands.generic.tooManyNames"), // Too many target name arguments
        @PowerNukkitOnly @Since("FUTURE") GENERIC_TOOMANYTARGETS("commands.generic.tooManyTargets"), // Too many targets matched selector
        @PowerNukkitOnly @Since("FUTURE") GENERIC_TOO_MANY_REQUESTS("commands.generic.too.many.requests"), // Too many commands have been requested, wait for one to be done
        @PowerNukkitOnly @Since("FUTURE") GENERIC_UNKNOWN("commands.generic.unknown"), // Unknown command: %s. Please check that the command exists and that you have permission to use it.
        @PowerNukkitOnly @Since("FUTURE") GENERIC_USAGE("commands.generic.usage"), // Usage: %1$s
        @PowerNukkitOnly @Since("FUTURE") GENERIC_USAGE_NOPARAM("commands.generic.usage.noparam"), // Usage:
        @PowerNukkitOnly @Since("FUTURE") GENERIC_VERSION_MISMATCH("commands.generic.version.mismatch"), // The requested version doesn't exist for this command
        @PowerNukkitOnly @Since("FUTURE") GENERIC_VERSION_MISSING("commands.generic.version.missing"), // Command calls not from chat should specify the command's version
        @PowerNukkitOnly @Since("FUTURE") GETCHUNKDATA_DESCRIPTION("commands.getchunkdata.description"), // Gets pixels for a specific chunk.
        @PowerNukkitOnly @Since("FUTURE") GETCHUNKDATA_SUCCESS("commands.getchunkdata.success"), // Chunk data received
        @PowerNukkitOnly @Since("FUTURE") GETCHUNKS_DESCRIPTION("commands.getchunks.description"), // Gets list of chunks that are loaded.
        @PowerNukkitOnly @Since("FUTURE") GETCHUNKS_SUCCESS("commands.getchunks.success"), // Chunk list received
        @PowerNukkitOnly @Since("FUTURE") GETLOCALPLAYERNAME_DESCRIPTION("commands.getlocalplayername.description"), // Returns the local player name.
        @PowerNukkitOnly @Since("FUTURE") GETSPAWNPOINT_DESCRIPTION("commands.getspawnpoint.description"), // Gets the spawn position of the specified player(s).
        @PowerNukkitOnly @Since("FUTURE") GETTOPSOLIDBLOCK_DESCRIPTION("commands.gettopsolidblock.description"), // Gets the position of the top non-air block below the specified position
        @PowerNukkitOnly @Since("FUTURE") GETTOPSOLIDBLOCK_NOTFOUND("commands.gettopsolidblock.notfound"), // No solid blocks under specified position
        @PowerNukkitOnly @Since("FUTURE") GIVE_BLOCK_NOTFOUND("commands.give.block.notFound"), // There is no such block with name %1$d
        @PowerNukkitOnly @Since("FUTURE") GIVE_DESCRIPTION("commands.give.description"), // Gives an item to a player.
        @PowerNukkitOnly @Since("FUTURE") GIVE_ITEM_INVALID("commands.give.item.invalid"), // Invalid command syntax: no such %s exists with that data value
        @PowerNukkitOnly @Since("FUTURE") GIVE_ITEM_NOTFOUND("commands.give.item.notFound"), // There is no such item with name %1$d
        @PowerNukkitOnly @Since("FUTURE") GIVE_MAP_INVALIDDATA("commands.give.map.invalidData"), // Invalid map data provided
        @PowerNukkitOnly @Since("FUTURE") GIVE_MAP_FEATURENOTFOUND("commands.give.map.featureNotFound"), // Could not make exploration map. Feature not found on this dimension
        @PowerNukkitOnly @Since("FUTURE") GIVE_SUCCESS("commands.give.success"), // Gave %1$s * %2$d to %3$s
        @PowerNukkitOnly @Since("FUTURE") GIVE_SUCCESSRECIPIENT("commands.give.successRecipient"), // You have been given %1$s * %2$d
        @PowerNukkitOnly @Since("FUTURE") GIVE_TAGERROR("commands.give.tagError"), // Data tag parsing failed: %1$s
        @PowerNukkitOnly @Since("FUTURE") HELP_DESCRIPTION("commands.help.description"), // Provides help/list of commands.
        @PowerNukkitOnly @Since("FUTURE") HELP_FOOTER("commands.help.footer"), // Tip: Use the <tab> key while typing a command to auto-complete the command or its arguments
        @PowerNukkitOnly @Since("FUTURE") HELP_HEADER("commands.help.header"), // --- Showing help page %1$d of %2$d (/help <page>) ---
        @PowerNukkitOnly @Since("FUTURE") HELP_COMMAND_ALIASES("commands.help.command.aliases"), // %s (also %s):
        @PowerNukkitOnly @Since("FUTURE") IMMUTABLEWORLD_DESCRIPTION("commands.immutableworld.description"), // Sets the immutable state of the world.
        @PowerNukkitOnly @Since("FUTURE") IMMUTABLEWORLD_INFO("commands.immutableworld.info"), // immutableworld = %s
        @PowerNukkitOnly @Since("FUTURE") KICK_DESCRIPTION("commands.kick.description"), // Kicks a player from the server.
        @PowerNukkitOnly @Since("FUTURE") KICK_DESCRIPTION_EDU("commands.kick.description.edu"), // Removes a player from the game.
        @PowerNukkitOnly @Since("FUTURE") KICK_NO_PLAYER("commands.kick.no.player"), // Please provide the name of the player you want to kick
        @PowerNukkitOnly @Since("FUTURE") KICK_NOT_FOUND("commands.kick.not.found"), // Could not find player %1$s
        @PowerNukkitOnly @Since("FUTURE") KICK_NOT_YOURSELF("commands.kick.not.yourself"), // You may not remove yourself from the game
        @PowerNukkitOnly @Since("FUTURE") KICK_SUCCESS("commands.kick.success"), // Kicked %1$s from the game
        @PowerNukkitOnly @Since("FUTURE") KICK_SUCCESS_REASON("commands.kick.success.reason"), // Kicked %1$s from the game: '%2$s'
        @PowerNukkitOnly @Since("FUTURE") KICK_SUCCESS_REASONEDU("commands.kick.success.reasonedu"), // Removed %1$s from the game: '%2$s'
        @PowerNukkitOnly @Since("FUTURE") KICK_NO_HOST("commands.kick.no.host"), // The host may not be kicked from the game.
        @PowerNukkitOnly @Since("FUTURE") KICK_NO_TEACHER("commands.kick.no.teacher"), // Teachers may not be removed from the game.
        @PowerNukkitOnly @Since("FUTURE") KILL_SUCCESSFUL_EDU("commands.kill.successful.edu"), // Removed %1$s
        @PowerNukkitOnly @Since("FUTURE") KILL_SUCCESSFUL("commands.kill.successful"), // Killed %1$s
        @PowerNukkitOnly @Since("FUTURE") KILL_DESCRIPTION_EDU("commands.kill.description.edu"), // Removes entities (players, mobs, etc.).
        @PowerNukkitOnly @Since("FUTURE") KILL_DESCRIPTION("commands.kill.description"), // Kills entities (players, mobs, etc.).
        @PowerNukkitOnly @Since("FUTURE") LIST_DESCRIPTION("commands.list.description"), // Lists players on the server.
        @PowerNukkitOnly @Since("FUTURE") LOCATE_DESCRIPTION("commands.locate.description"), // Displays the coordinates for the closest structure of a given type.
        @PowerNukkitOnly @Since("FUTURE") LOCATE_FAIL_NOPLAYER("commands.locate.fail.noplayer"), // The command can only be used by a valid player
        @PowerNukkitOnly @Since("FUTURE") LOCATE_FAIL_NOSTRUCTUREFOUND("commands.locate.fail.nostructurefound"), // No valid structure found in this dimension
        @PowerNukkitOnly @Since("FUTURE") LOCATE_SUCCESS("commands.locate.success"), // The nearest %1$s is at block %2$s, (y?), %3$s
        @PowerNukkitOnly @Since("FUTURE") TOGGLECONTENTLOG_TOGGLE("commands.togglecontentlog.toggle"), // Enables/Disables the content log command
        @PowerNukkitOnly @Since("FUTURE") TOGGLECONTENTLOG_ENABLED("commands.togglecontentlog.enabled"), // Content Log Enabled
        @PowerNukkitOnly @Since("FUTURE") TOGGLECONTENTLOG_DISABLED("commands.togglecontentlog.disabled"), // Content Log Disabled
        @PowerNukkitOnly @Since("FUTURE") ME_DESCRIPTION("commands.me.description"), // Displays a message about yourself.
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_DISPLAY_INCOMING("commands.message.display.incoming"), // %1$s whispers to you: %2$s
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_DISPLAY_OUTGOING("commands.message.display.outgoing"), // You whisper to %1$s: %2$s
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_SAMETARGET("commands.message.sameTarget"), // You can't send a private message to yourself!
        @PowerNukkitOnly @Since("FUTURE") MOBEVENT_DESCRIPTION("commands.mobevent.description"), // Controls what mob events are allowed to run.
        @PowerNukkitOnly @Since("FUTURE") MOBEVENT_EVENTSENABLEDSETTOTRUE("commands.mobevent.eventsEnabledSetToTrue"), // Mob Events are now enabled. Individual events which are set to false will not run.
        @PowerNukkitOnly @Since("FUTURE") MOBEVENT_EVENTSENABLEDSETTOFALSE("commands.mobevent.eventsEnabledSetToFalse"), // Mob Events are now disabled. Individual events will not run.
        @PowerNukkitOnly @Since("FUTURE") MOBEVENT_EVENTSENABLEDISTRUE("commands.mobevent.eventsEnabledIsTrue"), // Mob Events are enabled. Individual events which are set to false will not run.
        @PowerNukkitOnly @Since("FUTURE") MOBEVENT_EVENTSENABLEDISFALSE("commands.mobevent.eventsEnabledIsFalse"), // Mob Events are disabled. Individual events will not run.
        @PowerNukkitOnly @Since("FUTURE") MOBEVENT_EVENTSETTOTRUE("commands.mobevent.eventSetToTrue"), // Mob Event %s (id: %s) set to true.
        @PowerNukkitOnly @Since("FUTURE") MOBEVENT_EVENTSETTOTRUEBUTEVENTSDISABLED("commands.mobevent.eventSetToTrueButEventsDisabled"), // Mob Event %s (id: %s) set to true, but Mob Events are disabled.
        @PowerNukkitOnly @Since("FUTURE") MOBEVENT_EVENTSETTOFALSE("commands.mobevent.eventSetToFalse"), // Mob Event %s (id: %s) set to false.
        @PowerNukkitOnly @Since("FUTURE") MOBEVENT_EVENTISTRUE("commands.mobevent.eventIsTrue"), // Mob Event %s (id: %s) is set to true.
        @PowerNukkitOnly @Since("FUTURE") MOBEVENT_EVENTISTRUEBUTEVENTSDISABLED("commands.mobevent.eventIsTrueButEventsDisabled"), // Mob Event %s (id: %s) is set to true, but Mob Events are disabled.
        @PowerNukkitOnly @Since("FUTURE") MOBEVENT_EVENTISFALSE("commands.mobevent.eventIsFalse"), // Mob Event %s (id: %s) is set to false.
        @PowerNukkitOnly @Since("FUTURE") MUSIC_DESCRIPTION("commands.music.description"), // Allows you to control playing music tracks.
        @PowerNukkitOnly @Since("FUTURE") MUSIC_FAILURE_EMPTYTRACKNAME("commands.music.failure.emptyTrackName"), // You must provide a non-empty track name.
        @PowerNukkitOnly @Since("FUTURE") MUSIC_SUCCESS_QUEUEACTION("commands.music.success.queueAction"), // %s has been queued and it will start playing when the current track stops.
        @PowerNukkitOnly @Since("FUTURE") MUSIC_SUCCESS_PLAYACTION("commands.music.success.playAction"), // %s has been queued to start playing.
        @PowerNukkitOnly @Since("FUTURE") MUSIC_SUCCESS_STOPACTION("commands.music.success.stopAction"), // Custom music will stop now.
        @PowerNukkitOnly @Since("FUTURE") MUSIC_SUCCESS_VOLUMEACTION("commands.music.success.volumeAction"), // Music volume will be updated to %d.
        @PowerNukkitOnly @Since("FUTURE") OP_DESCRIPTION("commands.op.description"), // Grants operator status to a player.
        @PowerNukkitOnly @Since("FUTURE") OP_FAILED("commands.op.failed"), // Could not op (already op or higher): %s
        @PowerNukkitOnly @Since("FUTURE") OP_SUCCESS("commands.op.success"), // Opped: %s
        @PowerNukkitOnly @Since("FUTURE") OP_MESSAGE("commands.op.message"), // You have been opped
        @PowerNukkitOnly @Since("FUTURE") ORIGIN_COMMANDBLOCK("commands.origin.commandblock"), // CommandBlock
        @PowerNukkitOnly @Since("FUTURE") ORIGIN_EXTERNAL("commands.origin.external"), // External
        @PowerNukkitOnly @Since("FUTURE") ORIGIN_DEVCONSOLE("commands.origin.devconsole"), // DevConsole
        @PowerNukkitOnly @Since("FUTURE") ORIGIN_SCRIPT("commands.origin.script"), // Script Engine
        @PowerNukkitOnly @Since("FUTURE") ORIGIN_SERVER("commands.origin.server"), // Server
        @PowerNukkitOnly @Since("FUTURE") ORIGIN_TEACHER("commands.origin.teacher"), // Teacher
        @PowerNukkitOnly @Since("FUTURE") OPS_DESCRIPTION("commands.ops.description"), // Reloads and applies Op permissions.
        @PowerNukkitOnly @Since("FUTURE") OPS_RELOADED("commands.ops.reloaded"), // Ops reloaded from file.
        @PowerNukkitOnly @Since("FUTURE") OPS_SET_SUCCESS("commands.ops.set.success"), // Succeeded in setting operator level for player %s.
        @PowerNukkitOnly @Since("FUTURE") PERMISSIONS_DESCRIPTION("commands.permissions.description"), // Reloads and applies permissions.
        @PowerNukkitOnly @Since("FUTURE") PERMISSIONS_RELOADED("commands.permissions.reloaded"), // Permissions reloaded from file.
        @PowerNukkitOnly @Since("FUTURE") PERMISSIONS_SET_FAILED("commands.permissions.set.failed"), // Could not set permission level %s for player %s.
        @PowerNukkitOnly @Since("FUTURE") PERMISSIONS_SET_SUCCESS("commands.permissions.set.success"), // Succeeded in setting permission level %s for player %s.
        @PowerNukkitOnly @Since("FUTURE") PERMISSIONS_SAVE_FAILED("commands.permissions.save.failed"), // Could not save permission level %s for player %s.
        @PowerNukkitOnly @Since("FUTURE") PERMISSIONS_SAVE_SUCCESS("commands.permissions.save.success"), // Succeeded in saving permission level %s for player %s.
        @PowerNukkitOnly @Since("FUTURE") SPAWNPARTICLEEMITTER_DESCRIPTION("commands.spawnParticleEmitter.description"), // Creates a particle emitter
        @PowerNukkitOnly @Since("FUTURE") PARTICLE_DESCRIPTION("commands.particle.description"), // Creates particles.
        @PowerNukkitOnly @Since("FUTURE") PARTICLE_NOTFOUND("commands.particle.notFound"), // Unknown effect name (%1$s)
        @PowerNukkitOnly @Since("FUTURE") PARTICLE_SUCCESS("commands.particle.success"), // Playing effect %1$s for %2$d times
        @PowerNukkitOnly @Since("FUTURE") PLAYANIMATION_DESCRIPTION("commands.playanimation.description"), // Makes one or more entities play a one-off animation. Assumes all variables are setup correctly.
        @PowerNukkitOnly @Since("FUTURE") PLAYANIMATION_SUCCESS("commands.playanimation.success"), // Animation request sent to clients for processing.
        @PowerNukkitOnly @Since("FUTURE") PLAYERS_LIST("commands.players.list"), // There are %1$d/%2$d players online:
        @PowerNukkitOnly @Since("FUTURE") PLAYERS_LIST_NAMES("commands.players.list.names"), // %s
        @PowerNukkitOnly @Since("FUTURE") PLAYSOUND_DESCRIPTION("commands.playsound.description"), // Plays a sound.
        @PowerNukkitOnly @Since("FUTURE") PLAYSOUND_PLAYERTOOFAR("commands.playsound.playerTooFar"), // Player %1$s is too far away to hear the sound
        @PowerNukkitOnly @Since("FUTURE") PLAYSOUND_SUCCESS("commands.playsound.success"), // Played sound '%1$s' to %2$s
        @PowerNukkitOnly @Since("FUTURE") POSITION_DESCRIPTION("commands.position.description"), // Toggles on/off coordinates for player.
        @PowerNukkitOnly @Since("FUTURE") PUBLISH_FAILED("commands.publish.failed"), // Unable to host local game
        @PowerNukkitOnly @Since("FUTURE") PUBLISH_STARTED("commands.publish.started"), // Local game hosted on port %1$s
        @PowerNukkitOnly @Since("FUTURE") QUERYTARGET_DESCRIPTION("commands.querytarget.description"), // Gets transform, name, and id information about the given target entity or entities.
        @PowerNukkitOnly @Since("FUTURE") QUERYTARGET_SUCCESS("commands.querytarget.success"), // Target data: %1$s
        @PowerNukkitOnly @Since("FUTURE") RELOAD_DESCRIPTION("commands.reload.description"), // Reloads all function files from all behavior packs.
        @PowerNukkitOnly @Since("FUTURE") RELOAD_SUCCESS("commands.reload.success"), // Existing function files have been reloaded. Restart Minecraft to reload NEW functions.
        @PowerNukkitOnly @Since("FUTURE") REPLACEITEM_DESCRIPTION("commands.replaceitem.description"), // Replaces items in inventories.
        @PowerNukkitOnly @Since("FUTURE") REPLACEITEM_FAILED("commands.replaceitem.failed"), // Could not replace %s slot %d with %d * %s
        @PowerNukkitOnly @Since("FUTURE") REPLACEITEM_KEEPFAILED("commands.replaceitem.keepFailed"), // There is already an item occupying %s slot %d.
        @PowerNukkitOnly @Since("FUTURE") REPLACEITEM_NOCONTAINER("commands.replaceitem.noContainer"), // Block at %s is not a container
        @PowerNukkitOnly @Since("FUTURE") REPLACEITEM_BADSLOTNUMBER("commands.replaceitem.badSlotNumber"), // Could not replace slot %d, must be a value between %d and %d.
        @PowerNukkitOnly @Since("FUTURE") REPLACEITEM_SUCCESS("commands.replaceitem.success"), // Replaced %s slot %d with %d * %s
        @PowerNukkitOnly @Since("FUTURE") REPLACEITEM_SUCCESS_ENTITY("commands.replaceitem.success.entity"), // Replaced %s slot %d of %s with %d * %s
        @PowerNukkitOnly @Since("FUTURE") REPLACEITEM_TAGERROR("commands.replaceitem.tagError"), // Data tag parsing failed: %1$s
        @PowerNukkitOnly @Since("FUTURE") RIDE_DESCRIPTION("commands.ride.description"), // Makes entities ride other entities, stops entities from riding, makes rides evict their riders, or summons rides or riders.
        @PowerNukkitOnly @Since("FUTURE") RIDE_EVICTRIDERS_SUCCESS("commands.ride.evictRiders.success"), // Rides that have successfully evicted their riders: %1$s
        @PowerNukkitOnly @Since("FUTURE") RIDE_STARTRIDING_FAILURE("commands.ride.startRiding.failure"), // Riders that did not meet ride conditions: %1$s
        @PowerNukkitOnly @Since("FUTURE") RIDE_STARTRIDING_GROUPDOESNTFIT("commands.ride.startRiding.groupDoesntFit"), // The group of riders does not fit on the ride.
        @PowerNukkitOnly @Since("FUTURE") RIDE_STARTRIDING_NOTRIDEABLE("commands.ride.startRiding.notRideable"), // The selected entity is not rideable.
        @PowerNukkitOnly @Since("FUTURE") RIDE_STARTRIDING_RIDEFULL("commands.ride.startRiding.rideFull"), // This ride is already full.
        @PowerNukkitOnly @Since("FUTURE") RIDE_STARTRIDING_RIDEFULLRIDERSLEFT("commands.ride.startRiding.rideFullRidersLeft"), // The ride is full, so some riders were not added.
        @PowerNukkitOnly @Since("FUTURE") RIDE_STARTRIDING_SUCCESS("commands.ride.startRiding.success"), // Riders successfully added to ride: %1$s
        @PowerNukkitOnly @Since("FUTURE") RIDE_STARTRIDING_TOOMANYRIDERS("commands.ride.startRiding.tooManyRiders"), // Too many riders were specified. Only one is allowed at a time for teleport_ride.
        @PowerNukkitOnly @Since("FUTURE") RIDE_STARTRIDING_TOOMANYRIDES("commands.ride.startRiding.tooManyRides"), // Too many rides were specified. Only one is allowed at a time.
        @PowerNukkitOnly @Since("FUTURE") RIDE_STOPRIDING_SUCCESS("commands.ride.stopRiding.success"), // Riders that have successfully stopped riding: %1$s
        @PowerNukkitOnly @Since("FUTURE") RIDE_SUMMONRIDE_FAILED("commands.ride.summonRide.failed"), // Rides were summoned, but these riders could not be added to them: %1$s
        @PowerNukkitOnly @Since("FUTURE") RIDE_SUMMONRIDE_NOTRIDEABLE("commands.ride.summonRide.notRideable"), // Entity was summoned, but it is not rideable.
        @PowerNukkitOnly @Since("FUTURE") RIDE_SUMMONRIDE_SUCCESS("commands.ride.summonRide.success"), // Ride successfully summoned for these riders: %1$s
        @PowerNukkitOnly @Since("FUTURE") RIDE_SUMMONRIDER_FAILED("commands.ride.summonRider.failed"), // Riders were summoned, but could not be added to rides: %1$s
        @PowerNukkitOnly @Since("FUTURE") RIDE_SUMMONRIDER_FULLRIDES("commands.ride.summonRider.fullRides"), // Riders could not ride these rides because they are full: %1$s
        @PowerNukkitOnly @Since("FUTURE") RIDE_SUMMONRIDER_RIDESWITHNORIDEABLECOMP("commands.ride.summonRider.ridesWithNoRideableComp"), // The following entities are not rideable: %1$s
        @PowerNukkitOnly @Since("FUTURE") RIDE_SUMMONRIDER_SUCCESS("commands.ride.summonRider.success"), // Riders successfully summoned for rides: %1$s
        @PowerNukkitOnly @Since("FUTURE") SAVE_DESCRIPTION("commands.save.description"), // Control or check how the game saves data to disk.
        @PowerNukkitOnly @Since("FUTURE") SAVE_DISABLED("commands.save.disabled"), // Turned off world auto-saving
        @PowerNukkitOnly @Since("FUTURE") SAVE_ENABLED("commands.save.enabled"), // Turned on world auto-saving
        @PowerNukkitOnly @Since("FUTURE") SAVE_FAILED("commands.save.failed"), // Saving failed: %1$s
        @PowerNukkitOnly @Since("FUTURE") SAVE_START("commands.save.start"), // Saving...
        @PowerNukkitOnly @Since("FUTURE") SAVE_SUCCESS("commands.save.success"), // Saved the world
        @PowerNukkitOnly @Since("FUTURE") SAVE_ALL_ERROR("commands.save-all.error"), // An error occurred when trying to pause the level storage.
        @PowerNukkitOnly @Since("FUTURE") SAVE_ALL_SUCCESS("commands.save-all.success"), // Data saved. Files are now ready to be copied.
        @PowerNukkitOnly @Since("FUTURE") SAVE_OFF_ALREADYOFF("commands.save-off.alreadyOff"), // Saving is already turned off.
        @PowerNukkitOnly @Since("FUTURE") SAVE_ON_ALREADYON("commands.save-on.alreadyOn"), // Saving is already turned on.
        @PowerNukkitOnly @Since("FUTURE") SAVE_ON_NOTDONE("commands.save-on.notDone"), // A previous save has not been completed.
        @PowerNukkitOnly @Since("FUTURE") SAVE_ON_DESCRIPTION("commands.save-on.description"), // Enables automatic server saves.
        @PowerNukkitOnly @Since("FUTURE") SAVE_ON_SUCCESS("commands.save-on.success"), // Changes to the level are resumed.
        @PowerNukkitOnly @Since("FUTURE") SAVE_STATE_DESCRIPTION("commands.save-state.description"), // Checks if a previous save-all has finished and lists the files involved.
        @PowerNukkitOnly @Since("FUTURE") SAY_DESCRIPTION("commands.say.description"), // Sends a message in the chat to other players.
        @PowerNukkitOnly @Since("FUTURE") SCHEDULE_DELAY_FUNCTIONQUEUED("commands.schedule.delay.functionQueued"), // Scheduled function %1$s in %2$d ticks at gametime %3$d.
        @PowerNukkitOnly @Since("FUTURE") SCHEDULE_DELAY_NEGATIVETIME("commands.schedule.delay.negativeTime"), // Time cannot be negative.
        @PowerNukkitOnly @Since("FUTURE") SCHEDULE_DESCRIPTION("commands.schedule.description"), // Schedules an action to be executed once an area is loaded, or after a certain amount of time.
        @PowerNukkitOnly @Since("FUTURE") SCHEDULE_FUNCTIONQUEUED("commands.schedule.functionQueued"), // Function has been queued and it will be executed when the specified area is fully loaded.
        @PowerNukkitOnly @Since("FUTURE") SCHEDULE_FUNCTIONRAN("commands.schedule.functionRan"), // Successfully executed %1$d function entries in function %2$s.
        @PowerNukkitOnly @Since("FUTURE") SCHEDULE_INVALIDORIGIN("commands.schedule.invalidOrigin"), // The origin needed to execute this function was invalid.
        @PowerNukkitOnly @Since("FUTURE") SCHEDULE_NAME_EMPTY("commands.schedule.name.empty"), // Ticking area name cannot be empty.
        @PowerNukkitOnly @Since("FUTURE") SCHEDULE_TOO_MANY_AREAS("commands.schedule.too.many.areas"), // More than one ticking areas were found with the name %s. Please use a single area.
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_DESCRIPTION("commands.scoreboard.description"), // Tracks and displays scores for various objectives.						##
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_ALLMATCHESFAILED("commands.scoreboard.allMatchesFailed"), // All matches failed												##
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_NOMULTIWILDCARD("commands.scoreboard.noMultiWildcard"), // Only one user wildcard allowed									##
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_OBJECTIVENOTFOUND("commands.scoreboard.objectiveNotFound"), // No objective was found by the name '%1$s'						##1: Objective Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_OBJECTIVEREADONLY("commands.scoreboard.objectiveReadOnly"), // The objective '%1$s' is read-only and cannot be set			##1: Objective Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_OBJECTIVES_ADD_ALREADYEXISTS("commands.scoreboard.objectives.add.alreadyExists"), // An objective with the name '%1$s' already exists	##1: Objective Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_OBJECTIVES_ADD_DISPLAYTOOLONG("commands.scoreboard.objectives.add.displayTooLong"), // The display name '%1$s' is too long for an objective, it can be at most %2$d characters long	##1: Objective Display Name ##2: Name Length Limit
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_OBJECTIVES_ADD_SUCCESS("commands.scoreboard.objectives.add.success"), // Added new objective '%1$s' successfully																##1: Objective Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_OBJECTIVES_ADD_TOOLONG("commands.scoreboard.objectives.add.tooLong"), // The name '%1$s' is too long for an objective, it can be at most %2$d characters long					##1: Objective Name ##2: Name Length Limit
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_OBJECTIVES_ADD_WRONGTYPE("commands.scoreboard.objectives.add.wrongType"), // Invalid objective criteria type '%1$s'						##1: Criteria Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_OBJECTIVES_ADD_NEEDNAME("commands.scoreboard.objectives.add.needName"), // An objective needs a name.									##
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_OBJECTIVES_DESCRIPTION("commands.scoreboard.objectives.description"), // Modify scoreboard objectives.								##
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_OBJECTIVES_LIST_COUNT("commands.scoreboard.objectives.list.count"), // Showing %1$d objective(s) on scoreboard:						##1: Number of Objectives
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_OBJECTIVES_LIST_EMPTY("commands.scoreboard.objectives.list.empty"), // There are no objectives on the scoreboard						##
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_OBJECTIVES_LIST_ENTRY("commands.scoreboard.objectives.list.entry"), // - %1$s: displays as '%2$s' and is type '%3$s'					##1: Objective Name ##2: Objective Display Name ##3: Critiera Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_OBJECTIVES_REMOVE_SUCCESS("commands.scoreboard.objectives.remove.success"), // Removed objective '%1$s' successfully						##1: Objective Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_OBJECTIVES_SETDISPLAY_INVALIDSLOT("commands.scoreboard.objectives.setdisplay.invalidSlot"), // No such display slot '%1$s'						##1: Display Slot
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_OBJECTIVES_SETDISPLAY_SUCCESSCLEARED("commands.scoreboard.objectives.setdisplay.successCleared"), // Cleared objective display slot '%1$s'			##1: Display Slot
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_OBJECTIVES_SETDISPLAY_SUCCESSSET("commands.scoreboard.objectives.setdisplay.successSet"), // Set the display objective in slot '%1$s' to '%2$s'	##1: Display Slot ##2: Objective Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_ADD_SUCCESS("commands.scoreboard.players.add.success"), // Added %1$d to [%2$s] for %3$s (now %4$d)						##1: Score Value ##2: Objective Name ##3: Player Name ##4: New Score Value
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_ADD_MULTIPLE_SUCCESS("commands.scoreboard.players.add.multiple.success"), // Added %1$d to [%2$s] for %3$d entities					##1: Score Value ##2: Objective Name ##3: Player Count
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_NAMENOTFOUND("commands.scoreboard.players.nameNotFound"), // A player name must be given.									##
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_ENABLE_NOTRIGGER("commands.scoreboard.players.enable.noTrigger"), // Objective %1$s is not a trigger							##1: Objective Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_ENABLE_SUCCESS("commands.scoreboard.players.enable.success"), // Enabled trigger %1$s for %2$s								##1: Trigger Name ##2: Objective Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_LIST_COUNT("commands.scoreboard.players.list.count"), // Showing %1$d tracked players on the scoreboard:					##1: Number of Players
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_LIST_EMPTY("commands.scoreboard.players.list.empty"), // There are no tracked players on the scoreboard					##
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_LIST_PLAYER_COUNT("commands.scoreboard.players.list.player.count"), // Showing %1$d tracked objective(s) for %2$s:				##1: Objective Count ##2: Player Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_LIST_PLAYER_EMPTY("commands.scoreboard.players.list.player.empty"), // Player %1$s has no scores recorded						##1: Player Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_LIST_PLAYER_ENTRY("commands.scoreboard.players.list.player.entry"), // - %2$s: %1$d (%3$s)										##1: Score Value ##2: Objective Display Name ##3: Objective Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_OPERATION_INVALIDOPERATION("commands.scoreboard.players.operation.invalidOperation"), // Invalid operation %1$s							##
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_OPERATION_NOTFOUND("commands.scoreboard.players.operation.notFound"), // No %1$s score for %2$s found								##1: Objective Name ##2: Player Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_OPERATION_SUCCESS("commands.scoreboard.players.operation.success"), // Updated [%1$s] for %2$d entities							##1: Objective Name ##2: Player Count
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_OFFLINEPLAYERNAME("commands.scoreboard.players.offlinePlayerName"), // Player Offline
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_RANDOM_INVALIDRANGE("commands.scoreboard.players.random.invalidRange"), // Min %1$d is not less than max %2$d						##1: Min Range Value ##2: Max Range Value
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_REMOVE_SUCCESS("commands.scoreboard.players.remove.success"), // Removed %1$d from [%2$s] for %3$s (now %4$d)					##1: Score Value ##2: Objective Name ##3: Player Name ##4: New Score Value
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_REMOVE_MULTIPLE_SUCCESS("commands.scoreboard.players.remove.multiple.success"), // Removed %1$d from [%2$s] for %3$d entities			##1: Score Value ##2: Objective Name ##3: Player Count
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_RESET_SUCCESS("commands.scoreboard.players.reset.success"), // Reset scores of player %1$s									##1: Player Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_RESETSCORE_SUCCESS("commands.scoreboard.players.resetscore.success"), // Reset score %1$s of player %2$s							##1: Objective Name ##2: Player Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_SET_SUCCESS("commands.scoreboard.players.set.success"), // Set [%1$s] for %2$s to %3$d										##1: Objective Name ##2: Player Name ##3: Score Value
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_SET_MULTIPLE_SUCCESS("commands.scoreboard.players.set.multiple.success"), // Set [%1$s] for %2$d entities to %3$d					##1: Objective Name ##2: Player Count ##3: Score Value
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_SET_TAGERROR("commands.scoreboard.players.set.tagError"), // Could not parse dataTag, reason: %1$s							##
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_SET_TAGMISMATCH("commands.scoreboard.players.set.tagMismatch"), // The dataTag does not match for %1$s							##
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_SCORE_NOTFOUND("commands.scoreboard.players.score.notFound"), // No %1$s score for %2$s found									##1: Objective Name ##2: Player Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_TEST_FAILED("commands.scoreboard.players.test.failed"), // Score %1$d is NOT in range %2$d to %3$d							##1: Value ##2: Min Range Value ##3: Max Range Value
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_PLAYERS_TEST_SUCCESS("commands.scoreboard.players.test.success"), // Score %1$d is in range %2$d to %3$d							##1: Value ##2: Min Range Value ##3: Max Range Value
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMNOTFOUND("commands.scoreboard.teamNotFound"), // No team was found by the name '%1$s'																##1: Team Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_ADD_ALREADYEXISTS("commands.scoreboard.teams.add.alreadyExists"), // A team with the name '%1$s' already exists												##1: Team Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_ADD_DISPLAYTOOLONG("commands.scoreboard.teams.add.displayTooLong"), // The display name '%1$s' is too long for a team, it can be at most %2$d characters long	##1: Team Display Name ##2: Name Length Limit
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_ADD_SUCCESS("commands.scoreboard.teams.add.success"), // Added new team '%1$s' successfully															##1: Team Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_ADD_TOOLONG("commands.scoreboard.teams.add.tooLong"), // The name '%1$s' is too long for a team, it can be at most %2$d characters long				##1: Team Name ##2: Name Length Limit
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_EMPTY_ALREADYEMPTY("commands.scoreboard.teams.empty.alreadyEmpty"), // Team %1$s is already empty, cannot remove nonexistant players							##1: Team Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_EMPTY_SUCCESS("commands.scoreboard.teams.empty.success"), // Removed all %1$d player(s) from team %2$s													##1: Number of Players ##2: Team Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_JOIN_FAILURE("commands.scoreboard.teams.join.failure"), // Could not add %1$d player(s) to team %2$s: %3$s												##1: Number of Players ##2: Team Name ##3: List of Players
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_JOIN_SUCCESS("commands.scoreboard.teams.join.success"), // Added %1$d player(s) to team %2$s: %3$s														##1: Number of Players ##2: Team Name ##3: List of Players
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_LEAVE_FAILURE("commands.scoreboard.teams.leave.failure"), // Could not remove %1$d player(s) from their teams: %2$s										##1: Number of Players ##2: Team Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_LEAVE_NOTEAM("commands.scoreboard.teams.leave.noTeam"), // You are not in a team																		##
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_LEAVE_SUCCESS("commands.scoreboard.teams.leave.success"), // Removed %1$d player(s) from their teams: %2$s												##1: Number of Players ##2: List of Players
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_LIST_COUNT("commands.scoreboard.teams.list.count"), // Showing %1$d teams on the scoreboard:															##1: Number of Teams
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_LIST_EMPTY("commands.scoreboard.teams.list.empty"), // There are no teams registered on the scoreboard												##
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_LIST_ENTRY("commands.scoreboard.teams.list.entry"), // - %1$s: '%2$s' has %3$d players																##1: Team Name ##2: Team Display Name ##3: Number of Players
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_LIST_PLAYER_COUNT("commands.scoreboard.teams.list.player.count"), // Showing %1$d player(s) in team %2$s:													##1: Number of Players ##2 Team Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_LIST_PLAYER_EMPTY("commands.scoreboard.teams.list.player.empty"), // Team %1$s has no players																##1: Team Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_LIST_PLAYER_ENTRY("commands.scoreboard.teams.list.player.entry"), // - %2$s: %1$d (%3$s)																		##1: Player Name ##2: Score Value ##3: Team Display Name
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_OPTION_NOVALUE("commands.scoreboard.teams.option.noValue"), // Valid values for option %1$s are: %2$s														##1: Option Name ##2: List of Option Values
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_OPTION_SUCCESS("commands.scoreboard.teams.option.success"), // Set option %1$s for team %2$s to %3$s														##1: Option Name ##2: Team Name ##3: Option Value
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD_TEAMS_REMOVE_SUCCESS("commands.scoreboard.teams.remove.success"), // Removed team %1$s																			##1: Team Name
        @PowerNukkitOnly @Since("FUTURE") SCREENSHAKE_DESCRIPTION("commands.screenshake.description"), // Applies shaking to the players' camera with a specified intensity and duration.
        @PowerNukkitOnly @Since("FUTURE") SCREENSHAKE_SUCCESS("commands.screenshake.success"), // Sent a request to the following players for their camera to shake: %s
        @PowerNukkitOnly @Since("FUTURE") SCREENSHAKE_SUCCESSSTOP("commands.screenshake.successStop"), // Stopping camera shake for the following players: %s	#
        @PowerNukkitOnly @Since("FUTURE") SEED_SUCCESS("commands.seed.success"), // Seed: %1$s
        @PowerNukkitOnly @Since("FUTURE") SETBLOCK_DESCRIPTION("commands.setblock.description"), // Changes a block to another block.
        @PowerNukkitOnly @Since("FUTURE") SETBLOCK_FAILED("commands.setblock.failed"), // Unable to place block
        @PowerNukkitOnly @Since("FUTURE") SETBLOCK_NOCHANGE("commands.setblock.noChange"), // The block couldn't be placed
        @PowerNukkitOnly @Since("FUTURE") SETBLOCK_NOTFOUND("commands.setblock.notFound"), // There is no such block with ID/name %1$s
        @PowerNukkitOnly @Since("FUTURE") SETBLOCK_OUTOFWORLD("commands.setblock.outOfWorld"), // Cannot place block outside of the world
        @PowerNukkitOnly @Since("FUTURE") SETBLOCK_SUCCESS("commands.setblock.success"), // Block placed
        @PowerNukkitOnly @Since("FUTURE") SETBLOCK_TAGERROR("commands.setblock.tagError"), // Data tag parsing failed: %1$s
        @PowerNukkitOnly @Since("FUTURE") SETIDLETIMEOUT_SUCCESS("commands.setidletimeout.success"), // Successfully set the idle timeout to %1$d minutes.
        @PowerNukkitOnly @Since("FUTURE") SETFIXEDINVSLOTS_DESCRIPTION("commands.setfixedinvslots.description"), // Sets the number of fixed inventory slots for the server.
        @PowerNukkitOnly @Since("FUTURE") SETFIXEDINVSLOTS_SUCCESS("commands.setfixedinvslots.success"), // Number of Fixed Inventory Slots set to %1$d
        @PowerNukkitOnly @Since("FUTURE") SETFIXEDINVSLOT_DESCRIPTION("commands.setfixedinvslot.description"), // Sets a fixed slot to a specified item.
        @PowerNukkitOnly @Since("FUTURE") SETFIXEDINVSLOT_SUCCESS("commands.setfixedinvslot.success"), // Fixed Inventory Slot %1$d set to %2$s
        @PowerNukkitOnly @Since("FUTURE") GLOBALPAUSE_DESCRIPTION("commands.globalpause.description"), // Sets or gets the paused state of the game for all players.
        @PowerNukkitOnly @Since("FUTURE") GLOBALPAUSE_SUCCESS("commands.globalpause.success"), // Set or got pause state
        @PowerNukkitOnly @Since("FUTURE") SETMAXPLAYERS_DESCRIPTION("commands.setmaxplayers.description"), // Sets the maximum number of players for this game session.
        @PowerNukkitOnly @Since("FUTURE") SETMAXPLAYERS_SUCCESS("commands.setmaxplayers.success"), // Set max players to %1$d.
        @PowerNukkitOnly @Since("FUTURE") SETMAXPLAYERS_SUCCESS_UPPERBOUND("commands.setmaxplayers.success.upperbound"), // (Bound to maximum allowed connections)
        @PowerNukkitOnly @Since("FUTURE") SETMAXPLAYERS_SUCCESS_LOWERBOUND("commands.setmaxplayers.success.lowerbound"), // (Bound to current player count)
        @PowerNukkitOnly @Since("FUTURE") SETWORLDSPAWN_DESCRIPTION("commands.setworldspawn.description"), // Sets the world spawn.
        @PowerNukkitOnly @Since("FUTURE") SETWORLDSPAWN_SUCCESS("commands.setworldspawn.success"), // Set the world spawn point to (%1$d, %2$d, %3$d)
        @PowerNukkitOnly @Since("FUTURE") SETWORLDSPAWN_WRONGDIMENSION("commands.setworldspawn.wrongDimension"), // The world spawn can not be set in this dimension
        @PowerNukkitOnly @Since("FUTURE") SETWORLDSPAWN_NOTALLOWEDINLEGACYWORLDS("commands.setworldspawn.notAllowedInLegacyWorlds"), // The world spawn can not be set in legacy worlds
        @PowerNukkitOnly @Since("FUTURE") SPAWNPOINT_SUCCESS_SINGLE("commands.spawnpoint.success.single"), // Set %1$s's spawn point to (%2$d, %3$d, %4$d)
        @PowerNukkitOnly @Since("FUTURE") SPAWNPOINT_DESCRIPTION("commands.spawnpoint.description"), // Sets the spawn point for a player.
        @PowerNukkitOnly @Since("FUTURE") SPAWNPOINT_SUCCESS_MULTIPLE_SPECIFIC("commands.spawnpoint.success.multiple.specific"), // Set spawn point for %1$s to (%2$d, %3$d, %4$d)
        @PowerNukkitOnly @Since("FUTURE") SPAWNPOINT_SUCCESS_MULTIPLE_GENERIC("commands.spawnpoint.success.multiple.generic"), // Set spawn point for %1$s
        @PowerNukkitOnly @Since("FUTURE") SPAWNPOINT_WRONGDIMENSION("commands.spawnpoint.wrongDimension"), // The spawn point cannot be set in this dimension
        @PowerNukkitOnly @Since("FUTURE") CLEARSPAWNPOINT_SUCCESS_SINGLE("commands.clearspawnpoint.success.single"), // Removed %1$s's spawn point
        @PowerNukkitOnly @Since("FUTURE") CLEARSPAWNPOINT_DESCRIPTION("commands.clearspawnpoint.description"), // Removes the spawn point for a player.
        @PowerNukkitOnly @Since("FUTURE") CLEARSPAWNPOINT_SUCCESS_MULTIPLE("commands.clearspawnpoint.success.multiple"), // Removed spawn points for %1$s
        @PowerNukkitOnly @Since("FUTURE") SPREADPLAYERS_DESCRIPTION("commands.spreadplayers.description"), // Teleports entities to random locations.
        @PowerNukkitOnly @Since("FUTURE") SPREADPLAYERS_FAILURE_PLAYERS("commands.spreadplayers.failure.players"), // Could not spread %1$s players around %2$s,%3$s (too many players for space - try using spread of at most %4$s)
        @PowerNukkitOnly @Since("FUTURE") SPREADPLAYERS_FAILURE_TEAMS("commands.spreadplayers.failure.teams"), // Could not spread %1$s teams around %2$s,%3$s (too many players for space - try using spread of at most %4$s)
        @PowerNukkitOnly @Since("FUTURE") SPREADPLAYERS_INFO_PLAYERS("commands.spreadplayers.info.players"), // (Average distance between players is %1$s blocks apart after %2$s iterations)
        @PowerNukkitOnly @Since("FUTURE") SPREADPLAYERS_INFO_TEAMS("commands.spreadplayers.info.teams"), // (Average distance between teams is %1$s blocks apart after %2$s iterations)
        @PowerNukkitOnly @Since("FUTURE") SPREADPLAYERS_SPREADING_PLAYERS("commands.spreadplayers.spreading.players"), // Spreading %1$s players %2$s blocks around %3$s,%4$s (min %5$s blocks apart)
        @PowerNukkitOnly @Since("FUTURE") SPREADPLAYERS_SPREADING_TEAMS("commands.spreadplayers.spreading.teams"), // Spreading %1$s teams %2$s blocks around %3$s,%4$s (min %5$s blocks apart)
        @PowerNukkitOnly @Since("FUTURE") SPREADPLAYERS_SUCCESS_PLAYERS("commands.spreadplayers.success.players"), // Successfully spread %1$s players around %2$s,%3$s
        @PowerNukkitOnly @Since("FUTURE") SPREADPLAYERS_SUCCESS_TEAMS("commands.spreadplayers.success.teams"), // Successfully spread %1$s teams around %2$s,%3$s
        @PowerNukkitOnly @Since("FUTURE") STATS_CLEARED("commands.stats.cleared"), // Cleared %1$s stats
        @PowerNukkitOnly @Since("FUTURE") STATS_FAILED("commands.stats.failed"), // Invalid parameters
        @PowerNukkitOnly @Since("FUTURE") STATS_NOCOMPATIBLEBLOCK("commands.stats.noCompatibleBlock"), // Block at %1$d, %2$d, %3$d can not track stats
        @PowerNukkitOnly @Since("FUTURE") STATS_SUCCESS("commands.stats.success"), // Storing %1$s stats in %2$s on %3$s
        @PowerNukkitOnly @Since("FUTURE") STOP_DESCRIPTION("commands.stop.description"), // Stops the server.
        @PowerNukkitOnly @Since("FUTURE") STOP_START("commands.stop.start"), // Stopping the server
        @PowerNukkitOnly @Since("FUTURE") STOPSOUND_DESCRIPTION("commands.stopsound.description"), // Stops a sound.
        @PowerNukkitOnly @Since("FUTURE") STOPSOUND_SUCCESS("commands.stopsound.success"), // Stopped sound %s for %s
        @PowerNukkitOnly @Since("FUTURE") STOPSOUND_SUCCESS_ALL("commands.stopsound.success.all"), // Stopped all sounds for %s
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_DESCRIPTION("commands.structure.description"), // Saves or loads a structure in the world.
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_EMPTY_LOAD("commands.structure.empty.load"), // Can't load a structure with no entities and no blocks
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_EMPTY_SAVE("commands.structure.empty.save"), // Can't save a structure with no entities and no blocks
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_INVALID_ANIMATIONTIME("commands.structure.invalid.animationTime"), // Animation time must be 0 or higher
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_INVALID_INTEGRITY("commands.structure.invalid.integrity"), // Integrity must be in the range of 0 to 100
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_INVALID_NAME("commands.structure.invalid.name"), // Name should be in the format of "name" or "namespace:name". If not namespace is provided, the default one will be assigned.
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_LOAD_SUCCESS("commands.structure.load.success"), // Loaded a structure of name %s
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_LOAD_QUEUED("commands.structure.load.queued"), // A placement request has been queued and it will be executed when the specified area is fully loaded.
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_NOTFOUND("commands.structure.notFound"), // The structure %s can't be found. Make sure the name was spelled correctly and try again.
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_SAVE_SUCCESS("commands.structure.save.success"), // Saved a structure with name %s
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_SIZE_TOOBIG("commands.structure.size.tooBig"), // A structure's size cannot be larger than (%1$d, %2$d, %3$d), it was (%4$d, %5$d, %6$d)
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_SIZE_TOOSMALL("commands.structure.size.tooSmall"), // A structure's size cannot be smaller than (%1$d, %2$d, %3$d), it was (%4$d, %5$d, %6$d)
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_UNKNOWN_ACTION("commands.structure.unknown.action"), // Unknown structure action provided
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_UNLOADEDCHUNKS("commands.structure.unloadedChunks"), // The feature to load a structure in an unloaded area hasn't been implemented yet
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_Y_TOOHIGH("commands.structure.y.tooHigh"), // Cannot place blocks outside of the world. Try a value of %d or lower for the Y component of <to: x y z>.
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_Y_TOOLOW("commands.structure.y.tooLow"), // Cannot place blocks outside of the world. Try a value greater than 0 for the Y component of <to: x y z>.
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_DELETE_SUCCESS("commands.structure.delete.success"), // Structure %s deleted.
        @PowerNukkitOnly @Since("FUTURE") SUMMON_DESCRIPTION("commands.summon.description"), // Summons an entity.
        @PowerNukkitOnly @Since("FUTURE") SUMMON_FAILED("commands.summon.failed"), // Unable to summon object
        @PowerNukkitOnly @Since("FUTURE") SUMMON_OUTOFWORLD("commands.summon.outOfWorld"), // Cannot summon the object out of the world
        @PowerNukkitOnly @Since("FUTURE") SUMMON_SUCCESS("commands.summon.success"), // Object successfully summoned
        @PowerNukkitOnly @Since("FUTURE") SUMMON_TAGERROR("commands.summon.tagError"), // Data tag parsing failed: %1$s
        @PowerNukkitOnly @Since("FUTURE") TAG_DESCRIPTION("commands.tag.description"), // Manages tags stored in entities.
        @PowerNukkitOnly @Since("FUTURE") TAG_ADD_FAILED("commands.tag.add.failed"), // Target either already has the tag or has too many tags
        @PowerNukkitOnly @Since("FUTURE") TAG_ADD_SUCCESS_SINGLE("commands.tag.add.success.single"), // Added tag '%1$s' to %2$s														##1: Tag string   ##2: Entity/Player/Item name
        @PowerNukkitOnly @Since("FUTURE") TAG_ADD_SUCCESS_MULTIPLE("commands.tag.add.success.multiple"), // Added tag '%1$s' to %2$d entities												##1: Tag string   ##2: Number of entities (numerals)
        @PowerNukkitOnly @Since("FUTURE") TAG_LIST_SINGLE_EMPTY("commands.tag.list.single.empty"), // %s has no tags																	##1: Entity/Player/Item name
        @PowerNukkitOnly @Since("FUTURE") TAG_LIST_SINGLE_SUCCESS("commands.tag.list.single.success"), // %1$s has %2$d tags: %3$s														##1: Entity/Player/Item name   ##2: Number of tags   ##3: Comma separated list of tags
        @PowerNukkitOnly @Since("FUTURE") TAG_LIST_MULTIPLE_EMPTY("commands.tag.list.multiple.empty"), // There are no tags on the %d entities											##1: Number of entities matching the selector
        @PowerNukkitOnly @Since("FUTURE") TAG_LIST_MULTIPLE_SUCCESS("commands.tag.list.multiple.success"), // The %1$d entities have %2$d total tags: %3$s									##1: Number of entities matching the selector   ##2: Number of tags   ##3: Comma separated list of tags
        @PowerNukkitOnly @Since("FUTURE") TAG_REMOVE_FAILED("commands.tag.remove.failed"), // Target does not have this tag
        @PowerNukkitOnly @Since("FUTURE") TAG_REMOVE_SUCCESS_SINGLE("commands.tag.remove.success.single"), // Removed tag '%1$s' from %2$s													##1: Tag string   ##2: Entity/Player/Item name
        @PowerNukkitOnly @Since("FUTURE") TAG_REMOVE_SUCCESS_MULTIPLE("commands.tag.remove.success.multiple"), // Removed tag '%1$s' from %2$d entities										##1: Tag string   ##2: Number of selector matches
        @PowerNukkitOnly @Since("FUTURE") TELL_DESCRIPTION("commands.tell.description"), // Sends a private message to one or more players.
        @PowerNukkitOnly @Since("FUTURE") TELLRAW_DESCRIPTION("commands.tellraw.description"), // Sends a JSON message to players.
        @PowerNukkitOnly @Since("FUTURE") TELLRAW_JSONEXCEPTION("commands.tellraw.jsonException"), // Invalid json: %1$s
        @PowerNukkitOnly @Since("FUTURE") TELLRAW_JSONSTRINGEXCEPTION("commands.tellraw.jsonStringException"), // Invalid json string data.
        @PowerNukkitOnly @Since("FUTURE") TELLRAW_ERROR_NODATA("commands.tellraw.error.noData"), // No data was provided.
        @PowerNukkitOnly @Since("FUTURE") TELLRAW_ERROR_NOTARRAY("commands.tellraw.error.notArray"), // Rawtext object must contain an array. Example: "rawtext":[{..}]
        @PowerNukkitOnly @Since("FUTURE") TELLRAW_ERROR_TEXTNOTSTRING("commands.tellraw.error.textNotString"), // text field in rawtext must contain a string. Example: "rawtext":[{"text": "text to display"}]
        @PowerNukkitOnly @Since("FUTURE") TELLRAW_ERROR_TRANSLATENOTSTRING("commands.tellraw.error.translateNotString"), // translate field in rawtext must contain a language key. Example: "rawtext":[{"translate": "gui.ok"}]
        @PowerNukkitOnly @Since("FUTURE") TELLRAW_ERROR_SELECTORNOTSTRING("commands.tellraw.error.selectorNotString"), // selector field in rawtext must contain a selector as a string. Example: "rawtext":[{"selector": "@e"}]
        @PowerNukkitOnly @Since("FUTURE") TELLRAW_ERROR_SCORENOTOBJECT("commands.tellraw.error.scoreNotObject"), // score field in rawtext must contain an object. Example "rawtext":[{"score": {"name": "my_name", "objective": "my_objective"}}]
        @PowerNukkitOnly @Since("FUTURE") TELLRAW_ERROR_SCORENAMENOTSTRING("commands.tellraw.error.scoreNameNotString"), // name field in the score field must be a string. Example "rawtext":[{"score": {"name": "my_name", "objective": "my_objective"}}]
        @PowerNukkitOnly @Since("FUTURE") TELLRAW_ERROR_SCOREOBJECTIVENOTSTRING("commands.tellraw.error.scoreObjectiveNotString"), // objective field in the score field must be a string. Example "rawtext":[{"score": {"name": "my_name", "objective": "my_objective"}}]
        @PowerNukkitOnly @Since("FUTURE") TELLRAW_ERROR_WITHNOTARRAYORRAWTEXT("commands.tellraw.error.withNotArrayOrRawText"), // with field in rawtext must contain a array or another rawtext object. Example 1: "rawtext":[{"translate": "chat.type.announcement", "with": [ "value1", "value2" ]}]  Example 2: "rawtext":[{"translate": "chat.type.announcement", "with":{"rawtext":[{"text": "value1"}, {"text": "value2"}]}}]
        @PowerNukkitOnly @Since("FUTURE") TELLRAW_ERROR_ITEMISNOTOBJECT("commands.tellraw.error.itemIsNotObject"), // Json value in rawtext array was not an object. Example: "rawtext": [{ "text" : "my text" }]
        @PowerNukkitOnly @Since("FUTURE") EDUCLIENTINFO_DESCRIPTION("commands.educlientinfo.description"), // Get tenant ID and host status. Intended for CM.
        @PowerNukkitOnly @Since("FUTURE") TESTFOR_DESCRIPTION("commands.testfor.description"), // Counts entities (players, mobs, items, etc.) matching specified conditions.
        @PowerNukkitOnly @Since("FUTURE") TESTFOR_FAILURE("commands.testfor.failure"), // %1$s did not match the required data structure
        @PowerNukkitOnly @Since("FUTURE") TESTFOR_SUCCESS("commands.testfor.success"), // Found %1$s
        @PowerNukkitOnly @Since("FUTURE") TESTFOR_TAGERROR("commands.testfor.tagError"), // Data tag parsing failed: %1$s
        @PowerNukkitOnly @Since("FUTURE") TESTFORBLOCK_DESCRIPTION("commands.testforblock.description"), // Tests whether a certain block is in a specific location.
        @PowerNukkitOnly @Since("FUTURE") TESTFORBLOCK_FAILED_DATA("commands.testforblock.failed.data"), // The block at %1$d,%2$d,%3$d did not match the expected block state.
        @PowerNukkitOnly @Since("FUTURE") TESTFORBLOCK_FAILED_NBT("commands.testforblock.failed.nbt"), // The block at %1$d,%2$d,%3$d did not have the required NBT keys.
        @PowerNukkitOnly @Since("FUTURE") TESTFORBLOCK_FAILED_TILE("commands.testforblock.failed.tile"), // The block at %1$d,%2$d,%3$d is %4$s (expected: %5$s).
        @PowerNukkitOnly @Since("FUTURE") TESTFORBLOCK_FAILED_TILEENTITY("commands.testforblock.failed.tileEntity"), // The block at %1$d,%2$d,%3$d is not a tile entity and cannot support tag matching.
        @PowerNukkitOnly @Since("FUTURE") TESTFORBLOCK_OUTOFWORLD("commands.testforblock.outOfWorld"), // Cannot test for block outside of the world
        @PowerNukkitOnly @Since("FUTURE") TESTFORBLOCK_SUCCESS("commands.testforblock.success"), // Successfully found the block at %1$d,%2$d,%3$d.
        @PowerNukkitOnly @Since("FUTURE") TESTFORBLOCKS_DESCRIPTION("commands.testforblocks.description"), // Tests whether the blocks in two regions match.
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_DESCRIPTION("commands.tickingarea.description"), // Add, remove, or list ticking areas.
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_INUSE("commands.tickingarea.inuse"), // %1$d/%2$d ticking areas in use.
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_NONEEXIST_CURRENTDIMENSION("commands.tickingarea.noneExist.currentDimension"), // No ticking areas exist in the current dimension.
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_ADD_BOUNDS_SUCCESS("commands.tickingarea-add-bounds.success"), // Added ticking area from %1$d to %2$d.
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_ADD_CIRCLE_SUCCESS("commands.tickingarea-add-circle.success"), // Added ticking area centered at %1$d with a radius of %2$d chunks.
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_ADD_FAILURE("commands.tickingarea-add.failure"), // Max number of ticking areas (%1$d) has already been reached. Cannot add more ticking areas.
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_ADD_CONFLICTINGNAME("commands.tickingarea-add.conflictingname"), // A ticking area with the name %1$s already exists.
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_ADD_CHUNKFAILURE("commands.tickingarea-add.chunkfailure"), // Ticking area contains more than %1$d chunks, ticking area is too large and cannot be created.
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_ADD_RADIUSFAILURE("commands.tickingarea-add.radiusfailure"), // Radius cannot be larger than %1$d, ticking area is too large and cannot be created.
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_REMOVE_SUCCESS("commands.tickingarea-remove.success"), // Removed ticking area(s)
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_REMOVE_FAILURE("commands.tickingarea-remove.failure"), // No ticking areas containing the block position %1$d exist in the current dimension.
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_REMOVE_BYNAME_FAILURE("commands.tickingarea-remove.byname.failure"), // No ticking areas named %1$s exist in the current dimension.
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_REMOVE_ALL_SUCCESS("commands.tickingarea-remove_all.success"), // Removed ticking area(s)
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_REMOVE_ALL_FAILURE("commands.tickingarea-remove_all.failure"), // No ticking areas exist in the current dimension.
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_LIST_CHUNKS("commands.tickingarea-list.chunks"), // chunks ## Meaning a chunk of the world.
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_LIST_CIRCLE_RADIUS("commands.tickingarea-list.circle.radius"), // Radius
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_LIST_SUCCESS_CURRENTDIMENSION("commands.tickingarea-list.success.currentDimension"), // List of all ticking areas in current dimension
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_LIST_SUCCESS_ALLDIMENSIONS("commands.tickingarea-list.success.allDimensions"), // List of all ticking areas in all dimensions
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_LIST_FAILURE_ALLDIMENSIONS("commands.tickingarea-list.failure.allDimensions"), // No ticking areas exist in any dimension.
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_LIST_TO("commands.tickingarea-list.to"), // to	## Used in the context of "from position to other position"
        @PowerNukkitOnly @Since("FUTURE") TICKINGAREA_LIST_TYPE_CIRCLE("commands.tickingarea-list.type.circle"), // Circle
        @PowerNukkitOnly @Since("FUTURE") TIME_ADDED("commands.time.added"), // Added %1$d to the time
        @PowerNukkitOnly @Since("FUTURE") TIME_DESCRIPTION("commands.time.description"), // Changes or queries the world's game time.
        @PowerNukkitOnly @Since("FUTURE") TIME_DISABLED("commands.time.disabled"), // Always Day is enabled in this level.
        @PowerNukkitOnly @Since("FUTURE") TIME_QUERY_DAY("commands.time.query.day"), // Day is %d
        @PowerNukkitOnly @Since("FUTURE") TIME_QUERY_DAYTIME("commands.time.query.daytime"), // Daytime is %d
        @PowerNukkitOnly @Since("FUTURE") TIME_QUERY_GAMETIME("commands.time.query.gametime"), // Gametime is %d
        @PowerNukkitOnly @Since("FUTURE") TIME_SET("commands.time.set"), // Set the time to %1$d
        @PowerNukkitOnly @Since("FUTURE") TIME_STOP("commands.time.stop"), // Time %1$s
        @PowerNukkitOnly @Since("FUTURE") TITLE_DESCRIPTION("commands.title.description"), // Controls screen titles.
        @PowerNukkitOnly @Since("FUTURE") TITLE_SUCCESS("commands.title.success"), // Title command successfully executed
        @PowerNukkitOnly @Since("FUTURE") TITLERAW_DESCRIPTION("commands.titleraw.description"), // Controls screen titles with JSON messages.
        @PowerNukkitOnly @Since("FUTURE") TITLERAW_SUCCESS("commands.titleraw.success"), // Titleraw command successfully executed
        @PowerNukkitOnly @Since("FUTURE") TOGGLEDOWNFALL_DESCRIPTION("commands.toggledownfall.description"), // Toggles the weather.
        @PowerNukkitOnly @Since("FUTURE") TP_DESCRIPTION("commands.tp.description"), // Teleports entities (players, mobs, etc.).
        @PowerNukkitOnly @Since("FUTURE") TP_NOTSAMEDIMENSION("commands.tp.notSameDimension"), // Unable to teleport because players are not in the same dimension
        @PowerNukkitOnly @Since("FUTURE") TP_OUTOFWORLD("commands.tp.outOfWorld"), // Cannot teleport entities outside of the world
        @PowerNukkitOnly @Since("FUTURE") TP_PERMISSION("commands.tp.permission"), // You do not have permission to use this slash command.
        @PowerNukkitOnly @Since("FUTURE") TP_SAFETELEPORTFAIL("commands.tp.safeTeleportFail"), // Unable to teleport %1$s to %2$s because the area wasn't clear of blocks.
        @PowerNukkitOnly @Since("FUTURE") TP_FAR("commands.tp.far"), // Unable to teleport %1$s to the unloaded area at %2$s
        @PowerNukkitOnly @Since("FUTURE") TP_SUCCESS("commands.tp.success"), // Teleported %1$s to %2$s
        @PowerNukkitOnly @Since("FUTURE") TP_SUCCESSVICTIM("commands.tp.successVictim"), // You have been teleported to %1$s
        @PowerNukkitOnly @Since("FUTURE") TP_SUCCESS_COORDINATES("commands.tp.success.coordinates"), // Teleported %1$s to %2$s, %3$s, %4$s
        @PowerNukkitOnly @Since("FUTURE") TRANSFERSERVER_DESCRIPTION("commands.transferserver.description"), // Transfers a player to another server.
        @PowerNukkitOnly @Since("FUTURE") TRANSFERSERVER_SUCCESSFUL("commands.transferserver.successful"), // Transferred player
        @PowerNukkitOnly @Since("FUTURE") TRANSFERSERVER_INVALID_PORT("commands.transferserver.invalid.port"), // Invalid port (0-65535)
        @PowerNukkitOnly @Since("FUTURE") TRIGGER_DESCRIPTION("commands.trigger.description"), // Sets a trigger to be activated.
        @PowerNukkitOnly @Since("FUTURE") TRIGGER_DISABLED("commands.trigger.disabled"), // Trigger %1$s is not enabled
        @PowerNukkitOnly @Since("FUTURE") TRIGGER_INVALIDMODE("commands.trigger.invalidMode"), // Invalid trigger mode %1$s
        @PowerNukkitOnly @Since("FUTURE") TRIGGER_INVALIDOBJECTIVE("commands.trigger.invalidObjective"), // Invalid trigger name %1$s
        @PowerNukkitOnly @Since("FUTURE") TRIGGER_INVALIDPLAYER("commands.trigger.invalidPlayer"), // Only players can use the /trigger command
        @PowerNukkitOnly @Since("FUTURE") TRIGGER_SUCCESS("commands.trigger.success"), // Trigger %1$s changed with %2$s %3$s
        @PowerNukkitOnly @Since("FUTURE") UNBAN_FAILED("commands.unban.failed"), // Could not unban player %1$s
        @PowerNukkitOnly @Since("FUTURE") UNBAN_SUCCESS("commands.unban.success"), // Unbanned player %1$s
        @PowerNukkitOnly @Since("FUTURE") UNBANIP_INVALID("commands.unbanip.invalid"), // You have entered an invalid IP address
        @PowerNukkitOnly @Since("FUTURE") UNBANIP_SUCCESS("commands.unbanip.success"), // Unbanned IP address %1$s
        @PowerNukkitOnly @Since("FUTURE") VALIDATEGAMELIGHTING_DESCRIPTION("commands.validategamelighting.description"), // Validate game lighting for a specified region
        @PowerNukkitOnly @Since("FUTURE") VALIDATEGAMELIGHTING_CHECKREGIONTOOBIG("commands.validategamelighting.checkRegionTooBig"), // Region to check for lighting is too big! (%1$d > %2$d)
        @PowerNukkitOnly @Since("FUTURE") VALIDATEGAMELIGHTING_OUTOFWORLD("commands.validategamelighting.outOfWorld"), // Cannot check lighting outside of the world
        @PowerNukkitOnly @Since("FUTURE") WEATHER_CLEAR("commands.weather.clear"), // Changing to clear weather
        @PowerNukkitOnly @Since("FUTURE") WEATHER_DESCRIPTION("commands.weather.description"), // Sets the weather.
        @PowerNukkitOnly @Since("FUTURE") WEATHER_DISABLED("commands.weather.disabled"), // Weather Cycle isn't enabled in this level.
        @PowerNukkitOnly @Since("FUTURE") WEATHER_QUERY("commands.weather.query"), // Weather state is: %s
        @PowerNukkitOnly @Since("FUTURE") WEATHER_QUERY_CLEAR("commands.weather.query.clear"), // clear
        @PowerNukkitOnly @Since("FUTURE") WEATHER_QUERY_RAIN("commands.weather.query.rain"), // rain
        @PowerNukkitOnly @Since("FUTURE") WEATHER_QUERY_THUNDER("commands.weather.query.thunder"), // thunder
        @PowerNukkitOnly @Since("FUTURE") WEATHER_RAIN("commands.weather.rain"), // Changing to rainy weather
        @PowerNukkitOnly @Since("FUTURE") WEATHER_THUNDER("commands.weather.thunder"), // Changing to rain and thunder
        @PowerNukkitOnly @Since("FUTURE") WHITELIST_ADD_FAILED("commands.whitelist.add.failed"), // Could not add %1$s to the whitelist
        @PowerNukkitOnly @Since("FUTURE") WHITELIST_ADD_SUCCESS("commands.whitelist.add.success"), // Added %1$s to the whitelist
        @PowerNukkitOnly @Since("FUTURE") WHITELIST_DESCRIPTION("commands.whitelist.description"), // Manages the server whitelist.
        @PowerNukkitOnly @Since("FUTURE") WHITELIST_DISABLED("commands.whitelist.disabled"), // Turned off the whitelist
        @PowerNukkitOnly @Since("FUTURE") WHITELIST_ENABLED("commands.whitelist.enabled"), // Turned on the whitelist
        @PowerNukkitOnly @Since("FUTURE") WHITELIST_LIST("commands.whitelist.list"), // There are %1$d (out of %2$d seen) whitelisted players:
        @PowerNukkitOnly @Since("FUTURE") WHITELIST_RELOADED("commands.whitelist.reloaded"), // Whitelist reloaded from file.
        @PowerNukkitOnly @Since("FUTURE") WHITELIST_REMOVE_FAILED("commands.whitelist.remove.failed"), // Could not remove %1$s from the whitelist
        @PowerNukkitOnly @Since("FUTURE") WHITELIST_REMOVE_SUCCESS("commands.whitelist.remove.success"), // Removed %1$s from the whitelist
        @PowerNukkitOnly @Since("FUTURE") WORLD_AGE_DESCRIPTION("commands.world_age.description"), // Changes or queries the world's age (time since creation).
        @PowerNukkitOnly @Since("FUTURE") WORLD_AGE_ADDED("commands.world_age.added"), // Added %1$d to the world's age
        @PowerNukkitOnly @Since("FUTURE") WORLD_AGE_QUERY("commands.world_age.query"), // World age is %d
        @PowerNukkitOnly @Since("FUTURE") WORLD_AGE_SET("commands.world_age.set"), // Set the world's age to %1$d
        @PowerNukkitOnly @Since("FUTURE") WORLDBORDER_CENTER_SUCCESS("commands.worldborder.center.success"), // Set world border center to %1$s,%2$s
        @PowerNukkitOnly @Since("FUTURE") WORLDBORDER_DAMAGE_AMOUNT_SUCCESS("commands.worldborder.damage.amount.success"), // Set world border damage amount to %1$s per block (from %2$s per block)
        @PowerNukkitOnly @Since("FUTURE") WORLDBORDER_DAMAGE_BUFFER_SUCCESS("commands.worldborder.damage.buffer.success"), // Set world border damage buffer to %1$s blocks (from %2$s blocks)
        @PowerNukkitOnly @Since("FUTURE") WORLDBORDER_GET_SUCCESS("commands.worldborder.get.success"), // World border is currently %1$s blocks wide
        @PowerNukkitOnly @Since("FUTURE") WORLDBORDER_SET_SUCCESS("commands.worldborder.set.success"), // Set world border to %1$s blocks wide (from %2$s blocks)
        @PowerNukkitOnly @Since("FUTURE") WORLDBORDER_SETSLOWLY_GROW_SUCCESS("commands.worldborder.setSlowly.grow.success"), // Growing world border to %1$s blocks wide (up from %2$s blocks) over %3$s seconds
        @PowerNukkitOnly @Since("FUTURE") WORLDBORDER_SETSLOWLY_SHRINK_SUCCESS("commands.worldborder.setSlowly.shrink.success"), // Shrinking world border to %1$s blocks wide (down from %2$s blocks) over %3$s seconds
        @PowerNukkitOnly @Since("FUTURE") WORLDBORDER_WARNING_DISTANCE_SUCCESS("commands.worldborder.warning.distance.success"), // Set world border warning to %1$s blocks away (from %2$s blocks)
        @PowerNukkitOnly @Since("FUTURE") WORLDBORDER_WARNING_TIME_SUCCESS("commands.worldborder.warning.time.success"), // Set world border warning to %1$s seconds away (from %2$s seconds)
        @PowerNukkitOnly @Since("FUTURE") WORLDBUILDER_DESCRIPTION("commands.worldbuilder.description"), // Toggle World Builder status of caller.
        @PowerNukkitOnly @Since("FUTURE") WORLDBUILDER_SUCCESS("commands.worldbuilder.success"), // World Builder status updated to %1$s
        @PowerNukkitOnly @Since("FUTURE") WSSERVER_DESCRIPTION("commands.wsserver.description"), // Attempts to connect to the websocket server on the provided URL.
        @PowerNukkitOnly @Since("FUTURE") WSSERVER_INVALID_URL("commands.wsserver.invalid.url"), // The provided server URL is invalid
        @PowerNukkitOnly @Since("FUTURE") WSSERVER_REQUEST_EXISTING("commands.wsserver.request.existing"), // Another connection request is currently running
        @PowerNukkitOnly @Since("FUTURE") WSSERVER_REQUEST_FAILED("commands.wsserver.request.failed"), // Could not connect to server: %1$s
        @PowerNukkitOnly @Since("FUTURE") WSSERVER_SUCCESS("commands.wsserver.success"), // Connection established to server: %1$s
        @PowerNukkitOnly @Since("FUTURE") XP_DESCRIPTION("commands.xp.description"), // Adds or removes player experience.
        @PowerNukkitOnly @Since("FUTURE") XP_FAILURE_WIDTHDRAWXP("commands.xp.failure.widthdrawXp"), // Cannot give player negative experience points
        @PowerNukkitOnly @Since("FUTURE") XP_SUCCESS("commands.xp.success"), // Gave %1$d experience to %2$s
        @PowerNukkitOnly @Since("FUTURE") XP_SUCCESS_LEVELS("commands.xp.success.levels"), // Gave %1$d levels to %2$s
        @PowerNukkitOnly @Since("FUTURE") XP_SUCCESS_NEGATIVE_LEVELS("commands.xp.success.negative.levels"), // Taken %1$d levels from %2$s
        ;
        private final String code; Commands(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Command implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") PERMISSIONS_LIST_FAIL_FILENOTFOUND("command.permissions.list.fail.filenotfound"), // Failed to list permissions from file, file not found.
        @PowerNukkitOnly @Since("FUTURE") PERMISSIONS_RELOAD_FAIL_FILENOTFOUND("command.permissions.reload.fail.filenotfound"), // Failed to reload permissions from file, file not found.
        ;
        private final String code; Command(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Connect implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") AUTHORIZING("connect.authorizing"), // Logging in...
        @PowerNukkitOnly @Since("FUTURE") CONNECTING("connect.connecting"), // Connecting to the server...
        @PowerNukkitOnly @Since("FUTURE") FAILED("connect.failed"), // Failed to connect to the server
        ;
        private final String code; Connect(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum ConnectGamepad implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") WARNING_CONTROLLERREQUIRED("connect_gamepad.warning.controllerRequired"), // Game controller required
        @PowerNukkitOnly @Since("FUTURE") PRESSBUTTONTOCONTINUE("connect_gamepad.pressButtonToContinue"), // Please press the 'A' button on your controller to continue
        ;
        private final String code; ConnectGamepad(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum GamepadDisconnect implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") RECONNECTCONTROLLER("gamepad_disconnect.reconnectController"), // Your controller has lost connection.  Please reconnect your controller to continue.
        @PowerNukkitOnly @Since("FUTURE") DISCONNECT("gamepad_disconnect"), // Controller lost connection
        ;
        private final String code; GamepadDisconnect(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Container implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") BEACON("container.beacon"), // Beacon
        @PowerNukkitOnly @Since("FUTURE") BREWING("container.brewing"), // Brewing Stand
        @PowerNukkitOnly @Since("FUTURE") CHEST("container.chest"), // Chest
        @PowerNukkitOnly @Since("FUTURE") CHESTDOUBLE("container.chestDouble"), // Large Chest
        @PowerNukkitOnly @Since("FUTURE") CRAFTING("container.crafting"), // Crafting
        @PowerNukkitOnly @Since("FUTURE") CREATIVE("container.creative"), // Item Selection
        @PowerNukkitOnly @Since("FUTURE") DISPENSER("container.dispenser"), // Dispenser
        @PowerNukkitOnly @Since("FUTURE") DROPPER("container.dropper"), // Dropper
        @PowerNukkitOnly @Since("FUTURE") ENCHANT("container.enchant"), // Enchant
        @PowerNukkitOnly @Since("FUTURE") ENCHANT_CLUE("container.enchant.clue"), // %s . . . ?
        @PowerNukkitOnly @Since("FUTURE") ENCHANT_LEVELREQUIREMENT("container.enchant.levelrequirement"), // Level Requirement: %d
        @PowerNukkitOnly @Since("FUTURE") ENCHANT_LAPIS_MANY("container.enchant.lapis.many"), // %d Lapis Lazuli
        @PowerNukkitOnly @Since("FUTURE") ENCHANT_LAPIS_ONE("container.enchant.lapis.one"), // 1 Lapis Lazuli
        @PowerNukkitOnly @Since("FUTURE") ENCHANT_LEVEL_MANY("container.enchant.level.many"), // %d Enchantment Levels
        @PowerNukkitOnly @Since("FUTURE") ENCHANT_LEVEL_ONE("container.enchant.level.one"), // 1 Enchantment Level
        @PowerNukkitOnly @Since("FUTURE") ENDERCHEST("container.enderchest"), // Ender Chest
        @PowerNukkitOnly @Since("FUTURE") FURNACE("container.furnace"), // Furnace
        @PowerNukkitOnly @Since("FUTURE") HOPPER("container.hopper"), // Item Hopper
        @PowerNukkitOnly @Since("FUTURE") INVENTORY("container.inventory"), // Inventory
        @PowerNukkitOnly @Since("FUTURE") ISLOCKED("container.isLocked"), // %s is locked!
        @PowerNukkitOnly @Since("FUTURE") LOOM("container.loom"), // Loom
        @PowerNukkitOnly @Since("FUTURE") MINECART("container.minecart"), // Minecart
        @PowerNukkitOnly @Since("FUTURE") REPAIR("container.repair"), // Repair & Name
        @PowerNukkitOnly @Since("FUTURE") REPAIR_COST("container.repair.cost"), // Enchantment Cost: %1$d
        @PowerNukkitOnly @Since("FUTURE") REPAIR_EXPENSIVE("container.repair.expensive"), // Too Expensive!
        @PowerNukkitOnly @Since("FUTURE") REPAIRANDDISENCHANT("container.repairAndDisenchant"), // Repair & Disenchant
        @PowerNukkitOnly @Since("FUTURE") STONECUTTER("container.stonecutter"), // Stonecutter
        @PowerNukkitOnly @Since("FUTURE") STONECUTTER_BLOCK("container.stonecutter_block"), // Stonecutter
        @PowerNukkitOnly @Since("FUTURE") SMITHING_TABLE("container.smithing_table"), // Smithing Table
        @PowerNukkitOnly @Since("FUTURE") SMITHING_TABLE_BLOCK("container.smithing_table_block"), // Smithing Table
        @PowerNukkitOnly @Since("FUTURE") SMITHING_TABLE_UPGRADE("container.smithing_table.upgrade"), // Upgrade Gear
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOX("container.shulkerbox"), // Shulker Box
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXCONTAINS("container.shulkerboxContains"), // and %d more...
        @PowerNukkitOnly @Since("FUTURE") BARREL("container.barrel"), // Barrel
        ;
        private final String code; Container(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Controller implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_ADDITEM("controller.buttonTip.addItem"), // Add Item
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_ADDITEMSTACK("controller.buttonTip.addItemStack"), // Add Item Stack
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_ADJUSTSLIDER("controller.buttonTip.adjustSlider"), // Left/right Adjust Slider
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_BACK("controller.buttonTip.back"), // Back
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_BACKTOANVIL("controller.buttonTip.backToAnvil"), // Back to Anvil
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_BACKTOBREWING("controller.buttonTip.backToBrewing"), // Back to Brewing
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_BACKTOENCHANTING("controller.buttonTip.backToEnchanting"), // Back to Enchanting
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_BACKTOFURNACE("controller.buttonTip.backToFurnace"), // Back to Furnace
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_CANCEL("controller.buttonTip.cancel"), // Cancel
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_CLEARSEARCH("controller.buttonTip.clearSearch"), // Clear Search
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_CLEARQUICKSELECT("controller.buttonTip.clearQuickSelect"), // Clear Quick Select
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_CRAFT("controller.buttonTip.craft"), // Craft
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_CRAFTALL("controller.buttonTip.craftAll"), // Craft All
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_CRAFTONE("controller.buttonTip.craftOne"), // Craft One
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_CRAFTSTACK("controller.buttonTip.craftStack"), // Craft Stack
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_CRAFTTAKE("controller.buttonTip.craftTake"), // Craft & Take
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_DROP("controller.buttonTip.drop"), // Drop
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_EDIT("controller.buttonTip.edit"), // Edit
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_ENTERMESSAGE("controller.buttonTip.enterMessage"), // Enter Message
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_EXIT("controller.buttonTip.exit"), // Exit
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_EXTERNAL("controller.buttonTip.external"), // External
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_LEVEL("controller.buttonTip.level"), // Level
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_NEW("controller.buttonTip.new"), // New
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_OPENRECIPEBOOK("controller.buttonTip.openRecipeBook"), // Open Recipe Book
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_PANE_INVENTORY("controller.buttonTip.pane.inventory"), // Inventory
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_PANE_RECIPEBOOK("controller.buttonTip.pane.recipeBook"), // Recipe Book
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_PLACE_ONE("controller.buttonTip.place.one"), // Place One
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_PLACE("controller.buttonTip.place"), // Place
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_QUICK_MOVE("controller.buttonTip.quick.move"), // Quick Move
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_RECIPES_SHOWALL("controller.buttonTip.recipes.showAll"), // Show All
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_RECIPES_SHOWCRAFTABLE("controller.buttonTip.recipes.showCraftable"), // Show Craftable
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_REMOVE("controller.buttonTip.remove"), // Remove
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_REMOVEFUEL("controller.buttonTip.removeFuel"), // Remove Fuel
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_REMOVEFUELINPUT("controller.buttonTip.removeFuelInput"), // Remove Fuel/Input
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_REMOVEINPUT("controller.buttonTip.removeInput"), // Remove Input
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_REMOVEMATERIAL("controller.buttonTip.removeMaterial"), // Remove Material
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_RENAMEITEM("controller.buttonTip.renameItem"), // Rename Item
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_RETURNTORECIPE("controller.buttonTip.returnToRecipe"), // Return To Recipe
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_ENTERSEARCH("controller.buttonTip.enterSearch"), // Search
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_SEARCHRECIPE("controller.buttonTip.searchRecipe"), // Quick Search
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_CONFIRMSEARCH("controller.buttonTip.confirmSearch"), // Confirm
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_SELECT_ENCHANT("controller.buttonTip.select.enchant"), // Select Enchant
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_SELECT_ITEM("controller.buttonTip.select.item"), // Select Item
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_SELECT_SLOT("controller.buttonTip.select.slot"), // Select Slot
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_SELECT("controller.buttonTip.select"), // Select
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_SELECTRECIPE("controller.buttonTip.selectRecipe"), // Select Recipe
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_DESELECTRECIPE("controller.buttonTip.deselectRecipe"), // Deselect Recipe
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_CLEARRECIPE("controller.buttonTip.clearRecipe"), // Clear Recipe
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_TAB("controller.buttonTip.tab"), // Tab
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_TAKE_HALF("controller.buttonTip.take.half"), // Take Half
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_TAKE_ONE("controller.buttonTip.take.one"), // Take One
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_TAKE("controller.buttonTip.take"), // Take
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_TAKEITEM("controller.buttonTip.takeItem"), // Take Item
        @PowerNukkitOnly @Since("FUTURE") BUTTONTIP_CLEARHOTBAR("controller.buttonTip.clearHotbar"), // Clear Hotbar
        ;
        private final String code; Controller(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum ControllerLayoutScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ACTIONS("controllerLayoutScreen.actions"), // Actions
        @PowerNukkitOnly @Since("FUTURE") ACTIVEBINDINGNAMEFORMAT("controllerLayoutScreen.activeBindingNameFormat"), // > %s <
        @PowerNukkitOnly @Since("FUTURE") BINDINGS("controllerLayoutScreen.bindings"), // Bindings
        @PowerNukkitOnly @Since("FUTURE") RESETALLBINDINGS("controllerLayoutScreen.resetAllBindings"), // Default Settings
        @PowerNukkitOnly @Since("FUTURE") BUTTON("controllerLayoutScreen.button"), // Button
        @PowerNukkitOnly @Since("FUTURE") CANCEL("controllerLayoutScreen.cancel"), // Cancel
        @PowerNukkitOnly @Since("FUTURE") CONFIRMATION_RESET("controllerLayoutScreen.confirmation.reset"), // Do you really want to reset the settings?
        @PowerNukkitOnly @Since("FUTURE") CONFIRMATION_UNASSIGNED("controllerLayoutScreen.confirmation.unassigned"), // Save with unassigned actions?
        @PowerNukkitOnly @Since("FUTURE") CONFIRMATION_UNSAVED("controllerLayoutScreen.confirmation.unsaved"), // Quit without saving?
        @PowerNukkitOnly @Since("FUTURE") SAVE("controllerLayoutScreen.save"), // Save
        @PowerNukkitOnly @Since("FUTURE") SAVEANDEXIT("controllerLayoutScreen.saveAndExit"), // Save & Exit
        @PowerNukkitOnly @Since("FUTURE") TRIGGER("controllerLayoutScreen.trigger"), // Trigger
        @PowerNukkitOnly @Since("FUTURE") UNASSIGNED("controllerLayoutScreen.unassigned"), // Unassigned
        @PowerNukkitOnly @Since("FUTURE") TOGGLELIVINGROOM("controllerLayoutScreen.toggleLivingroom"), // Toggle Immersion
        ;
        private final String code; ControllerLayoutScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Controls implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") RESET("controls.reset"), // Reset
        @PowerNukkitOnly @Since("FUTURE") RESETALL("controls.resetAll"), // Reset Keys
        @PowerNukkitOnly @Since("FUTURE") TITLE("controls.title"), // Controls
        ;
        private final String code; Controls(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Course implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") EDU_BEGIN("course.edu.begin"), // Begin
        @PowerNukkitOnly @Since("FUTURE") EDU_BYLESSONSENDGENERIC("course.edu.byLessonsEndGeneric"), // By the end of this lesson, you will learn the following:
        @PowerNukkitOnly @Since("FUTURE") EDU_BYLESSONSENDORDERED("course.edu.byLessonsEndOrdered"), // By the end of Lesson %d, you will learn the following:
        @PowerNukkitOnly @Since("FUTURE") EDU_COLLABORATIVELESSON("course.edu.collaborativeLesson"), // Collaborative Lesson
        @PowerNukkitOnly @Since("FUTURE") EDU_COLLABORATIVELESSONANDQUIZ("course.edu.collaborativeLessonAndQuiz"), // Collaborative Lesson and Quiz
        @PowerNukkitOnly @Since("FUTURE") EDU_CONNECTIONFAILED("course.edu.connectionFailed"), // Oops! We think you are not connected to the internet. Check your connection and try again!
        @PowerNukkitOnly @Since("FUTURE") EDU_CONNECTIONPROBLEM_COURSELIST("course.edu.connectionProblem.courseList"), // There was a problem connecting to your course list. Check your internet connection and try again.
        @PowerNukkitOnly @Since("FUTURE") EDU_CONNECTIONPROBLEM_QUIZ("course.edu.connectionProblem.quiz"), // There was a problem connecting to your quiz. Please try again.
        @PowerNukkitOnly @Since("FUTURE") EDU_CONTINUEBUTTON("course.edu.continueButton"), // Continue
        @PowerNukkitOnly @Since("FUTURE") EDU_COURSES("course.edu.courses"), // Courses
        @PowerNukkitOnly @Since("FUTURE") EDU_CREATEDBY("course.edu.createdBy"), // By %s
        @PowerNukkitOnly @Since("FUTURE") EDU_ESTIMATEDLENGTH("course.edu.estimatedLength"), // Estimated Length
        @PowerNukkitOnly @Since("FUTURE") EDU_ESTIMATEDLENGTH_FORMATTED("course.edu.estimatedLength.formatted"), // %d%s %d%s
        @PowerNukkitOnly @Since("FUTURE") EDU_ESTIMATEDLENGTH_MINUTESUNIT("course.edu.estimatedLength.minutesUnit"), // m
        @PowerNukkitOnly @Since("FUTURE") EDU_ESTIMATEDLENGTH_SECONDSUNIT("course.edu.estimatedLength.secondsUnit"), // s
        @PowerNukkitOnly @Since("FUTURE") EDU_GOAL("course.edu.goal"), // Education Goal: %s
        @PowerNukkitOnly @Since("FUTURE") EDU_HOSTBUTTON("course.edu.hostButton"), // Host
        @PowerNukkitOnly @Since("FUTURE") EDU_INSTRUCTIONS("course.edu.instructions"), // Instructions
        @PowerNukkitOnly @Since("FUTURE") EDU_JOIN("course.edu.join"), // Join
        @PowerNukkitOnly @Since("FUTURE") EDU_LAUNCHFAILED("course.edu.launchFailed"), // Oops! This world failed to launch! Did you delete a world template recently?
        @PowerNukkitOnly @Since("FUTURE") EDU_LEARNMOREBUTTON("course.edu.learnMoreButton"), // Learn More
        @PowerNukkitOnly @Since("FUTURE") EDU_LESSONCOMPLETE("course.edu.lessonComplete"), // Lesson Complete
        @PowerNukkitOnly @Since("FUTURE") EDU_LESSONINCLUDESQUIZ("course.edu.lessonIncludesQuiz"), // This lesson includes a quiz
        @PowerNukkitOnly @Since("FUTURE") EDU_LESSONISLOCKED("course.edu.lessonIsLocked"), // This lesson is locked
        @PowerNukkitOnly @Since("FUTURE") EDU_LESSONOBJECTIVES("course.edu.lessonObjectives"), // Lesson Objectives
        @PowerNukkitOnly @Since("FUTURE") EDU_NOTSUPPORTED("course.edu.notSupported"), // Not Supported Yet
        @PowerNukkitOnly @Since("FUTURE") EDU_NOCOURSESFOUND_TITLE("course.edu.noCoursesFound.title"), // No Courses Found
        @PowerNukkitOnly @Since("FUTURE") EDU_NOCOURSESFOUND_BODY("course.edu.noCoursesFound.body"), // It looks like you don't have any courses assigned.
        @PowerNukkitOnly @Since("FUTURE") EDU_OBJECTIVE_BULLETEDSTRING("course.edu.objective.bulletedString"), // - %s
        @PowerNukkitOnly @Since("FUTURE") EDU_PROGRESS_NEW("course.edu.progress.new"), // New
        @PowerNukkitOnly @Since("FUTURE") EDU_PROGRESS_INPROGRESS("course.edu.progress.inProgress"), // In Progress
        @PowerNukkitOnly @Since("FUTURE") EDU_PROGRESS_COMPLETED("course.edu.progress.completed"), // Completed
        @PowerNukkitOnly @Since("FUTURE") EDU_REFRESH_COURSES("course.edu.refresh.courses"), // Refresh Courses
        @PowerNukkitOnly @Since("FUTURE") EDU_REFRESH_LESSONS("course.edu.refresh.lessons"), // Refresh Lessons
        @PowerNukkitOnly @Since("FUTURE") EDU_RESTARTBUTTON("course.edu.restartButton"), // Restart
        @PowerNukkitOnly @Since("FUTURE") EDU_RESTARTCONFIRMATION_TITLE("course.edu.restartConfirmation.title"), // Restart Lesson?
        @PowerNukkitOnly @Since("FUTURE") EDU_RESTARTCONFIRMATION_BODY("course.edu.restartConfirmation.body"), // Restarting will erase all your work and start the lesson over.%sAre you sure you want to restart?
        @PowerNukkitOnly @Since("FUTURE") EDU_RESTARTFAILED_TITLE("course.edu.restartFailed.title"), // Oh no!
        @PowerNukkitOnly @Since("FUTURE") EDU_RESTARTFAILED_BODY("course.edu.restartFailed.body"), // We failed to find this lesson. We're attempting to re-download it.
        @PowerNukkitOnly @Since("FUTURE") EDU_STARTBUTTON("course.edu.startButton"), // Start
        @PowerNukkitOnly @Since("FUTURE") EDU_TASKS("course.edu.tasks"), // Tasks
        @PowerNukkitOnly @Since("FUTURE") EDU_TEACHERHASNOTGIVENACCCESS("course.edu.teacherHasNotGivenAcccess"), // The teacher has not given you access to this lesson.
        @PowerNukkitOnly @Since("FUTURE") EDU_TITLEWITHORDERPREFIX_FORMATTED("course.edu.titleWithOrderPrefix.formatted"), // %d: %s
        @PowerNukkitOnly @Since("FUTURE") EDU_TRYITNOWBUTTON("course.edu.tryItNowButton"), // Try it now
        @PowerNukkitOnly @Since("FUTURE") EDU_ENTERIP("course.edu.enterIp"), // Enter the IP Address of the world you would like to join.
        @PowerNukkitOnly @Since("FUTURE") EDU_IPADDRESS("course.edu.ipAddress"), // IP Address
        @PowerNukkitOnly @Since("FUTURE") EDU_IPPLACEHOLDER("course.edu.ipPlaceholder"), // Please enter the IP or Server Address
        @PowerNukkitOnly @Since("FUTURE") EDU_IPTOOLTIPTEXT("course.edu.ipTooltipText"), // To find the IP Address, ask the host to pause the lesson. The IP Address can be seen on the right side of their screen.
        @PowerNukkitOnly @Since("FUTURE") EDU_JOINLESSON("course.edu.joinLesson"), // Join Lesson
        @PowerNukkitOnly @Since("FUTURE") EDU_JOINLESSONINTRO("course.edu.joinLessonIntro"), // Find classmates in the same lesson to join, or enter their IP address if they don't appear in the list.
        @PowerNukkitOnly @Since("FUTURE") EDU_JOINLESSONINTROTEACHER("course.edu.joinLessonIntroTeacher"), // Select the group you would like to join, or enter the IP address if it does not appear in the list.
        @PowerNukkitOnly @Since("FUTURE") EDU_NOLESSONFOUNDJOINIP("course.edu.noLessonFoundJoinIp"), // Enter IP Address
        @PowerNukkitOnly @Since("FUTURE") EDU_PORTTOOLTIPTEXT("course.edu.portTooltipText"), // The port number determines the specific server program to use. This will typically not need to be changed unless the server host specifies to do so.
        @PowerNukkitOnly @Since("FUTURE") EDU_SEARCHING("course.edu.searching"), // Searching for worlds...
        ;
        private final String code; Course(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Crafting implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") BADCOMBINATION("crafting.badCombination"), // No valid output for that item
        @PowerNukkitOnly @Since("FUTURE") CANNOTCREATE("crafting.cannotCreate"), // You don't have all ingredients
        @PowerNukkitOnly @Since("FUTURE") INSUFFICIENTLEVEL("crafting.insufficientLevel"), // Your level is too low
        @PowerNukkitOnly @Since("FUTURE") NORECIPESINVENTORY("crafting.noRecipesInventory"), // You need to collect blocks to craft!
        @PowerNukkitOnly @Since("FUTURE") NORECIPESSTONECUTTER("crafting.noRecipesStonecutter"), // You need stone materials to craft!
        @PowerNukkitOnly @Since("FUTURE") NORECIPESSTONECUTTER_BLOCK("crafting.noRecipesStonecutter_block"), // You need stone materials to craft!
        @PowerNukkitOnly @Since("FUTURE") NORECIPESWORKBENCH("crafting.noRecipesWorkbench"), // You need to collect blocks to craft!
        ;
        private final String code; Crafting(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum CreateWorld implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_BASESIZE("createWorld.customize.custom.baseSize"), // Depth Base Size
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_BIOMEDEPTHOFFSET("createWorld.customize.custom.biomeDepthOffset"), // Biome Depth Offset
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_BIOMEDEPTHWEIGHT("createWorld.customize.custom.biomeDepthWeight"), // Biome Depth Weight
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_BIOMESCALEOFFSET("createWorld.customize.custom.biomeScaleOffset"), // Biome Scale Offset
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_BIOMESCALEWEIGHT("createWorld.customize.custom.biomeScaleWeight"), // Biome Scale Weight
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_BIOMESIZE("createWorld.customize.custom.biomeSize"), // Biome Size
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_CENTER("createWorld.customize.custom.center"), //  Center Height
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_CONFIRM1("createWorld.customize.custom.confirm1"), // This will overwrite your current
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_CONFIRM2("createWorld.customize.custom.confirm2"), // settings and cannot be undone.
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_CONFIRMTITLE("createWorld.customize.custom.confirmTitle"), // Warning!
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_COORDINATESCALE("createWorld.customize.custom.coordinateScale"), // Coordinate Scale
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_COUNT("createWorld.customize.custom.count"), //  Spawn Tries
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_DEFAULTS("createWorld.customize.custom.defaults"), // Defaults
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_DEPTHNOISESCALEEXPONENT("createWorld.customize.custom.depthNoiseScaleExponent"), // Depth Noise Exponent
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_DEPTHNOISESCALEX("createWorld.customize.custom.depthNoiseScaleX"), // Depth Noise Scale X
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_DEPTHNOISESCALEZ("createWorld.customize.custom.depthNoiseScaleZ"), // Depth Noise Scale Z
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_DUNGEONCHANCE("createWorld.customize.custom.dungeonChance"), // Dungeon Count
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_FIXEDBIOME("createWorld.customize.custom.fixedBiome"), // Biome
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_HEIGHTSCALE("createWorld.customize.custom.heightScale"), // Height Scale
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_LAVALAKECHANCE("createWorld.customize.custom.lavaLakeChance"), // Lava Lake Rarity
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_LOWERLIMITSCALE("createWorld.customize.custom.lowerLimitScale"), // Lower Limit Scale
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_MAINNOISESCALEX("createWorld.customize.custom.mainNoiseScaleX"), // Main Noise Scale X
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_MAINNOISESCALEY("createWorld.customize.custom.mainNoiseScaleY"), // Main Noise Scale Y
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_MAINNOISESCALEZ("createWorld.customize.custom.mainNoiseScaleZ"), // Main Noise Scale Z
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_MAXHEIGHT("createWorld.customize.custom.maxHeight"), //  Max. Height
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_MINHEIGHT("createWorld.customize.custom.minHeight"), //  Min. Height
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_NEXT("createWorld.customize.custom.next"), // Next Page
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_PAGE0("createWorld.customize.custom.page0"), // Basic Settings
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_PAGE1("createWorld.customize.custom.page1"), // Ore Settings
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_PAGE2("createWorld.customize.custom.page2"), // Advanced Settings (Expert Users Only!)
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_PAGE3("createWorld.customize.custom.page3"), // Extra Advanced Settings (Expert Users Only!)
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_PRESET_CAVECHAOS("createWorld.customize.custom.preset.caveChaos"), // Caves of Chaos
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_PRESET_CAVEDELIGHT("createWorld.customize.custom.preset.caveDelight"), // Caver's Delight
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_PRESET_DROUGHT("createWorld.customize.custom.preset.drought"), // Drought
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_PRESET_GOODLUCK("createWorld.customize.custom.preset.goodLuck"), // Good Luck
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_PRESET_ISLELAND("createWorld.customize.custom.preset.isleLand"), // Isle Land
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_PRESET_MOUNTAINS("createWorld.customize.custom.preset.mountains"), // Mountain Madness
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_PRESET_WATERWORLD("createWorld.customize.custom.preset.waterWorld"), // Water World
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_PRESETS("createWorld.customize.custom.presets"), // Presets
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_PRESETS_TITLE("createWorld.customize.custom.presets.title"), // Customize World Presets
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_PREV("createWorld.customize.custom.prev"), // Previous Page
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_RANDOMIZE("createWorld.customize.custom.randomize"), // Randomize
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_RIVERSIZE("createWorld.customize.custom.riverSize"), // River Size
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_SEALEVEL("createWorld.customize.custom.seaLevel"), // Sea Level
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_SIZE("createWorld.customize.custom.size"), //  Spawn Size
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_SPREAD("createWorld.customize.custom.spread"), //  Spread Height
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_STRETCHY("createWorld.customize.custom.stretchY"), // Height Stretch
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_UPPERLIMITSCALE("createWorld.customize.custom.upperLimitScale"), // Upper Limit Scale
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_USECAVES("createWorld.customize.custom.useCaves"), // Caves
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_USEDUNGEONS("createWorld.customize.custom.useDungeons"), // Dungeons
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_USELAVALAKES("createWorld.customize.custom.useLavaLakes"), // Lava Lakes
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_USELAVAOCEANS("createWorld.customize.custom.useLavaOceans"), // Lava Oceans
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_USEMINESHAFTS("createWorld.customize.custom.useMineShafts"), // Mineshafts
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_USEMONUMENTS("createWorld.customize.custom.useMonuments"), // Ocean Monuments
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_USERAVINES("createWorld.customize.custom.useRavines"), // Ravines
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_USESTRONGHOLDS("createWorld.customize.custom.useStrongholds"), // Strongholds
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_USETEMPLES("createWorld.customize.custom.useTemples"), // Temples
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_USEOCEANRUINS("createWorld.customize.custom.useOceanRuins"), // Ocean Ruins
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_USEVILLAGES("createWorld.customize.custom.useVillages"), // Villages
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_USEWATERLAKES("createWorld.customize.custom.useWaterLakes"), // Water Lakes
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_CUSTOM_WATERLAKECHANCE("createWorld.customize.custom.waterLakeChance"), // Water Lake Rarity
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_FLAT_ADDLAYER("createWorld.customize.flat.addLayer"), // Add Layer
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_FLAT_EDITLAYER("createWorld.customize.flat.editLayer"), // Edit Layer
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_FLAT_HEIGHT("createWorld.customize.flat.height"), // Height
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_FLAT_LAYER("createWorld.customize.flat.layer"), // %d
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_FLAT_LAYER_BOTTOM("createWorld.customize.flat.layer.bottom"), // Bottom - %d
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_FLAT_LAYER_TOP("createWorld.customize.flat.layer.top"), // Top - %d
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_FLAT_REMOVELAYER("createWorld.customize.flat.removeLayer"), // Remove Layer
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_FLAT_TILE("createWorld.customize.flat.tile"), // Layer Material
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_FLAT_TITLE("createWorld.customize.flat.title"), // Superflat Customization
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_PRESETS("createWorld.customize.presets"), // Presets
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_PRESETS_LIST("createWorld.customize.presets.list"), // Alternatively, here's some we made earlier!
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_PRESETS_SELECT("createWorld.customize.presets.select"), // Use Preset
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_PRESETS_SHARE("createWorld.customize.presets.share"), // Want to share your preset with someone? Use the below box!
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZE_PRESETS_TITLE("createWorld.customize.presets.title"), // Select a Preset
        ;
        private final String code; CreateWorld(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum CreateWorldUpsell implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") REMOVETRIAL("createWorldUpsell.removeTrial"), // Do not show trial in worlds list
        @PowerNukkitOnly @Since("FUTURE") TITLE("createWorldUpsell.title"), // Create New World or Realm?
        @PowerNukkitOnly @Since("FUTURE") TITLE_REALM("createWorldUpsell.title.realm"), // Create New Realm
        @PowerNukkitOnly @Since("FUTURE") BUTTON_REALM("createWorldUpsell.button.realm"), // New Realm
        @PowerNukkitOnly @Since("FUTURE") BUTTON_WORLD("createWorldUpsell.button.world"), // New World
        @PowerNukkitOnly @Since("FUTURE") BUTTON_TRIALTEXT("createWorldUpsell.button.trialText"), // Start 30 day free trial
        @PowerNukkitOnly @Since("FUTURE") PRICE_REALM("createWorldUpsell.price.realm"), // %1$s/Month
        @PowerNukkitOnly @Since("FUTURE") PRICE_COIN_REALM("createWorldUpsell.price.coin.realm"), // %1$s Minecoins/Month
        @PowerNukkitOnly @Since("FUTURE") PRICE_WORLD("createWorldUpsell.price.world"), // Free
        @PowerNukkitOnly @Since("FUTURE") REALM_SELLPOINT1("createWorldUpsell.realm.sellPoint1"), // Add infinite members and play online with up to §d%d§r friends
        @PowerNukkitOnly @Since("FUTURE") REALM_SELLPOINT2("createWorldUpsell.realm.sellPoint2"), // Saved online: Play on any Minecraft device with Minecraft Marketplace
        @PowerNukkitOnly @Since("FUTURE") REALM_SELLPOINT3("createWorldUpsell.realm.sellPoint3"), // Takes up zero storage space on your device
        @PowerNukkitOnly @Since("FUTURE") REALM_SELLPOINT4("createWorldUpsell.realm.sellPoint4"), // Friends can play even when you are away
        @PowerNukkitOnly @Since("FUTURE") SIGNIN("createWorldUpsell.signIn"), // Create Realm with Microsoft Account
        @PowerNukkitOnly @Since("FUTURE") WORLD_SELLPOINT1("createWorldUpsell.world.sellPoint1"), // Play online with up to 7 friends
        @PowerNukkitOnly @Since("FUTURE") WORLD_SELLPOINT2("createWorldUpsell.world.sellPoint2"), // Saved to your device: Play offline
        @PowerNukkitOnly @Since("FUTURE") WORLD_SELLPOINT3("createWorldUpsell.world.sellPoint3"), // Uses device storage
        ;
        private final String code; CreateWorldUpsell(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum CreateWorldScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ACTION_EDITLOCAL("createWorldScreen.action.editLocal"), // Make Infinite!
        @PowerNukkitOnly @Since("FUTURE") ACTION_LOCAL("createWorldScreen.action.local"), // Create World!
        @PowerNukkitOnly @Since("FUTURE") ACTION_REALMS("createWorldScreen.action.realms"), // Create World!
        @PowerNukkitOnly @Since("FUTURE") ACTION_REALMSRESET("createWorldScreen.action.realmsReset"), // Reset Realm
        @PowerNukkitOnly @Since("FUTURE") ADVANCED("createWorldScreen.advanced"), // Advanced
        @PowerNukkitOnly @Since("FUTURE") CHEATSETTINGS("createWorldScreen.cheatSettings"), // Cheats
        @PowerNukkitOnly @Since("FUTURE") WORLDSETTINGS("createWorldScreen.worldSettings"), // World Options
        @PowerNukkitOnly @Since("FUTURE") ALWAYSDAY("createWorldScreen.alwaysDay"), // Always Day
        @PowerNukkitOnly @Since("FUTURE") BONUSCHEST("createWorldScreen.bonusChest"), // Bonus Chest
        @PowerNukkitOnly @Since("FUTURE") PVP("createWorldScreen.pvp"), // Friendly Fire
        @PowerNukkitOnly @Since("FUTURE") IMMEDIATERESPAWN("createWorldScreen.immediaterespawn"), // Immediate Respawn
        @PowerNukkitOnly @Since("FUTURE") RESPAWNRADIUS("createWorldScreen.respawnRadius"), // Respawn Radius
        @PowerNukkitOnly @Since("FUTURE") TRUSTPLAYERS("createWorldScreen.trustPlayers"), // Trust Players
        @PowerNukkitOnly @Since("FUTURE") FIRESPREADS("createWorldScreen.fireSpreads"), // Fire Spreads
        @PowerNukkitOnly @Since("FUTURE") MOBLOOT("createWorldScreen.mobLoot"), // Mob Loot
        @PowerNukkitOnly @Since("FUTURE") TILEDROPS("createWorldScreen.tileDrops"), // Tile Drops
        @PowerNukkitOnly @Since("FUTURE") KEEPINVENTORY("createWorldScreen.keepInventory"), // Keep Inventory
        @PowerNukkitOnly @Since("FUTURE") NATURALREGENERATION("createWorldScreen.naturalregeneration"), // Natural Regeneration
        @PowerNukkitOnly @Since("FUTURE") TNTEXPLODES("createWorldScreen.tntexplodes"), // TNT Explodes
        @PowerNukkitOnly @Since("FUTURE") WEATHERCYCLE("createWorldScreen.weathercycle"), // Weather Cycle
        @PowerNukkitOnly @Since("FUTURE") DAYLIGHTCYCLE("createWorldScreen.daylightcycle"), // Do Daylight Cycle
        @PowerNukkitOnly @Since("FUTURE") MOBSPAWN("createWorldScreen.mobSpawn"), // Mob Spawning
        @PowerNukkitOnly @Since("FUTURE") MOBGRIEFING("createWorldScreen.mobgriefing"), // Mob Griefing
        @PowerNukkitOnly @Since("FUTURE") EDUCATIONTOGGLE("createWorldScreen.educationtoggle"), // Education Edition
        @PowerNukkitOnly @Since("FUTURE") ENTITIESDROPLOOT("createWorldScreen.entitiesdroploot"), // Entities Drop Loot
        @PowerNukkitOnly @Since("FUTURE") COMMANDBLOCKSENABLED("createWorldScreen.commandblocksenabled"), // Command Blocks Enabled
        @PowerNukkitOnly @Since("FUTURE") EXPERIMENTALGAMEPLAY("createWorldScreen.experimentalgameplay"), // Experiments
        @PowerNukkitOnly @Since("FUTURE") EXPERIMENTALBIOMES("createWorldScreen.experimentalbiomes"), // Creation of Custom Biomes
        @PowerNukkitOnly @Since("FUTURE") EXPERIMENTALCREATORFEATURES("createWorldScreen.experimentalCreatorFeatures"), // Upcoming Creator Features
        @PowerNukkitOnly @Since("FUTURE") EXPERIMENTALCHUNKWRITES("createWorldScreen.experimentalChunkWrites"), // Chunk Save Optimizations
        @PowerNukkitOnly @Since("FUTURE") EXPERIMENTALMODDING("createWorldScreen.experimentalmodding"), // Additional Modding Capabilities
        @PowerNukkitOnly @Since("FUTURE") CAVESANDCLIFFS("createWorldScreen.cavesandcliffs"), // Caves and Cliffs
        @PowerNukkitOnly @Since("FUTURE") CAVESANDCLIFFSINTERNAL("createWorldScreen.cavesandcliffsinternal"), // Caves and Cliffs (internal)
        @PowerNukkitOnly @Since("FUTURE") EXPERIMENTALHOLIDAY("createWorldScreen.experimentalholiday"), // Holiday Creator Features
        @PowerNukkitOnly @Since("FUTURE") EXPERIMENTALGAMETEST("createWorldScreen.experimentalGameTest"), // Enable GameTest Framework
        @PowerNukkitOnly @Since("FUTURE") WORLDPREFERENCES("createWorldScreen.worldPreferences"), // World Preferences
        @PowerNukkitOnly @Since("FUTURE") STARTWITHMAP("createWorldScreen.startWithMap"), // Starting Map
        @PowerNukkitOnly @Since("FUTURE") DEFAULTNAME("createWorldScreen.defaultName"), // My World
        @PowerNukkitOnly @Since("FUTURE") CREATE("createWorldScreen.create"), // Create
        @PowerNukkitOnly @Since("FUTURE") CREATEONREALMS("createWorldScreen.createOnRealms"), // Create on Realms
        @PowerNukkitOnly @Since("FUTURE") DELETE("createWorldScreen.delete"), // Delete
        @PowerNukkitOnly @Since("FUTURE") DELETEWORLD("createWorldScreen.deleteWorld"), // Delete World
        @PowerNukkitOnly @Since("FUTURE") DELETE_DESC("createWorldScreen.delete.desc"), // Delete your world forever.
        @PowerNukkitOnly @Since("FUTURE") DELETE_CONFIRM("createWorldScreen.delete.confirm"), // Delete world permanently?
        @PowerNukkitOnly @Since("FUTURE") DELETEWARNINGFORMAT("createWorldScreen.deleteWarningFormat"), // Are you sure you want to delete "%s"?  This world will be lost forever! (A long time!)
        @PowerNukkitOnly @Since("FUTURE") EDITTITLEFORMAT("createWorldScreen.editTitleFormat"), // Edit "%s"
        @PowerNukkitOnly @Since("FUTURE") GAME_SETTINGS("createWorldScreen.game.settings"), // Game Settings
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE("createWorldScreen.gameMode"), // Game Mode
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_DEFAULT("createWorldScreen.gameMode.default"), // Default Game Mode
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_PERSONAL("createWorldScreen.gameMode.personal"), // Personal Game Mode
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_ADVENTURE("createWorldScreen.gameMode.adventure"), // Adventure
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_CREATIVE("createWorldScreen.gameMode.creative"), // Creative
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_CREATIVE_DESC("createWorldScreen.gameMode.creative.desc"), // Unlimited resources. No damage. Flying. No achievements even if you switch to survival later.
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_SURVIVAL("createWorldScreen.gameMode.survival"), // Survival
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_SURVIVAL_DESC("createWorldScreen.gameMode.survival.desc"), // Limited resources, you'll need tools. You may get hurt. Watch out for Monsters.
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_SERVERDEFAULT("createWorldScreen.gameMode.serverDefault"), // Default
        @PowerNukkitOnly @Since("FUTURE") HEADER_DELETE("createWorldScreen.header.delete"), // World Permanence
        @PowerNukkitOnly @Since("FUTURE") HEADER_EDITLOCAL("createWorldScreen.header.editLocal"), // Edit your World
        @PowerNukkitOnly @Since("FUTURE") HEADER_LOCAL("createWorldScreen.header.local"), // Create a World
        @PowerNukkitOnly @Since("FUTURE") HEADER_REALMS("createWorldScreen.header.realms"), // Create a Realms Server
        @PowerNukkitOnly @Since("FUTURE") HEADER_REALMSRESET("createWorldScreen.header.realmsReset"), // Reset your Realm?
        @PowerNukkitOnly @Since("FUTURE") LEVELNAME("createWorldScreen.levelName"), // Name
        @PowerNukkitOnly @Since("FUTURE") LEVELSEED("createWorldScreen.levelSeed"), // Seed
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYER_SETTINGS("createWorldScreen.multiplayer.settings"), // Multiplayer Settings
        @PowerNukkitOnly @Since("FUTURE") PROGRESS_LOCAL("createWorldScreen.progress.local"), // Creating new world...
        @PowerNukkitOnly @Since("FUTURE") PROGRESS_REALMS("createWorldScreen.progress.realms"), // Resetting Realm...
        @PowerNukkitOnly @Since("FUTURE") SEED_DESC("createWorldScreen.seed.desc"), // Enter a seed to generate the same terrain again. Leave blank for a random world.
        @PowerNukkitOnly @Since("FUTURE") SHOWCOORDINATES("createWorldScreen.showCoordinates"), // Show Coordinates
        @PowerNukkitOnly @Since("FUTURE") WORLDTYPE("createWorldScreen.worldType"), // World Type
        @PowerNukkitOnly @Since("FUTURE") CLASSROOMSETTINGS("createWorldScreen.classroomsettings"), // Show Classroom Settings
        @PowerNukkitOnly @Since("FUTURE") PERFECTWEATHER("createWorldScreen.perfectweather"), // Perfect Weather
        @PowerNukkitOnly @Since("FUTURE") ALLOWMOBS("createWorldScreen.allowmobs"), // Allow Mobs
        @PowerNukkitOnly @Since("FUTURE") ALLOWDESTRUCTIVEITEMS("createWorldScreen.allowdestructiveitems"), // Allow Destructive Items
        @PowerNukkitOnly @Since("FUTURE") PLAYERDAMAGE("createWorldScreen.playerdamage"), // Player Damage
        @PowerNukkitOnly @Since("FUTURE") IMMUTABLEWORLD("createWorldScreen.immutableworld"), // Immutable World
        @PowerNukkitOnly @Since("FUTURE") PVPDAMAGE("createWorldScreen.pvpdamage"), // Player VS Player Damage
        @PowerNukkitOnly @Since("FUTURE") RANDOMTICKSPEED("createWorldScreen.randomtickspeed"), // Random Tick Speed
        @PowerNukkitOnly @Since("FUTURE") RANDOMTICKSPEED_RESET("createWorldScreen.randomtickspeed.reset"), // Reset Random Tick Speed
        @PowerNukkitOnly @Since("FUTURE") SERVERSIMDISTANCE("createWorldScreen.serverSimDistance"), // Simulation Distance
        @PowerNukkitOnly @Since("FUTURE") SERVERSIMDISTANCEFORMAT("createWorldScreen.serverSimDistanceFormat"), // %s chunks
        @PowerNukkitOnly @Since("FUTURE") CHECK_INTERNET_CONNECTION("createWorldScreen.check_internet_connection"), // You are not connected to the internet. Your friends will not be able to join your multiplayer worlds. Sign in to your Microsoft Account to play with your friends.
        @PowerNukkitOnly @Since("FUTURE") DISCONNECTEDXBOXLIVE("createWorldScreen.disconnectedXboxLive"), // You are not connected to Microsoft services. Your friends with Gamertags will not be able to join your multiplayer world. Sign in to your Microsoft Account to play with your friends.
        @PowerNukkitOnly @Since("FUTURE") CLEARPLAYERDATA_BUTTON("createWorldScreen.clearPlayerData.button"), // Clear Player Data
        @PowerNukkitOnly @Since("FUTURE") CLEARPLAYERDATA_TITLE("createWorldScreen.clearPlayerData.title"), // Delete Player Data from World?
        @PowerNukkitOnly @Since("FUTURE") CLEARPLAYERDATA_BODY1("createWorldScreen.clearPlayerData.body1"), // Select "All Player Data" to delete absolutely all player data from the world. The next time any player enters the world, they will start with fresh, default data.
        @PowerNukkitOnly @Since("FUTURE") CLEARPLAYERDATA_BODY2("createWorldScreen.clearPlayerData.body2"), // Selecting "Keep Owning Player Data", will retain your current data (such as inventory items & location) and apply it the 'World Owner'. This is any player that loads the world locally or the owner of a realm it's on. 
        @PowerNukkitOnly @Since("FUTURE") CLEARPLAYERDATA_ALL("createWorldScreen.clearPlayerData.all"), // All Player Data
        @PowerNukkitOnly @Since("FUTURE") CLEARPLAYERDATA_ALLEXCEPTLOCAL("createWorldScreen.clearPlayerData.allExceptLocal"), // Keep Owning Player Data
        @PowerNukkitOnly @Since("FUTURE") CLEARPLAYERDATA_CANCEL("createWorldScreen.clearPlayerData.cancel"), // Cancel
        @PowerNukkitOnly @Since("FUTURE") CLEARPLAYERDATA_PROGRESS("createWorldScreen.clearPlayerData.progress"), // Clearing Player Data
        ;
        private final String code; CreateWorldScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum CrossPlatformToggle implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") STARTMENUSCREEN_TITLE("crossPlatformToggle.startMenuScreen.title"), // Cross-Platform Play
        @PowerNukkitOnly @Since("FUTURE") STARTMENUSCREEN_ENABLE("crossPlatformToggle.startMenuScreen.enable"), // Enable Cross-Platform Play
        @PowerNukkitOnly @Since("FUTURE") STARTMENUSCREEN_ENABLE_LINE1("crossPlatformToggle.startMenuScreen.enable.line1"), // Do you want to enable cross-platform play?
        @PowerNukkitOnly @Since("FUTURE") STARTMENUSCREEN_ENABLE_LINE2("crossPlatformToggle.startMenuScreen.enable.line2"), // Cross-platform play allows you and friends on other platforms to connect and play together!
        @PowerNukkitOnly @Since("FUTURE") STARTMENUSCREEN_DISABLE("crossPlatformToggle.startMenuScreen.disable"), // Disable Cross-Platform Play
        @PowerNukkitOnly @Since("FUTURE") STARTMENUSCREEN_DISABLE_LINE1("crossPlatformToggle.startMenuScreen.disable.line1"), // Do you want to disable cross-platform play?
        @PowerNukkitOnly @Since("FUTURE") STARTMENUSCREEN_DISABLE_LINE2("crossPlatformToggle.startMenuScreen.disable.line2"), // You will no longer connect or play with friends on other platforms.
        @PowerNukkitOnly @Since("FUTURE") CROSSPLATFORMDISABLED_FRIENDS("crossPlatformToggle.crossPlatformDisabled.friends"), // Enable cross-platform play in the main menu to be able to join Realms, LAN Games, and play with all your Minecraft friends.
        @PowerNukkitOnly @Since("FUTURE") CROSSPLATFORMDISABLED_INVITE("crossPlatformToggle.crossPlatformDisabled.invite"), // Enable cross-platform play in the main menu to invite friends on other platforms.
        @PowerNukkitOnly @Since("FUTURE") CROSSPLATFORMDISABLED_REALMS("crossPlatformToggle.crossPlatformDisabled.realms"), // Enable cross-platform play in the main menu to join Realms.
        @PowerNukkitOnly @Since("FUTURE") CROSSPLATFORMDISABLED_SERVERS("crossPlatformToggle.crossPlatformDisabled.servers"), // Enable cross-platform play in the main menu to add or join Servers.
        @PowerNukkitOnly @Since("FUTURE") CROSSPLATFORMDISABLED_MULTIPLAYERSETTINGS("crossPlatformToggle.crossPlatformDisabled.multiplayerSettings"), // Enable cross-platform play in the main menu to play with friends on other platforms.
        ;
        private final String code; CrossPlatformToggle(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum RealmsPendingInvitationsScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") PENDINGINVITATIONS("realmsPendingInvitationsScreen.pendingInvitations"), // Realms Membership Invites
        @PowerNukkitOnly @Since("FUTURE") NOINVITES("realmsPendingInvitationsScreen.noInvites"), // You have no pending invites.
        @PowerNukkitOnly @Since("FUTURE") FETCHINGINVITES("realmsPendingInvitationsScreen.fetchingInvites"), // Fetching invites...
        @PowerNukkitOnly @Since("FUTURE") DECLINE("realmsPendingInvitationsScreen.decline"), // Decline
        @PowerNukkitOnly @Since("FUTURE") ACCEPTED("realmsPendingInvitationsScreen.accepted"), // Accepted
        @PowerNukkitOnly @Since("FUTURE") DECLINED("realmsPendingInvitationsScreen.declined"), // Declined
        @PowerNukkitOnly @Since("FUTURE") SHOWFRIENDINVITES("realmsPendingInvitationsScreen.showFriendInvites"), // Only show invites from Friends.
        ;
        private final String code; RealmsPendingInvitationsScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum RealmsInvitationScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ADDINGPLAYERS("realmsInvitationScreen.addingPlayers"), // Adding Players...
        @PowerNukkitOnly @Since("FUTURE") FINDFRIENDS("realmsInvitationScreen.findFriends"), // Find friends
        @PowerNukkitOnly @Since("FUTURE") CONTINUE("realmsInvitationScreen.continue"), // Continue
        @PowerNukkitOnly @Since("FUTURE") DONE("realmsInvitationScreen.done"), // Done, Let's Play!
        @PowerNukkitOnly @Since("FUTURE") FRIENDS("realmsInvitationScreen.friends"), // Friends
        @PowerNukkitOnly @Since("FUTURE") INVITEDFRIENDS("realmsInvitationScreen.invitedFriends"), // Invited Friends
        @PowerNukkitOnly @Since("FUTURE") MEMBERS("realmsInvitationScreen.members"), // Members
        @PowerNukkitOnly @Since("FUTURE") UNABLETOADDPLAYERS("realmsInvitationScreen.unableToAddPlayers"), // Could Not Add Players
        @PowerNukkitOnly @Since("FUTURE") LOADINGFRIENDS("realmsInvitationScreen.loadingFriends"), // Loading Friends and Members...
        @PowerNukkitOnly @Since("FUTURE") LOADINGPROFILES("realmsInvitationScreen.loadingProfiles"), // Loading Profiles (%s / %s)
        @PowerNukkitOnly @Since("FUTURE") NOINVITES("realmsInvitationScreen.noInvites"), // No players could be found.
        @PowerNukkitOnly @Since("FUTURE") SAVINGCHANGES("realmsInvitationScreen.savingChanges"), // Saving Changes...
        @PowerNukkitOnly @Since("FUTURE") SENDINGINVITESFAILED("realmsInvitationScreen.sendingInvitesFailed"), // Something went wrong.  We could not add the players you selected to your Realm.  Please try again later.
        @PowerNukkitOnly @Since("FUTURE") TITLE("realmsInvitationScreen.title"), // Add Members
        @PowerNukkitOnly @Since("FUTURE") UNDO("realmsInvitationScreen.undo"), // Undo
        @PowerNukkitOnly @Since("FUTURE") UNBLOCK("realmsInvitationScreen.unblock"), // Unblock
        @PowerNukkitOnly @Since("FUTURE") UNBLOCKED("realmsInvitationScreen.unblocked"), // Unblocked
        @PowerNukkitOnly @Since("FUTURE") BLOCKED("realmsInvitationScreen.blocked"), // Blocked
        @PowerNukkitOnly @Since("FUTURE") MYREALM("realmsInvitationScreen.myRealm"), // My Realm
        @PowerNukkitOnly @Since("FUTURE") FETCHINGLINK("realmsInvitationScreen.fetchingLink"), // Fetching new link...
        @PowerNukkitOnly @Since("FUTURE") FETCHINGCODE("realmsInvitationScreen.fetchingCode"), // Fetching new invite code...
        @PowerNukkitOnly @Since("FUTURE") SHARETITLE("realmsInvitationScreen.shareTitle"), // Realms Invitation
        @PowerNukkitOnly @Since("FUTURE") SHARETEXT("realmsInvitationScreen.shareText"), // Come join me in this realm!
        @PowerNukkitOnly @Since("FUTURE") REFRESHDIALOGTITLE("realmsInvitationScreen.refreshDialogTitle"), // Disable Current Link?
        @PowerNukkitOnly @Since("FUTURE") REFRESHDIALOGLABEL("realmsInvitationScreen.refreshDialogLabel"), // This will disable the current link and generate a new one.  Anyone who became a member already will still be able to join your Realm.
        @PowerNukkitOnly @Since("FUTURE") CREATELINKDIALOGTITLE("realmsInvitationScreen.createLinkDialogTitle"), // Generate Realm Link?
        @PowerNukkitOnly @Since("FUTURE") CREATELINKDIALOGLABEL("realmsInvitationScreen.createLinkDialogLabel"), // Anyone who opens this link will become a member of your Realm.  You can disable a link by generating a new one.
        @PowerNukkitOnly @Since("FUTURE") SHAREDIALOGTITLE("realmsInvitationScreen.shareDialogTitle"), // Download Backup Before Sharing?
        @PowerNukkitOnly @Since("FUTURE") SHAREDIALOGLABEL("realmsInvitationScreen.shareDialogLabel"), // Anyone with this link can become a member of your Realm.  Be careful who you share it with.  You may want to download a backup of your world first.  You can remove members from Realm settings.
        @PowerNukkitOnly @Since("FUTURE") SHAREDIALOGSHAREBUTTON("realmsInvitationScreen.shareDialogShareButton"), // Share
        @PowerNukkitOnly @Since("FUTURE") SHAREDIALOGCOPYBUTTON("realmsInvitationScreen.shareDialogCopyButton"), // Copy
        @PowerNukkitOnly @Since("FUTURE") SHAREDIALOGNEWLINKBUTTON("realmsInvitationScreen.shareDialogNewLinkButton"), // Create new link
        @PowerNukkitOnly @Since("FUTURE") SHAREDIALOGNEWCODEBUTTON("realmsInvitationScreen.shareDialogNewCodeButton"), // Create new code
        @PowerNukkitOnly @Since("FUTURE") CLOSEDREALMWARNING("realmsInvitationScreen.closedRealmWarning"), // Your Realm is closed.  Members cannot join.
        @PowerNukkitOnly @Since("FUTURE") GENERATE("realmsInvitationScreen.generate"), // Generate
        @PowerNukkitOnly @Since("FUTURE") DISABLE("realmsInvitationScreen.disable"), // Disable
        @PowerNukkitOnly @Since("FUTURE") BACKUP("realmsInvitationScreen.backup"), // Download
        @PowerNukkitOnly @Since("FUTURE") SHAREBYLINK("realmsInvitationScreen.shareByLink"), // Share link
        @PowerNukkitOnly @Since("FUTURE") SHAREBYCODE("realmsInvitationScreen.shareByCode"), // Share invite code
        @PowerNukkitOnly @Since("FUTURE") SHARELINKTOREALM("realmsInvitationScreen.shareLinkToRealm"), // Share link to Realm
        @PowerNukkitOnly @Since("FUTURE") SHARECODETOREALM("realmsInvitationScreen.shareCodeToRealm"), // Share invite code to Realm
        @PowerNukkitOnly @Since("FUTURE") SHAREINFOMESSAGE("realmsInvitationScreen.shareInfoMessage"), // Anyone with the link can join your Realm. Go to Game > Download World to download a backup of your world.
        @PowerNukkitOnly @Since("FUTURE") SHAREINFOMESSAGECODE("realmsInvitationScreen.shareInfoMessageCode"), // Anyone with the invite code can join your Realm. Go to Game > Download World to download a backup of your world.
        @PowerNukkitOnly @Since("FUTURE") REFRESHLINKINFOMESSAGE("realmsInvitationScreen.refreshLinkInfoMessage"), // This will invalidate the old link and create a new one. Do you wish to continue?
        @PowerNukkitOnly @Since("FUTURE") REFRESHCODEINFOMESSAGE("realmsInvitationScreen.refreshCodeInfoMessage"), // This will invalidate the old invite code and create a new one. Do you wish to continue?
        @PowerNukkitOnly @Since("FUTURE") KICK("realmsInvitationScreen.kick"), // Remove
        @PowerNukkitOnly @Since("FUTURE") KICKANDBLOCK("realmsInvitationScreen.kickAndBlock"), // Block
        @PowerNukkitOnly @Since("FUTURE") KICKPOPUPTITLE("realmsInvitationScreen.kickPopupTitle"), // Revoke Access?
        @PowerNukkitOnly @Since("FUTURE") KICKPOPUPTEXT("realmsInvitationScreen.kickPopupText"), // Do you want to revoke access for this player? You can undo this at any time.
        @PowerNukkitOnly @Since("FUTURE") COPYTOASTMESSAGE("realmsInvitationScreen.copyToastMessage"), // Link to your realm copied to clipboard!
        @PowerNukkitOnly @Since("FUTURE") PLAYERFILTERTITLE("realmsInvitationScreen.playerFilterTitle"), // Filter players
        @PowerNukkitOnly @Since("FUTURE") SETPERMISSIONFAIL("realmsInvitationScreen.setPermissionFail"), // Failed to set permission for user %s.
        @PowerNukkitOnly @Since("FUTURE") SETDEFAULTPERMISSIONFAIL("realmsInvitationScreen.setDefaultPermissionFail"), // Failed to set default permissions.
        ;
        private final String code; RealmsInvitationScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum RealmJoining implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") PROGRESSTITLE("realmJoining.progressTitle"), // Joining Realm...
        ;
        private final String code; RealmJoining(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum RealmsClearMembers implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") CLEARMEMBERSTITLE("realmsClearMembers.clearMembersTitle"), // Clear Members?
        @PowerNukkitOnly @Since("FUTURE") CLEARMEMBERSTEXT("realmsClearMembers.clearMembersText"), // Do you want to clear the members list of this realm?
        @PowerNukkitOnly @Since("FUTURE") CLEAR("realmsClearMembers.clear"), // Clear Members
        ;
        private final String code; RealmsClearMembers(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum RealmsSharingScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") JOIN("realmsSharingScreen.join"), // Join
        @PowerNukkitOnly @Since("FUTURE") JOINTITLE("realmsSharingScreen.joinTitle"), // Join realm?
        @PowerNukkitOnly @Since("FUTURE") JOINMESSAGE("realmsSharingScreen.joinMessage"), // Join realm %s?
        @PowerNukkitOnly @Since("FUTURE") BLOCKEDINVITETITLE("realmsSharingScreen.blockedInviteTitle"), // Permission required
        @PowerNukkitOnly @Since("FUTURE") BLOCKEDINVITEMESSAGE("realmsSharingScreen.blockedInviteMessage"), // You will need the Realm owner's permission to join this Realm.
        @PowerNukkitOnly @Since("FUTURE") BADINVITETITLE("realmsSharingScreen.badInviteTitle"), // Invalid Realm Link
        @PowerNukkitOnly @Since("FUTURE") BADINVITEMESSAGE("realmsSharingScreen.badInviteMessage"), // This invite link could not be found, the owner of the Realm may have changed the link. Ask them for an updated link.
        @PowerNukkitOnly @Since("FUTURE") REGENERATELINKFAILED("realmsSharingScreen.regenerateLinkFailed"), // Failed to generate new invite link
        @PowerNukkitOnly @Since("FUTURE") CANTJOINEXPIREDTITLE("realmsSharingScreen.cantJoinExpiredTitle"), // %s's Realm is expired
        @PowerNukkitOnly @Since("FUTURE") CANTJOINEXPIREDMESSAGE("realmsSharingScreen.cantJoinExpiredMessage"), // %s has expired. Ask %s to renew it.
        @PowerNukkitOnly @Since("FUTURE") CANTJOINCLOSEDTITLE("realmsSharingScreen.cantJoinClosedTitle"), // %s closed this Realm
        @PowerNukkitOnly @Since("FUTURE") CANTJOINCLOSEDMESSAGE("realmsSharingScreen.cantJoinClosedMessage"), // %s is closed.  Ask %s to reopen it.
        @PowerNukkitOnly @Since("FUTURE") FAILEDSIGNINMODALTITLE("realmsSharingScreen.failedSignInModalTitle"), // Sign in to join this Realm
        @PowerNukkitOnly @Since("FUTURE") FAILEDSIGNINMODALMESSAGE("realmsSharingScreen.failedSignInModalMessage"), // You need to be signed in to a Microsoft Account to join a Realm. Please sign in and try again.
        @PowerNukkitOnly @Since("FUTURE") INVALIDPERMISSIONTITLE("realmsSharingScreen.invalidPermissionTitle"), // Invalid permissions
        ;
        private final String code; RealmsSharingScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum RealmsCreateScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TITLE_CREATE("realmsCreateScreen.title.create"), // Create a Realm Server
        @PowerNukkitOnly @Since("FUTURE") TITLE_EXTEND("realmsCreateScreen.title.extend"), // Extend Your Realm
        @PowerNukkitOnly @Since("FUTURE") TITLE_RENEW("realmsCreateScreen.title.renew"), // Renew Your Realm
        @PowerNukkitOnly @Since("FUTURE") DEFAULTREALM("realmsCreateScreen.defaultRealm"), // %s's Realm
        @PowerNukkitOnly @Since("FUTURE") CREATINGREALM("realmsCreateScreen.creatingRealm"), // Creating Realm...
        @PowerNukkitOnly @Since("FUTURE") NAMEHEADER_NAME("realmsCreateScreen.nameHeader.name"), // Realm Name
        @PowerNukkitOnly @Since("FUTURE") NAMEHEADER_RENAME("realmsCreateScreen.nameHeader.rename"), // Rename Realm?
        @PowerNukkitOnly @Since("FUTURE") TERMSANDCONDITIONSAGREE("realmsCreateScreen.termsAndConditionsAgree"), // I agree
        @PowerNukkitOnly @Since("FUTURE") TERMSANDCONDITIONSHEADER("realmsCreateScreen.termsAndConditionsHeader"), // Terms and Conditions
        @PowerNukkitOnly @Since("FUTURE") VIEWTERMSANDCONDITIONS("realmsCreateScreen.viewTermsAndConditions"), // View Terms and Conditions
        @PowerNukkitOnly @Since("FUTURE") VIEWPRIVACYPOLICY("realmsCreateScreen.viewPrivacyPolicy"), // View Privacy Policy
        @PowerNukkitOnly @Since("FUTURE") DURATIONHEADER("realmsCreateScreen.durationHeader"), // Duration
        @PowerNukkitOnly @Since("FUTURE") DURATIONSHORT("realmsCreateScreen.durationShort"), // 30 Days
        @PowerNukkitOnly @Since("FUTURE") DURATIONLONG("realmsCreateScreen.durationLong"), // 180 Days
        @PowerNukkitOnly @Since("FUTURE") SIZEHEADER("realmsCreateScreen.sizeHeader"), // Tier
        @PowerNukkitOnly @Since("FUTURE") PURCHASEPREFIX_CREATE("realmsCreateScreen.purchasePrefix.create"), // Create
        @PowerNukkitOnly @Since("FUTURE") PURCHASEPREFIX_EXTEND("realmsCreateScreen.purchasePrefix.extend"), // Extend
        @PowerNukkitOnly @Since("FUTURE") PURCHASEPREFIX_RENEW("realmsCreateScreen.purchasePrefix.renew"), // Renew
        @PowerNukkitOnly @Since("FUTURE") SUBSCRIPTION_TRIAL("realmsCreateScreen.subscription.trial"), // Create For Free!%s(%s/month after first 30 days)
        @PowerNukkitOnly @Since("FUTURE") SUBSCRIPTION_BUY("realmsCreateScreen.subscription.buy"), // Create for %s per month
        @PowerNukkitOnly @Since("FUTURE") SUBSCRIPTION_RENEW("realmsCreateScreen.subscription.renew"), // Renew for %s per month
        @PowerNukkitOnly @Since("FUTURE") CONSUMABLE_TRIAL("realmsCreateScreen.consumable.trial"), // Create for Free!
        @PowerNukkitOnly @Since("FUTURE") CONSUMABLE_BUY("realmsCreateScreen.consumable.buy"), // Create for %s
        @PowerNukkitOnly @Since("FUTURE") CONSUMABLE_RENEW("realmsCreateScreen.consumable.renew"), // Renew for %s
        @PowerNukkitOnly @Since("FUTURE") CONSUMABLE_EXTEND("realmsCreateScreen.consumable.extend"), // Extend for %s
        @PowerNukkitOnly @Since("FUTURE") ERRORREALMNAME("realmsCreateScreen.errorRealmName"), // Your realm name cannot be blank.
        @PowerNukkitOnly @Since("FUTURE") ERRORREALMNAMEANDTOS("realmsCreateScreen.errorRealmNameAndTOS"), // Your realm name cannot be blank, and you must accept the terms of service to create a realm.
        @PowerNukkitOnly @Since("FUTURE") ERRORTOS("realmsCreateScreen.errorTOS"), // Must accept terms and conditions to create a realm.
        @PowerNukkitOnly @Since("FUTURE") GOBACK("realmsCreateScreen.goBack"), // Go Back
        @PowerNukkitOnly @Since("FUTURE") CREATEFAILED_TITLE("realmsCreateScreen.createFailed.title"), // Something Went Wrong
        @PowerNukkitOnly @Since("FUTURE") PURCHASEFAILED("realmsCreateScreen.purchaseFailed"), // Sorry, we were unable to complete your realm purchase. Maybe check your internet connection?
        @PowerNukkitOnly @Since("FUTURE") CREATEFAILED_CONTENT("realmsCreateScreen.createFailed.content"), // Your purchase succeeded, but we couldn't create your Realm right now.  We will create your Realm as soon as possible.  Check back later on this device.
        @PowerNukkitOnly @Since("FUTURE") CREATEFAILED_PROFANITY("realmsCreateScreen.createFailed.profanity"), // The Realm name %s is not allowed.
        @PowerNukkitOnly @Since("FUTURE") CREATEFAILED_GENERIC("realmsCreateScreen.createFailed.generic"), // Club name could not be verified. Please try again later.
        @PowerNukkitOnly @Since("FUTURE") MAXREALMS_TITLE("realmsCreateScreen.maxRealms.title"), // Maximum Subscriptions
        @PowerNukkitOnly @Since("FUTURE") MAXREALMS_CONTENT("realmsCreateScreen.maxRealms.content"), // You have the maximum number of active subscriptions on this platform and cannot create a new one right now.
        @PowerNukkitOnly @Since("FUTURE") OFFERNOTFOUND_TITLE("realmsCreateScreen.offerNotFound.title"), // Store Connection Lost
        @PowerNukkitOnly @Since("FUTURE") OFFERNOTFOUND_CONTENT("realmsCreateScreen.offerNotFound.content"), // Your device lost connection to the store and we can't confirm this offer is still available. Please check your internet connection or try again later.
        @PowerNukkitOnly @Since("FUTURE") OFFERNOTAVAILABLE_TITLE("realmsCreateScreen.offerNotAvailable.title"), // Store Connection Lost
        @PowerNukkitOnly @Since("FUTURE") OFFERNOTAVAILABLE_CONTENT("realmsCreateScreen.offerNotAvailable.content"), // Your device lost connection to the store and we can't confirm this offer is still available. Please check your internet connection or try again later.
        @PowerNukkitOnly @Since("FUTURE") EXTENDREALMS_CONTENT("realmsCreateScreen.extendRealms.content"), // You have extended your Realms subscription as long as possible.  You cannot add this additional time right now.  Try again later.
        @PowerNukkitOnly @Since("FUTURE") USERSTWO("realmsCreateScreen.usersTwo"), // 2 Players
        @PowerNukkitOnly @Since("FUTURE") USERSTEN("realmsCreateScreen.usersTen"), // 10 Players
        @PowerNukkitOnly @Since("FUTURE") VIEWTOS("realmsCreateScreen.viewTOS"), // To view the terms and conditions for Minecraft Realms, please visit https://aka.ms/minecraftrealmsterms in any web browser.
        @PowerNukkitOnly @Since("FUTURE") VIEWPRIVACYPOLICYTEXT("realmsCreateScreen.viewPrivacyPolicyText"), // To view the privacy policy for Minecraft Realms, please visit https://aka.ms/mcprivacy in any web browser.
        @PowerNukkitOnly @Since("FUTURE") WAITINGPURCHASE("realmsCreateScreen.waitingPurchase"), // Purchase in progress! This shouldn't take long.
        @PowerNukkitOnly @Since("FUTURE") PAYMENTFAILED_TITLE("realmsCreateScreen.paymentFailed.title"), // Payment service
        @PowerNukkitOnly @Since("FUTURE") PAYMENTFAILED_BODY("realmsCreateScreen.paymentFailed.body"), // Unable to connect to Realms and complete your purchase at this time. Please try again later.
        @PowerNukkitOnly @Since("FUTURE") INCOMPLETE("realmsCreateScreen.incomplete"), // Incomplete Realm
        @PowerNukkitOnly @Since("FUTURE") INCOMPLETE_CREATE_A("realmsCreateScreen.incomplete.create.a"), // It looks like we didn't finish things last time.  Let's complete creating your realm now.
        @PowerNukkitOnly @Since("FUTURE") INCOMPLETE_CREATE_B("realmsCreateScreen.incomplete.create.b"), // It looks like you started creating a realm with a different Microsoft Account.  Do you want to complete creating that realm with this Microsoft Account as the owner?
        @PowerNukkitOnly @Since("FUTURE") INCOMPLETE_CREATE_C("realmsCreateScreen.incomplete.create.c"), // Someone started creating a Realm with the billing account on this device.  Would you like to complete creating that Realm with this Microsoft Account as the owner?
        @PowerNukkitOnly @Since("FUTURE") INCOMPLETE_RENEW_A("realmsCreateScreen.incomplete.renew.a"), // It looks like we didn't finish things last time.  Let's complete renewing your realm now.
        @PowerNukkitOnly @Since("FUTURE") INCOMPLETE_RENEW_B("realmsCreateScreen.incomplete.renew.b"), // It looks like you started renewing a realm with a different Microsoft Account.  Do you want to complete renewing that realm with this Microsoft Account as the owner?
        @PowerNukkitOnly @Since("FUTURE") INCOMPLETE_RENEW_C("realmsCreateScreen.incomplete.renew.c"), // Someone started renewing a realm with the billing account on this device.  Would you like to complete renewing that realm with this Microsoft Account as the owner?
        @PowerNukkitOnly @Since("FUTURE") INCOMPLETE_OVERRIDE_RENEW("realmsCreateScreen.incomplete.override.renew"), // You are attempting to create a new realm but a prior purchase was found for renewing a realm.  Would you like to apply that purchase now?
        @PowerNukkitOnly @Since("FUTURE") INCOMPLETE_OVERRIDE_CREATE("realmsCreateScreen.incomplete.override.create"), // You are attempting to renew a realm but a prior purchase was found for creating a realm.  Would you like to apply that purchase now?
        @PowerNukkitOnly @Since("FUTURE") INCOMPLETE_OVERRIDE_REALM("realmsCreateScreen.incomplete.override.realm"), // You are attempting to renew a realm but a prior purchase was found for a different realm.  Would you like to apply that purchase now?
        @PowerNukkitOnly @Since("FUTURE") PREPARE_STORE_TITLE("realmsCreateScreen.prepare.store.title"), // Purchase History Needed
        @PowerNukkitOnly @Since("FUTURE") PREPARE_STORE_BODY("realmsCreateScreen.prepare.store.body"), // We need you to sign in to the store to view your purchase history before we can continue.
        @PowerNukkitOnly @Since("FUTURE") PREPARE_STORE_BUTTON("realmsCreateScreen.prepare.store.button"), // Sign In to Store
        @PowerNukkitOnly @Since("FUTURE") NSOINFOTEXT("realmsCreateScreen.nsoinfotext"), // To use Realms, you need to subscribe to Nintendo Switch Online.
        @PowerNukkitOnly @Since("FUTURE") PLAYNOWTITLE("realmsCreateScreen.playNowTitle"), // Play on Realm, Now?
        @PowerNukkitOnly @Since("FUTURE") PLAYNOWMESSAGE1("realmsCreateScreen.playNowMessage1"), // You can invite friends to your Realm and start playing now.
        @PowerNukkitOnly @Since("FUTURE") PLAYNOWMESSAGE2("realmsCreateScreen.playNowMessage2"), // Otherwise, you can find it anytime in the Worlds tab of the Play screen. Edit it to change game modes or even upload any world to your Realm.
        @PowerNukkitOnly @Since("FUTURE") PLAYWITHFRIENDS("realmsCreateScreen.playWithFriends"), // Play with Friends
        @PowerNukkitOnly @Since("FUTURE") PLAYSOLO("realmsCreateScreen.playSolo"), // Play Solo
        @PowerNukkitOnly @Since("FUTURE") PURCHASECONFIRMATION_TITLE("realmsCreateScreen.purchaseConfirmation.title"), // Purchase Realm?
        @PowerNukkitOnly @Since("FUTURE") PURCHASECONFIRMATION_CREATE_MESSAGE("realmsCreateScreen.purchaseConfirmation.create.message"), // Are you sure you want to create a Realm?
        @PowerNukkitOnly @Since("FUTURE") PURCHASECONFIRMATION_EXTEND_MESSAGE("realmsCreateScreen.purchaseConfirmation.extend.message"), // Are you sure you want to extend a Realm?
        @PowerNukkitOnly @Since("FUTURE") PURCHASECONFIRMATION_RENEW_MESSAGE("realmsCreateScreen.purchaseConfirmation.renew.message"), // Are you sure you want to renew a Realm?
        @PowerNukkitOnly @Since("FUTURE") PURCHASECONFIRMATION_CONTINUE("realmsCreateScreen.purchaseConfirmation.continue"), // Confirm Purchase
        @PowerNukkitOnly @Since("FUTURE") PURCHASECONFIRMATION_CANCEL("realmsCreateScreen.purchaseConfirmation.cancel"), // Cancel
        @PowerNukkitOnly @Since("FUTURE") TITLE("realmsCreateScreen.title"), // Create a Realm
        @PowerNukkitOnly @Since("FUTURE") NAMEHEADER("realmsCreateScreen.nameHeader"), // Realm Name
        @PowerNukkitOnly @Since("FUTURE") CHOOSEWORLD("realmsCreateScreen.chooseWorld"), // Create Realm: Choose World
        ;
        private final String code; RealmsCreateScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum RealmsConfigurationScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") REALMNAME("realmsConfigurationScreen.realmName"), // Realm Name
        @PowerNukkitOnly @Since("FUTURE") REALMDESCRIPTION("realmsConfigurationScreen.realmDescription"), // Realm Description
        @PowerNukkitOnly @Since("FUTURE") OPEN("realmsConfigurationScreen.open"), // Open Realm
        @PowerNukkitOnly @Since("FUTURE") CLOSE("realmsConfigurationScreen.close"), // Close Realm
        @PowerNukkitOnly @Since("FUTURE") RESETREALM("realmsConfigurationScreen.resetRealm"), // Resetting a Realm permanently erases the world and starts over.  Are you sure you want to do this?
        @PowerNukkitOnly @Since("FUTURE") CONFIRMRESET("realmsConfigurationScreen.confirmReset"), // Confirm Reset
        @PowerNukkitOnly @Since("FUTURE") RESETREALMTRYAGAIN("realmsConfigurationScreen.resetRealmTryAgain"), // Failed to reset the Realm. Would you like to try again?
        @PowerNukkitOnly @Since("FUTURE") FAILEDOPENCLOSETITLE("realmsConfigurationScreen.failedOpenCloseTitle"), // Failed open/close.
        @PowerNukkitOnly @Since("FUTURE") FAILEDOPENCLOSE("realmsConfigurationScreen.failedOpenClose"), // Failed to open/close the Realm. Would you like to try again?
        ;
        private final String code; RealmsConfigurationScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum RealmsWorld implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") NOTAVAILABLE("realmsWorld.notAvailable"), // Your device does not support Minecraft Realms.
        @PowerNukkitOnly @Since("FUTURE") OWNERPAY("realmsWorld.ownerPay"), // The owner pays monthly. Their friends can join for free!
        @PowerNukkitOnly @Since("FUTURE") REALMSDESCRIPTION("realmsWorld.realmsDescription"), // Realms are private Minecraft worlds that are always available for you and your friends.
        @PowerNukkitOnly @Since("FUTURE") REALMSDESCRIPTION_PARAGRAPH2("realmsWorld.realmsDescription.paragraph2"), // You can play on them even when the owner of the Realm is away and from any device running Minecraft!
        @PowerNukkitOnly @Since("FUTURE") REALMSDESCRIPTION_PARAGRAPH3("realmsWorld.realmsDescription.paragraph3"), // Explore your Realm today!
        @PowerNukkitOnly @Since("FUTURE") REALMSDESCRIPTION_BETA_LINE1("realmsWorld.realmsDescription.Beta.line1"), // Realms, the safe, simple way to share a Minecraft world with friends, is not available while using beta versions of Minecraft.
        @PowerNukkitOnly @Since("FUTURE") REALMSDESCRIPTION_BETA_LINE2("realmsWorld.realmsDescription.Beta.line2"), // If you'd like to stop using the beta and access Realms, click below for instructions.
        @PowerNukkitOnly @Since("FUTURE") NEWREALM("realmsWorld.newRealm"), // New Realm
        @PowerNukkitOnly @Since("FUTURE") CONNECTLIVE("realmsWorld.connectLive"), // Sign In to Try for Free!
        @PowerNukkitOnly @Since("FUTURE") OWNER("realmsWorld.owner"), // owner
        @PowerNukkitOnly @Since("FUTURE") LEAVEBETA("realmsWorld.leaveBeta"), // Leave the Beta?
        @PowerNukkitOnly @Since("FUTURE") NEWREALMTRIAL("realmsWorld.newRealmTrial"), // Start Your Free 30 Day Trial%s(%s/mo after the first month)
        @PowerNukkitOnly @Since("FUTURE") CREATINGWORLD("realmsWorld.creatingWorld"), // Creating World
        ;
        private final String code; RealmsWorld(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum RealmsPlus implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") POPUP_TOP_BUTTON_TEXT("realmsPlus.popup.top_button_text"), // More Info
        @PowerNukkitOnly @Since("FUTURE") POPUP_BOTTOM_BUTTON_TEXT("realmsPlus.popup.bottom_button_text"), // Renew Subscription
        @PowerNukkitOnly @Since("FUTURE") POPUP_TITLE("realmsPlus.popup.title"), // Realms Plus Subscription Expired
        @PowerNukkitOnly @Since("FUTURE") POPUP_MESSAGE("realmsPlus.popup.message"), // Your Realms Plus subscription has expired. To regain access to your Realm and the packs or skins you received from Realms Plus you need to renew your subscription. 
        ;
        private final String code; RealmsPlus(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum RealmsPlusUpgradeNotice implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TITLE("realmsPlusUpgradeNotice.title"), // Welcome to Realms Plus!
        @PowerNukkitOnly @Since("FUTURE") BODY("realmsPlusUpgradeNotice.body"), // Your Realms subscription has been upgraded to Realms Plus. You now have access to 150+ content packs from the marketplace at no additional cost. Up to 10 players can play at one time, and they get access to all the subscriber content in your Realm – for free!
        @PowerNukkitOnly @Since("FUTURE") CONTINUE("realmsPlusUpgradeNotice.continue"), // Continue
        @PowerNukkitOnly @Since("FUTURE") VIEWPACKS("realmsPlusUpgradeNotice.viewpacks"), // View Realms Plus Packs
        ;
        private final String code; RealmsPlusUpgradeNotice(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Raytracing implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") RTX_NAME("raytracing.RTX.name"), // RTX##Brand name, don't localize
        ;
        private final String code; Raytracing(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Network implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ONLINEPLAY_TITLE("network.onlinePlay.title"), // Play with Friends
        @PowerNukkitOnly @Since("FUTURE") ONLINEPLAY_MSG("network.onlinePlay.msg"), // You can invite friends to your worlds, view your friends' creations, and craft in each other's worlds.
        @PowerNukkitOnly @Since("FUTURE") ONLINEPLAY_INSTRUCTION("network.onlinePlay.instruction"), // From the Play menu, you can join your friends' worlds or invite them to your worlds and Realms.
        @PowerNukkitOnly @Since("FUTURE") THIRDPARTY_CONNECT_SPLITSCREEN("network.thirdparty.connect.splitscreen"), // To play split-screen multiplayer online, sign in to a %s account.
        @PowerNukkitOnly @Since("FUTURE") THIRDPARTY_CONNECT_BENEFIT("network.thirdparty.connect.benefit"), // Sign in with your %s to play online with friends and check out cool stuff in the store.
        @PowerNukkitOnly @Since("FUTURE") THIRDPARTY_CONNECT_STORE("network.thirdparty.connect.store"), // You will need a %s to browse the store.
        @PowerNukkitOnly @Since("FUTURE") THIRDPARTY_CONNECT_ACHIEVEMENTS("network.thirdparty.connect.achievements"), // You will need a %s to earn achievements.
        @PowerNukkitOnly @Since("FUTURE") THIRDPARTY_FINDFRIENDS_FAILED("network.thirdparty.findfriends.failed"), // We were unable to connect to Microsoft account services. Maybe check your internet connection?
        ;
        private final String code; Network(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum NetworkWorld implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ADD_FRIEND("networkWorld.add_friend"), // Add Friend
        @PowerNukkitOnly @Since("FUTURE") ADD_SERVER("networkWorld.add_server"), // Add Server
        @PowerNukkitOnly @Since("FUTURE") ADD_LABEL("networkWorld.add_label"), // Add
        @PowerNukkitOnly @Since("FUTURE") JOIN_SERVER("networkWorld.join_server"), // Join Server
        @PowerNukkitOnly @Since("FUTURE") SCREENSHOTS("networkWorld.screenshots"), // Screenshots:
        @PowerNukkitOnly @Since("FUTURE") DESCRIPTION("networkWorld.description"), // Description:
        @PowerNukkitOnly @Since("FUTURE") AVAILABLE_GAMES("networkWorld.available_games"), // Available Games:
        @PowerNukkitOnly @Since("FUTURE") NEWS("networkWorld.news"), // News:
        @PowerNukkitOnly @Since("FUTURE") ONLINE("networkWorld.online"), // Online:
        @PowerNukkitOnly @Since("FUTURE") CURRENT_PING("networkWorld.current_ping"), // Current Ping:
        @PowerNukkitOnly @Since("FUTURE") LAN_LABEL("networkWorld.lan_label"), // LAN Games
        @PowerNukkitOnly @Since("FUTURE") SERVERS_LABEL("networkWorld.servers_label"), // Servers
        @PowerNukkitOnly @Since("FUTURE") FRIENDS_LABEL("networkWorld.friends_label"), // Friends
        @PowerNukkitOnly @Since("FUTURE") JOINABLE_FRIENDS_LABEL("networkWorld.joinable_friends_label"), // Joinable Friends
        @PowerNukkitOnly @Since("FUTURE") NO_JOINABLE_FRIENDS_LABEL("networkWorld.no_joinable_friends_label"), // Your friends are not playing Minecraft right now.
        @PowerNukkitOnly @Since("FUTURE") CHECK_INTERNET_CONNECTION("networkWorld.check_internet_connection"), // Oops! Maybe check your internet connection? We can't find your friends' worlds.
        @PowerNukkitOnly @Since("FUTURE") CONNECT_TO_XBL("networkWorld.connect_to_xbl"), // Sign in with a Microsoft Account to play with friends.
        @PowerNukkitOnly @Since("FUTURE") MEMBEROFTOOMANYREALMS("networkWorld.memberOfTooManyRealms"), // You have reached the realms membership limit.
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYERPRIVILEGESBLOCKED("networkWorld.multiplayerPrivilegesBlocked"), // You cannot play online multiplayer because of how your Microsoft Account is set up. Please ensure your online safety settings allow Multiplayer. See instructions for changing these settings at aka.ms/MCMultiplayerHelp.
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYERPRIVILEGESBLOCKEDONCONSOLE("networkWorld.multiplayerPrivilegesBlockedOnConsole"), // You cannot play online multiplayer because of how your Microsoft Account is set up. Please ensure your online safety settings allow Multiplayer and Clubs and you have an active Xbox Live Gold subscription. See instructions for changing these settings at aka.ms/MCMultiplayerHelp.
        @PowerNukkitOnly @Since("FUTURE") VERSIONOUTOFDATE("networkWorld.versionOutOfDate"), // You cannot play online multiplayer because you are not running the latest version. Please install the latest version to access online features.
        @PowerNukkitOnly @Since("FUTURE") MORE_SERVERS("networkWorld.more_servers"), // More Servers
        @PowerNukkitOnly @Since("FUTURE") THIRDPARTY_CONNECT("networkWorld.thirdparty.connect"), // Connect to '%s'
        @PowerNukkitOnly @Since("FUTURE") JOIN("networkWorld.join"), // Join
        @PowerNukkitOnly @Since("FUTURE") JOINBYCODE("networkWorld.joinByCode"), // Join Realm
        @PowerNukkitOnly @Since("FUTURE") REALMSHASHPLACEHOLDER("networkWorld.realmsHashPlaceholder"), // Invite Code...
        @PowerNukkitOnly @Since("FUTURE") HIGHPINGWARNING_TITLE("networkWorld.highPingWarning.title"), // Join Server?
        @PowerNukkitOnly @Since("FUTURE") HIGHPINGWARNING_LINE1("networkWorld.highPingWarning.line1"), // You don't currently have a strong connection to the chosen server. Your experience may be impacted.
        @PowerNukkitOnly @Since("FUTURE") HIGHPINGWARNING_LINE2("networkWorld.highPingWarning.line2"), // Would you like to join this server anyway?
        @PowerNukkitOnly @Since("FUTURE") VIEW_OFFERS("networkWorld.view_offers"), // View Offers
        @PowerNukkitOnly @Since("FUTURE") USERSIGNTEXTBLOCKEDLINE0("networkWorld.userSignTextBlockedLine0"), // ---
        @PowerNukkitOnly @Since("FUTURE") USERSIGNTEXTBLOCKEDLINE1("networkWorld.userSignTextBlockedLine1"), // Author
        @PowerNukkitOnly @Since("FUTURE") USERSIGNTEXTBLOCKEDLINE2("networkWorld.userSignTextBlockedLine2"), // is blocked
        @PowerNukkitOnly @Since("FUTURE") USERSIGNTEXTBLOCKEDLINE3("networkWorld.userSignTextBlockedLine3"), // ---
        @PowerNukkitOnly @Since("FUTURE") USERSIGNTEXTMUTEDLINE0("networkWorld.userSignTextMutedLine0"), // ---
        @PowerNukkitOnly @Since("FUTURE") USERSIGNTEXTMUTEDLINE1("networkWorld.userSignTextMutedLine1"), // Author
        @PowerNukkitOnly @Since("FUTURE") USERSIGNTEXTMUTEDLINE2("networkWorld.userSignTextMutedLine2"), // is blocked
        @PowerNukkitOnly @Since("FUTURE") USERSIGNTEXTMUTEDLINE3("networkWorld.userSignTextMutedLine3"), // ---
        @PowerNukkitOnly @Since("FUTURE") USERBOOKTEXTBLOCKED("networkWorld.userBookTextBlocked"), // [Author is Blocked]
        @PowerNukkitOnly @Since("FUTURE") USERBOOKTEXTMUTED("networkWorld.userBookTextMuted"), // [Author is Blocked]
        ;
        private final String code; NetworkWorld(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum NetworkWold implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") JOINBYCODEHELPTEXT("networkWold.joinByCodeHelpText"), // If you have received a Realm Invite Link, enter the code to join.
        ;
        private final String code; NetworkWold(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum LocalWorld implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") NO_LOCAL_WORLD_LABEL("localWorld.no_local_world_label"), // You have not created any worlds yet.
        @PowerNukkitOnly @Since("FUTURE") NO_LOCAL_WORLDS_PRESENT("localWorld.no_local_worlds_present"), // Did your worlds disappear?  Try changing your storage location:
        ;
        private final String code; LocalWorld(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum ThirdPartyWorld implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") COMINGSOON("thirdPartyWorld.comingSoon"), // Coming Soon!
        @PowerNukkitOnly @Since("FUTURE") FEATURED("thirdPartyWorld.Featured"), // Featured Servers
        @PowerNukkitOnly @Since("FUTURE") ADDITIONAL("thirdPartyWorld.Additional"), // Additional Servers
        @PowerNukkitOnly @Since("FUTURE") FEATUREDCOMINGSOON("thirdPartyWorld.featuredComingSoon"), // Coming Soon
        @PowerNukkitOnly @Since("FUTURE") NOTCONNECTED("thirdPartyWorld.notConnected"), // We could not connect to Servers right now. We will try again soon.
        @PowerNukkitOnly @Since("FUTURE") PLAYNOW("thirdPartyWorld.playNow"), // Play Now!
        @PowerNukkitOnly @Since("FUTURE") LOADINGSERVERS("thirdPartyWorld.loadingServers"), // Retrieving server information, please wait...
        @PowerNukkitOnly @Since("FUTURE") LOADINGFEATUREDSERVERS("thirdPartyWorld.loadingFeaturedServers"), // Fetching Servers...
        ;
        private final String code; ThirdPartyWorld(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum RealmsSettingsScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") PLAYERCOUNTLABEL("realmsSettingsScreen.playerCountLabel"), // Size
        @PowerNukkitOnly @Since("FUTURE") FORCERESOURCEPACKFAIL("realmsSettingsScreen.forceResourcePackFail"), // Failed to set force resource pack value
        @PowerNukkitOnly @Since("FUTURE") FAILEDUPLOADPACK("realmsSettingsScreen.failedUploadPack"), // Failed to upload pack %s.
        @PowerNukkitOnly @Since("FUTURE") FAILEDAPPLY("realmsSettingsScreen.failedApply"), // Some of the selected content could not be applied.
        @PowerNukkitOnly @Since("FUTURE") ERRORAPPLY("realmsSettingsScreen.errorApply"), // Error when applying content
        @PowerNukkitOnly @Since("FUTURE") REALMDURATIONLABEL("realmsSettingsScreen.realmDurationLabel"), // Duration
        @PowerNukkitOnly @Since("FUTURE") MANAGESUBSCRIPTIONBUTTON("realmsSettingsScreen.manageSubscriptionButton"), // Manage Subscription
        @PowerNukkitOnly @Since("FUTURE") MANAGESUBSCRIPTIONSBUTTON("realmsSettingsScreen.manageSubscriptionsButton"), // Manage Subscriptions
        @PowerNukkitOnly @Since("FUTURE") RENEWREALMBUTTON("realmsSettingsScreen.renewRealmButton"), // Renew Realm
        @PowerNukkitOnly @Since("FUTURE") EXTENDREALMBUTTON("realmsSettingsScreen.extendRealmButton"), // Extend Realm
        @PowerNukkitOnly @Since("FUTURE") DELETEREALMBUTTON("realmsSettingsScreen.deleteRealmButton"), // Delete Realm
        @PowerNukkitOnly @Since("FUTURE") OPENREALMBUTTON("realmsSettingsScreen.openRealmButton"), // Open Realm
        @PowerNukkitOnly @Since("FUTURE") CLOSEREALMBUTTON("realmsSettingsScreen.closeRealmButton"), // Close Realm
        @PowerNukkitOnly @Since("FUTURE") PLAYREALMBUTTON("realmsSettingsScreen.playRealmButton"), // Play
        @PowerNukkitOnly @Since("FUTURE") PLAYDISABLEDREALMBUTTON("realmsSettingsScreen.playDisabledRealmButton"), // Realm Closed
        @PowerNukkitOnly @Since("FUTURE") PLAYEXPIREDREALMBUTTON("realmsSettingsScreen.playExpiredRealmButton"), // Realm Expired
        @PowerNukkitOnly @Since("FUTURE") SELECTORSECTIONLABEL("realmsSettingsScreen.selectorSectionLabel"), // Edit "%s"
        @PowerNukkitOnly @Since("FUTURE") SELECTORSECTIONLABELREALM("realmsSettingsScreen.selectorSectionLabelRealm"), // Realm
        @PowerNukkitOnly @Since("FUTURE") WORLDSECTIONTITLE("realmsSettingsScreen.worldSectionTitle"), // World
        @PowerNukkitOnly @Since("FUTURE") GAMESECTIONTITLE("realmsSettingsScreen.gameSectionTitle"), // Game
        @PowerNukkitOnly @Since("FUTURE") PLAYERSSECTIONTITLE("realmsSettingsScreen.playersSectionTitle"), // Players
        @PowerNukkitOnly @Since("FUTURE") MEMBERSSECTIONTITLE("realmsSettingsScreen.membersSectionTitle"), // Members
        @PowerNukkitOnly @Since("FUTURE") SUBSCRIPTIONSECTIONTITLE("realmsSettingsScreen.subscriptionSectionTitle"), // Subscription
        @PowerNukkitOnly @Since("FUTURE") DEVOPTIONSSECTIONTITLE("realmsSettingsScreen.devOptionsSectionTitle"), // Dev Options
        @PowerNukkitOnly @Since("FUTURE") BACKUPSECTION("realmsSettingsScreen.backupSection"), // Backups
        @PowerNukkitOnly @Since("FUTURE") BACKUPINFO("realmsSettingsScreen.backupInfo"), // You can restore the world on your Realm with a backup found in this list.
        @PowerNukkitOnly @Since("FUTURE") BACKUPREPLACED("realmsSettingsScreen.backupReplaced"), // World has been replaced with the selected backup.
        @PowerNukkitOnly @Since("FUTURE") BACKUPREPLACEDFAILED("realmsSettingsScreen.backupReplacedFailed"), // Replacing the world with the selected backup failed.
        @PowerNukkitOnly @Since("FUTURE") BACKUPREPLACEDTIMEOUT("realmsSettingsScreen.backupReplacedTimeout"), // Replacing the world with the selected backup timed out.
        @PowerNukkitOnly @Since("FUTURE") BACKUPVERSION("realmsSettingsScreen.backupVersion"), // Version: %s
        @PowerNukkitOnly @Since("FUTURE") BACKUPVERSIONUNKNOWN("realmsSettingsScreen.backupVersionUnknown"), // Version: Unknown
        @PowerNukkitOnly @Since("FUTURE") DELETEREALM("realmsSettingsScreen.deleteRealm"), // Delete Realm
        @PowerNukkitOnly @Since("FUTURE") DELETEREALMTOAST("realmsSettingsScreen.deleteRealmToast"), // Realm %s has been deleted.
        @PowerNukkitOnly @Since("FUTURE") DELETEREALMFAILTOAST("realmsSettingsScreen.deleteRealmFailToast"), // Delete of Realm %s failed.
        @PowerNukkitOnly @Since("FUTURE") DELETEREALMMODALTEXT("realmsSettingsScreen.deleteRealmModalText"), // Your Realm will be permanently deleted. You will not be able to access your world, your member list or the club.
        @PowerNukkitOnly @Since("FUTURE") BACKUPRESTOREHEADER("realmsSettingsScreen.backupRestoreHeader"), // Replacing World
        @PowerNukkitOnly @Since("FUTURE") BACKUPMODALTEXT("realmsSettingsScreen.backupModalText"), // By replacing your realm with this backup, you will erase all recent progress from your Realm. The Realm will restart and all active players will need to reconnect.
        @PowerNukkitOnly @Since("FUTURE") REPLACEWITHBACKUP("realmsSettingsScreen.replaceWithBackup"), // Replace Realm with Backup
        @PowerNukkitOnly @Since("FUTURE") BACKUPINPROGRESS("realmsSettingsScreen.backupInProgress"), // Replacing realm world with backup
        @PowerNukkitOnly @Since("FUTURE") REALMNAMELABEL("realmsSettingsScreen.realmNameLabel"), // Realm Name
        @PowerNukkitOnly @Since("FUTURE") REALMNAMEEDITPLACEHOLDER("realmsSettingsScreen.realmNameEditPlaceholder"), // Enter Realm Name
        @PowerNukkitOnly @Since("FUTURE") REALMDESCRIPTIONEDITPLACEHOLDER("realmsSettingsScreen.realmDescriptionEditPlaceholder"), // Enter Realm Description
        @PowerNukkitOnly @Since("FUTURE") REPLACELOADINGTEXT("realmsSettingsScreen.replaceLoadingText"), // We're replacing your Realm with a backup.
        @PowerNukkitOnly @Since("FUTURE") RESETWORLDBUTTON("realmsSettingsScreen.resetWorldButton"), // Reset World
        @PowerNukkitOnly @Since("FUTURE") DOWNLOADWORLDBUTTON("realmsSettingsScreen.downloadWorldButton"), // Download World
        @PowerNukkitOnly @Since("FUTURE") DOWNLOADWORLDNAMECOPY("realmsSettingsScreen.downloadWorldNameCopy"), // %s - Copy
        @PowerNukkitOnly @Since("FUTURE") UPLOADWORLDBUTTON("realmsSettingsScreen.uploadWorldButton"), // Replace World
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTYOPTIONLABELFORMAT("realmsSettingsScreen.difficultyOptionLabelFormat"), // %s %s
        @PowerNukkitOnly @Since("FUTURE") GAMEMODEOPTIONLABEL("realmsSettingsScreen.gameModeOptionLabel"), // Game Mode
        @PowerNukkitOnly @Since("FUTURE") SURVIVALRADIOBUTTON("realmsSettingsScreen.survivalRadioButton"), // Survival
        @PowerNukkitOnly @Since("FUTURE") CREATIVERADIOBUTTON("realmsSettingsScreen.creativeRadioButton"), // Creative
        @PowerNukkitOnly @Since("FUTURE") RESETBUTTONHELPERLABEL("realmsSettingsScreen.resetButtonHelperLabel"), // Start over from scratch?
        @PowerNukkitOnly @Since("FUTURE") MAXPLAYERSLABELFORMAT("realmsSettingsScreen.maxPlayersLabelFormat"), // %d Friends
        @PowerNukkitOnly @Since("FUTURE") DURATIONLABELFORMAT("realmsSettingsScreen.durationLabelFormat"), // %d Days Remaining
        @PowerNukkitOnly @Since("FUTURE") SUBSCRIPTIONLABELFORMAT("realmsSettingsScreen.subscriptionLabelFormat"), // Renews every %d days
        @PowerNukkitOnly @Since("FUTURE") FETCHINGWORLDINFO("realmsSettingsScreen.fetchingWorldInfo"), // Fetching Realm Information...
        @PowerNukkitOnly @Since("FUTURE") UPDATINGWORLDINFO("realmsSettingsScreen.updatingWorldInfo"), // Updating Realm Information...
        @PowerNukkitOnly @Since("FUTURE") RESETTINGREALM("realmsSettingsScreen.resettingRealm"), // Resetting Realm...
        @PowerNukkitOnly @Since("FUTURE") APPLYPACKS("realmsSettingsScreen.applyPacks"), // Applying packs...
        @PowerNukkitOnly @Since("FUTURE") OPENINGREALM("realmsSettingsScreen.openingRealm"), // Opening Realm...
        @PowerNukkitOnly @Since("FUTURE") CLOSINGREALM("realmsSettingsScreen.closingRealm"), // Closing Realm...
        @PowerNukkitOnly @Since("FUTURE") REALMINFOERROR("realmsSettingsScreen.realmInfoError"), // Failed to retrieve realm information. Please try again later.
        @PowerNukkitOnly @Since("FUTURE") REALMJOINERROR("realmsSettingsScreen.realmJoinError"), // Failed attempting to join realm. Please try again later.
        @PowerNukkitOnly @Since("FUTURE") REALMRESETERROR("realmsSettingsScreen.realmResetError"), // Failed to reset the realm. Please try again later.
        @PowerNukkitOnly @Since("FUTURE") REALMOPENERROR("realmsSettingsScreen.realmOpenError"), // Failed to open realm.
        @PowerNukkitOnly @Since("FUTURE") REALMCLOSEERROR("realmsSettingsScreen.realmCloseError"), // Failed to close realm.
        @PowerNukkitOnly @Since("FUTURE") RESET("realmsSettingsScreen.reset"), // Reset
        @PowerNukkitOnly @Since("FUTURE") RESETREALM("realmsSettingsScreen.resetRealm"), // This will permanently delete the world and create a new one.  Are you sure you want to do this?
        @PowerNukkitOnly @Since("FUTURE") CONFIRMRESET("realmsSettingsScreen.confirmReset"), // Delete & Reset?
        @PowerNukkitOnly @Since("FUTURE") CLOSEREALMTITLE("realmsSettingsScreen.closeRealmTitle"), // Close Realm?
        @PowerNukkitOnly @Since("FUTURE") CLOSEREALMMESSAGE("realmsSettingsScreen.closeRealmMessage"), // Closing the realm will shut it down. Anyone currently playing on the realm will be disconnected. Are you sure you want to do this?
        @PowerNukkitOnly @Since("FUTURE") LOADINGSUBSCRIPTION("realmsSettingsScreen.LoadingSubscription"), // Loading subscription...
        @PowerNukkitOnly @Since("FUTURE") FAILEDLOADINGSUBSCRIPTION("realmsSettingsScreen.failedLoadingSubscription"), // Failed Loading subscription
        @PowerNukkitOnly @Since("FUTURE") MATCHINGPURCHASEPLATFORMFORMAT("realmsSettingsScreen.matchingPurchasePlatformFormat"), // You purchased your subscription in the %s
        @PowerNukkitOnly @Since("FUTURE") NONMATCHINGPURCHASEPLATFORMFORMAT("realmsSettingsScreen.nonMatchingPurchasePlatformFormat"), // You started your subscription in the %s. You can only extend your subscription there.
        @PowerNukkitOnly @Since("FUTURE") NONMATCHINGPURCHASEPLATFORMGENERIC("realmsSettingsScreen.nonMatchingPurchasePlatformGeneric"), // You can manage your Realm subscription in the platform store where you originally purchased it.
        @PowerNukkitOnly @Since("FUTURE") CONSUMABLETOSUBSCRIPTIONTRANSITIONINFO("realmsSettingsScreen.consumableToSubscriptionTransitionInfo"), // You can't extend your Realm right now. We have now introduced subscriptions for Realms and you can buy a new subscription as soon as your Realm has expired in %d days. But don't worry! We will give you 14 extra days for free and your Realm will be kept online, so you will have plenty of time to extend it by then.
        @PowerNukkitOnly @Since("FUTURE") CONSUMABLETOSUBSCRIPTIONGRACEPERIODINFO("realmsSettingsScreen.consumableToSubscriptionGracePeriodInfo"), // Your Realm has expired, but don't worry! We will keep it online for another %d days. You can now go ahead and extend it using the new auto-renewing subscription, so you don't have to worry about keeping your Realm up and running ever again.
        @PowerNukkitOnly @Since("FUTURE") CONSUMABLETOSUBSCRIPTIONTRANSITIONINFOEXPIRED("realmsSettingsScreen.consumableToSubscriptionTransitionInfoExpired"), // Your Realm has expired. Go ahead and extend it using the new auto-renewing subscription, that way you don't have to worry about keeping your Realm up and running ever again.
        @PowerNukkitOnly @Since("FUTURE") UPLOAD_WORLDTOOBIG("realmsSettingsScreen.upload.worldtoobig"), // Upload failed. The world size exceeds the maximum uploadable limit of %s.
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_WORLDTOOBIG("realmsSettingsScreen.download.worldtoobig"), // Download failed. The world size exceeds the maximum downloadable limit of %s.
        @PowerNukkitOnly @Since("FUTURE") SWITCHSTOREDISPLAYNAME("realmsSettingsScreen.switchStoreDisplayName"), // Nintendo eShop
        @PowerNukkitOnly @Since("FUTURE") IOSSTOREDISPLAYNAME("realmsSettingsScreen.iosStoreDisplayName"), // App Store
        @PowerNukkitOnly @Since("FUTURE") GOOGLEPLAYSTOREDISPLAYNAME("realmsSettingsScreen.googlePlayStoreDisplayName"), // Google Play store
        @PowerNukkitOnly @Since("FUTURE") WINDOWSSTOREDISPLAYNAME("realmsSettingsScreen.windowsStoreDisplayName"), // Windows Store
        @PowerNukkitOnly @Since("FUTURE") XBOXONESTOREDISPLAYNAME("realmsSettingsScreen.xboxOneStoreDisplayName"), // Xbox Store
        @PowerNukkitOnly @Since("FUTURE") AMAZONSTOREDISPLAYNAME("realmsSettingsScreen.amazonStoreDisplayName"), // Amazon Appstore
        @PowerNukkitOnly @Since("FUTURE") OCULUSSTOREDISPLAYNAME("realmsSettingsScreen.oculusStoreDisplayName"), // Oculus Store
        @PowerNukkitOnly @Since("FUTURE") BERWICKSTOREDISPLAYNAME("realmsSettingsScreen.berwickStoreDisplayName"), // "PlayStation Store"
        @PowerNukkitOnly @Since("FUTURE") PS4STOREDISPLAYNAME("realmsSettingsScreen.PS4StoreDisplayName"), // "PlayStation Store"	 ### CertRequirement: ["PlayStation Store"]
        @PowerNukkitOnly @Since("FUTURE") UNKNOWNSTOREDISPLAYNAME("realmsSettingsScreen.unknownStoreDisplayName"), // unknown store
        @PowerNukkitOnly @Since("FUTURE") EXTENDINGREALM("realmsSettingsScreen.extendingRealm"), // Extending Realm...
        @PowerNukkitOnly @Since("FUTURE") OFFERERROR_TITLE("realmsSettingsScreen.offerError.title"), // Purchase Pending
        @PowerNukkitOnly @Since("FUTURE") OFFERERROR_CONTENT("realmsSettingsScreen.offerError.content"), // A purchase is already pending. You cannot make another purchase until it has been resolved. Please try again later.
        @PowerNukkitOnly @Since("FUTURE") DEV_BRANCH_LABEL("realmsSettingsScreen.dev_branch_label"), // Which commit should realm run on?
        @PowerNukkitOnly @Since("FUTURE") DEV_CURRENT_VERSION_LABEL("realmsSettingsScreen.dev_current_version_label"), // Current Version:
        @PowerNukkitOnly @Since("FUTURE") DEV_MATCHING_VERSION_LABEL("realmsSettingsScreen.dev_matching_version_label"), // Commit matching client:
        @PowerNukkitOnly @Since("FUTURE") DEV_ALL_COMMITS_LABEL("realmsSettingsScreen.dev_all_commits_label"), // All available commits:
        @PowerNukkitOnly @Since("FUTURE") DEV_NO_MATCHING_VERSION_MESSAGE("realmsSettingsScreen.dev_no_matching_version_message"), // NO MATCH FOR '%s'
        @PowerNukkitOnly @Since("FUTURE") DEV_PREV_PAGE_LABEL("realmsSettingsScreen.dev_prev_page_label"), // Prev
        @PowerNukkitOnly @Since("FUTURE") DEV_NEXT_PAGE_LABEL("realmsSettingsScreen.dev_next_page_label"), // Next
        @PowerNukkitOnly @Since("FUTURE") UPLOADCONFIRMATIONMESSAGE("realmsSettingsScreen.uploadConfirmationMessage"), // This will remove your current world from your Realm and let you replace it with a new one.  Your Realm members won't have access to your current world anymore. Do you want to continue?
        @PowerNukkitOnly @Since("FUTURE") UPLOADCONFIRMATIONTITLE("realmsSettingsScreen.uploadConfirmationTitle"), // Replace World?
        @PowerNukkitOnly @Since("FUTURE") ALLOWLIST_INVITE("realmsSettingsScreen.allowlist_invite"), // Invite
        @PowerNukkitOnly @Since("FUTURE") SEARCHBOX("realmsSettingsScreen.searchBox"), // Search...
        @PowerNukkitOnly @Since("FUTURE") UNKNOWNPACKNAME("realmsSettingsScreen.unknownPackName"), // Unknown Name
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONSBUTTON("realmsSettingsScreen.viewSubscriptionsButton"), // View Subscriptions
        @PowerNukkitOnly @Since("FUTURE") EXTENDCONSUMABLEBUTTON("realmsSettingsScreen.extendConsumableButton"), // Extend Subscription
        @PowerNukkitOnly @Since("FUTURE") EXTENDCONSUMABLEBUTTON_30("realmsSettingsScreen.extendConsumableButton.30"), // Extend by 30 Days
        @PowerNukkitOnly @Since("FUTURE") EXTENDCONSUMABLEBUTTON_180("realmsSettingsScreen.extendConsumableButton.180"), // Extend by 180 Days
        ;
        private final String code; RealmsSettingsScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum XblLogin implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") LOGINMESSAGETITLE("xblLogin.LoginMessageTitle"), // Microsoft Account
        @PowerNukkitOnly @Since("FUTURE") LOGINMESSAGE("xblLogin.LoginMessage"), // Connecting…
        ;
        private final String code; XblLogin(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Xbl implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") SAVEPURCHASE_DESCRIPTION_LINE1("xbl.savePurchase.description.line1"), // Do you want to play with whatever you buy from any Minecraft Store enabled system? Sign in with a FREE Microsoft account and sync your purchased Skins, Textures, Maps, and Mash-ups to use and play in Minecraft!
        @PowerNukkitOnly @Since("FUTURE") SAVEPURCHASE_DESCRIPTION_LINE2("xbl.savePurchase.description.line2"), // If you lose your system or uninstall Minecraft, your purchases will still be synced and accessible on any system when you use your Microsoft account.
        @PowerNukkitOnly @Since("FUTURE") SAVEPURCHASE_LEAVEONDEVICE("xbl.savePurchase.leaveOnDevice"), // Leave on Device
        @PowerNukkitOnly @Since("FUTURE") SAVEPURCHASE_TITLE("xbl.savePurchase.title"), // Save purchases to a Microsoft Account?
        @PowerNukkitOnly @Since("FUTURE") SAVEPURCHASE_SAVEBUTTON("xbl.savePurchase.saveButton"), // Save to Microsoft Account
        @PowerNukkitOnly @Since("FUTURE") SAVEPURCHASE_TOAST_TITLE("xbl.savePurchase.toast.title"), // Success!
        @PowerNukkitOnly @Since("FUTURE") SAVEPURCHASE_TOAST_MESSAGE("xbl.savePurchase.toast.message"), // Purchases synced to Microsoft Account!
        @PowerNukkitOnly @Since("FUTURE") SAVEPURCHASE_INPROGRESS_MESSAGE("xbl.savePurchase.inProgress.message"), // Transferring purchases to Microsoft Account...
        @PowerNukkitOnly @Since("FUTURE") SYNCIAP_TITLE("xbl.syncIAP.title"), // Sync purchases to your Microsoft Account?
        @PowerNukkitOnly @Since("FUTURE") SYNCIAP_DESCRIPTION("xbl.syncIAP.description"), // Sign in to a Microsoft Account to sync your Skins, Texture Packs, Worlds, and Mash-ups. They will be there for you on any device where you play Minecraft.
        @PowerNukkitOnly @Since("FUTURE") SYNCIAP_SYNCNOW("xbl.syncIAP.syncNow"), // Sync Now...
        @PowerNukkitOnly @Since("FUTURE") SYNCIAP_SYNCLATERELLIPSIS("xbl.syncIAP.syncLaterEllipsis"), // Sync Later...
        @PowerNukkitOnly @Since("FUTURE") SYNCIAP_SYNCLATER("xbl.syncIAP.syncLater"), // Sync Later
        @PowerNukkitOnly @Since("FUTURE") SYNCIAP_TOAST_TITLE("xbl.syncIAP.toast.title"), // Success!
        @PowerNukkitOnly @Since("FUTURE") SYNCIAP_TOAST_MESSAGE("xbl.syncIAP.toast.message"), // Purchases synced to your Microsoft Account!
        @PowerNukkitOnly @Since("FUTURE") SYNCIAP_INPROGRESS_MESSAGE("xbl.syncIAP.inProgress.message"), // Syncing purchases to your Microsoft Account…
        @PowerNukkitOnly @Since("FUTURE") SYNCIAP_SKIPSIGNIN_PROMPT_DESCRIPTION("xbl.syncIAP.skipSignIn.prompt.description"), // This Microsoft Account will not be the primary account for this device if you do not sync this device's purchases to this account. You will not automatically sign in when you start Minecraft.
        @PowerNukkitOnly @Since("FUTURE") SYNCIAP_CONFIRMSYNC_PROMPT_TITLE("xbl.syncIAP.confirmSync.prompt.title"), // Sync to %s?
        @PowerNukkitOnly @Since("FUTURE") SYNCIAP_CONFIRMSYNC_PROMPT_DESCRIPTION_LINE1("xbl.syncIAP.confirmSync.prompt.description.line1"), // Would you like to sync your app store purchases to %s?
        @PowerNukkitOnly @Since("FUTURE") SYNCIAP_CONFIRMSYNC_PROMPT_DESCRIPTION_LINE2("xbl.syncIAP.confirmSync.prompt.description.line2"), // Packs purchased outside Minecraft Marketplace can only be synced once. They will continue to be available to anyone who plays on this device.
        @PowerNukkitOnly @Since("FUTURE") SYNCIAP_CONFIRMSYNC_PROMPT_YES("xbl.syncIAP.confirmSync.prompt.yes"), // Yes, Sync My Purchases
        @PowerNukkitOnly @Since("FUTURE") TRANSFERENTITLEMENTS_ERROR_TITLE("xbl.transferEntitlements.error.title"), // Account Error
        @PowerNukkitOnly @Since("FUTURE") TRANSFERENTITLEMENTS_ERROR_BODY_BUTTON("xbl.transferEntitlements.error.body.button"), // There is an error with your account. You will be unable to use the marketplace until we have resolved the issue. If this issue persists for several days please contact support using the help button.
        @PowerNukkitOnly @Since("FUTURE") TRANSFERENTITLEMENTS_ERROR_BODY_NOBUTTON("xbl.transferEntitlements.error.body.nobutton"), // There is an error with your account. You will be unable to use the marketplace until we have resolved the issue. If this issue persists for several days please contact support.
        @PowerNukkitOnly @Since("FUTURE") TRANSFERENTITLEMENTS_ERROR_BUTTONTEXT("xbl.transferEntitlements.error.buttontext"), // help.mojang.com
        @PowerNukkitOnly @Since("FUTURE") TRANSFERENTITLEMENTS_ERROR_ERRORTITLE("xbl.transferEntitlements.error.errortitle"), // Error List:
        @PowerNukkitOnly @Since("FUTURE") TRANSFERENTITLEMENTS_ERROR_ERROR1("xbl.transferEntitlements.error.error1"), // Error Number
        @PowerNukkitOnly @Since("FUTURE") TRANSFERENTITLEMENTS_ERROR_ERROR2("xbl.transferEntitlements.error.error2"), // ID Number
        @PowerNukkitOnly @Since("FUTURE") SKIPSIGNIN_PROMPT_TITLE("xbl.skipSignIn.prompt.title"), // Temporary Account
        @PowerNukkitOnly @Since("FUTURE") SKIPSIGNIN_PROMPT_DESCRIPTION("xbl.skipSignIn.prompt.description"), // This Microsoft Account will not be the primary account for this device if you do not transfer this device's purchases to this account. You will not automatically sign in when you start Minecraft.
        @PowerNukkitOnly @Since("FUTURE") SIGNOUT_TITLE("xbl.signOut.title"), // Microsoft Account Purchases!
        @PowerNukkitOnly @Since("FUTURE") SIGNOUT_MESSAGE1("xbl.signOut.message1"), // While you are signed out of your Microsoft Account you will not have access to the Minecoins and items you bought in the store.
        @PowerNukkitOnly @Since("FUTURE") SIGNOUT_MESSAGE2("xbl.signOut.message2"), // Are you sure you want to do this?
        ;
        private final String code; Xbl(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Playfab implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ACCOUNT_BANNED_TITLE("playfab.account.banned.title"), // Banned
        @PowerNukkitOnly @Since("FUTURE") ACCOUNT_BANNED_BODY("playfab.account.banned.body"), // You have been banned from Minecraft. For the duration of your ban, you will be unable to play on your worlds (certain platforms), play on servers, join Realms, host or join multiplayer games, or use the Marketplace. If you are paying for a Realm, you will need to cancel your subscription through the store where it was purchased.
        @PowerNukkitOnly @Since("FUTURE") ACCOUNT_BANNED_BODY_BUTTON("playfab.account.banned.body.button"), // More Info
        ;
        private final String code; Playfab(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Store implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") SIGN_IN_WARNING_NO_XBL_AND_LOCAL_CONTENT("store.sign_in_warning.no_xbl_and_local_content"), // Important! You have purchased packs and/or Minecoins that are only available on this device and might be lost due to a device malfunction, loss, or uninstalling Minecraft! Sign in with a Microsoft Account (free) and transfer your pack entitlements and Minecoins to that account to protect and access your them on any device that you sign in on.
        @PowerNukkitOnly @Since("FUTURE") SIGN_IN_WARNING_NO_XBL_AND_NO_LOCAL_CONTENT_LINE1("store.sign_in_warning.no_xbl_and_no_local_content.line1"), // Important! Purchased packs that are only available on this device can be lost due to device malfunction, loss or uninstalling Minecraft!
        @PowerNukkitOnly @Since("FUTURE") SIGN_IN_WARNING_NO_XBL_AND_NO_LOCAL_CONTENT_LINE2("store.sign_in_warning.no_xbl_and_no_local_content.line2"), // Sign in with a Microsoft Account (free) and transfer your pack entitlements to that account to protect your purchased packs and Minecoins.
        @PowerNukkitOnly @Since("FUTURE") SIGN_IN_WARNING_NO_XBL_AND_NO_LOCAL_CONTENT_LINE3("store.sign_in_warning.no_xbl_and_no_local_content.line3"), // In addition, you will be able to access them on any device you use to play Minecraft!
        @PowerNukkitOnly @Since("FUTURE") SIGN_IN_WARNING_NO_XBL_AND_NO_LOCAL_CONTENT_LINE4("store.sign_in_warning.no_xbl_and_no_local_content.line4"), // Content purchased through a partner store will be available as long as your device is signed in to your partner store account.
        @PowerNukkitOnly @Since("FUTURE") TITLE("store.title"), // Marketplace
        @PowerNukkitOnly @Since("FUTURE") ALLSTORES("store.allStores"), // All Stores
        @PowerNukkitOnly @Since("FUTURE") MENU_HOME("store.menu.home"), // Home
        @PowerNukkitOnly @Since("FUTURE") ITEMDETAIL_BACK("store.itemDetail.back"), // Details
        @PowerNukkitOnly @Since("FUTURE") COIN_BONUS("store.coin.bonus"), // Bonus!
        @PowerNukkitOnly @Since("FUTURE") DISABLEDONBETA("store.disabledOnBeta"), // This feature is currently disabled in Beta.
        @PowerNukkitOnly @Since("FUTURE") GIFTPROMO_DAY("store.giftPromo.day"), // Day %s		## %s being day number such as "Day 1", "Day 2", etc. Please use short translations. 3 letters if possible
        @PowerNukkitOnly @Since("FUTURE") EQUIPPED("store.equipped"), // Claimed
        @PowerNukkitOnly @Since("FUTURE") PROMO_TITLE("store.promo.title"), // Summer Celebration
        @PowerNukkitOnly @Since("FUTURE") PROMO_INCOMPATIBLE("store.promo.incompatible"), // This world isn't compatible with this device. Claim it on a supported device.
        @PowerNukkitOnly @Since("FUTURE") PROMO_DETAILS("store.promo.details"), // See Details
        @PowerNukkitOnly @Since("FUTURE") PROMO_VIEW("store.promo.view"), // See in Character Creator
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS("store.realmsPlus"), // Realms Plus
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_CONTENT("store.realmsPlus.content"), // Content
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ("store.realmsPlus.faq"), // FAQ
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_BUYNOW("store.realmsPlus.buyNow"), // SUBSCRIBE NOW ## Maximum 13 characters
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_BUYNOWPERMONTH("store.realmsPlus.buyNowPerMonth"), // Subscribe Now %s/month
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_BUYNOWTRIALPERMONTH("store.realmsPlus.buyNowTrialPerMonth"), // Start Trial ## Maximum 25 characters
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_ERRORNOOFFER("store.realmsPlus.errorNoOffer"), // ERROR NO OFFER FOUND
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_MANAGESUBSCRIPTION("store.realmsPlus.manageSubscription"), // MANAGE SUBSCRIPTION
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_VIEWALLPACKSTITLE("store.realmsPlus.viewAllPacksTitle"), // A GREAT VALUE - PACKS WORTH OVER §g$150 (USD)!§r
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_NOWACTIVE("store.realmsPlus.nowActive"), // Realms Plus is now active for this device. You now have access to 150+ content packs from the marketplace at no additional cost. Up to 10 players can play on your Realms at one time, and get access to all the subscriber content in your Realm - for free!
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_BUYNOW_BUTTONTEXT("store.realmsPlus.buyNow.buttonText"), // BUY FOR %s
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_BUYNOW_VIEWTERMS("store.realmsPlus.buyNow.viewTerms"), // TERMS & CONDITIONS
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_BUYNOW_VIEWPRIVACYPOLICY("store.realmsPlus.buyNow.viewPrivacyPolicy"), // PRIVACY POLICY
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_BUYNOW_TITLE("store.realmsPlus.buyNow.title"), // Start your Realms Plus Subscription
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_STARTTRIAL_DESCRIPTION("store.realmsPlus.startTrial.description"), // Your Realm and 150+ marketplace packs will be immediately available. Up to 10 players can play at one time, and they get access to the worlds in your Realm for free! Your first month will be free, and you'll be billed %s/month afterwards and can cancel at any time.
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_NOTRIAL_DESCRIPTION("store.realmsPlus.noTrial.description"), // Your Realm and 150+ marketplace packs will be immediately available. Up to 10 players can play at one time, and they get access to the worlds in your Realm for free! Your subscription will be available for 30 days at the price of %s:minecoin:.
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_NOTRIAL_DESCRIPTION_IAP("store.realmsPlus.noTrial.description.iap"), // Your Realm and 150+ marketplace packs will be immediately available. Up to 10 players can play at one time, and they get access to the worlds in your Realm for free! You’ll be billed %s/month and you can cancel your subscription to stop future charges by accessing subscriptions settings.
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_REALMNAME_PLACEHOLDER("store.realmsPlus.realmName.placeholder"), // %s's Realm		#The string passed in here is the gamertag of the player to indicate the name of the player's world.
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_RECURRING_OFFERTRIAL("store.realmsPlus.recurring.offerTrial"), // Realms Plus is an ongoing subscription with a recurring subscription fee which is charged automatically every month until the subscription is cancelled.%sYour Realm and 150+ marketplace packs will be immediately available. Up to 10 players can play at one time, and they get access to the worlds in your Realm for free! Your first 30 days will be free, and you'll be billed %s/month afterwards. You can cancel your subscription to stop future charges by accessing subscriptions settings.
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_RECURRING_WITHOUTTRIAL("store.realmsPlus.recurring.withoutTrial"), // Realms Plus is an ongoing subscription with a recurring subscription fee which is charged automatically every month until the subscription is cancelled.%sYour Realm and 150+ marketplace packs will be immediately available. Up to 10 players can play at one time, and they get access to the worlds in your Realm for free! You'll be billed %s/month and you can cancel your subscription to stop future charges by accessing subscriptions settings.
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_CONSUMABLE_OFFERTRIAL("store.realmsPlus.consumable.offerTrial"), // Your Realm and 150+ marketplace packs will be immediately available. Up to 10 players can play at one time, and they get access to the worlds in your Realm for free! Your first 30 days will be free and you can renew for 30 days at the price of %s afterwards.
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_CONSUMABLE_WITHOUTTRIAL("store.realmsPlus.consumable.withoutTrial"), // Your Realm and 150+ marketplace packs will be immediately available. Up to 10 players can play at one time, and they get access to the worlds in your Realm for free! Your subscription will be available for 30 days at the price of %s.
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_LANDING_HEADER("store.realmsPlus.landing.header"), // Subscription Includes:
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_LANDING_HEADERTRIAL("store.realmsPlus.landing.headerTrial"), // Free 30 Day Trial, then %s/month
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_LANDING_INFO1_LINE1("store.realmsPlus.landing.info1.line1"), // Your Own Personal Realm Server – A Persistent World Always Online for You and Your Friends!
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_LANDING_INFO1_LINE2("store.realmsPlus.landing.info1.line2"), // Friends Play for Free in Your Realm
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_LANDING_INFO1_LINE3("store.realmsPlus.landing.info1.line3"), // Jump from Console to Mobile to PC - Any Device with Minecraft Marketplace
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_LANDING_INFO2_LINE1("store.realmsPlus.landing.info2.line1"), // Free Access to a Catalog of 150+ Marketplace Packs
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_LANDING_INFO2_LINE2("store.realmsPlus.landing.info2.line2"), // Worlds on Your Realm Include Secure Backups
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_LANDING_INFO2_LINE3("store.realmsPlus.landing.info2.line3"), // Your First 30 Days Will be Free
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_LANDING_INFO2_LINE4("store.realmsPlus.landing.info2.line4"), // Subscribe Now for %s/month
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ_HEADER("store.realmsPlus.faq.header"), // FREQUENTLY ASKED QUESTIONS
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ_QUESTION1("store.realmsPlus.faq.question1"), // What is Realms Plus?
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ_ANSWER1("store.realmsPlus.faq.answer1"), // Realms Plus is a subscription to a personal server supporting up to 10 simultaneous players, along with unlimited access to 150+ great Minecraft worlds, texture packs, skin packs, and mash-ups for one low monthly price.
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ_QUESTION2("store.realmsPlus.faq.question2"), // What is a personal server?
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ_ANSWER2("store.realmsPlus.faq.answer2"), // A personal server allows you to create a shared world that is always online and accessible from any device with Minecraft Marketplace. Players that you invite to your Realm can play this world at any time.
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ_QUESTION3("store.realmsPlus.faq.question3"), // Do my friends need to purchase Realms Plus to play on my Realm?
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ_ANSWER3("store.realmsPlus.faq.answer3"), // Your friends don’t need to purchase a Realms Plus subscription to play on your Realm.  You can invite any friend (that has their multiplayer permissions enabled) to join your Realm for free.
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ_QUESTION4("store.realmsPlus.faq.question4"), // Which devices support Realms Plus for Minecraft?
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ_ANSWER4("store.realmsPlus.faq.answer4"), // Realms Plus is currently available for Minecraft on mobile, Windows 10, the Xbox One consoles as well as the Nintendo Switch, and PlayStation 4.  You can play Realms and use any content from Realms Plus on any of these devices if you’re signed into your Microsoft Account.
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ_QUESTION5("store.realmsPlus.faq.question5"), // How much does a Realms Plus subscription cost?
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ_ANSWER5("store.realmsPlus.faq.answer5"), // %s per month for a 10-player server and access to 150+ marketplace packs.
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ_QUESTION6("store.realmsPlus.faq.question6"), // How often are new packs added to Realms Plus?
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ_ANSWER6("store.realmsPlus.faq.answer6"), // New packs are added to Realms Plus monthly.
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ_QUESTION7("store.realmsPlus.faq.question7"), // How long do I have access to Packs within Realms Plus?
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ_ANSWER7("store.realmsPlus.faq.answer7"), // Realms Plus members enjoy unlimited access to over 150+ great Minecraft worlds, texture packs, skin packs, and mash-ups, until either the subscription expires, or a pack leaves the catalog.
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ_QUESTION8("store.realmsPlus.faq.question8"), // Where can I use Realms Plus packs?
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ_ANSWER8("store.realmsPlus.faq.answer8"), // Worlds and packs included in the subscription can either be played online, played on your personal Realm, or played on a local device.  You just need to play online once every 30 days to validate that your subscription is active.
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ_QUESTION9("store.realmsPlus.faq.question9"), // What happens to my Realms and worlds when my subscription expires?
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FAQ_ANSWER9("store.realmsPlus.faq.answer9"), // If your subscription ends, you and your friends will no longer be able to play online together on Realms, and you will no longer have access to Realms Plus packs.  You can download any world saved to your Realm (within 18 months of ending your subscription).  If you used Realms Plus worlds, texture packs, or mash-ups you will need to purchase those packs in the store or, if those packs are still in Realms Plus, re-subscribe, to play those world templates.
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_CONTENT_SKINDESCRIPTION("store.realmsPlus.content.skinDescription"), // Change your look with skins!
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_CONTENT_WORLDDESCRIPTION("store.realmsPlus.content.worldDescription"), // Explore popular content packs!
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_CONTENT_TEXTUREDESCRIPTION("store.realmsPlus.content.textureDescription"), // New visuals for your worlds!
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_CONTENT_MASHUPDESCRIPTION("store.realmsPlus.content.mashupDescription"), // Try a bit of everything in mash-ups!
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_CONTENT_FRIENDSGETACCESS("store.realmsPlus.content.friendsGetAccess"), // Your Friends Get Access to the Content Used in Your Realm for Free
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_CONTENT_POPULARPACKS("store.realmsPlus.content.popularPacks"), // Popular Packs in Realms Plus:
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_CONTENT_VIEWALLPACKS("store.realmsPlus.content.viewAllPacks"), // VIEW ALL PACKS
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_CONTENT_CONTENTDESCRIPTION("store.realmsPlus.content.contentDescription"), // Tap into the source of amazing Minecraft content! With Realms Plus, you get instant access to 150+ marketplace items like mash-ups, worlds, skin packs and epic adventures – with new additions each month. Your content is stored on your own personal server, and made available on any platform where you enjoy both Realms and Minecraft Marketplace. Up to 10 players can play at one time, and they get access to the worlds in your Realm for free!
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_FREETRIAL("store.realmsPlus.freeTrial"), // START FREE TRIAL
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_BUTTON("store.inventory.button"), // Inventory
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_TITLE("store.inventory.title"), // Inventory
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_DROPDOWN_OWNED("store.inventory.dropdown.owned"), // Owned
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_DROPDOWN_CURRENT("store.inventory.dropdown.current"), // Current
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_DROPDOWN_REMOVED("store.inventory.dropdown.removed"), // Removed
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_BUTTON_SUBSCRIPTIONS("store.inventory.button.subscriptions"), // Subscriptions
        @PowerNukkitOnly @Since("FUTURE") FREE("store.free"), // Free
        @PowerNukkitOnly @Since("FUTURE") REDEEM("store.redeem"), // Get
        @PowerNukkitOnly @Since("FUTURE") VIEW_ACHIEVEMENT("store.view_achievement"), // View Achievement
        @PowerNukkitOnly @Since("FUTURE") INCOMPATIBLE("store.incompatible"), // Incompatible
        @PowerNukkitOnly @Since("FUTURE") INCOMPATIBLEONDEVICE("store.incompatibleOnDevice"), // Incompatible on Device
        @PowerNukkitOnly @Since("FUTURE") ITEMISINCOMPATIBLE("store.itemIsIncompatible"), // This item is not compatible with your device.
        @PowerNukkitOnly @Since("FUTURE") ITEMMAYNOTBECOMPATIBLE("store.itemMayNotBeCompatible"), // This item may not be compatible with your device.
        @PowerNukkitOnly @Since("FUTURE") OWNED("store.owned"), // Owned
        @PowerNukkitOnly @Since("FUTURE") OWNED_LEGACY("store.owned.legacy"), // Owned (P)
        @PowerNukkitOnly @Since("FUTURE") UNLOCKED("store.unlocked"), // Unlocked
        @PowerNukkitOnly @Since("FUTURE") MYPACKS("store.mypacks"), // %s's Packs
        @PowerNukkitOnly @Since("FUTURE") ERROR("store.error"), // Marketplace Error
        @PowerNukkitOnly @Since("FUTURE") TOAST_DOWNLOADSTARTED("store.toast.downloadStarted"), // Download Started: %s
        @PowerNukkitOnly @Since("FUTURE") TOAST_DOWNLOADCOMPLETE("store.toast.downloadComplete"), // Download Complete: %s
        @PowerNukkitOnly @Since("FUTURE") TOAST_DOWNLOADRESUMED("store.toast.downloadResumed"), // Download Resumed: %s
        @PowerNukkitOnly @Since("FUTURE") TOAST_DOWNLOADFAILED("store.toast.downloadFailed"), // Download Failed: %s
        @PowerNukkitOnly @Since("FUTURE") TOAST_DOWNLOADPAUSED("store.toast.downloadPaused"), // Download Paused: %s
        @PowerNukkitOnly @Since("FUTURE") POPUP_GOBACK("store.popup.goBack"), // Go Back
        @PowerNukkitOnly @Since("FUTURE") POPUP_XBLREQUIRED_TITLE("store.popup.xblRequired.title"), // Sign in for Free
        @PowerNukkitOnly @Since("FUTURE") POPUP_XBLREQUIRED_BUTTON1("store.popup.xblRequired.button1"), // Sign In
        @PowerNukkitOnly @Since("FUTURE") POPUP_XBLREQUIRED_BUTTON2("store.popup.xblRequired.button2"), // Cancel
        @PowerNukkitOnly @Since("FUTURE") POPUP_XBLREQUIRED_MESSAGE("store.popup.xblRequired.message"), // You need to sign in before unlocking items in the store so that we can remember what you have already unlocked.
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOAD_TITLE_KB("store.popup.download.title.KB"), // Download Content? - %s KB
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOAD_TITLE_MB("store.popup.download.title.MB"), // Download Content? - %s MB
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOAD_MSG("store.popup.download.msg"), // This will download the %s to your device.
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOADCELL_TITLE_KB("store.popup.downloadCell.title.KB"), // Download Over Cellular? - %s KB
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOADCELL_TITLE_MB("store.popup.downloadCell.title.MB"), // Download Over Cellular? - %s MB
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOADCELL_MSG("store.popup.downloadCell.msg"), // You are not connected to Wi-Fi.  Do you want to download the %s to your device over your cellular network?
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOAD_BUTTON1("store.popup.download.button1"), // Download
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOAD_BUTTON2("store.popup.download.button2"), // Skip
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOAD_BACK("store.popup.download.back"), // Go Back
        @PowerNukkitOnly @Since("FUTURE") POPUP_WIFIWARN_TITLE("store.popup.wifiWarn.title"), // Warning
        @PowerNukkitOnly @Since("FUTURE") POPUP_WIFIWARN_MSG("store.popup.wifiWarn.msg"), // You are not connected to WiFi, download anyway?
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOAD_NOINTERNET_TITLE("store.popup.download.noInternet.title"), // Something Went Wrong
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOAD_NOINTERNET_MSG("store.popup.download.noInternet.msg"), // Sorry, we were unable to download the %s. Maybe check your internet connection?
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOAD_NOSPACE_TITLE_KB("store.popup.download.noSpace.title.KB"), // Not Enough Space - %s KB
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOAD_NOSPACE_TITLE_MB("store.popup.download.noSpace.title.MB"), // Not Enough Space - %s MB
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOAD_NOSPACE_MSG("store.popup.download.noSpace.msg"), // You do not have enough space available on your device to download the %s.
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOAD_UNOWNED_TITLE("store.popup.download.unOwned.title"), // Purchase Pack?
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOAD_UNOWNED_MSG("store.popup.download.unOwned.msg"), // Would you like to purchase the packs used by this world?
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOAD_UNOWNEDTEMPLATE_TITLE("store.popup.download.unOwnedTemplate.title"), // Purchase World Template?
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOAD_UNOWNEDTEMPLATE_MSG("store.popup.download.unOwnedTemplate.msg"), // This world was created using a template that you have not unlocked. You must purchase the template to unlock this world.  Would you like to purchase the template used by this world?
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOADWORLDTEMPLATE_NOINTERNET_TITLE("store.popup.downloadWorldTemplate.noInternet.title"), // Need Internet for Template
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOADWORLDTEMPLATE_NOINTERNET_MSG("store.popup.downloadWorldTemplate.noInternet.msg"), // We're unable to connect to the Marketplace to download the template used to create this world. That template contained an Add-On pack that you need to continue playing this world. Reconnect to the internet and download the template to continue.
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOADWORLDTEMPLATE_NOSPACE_MSG("store.popup.downloadWorldTemplate.noSpace.msg"), // You do not have enough space to download the template used to create this world.  That template contained an Add-On pack that you need to continue playing this world.  Clear up space on your device to continue.
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOADWORLDTEMPLATE_TITLE_KB("store.popup.downloadWorldTemplate.title.KB"), // Download Missing Template? - %s KB
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOADWORLDTEMPLATE_TITLE_MB("store.popup.downloadWorldTemplate.title.MB"), // Download Missing Template? - %s MB
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOADWORLDTEMPLATE_MSG("store.popup.downloadWorldTemplate.msg"), // The template used to create this world is missing.  That template contained an Add-On pack that you need to continue playing this world.
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOADWORLDTEMPLATE_MSG_REMOVEPACKS("store.popup.downloadWorldTemplate.msg.removePacks"), // You can go to this world's resource and behavior pack settings and remove those packs to continue, but the world may no longer be playable.
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOADWORLDTEMPLATE_DOWNLOAD("store.popup.downloadWorldTemplate.download"), // Download Template
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOADWORLDTEMPLATECELL_DOWNLOAD("store.popup.downloadWorldTemplateCell.download"), // Download Template Over Cellular
        @PowerNukkitOnly @Since("FUTURE") POPUP_UPDATE_TITLE_KB("store.popup.update.title.KB"), // Update Content? - %s KB
        @PowerNukkitOnly @Since("FUTURE") POPUP_UPDATE_TITLE_MB("store.popup.update.title.MB"), // Update Content? - %s MB
        @PowerNukkitOnly @Since("FUTURE") POPUP_UPDATE_MSG("store.popup.update.msg"), // This will update the %s on your device.
        @PowerNukkitOnly @Since("FUTURE") POPUP_UPDATECELL_TITLE_KB("store.popup.updateCell.title.KB"), // Update Over Cellular? - %s KB
        @PowerNukkitOnly @Since("FUTURE") POPUP_UPDATECELL_TITLE_MB("store.popup.updateCell.title.MB"), // Update Over Cellular? - %s MB
        @PowerNukkitOnly @Since("FUTURE") POPUP_UPDATECELL_MSG("store.popup.updateCell.msg"), // You are not connected to Wi-Fi.  Do you want to update the %s on your device over your cellular network?
        @PowerNukkitOnly @Since("FUTURE") POPUP_UPDATE_BUTTON1("store.popup.update.button1"), // Update
        @PowerNukkitOnly @Since("FUTURE") POPUP_UPDATE_BUTTON2("store.popup.update.button2"), // Skip
        @PowerNukkitOnly @Since("FUTURE") POPUP_UPDATE_BACK("store.popup.update.back"), // Go Back
        @PowerNukkitOnly @Since("FUTURE") POPUP_PURCHASEINPROGRESS_TITLE("store.popup.purchaseInProgress.title"), // Purchase in progress
        @PowerNukkitOnly @Since("FUTURE") POPUP_PURCHASEINPROGRESS_MSG("store.popup.purchaseInProgress.msg"), // This shouldn't take long.
        @PowerNukkitOnly @Since("FUTURE") POPUP_PURCHASEFAILED_TITLE("store.popup.purchaseFailed.title"), // Something Went Wrong
        @PowerNukkitOnly @Since("FUTURE") POPUP_PURCHASEFAILED_MSG("store.popup.purchaseFailed.msg"), // Sorry, we were unable to complete your purchase. Maybe check your internet connection?
        @PowerNukkitOnly @Since("FUTURE") POPUP_PURCHASEFAILEDINSUFFICIENTFUNDS_TITLE("store.popup.purchaseFailedInsufficientFunds.title"), // You Need More Minecoins
        @PowerNukkitOnly @Since("FUTURE") POPUP_PURCHASEFAILEDINSUFFICIENTFUNDS_MSG("store.popup.purchaseFailedInsufficientFunds.msg"), // You do not have enough Minecoins to unlock this item. You can buy Minecoins from your app store.
        @PowerNukkitOnly @Since("FUTURE") POPUP_PURCHASEFAILEDINSUFFICIENTFUNDS_BUYBUTTON("store.popup.purchaseFailedInsufficientFunds.buyButton"), // Get Minecoins
        @PowerNukkitOnly @Since("FUTURE") POPUP_PURCHASEPRICEMISMATCH_MSG("store.popup.purchasePriceMismatch.msg"), // Sorry, we were unable to complete your purchase.  Please try again later.
        @PowerNukkitOnly @Since("FUTURE") POPUP_TRIALUPGRADEFAIL_TITLE("store.popup.trialUpgradeFail.title"), // Game Unlock Error
        @PowerNukkitOnly @Since("FUTURE") POPUP_TRIALUPGRADEFAIL_MSG("store.popup.trialUpgradeFail.msg"), // It looks like you are signed into a different Microsoft Account from the one that first downloaded the Minecraft Trial. Try again after signing in with that account.
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOADED_UNOWNEDTEMPLATE_TITLE("store.popup.downloaded.unOwnedTemplate.title"), // Purchase World Template?
        @PowerNukkitOnly @Since("FUTURE") POPUP_DOWNLOADED_UNOWNEDTEMPLATE_MSG("store.popup.downloaded.unOwnedTemplate.msg"), // You do not own this template, and must purchase it to unlock it.  Would you like to purchase the template?
        @PowerNukkitOnly @Since("FUTURE") POPUP_RTX_TITLE("store.popup.rtx.title"), // Download Ray Tracing Packs?
        @PowerNukkitOnly @Since("FUTURE") POPUP_RTX_MSG("store.popup.rtx.msg"), // This world has ray tracing enabled resource packs applied that you must download in order to play. Your device is not compatible with ray tracing so you will only see the basic textures after downloading. Would you like to download this pack?
        @PowerNukkitOnly @Since("FUTURE") PURCHASE_SUCCESS("store.purchase.success"), // You just bought: %s
        @PowerNukkitOnly @Since("FUTURE") PURCHASE_BUNDLE("store.purchase.bundle"), // Unlock %d of %d Packs?
        @PowerNukkitOnly @Since("FUTURE") PURCHASE_BUNDLE_CONFIRM("store.purchase.bundle.confirm"), // Unlock now!
        @PowerNukkitOnly @Since("FUTURE") PURCHASE_BUNDLE_PARTIALLYOWNEDWARNING("store.purchase.bundle.partiallyOwnedWarning"), // Just so you know, you already own the following packs: %s.  Would you like to unlock the rest of the packs in this bundle?
        @PowerNukkitOnly @Since("FUTURE") PURCHASE_BUNDLE_OWNED("store.purchase.bundle.owned"), // Owned
        @PowerNukkitOnly @Since("FUTURE") PURCHASE_BUNDLE_UNOWNED("store.purchase.bundle.unowned"), // You'll get
        @PowerNukkitOnly @Since("FUTURE") CREATEDBY("store.createdBy"), // By %s
        @PowerNukkitOnly @Since("FUTURE") SEEMOREBY("store.seeMoreBy"), // See more by %s
        @PowerNukkitOnly @Since("FUTURE") SEEMOREBY_MULTICREATORBUNDLE("store.seeMoreBy.multiCreatorBundle"), // See More by Bundle Creators
        @PowerNukkitOnly @Since("FUTURE") FETCHINGITEM("store.fetchingItem"), // Connecting to Marketplace...
        @PowerNukkitOnly @Since("FUTURE") TIMER_DAYSABBREVIATED("store.timer.daysAbbreviated"), // %sd	## This is to let player know how many days are left in a sale. It needs to be abbreviated with no more than 3 characters
        @PowerNukkitOnly @Since("FUTURE") TIMER_HOURSABBREVIATED("store.timer.hoursAbbreviated"), // %shr	## This is to let player know how many days are left in a sale. It needs to be abbreviated with no more than 3 characters
        @PowerNukkitOnly @Since("FUTURE") TIMER_MINUTESABBREVIATED("store.timer.minutesAbbreviated"), // %smin	## This is to let player know how many days are left in a sale. It needs to be abbreviated with no more than 3 characters
        @PowerNukkitOnly @Since("FUTURE") TIMER_SECONDSABBREVIATED("store.timer.secondsAbbreviated"), // %ssec	## This is to let player know how many days are left in a sale. It needs to be abbreviated with no more than 3 characters
        @PowerNukkitOnly @Since("FUTURE") TIMER_LEFT("store.timer.left"), // %s left
        @PowerNukkitOnly @Since("FUTURE") STARTMENU_SALE("store.startMenu.sale"), // Sale!
        @PowerNukkitOnly @Since("FUTURE") PROGRESS_FETCHINGPRODUCTS("store.progress.fetchingProducts"), // Getting products
        @PowerNukkitOnly @Since("FUTURE") PROGRESS_CHECKINGDOWNLOAD("store.progress.checkingDownload"), // Checking download
        @PowerNukkitOnly @Since("FUTURE") CONTENT_DOWNLOAD("store.content.download"), // Download
        @PowerNukkitOnly @Since("FUTURE") CONTENT_UPDATE("store.content.update"), // Update
        @PowerNukkitOnly @Since("FUTURE") CONTENT_UPDATING("store.content.updating"), // Updating...
        @PowerNukkitOnly @Since("FUTURE") CONTENT_REQUIREXBL_SIGNEDIN("store.content.requireXbl.signedIn"), // Download for free with a Microsoft Account.
        @PowerNukkitOnly @Since("FUTURE") CONTENT_REQUIREXBL_NOTSIGNEDIN("store.content.requireXbl.notSignedIn"), // Sign in to a Microsoft Account to unlock.
        @PowerNukkitOnly @Since("FUTURE") MASHUP_COUNT_PERSONAPIECE("store.mashup.count.personaPiece"), // 1 Character Piece
        @PowerNukkitOnly @Since("FUTURE") MASHUP_COUNT_PERSONAPIECES("store.mashup.count.personaPieces"), // %s Character Pieces
        @PowerNukkitOnly @Since("FUTURE") MASHUP_COUNT_SKIN("store.mashup.count.skin"), // 1 Skin
        @PowerNukkitOnly @Since("FUTURE") MASHUP_COUTN_SKINS("store.mashup.coutn.skins"), // %s Skins
        @PowerNukkitOnly @Since("FUTURE") MASHUP_COUNT_TEXTUREPACK("store.mashup.count.texturePack"), // 1 Texture Pack
        @PowerNukkitOnly @Since("FUTURE") MASHUP_COUNT_TEXTUREPACKS("store.mashup.count.texturePacks"), // %s Texture Packs	#number of texture packs
        @PowerNukkitOnly @Since("FUTURE") MASHUP_COUNT_WORLD("store.mashup.count.world"), // 1 World 
        @PowerNukkitOnly @Since("FUTURE") MASHUP_COUNT_WORLDS("store.mashup.count.worlds"), // %s Worlds	#number of worlds
        @PowerNukkitOnly @Since("FUTURE") MASHUP_BUNDLE("store.mashup.bundle"), // Bundle
        @PowerNukkitOnly @Since("FUTURE") MASHUP_BUNDLE_MULTIPLECREATORS("store.mashup.bundle.multipleCreators"), // Multiple Creators
        @PowerNukkitOnly @Since("FUTURE") MASHUP_CONTINUE("store.mashup.continue"), // Continue
        @PowerNukkitOnly @Since("FUTURE") MASHUP_CREATEWORLD("store.mashup.createWorld"), // Create this World!
        @PowerNukkitOnly @Since("FUTURE") MASHUP_LEAVEWORLDTOCREATE("store.mashup.leaveWorldToCreate"), // Must Exit World Before Creating
        @PowerNukkitOnly @Since("FUTURE") MASHUP_EQUIPSKIN("store.mashup.equipSkin"), // Equip
        @PowerNukkitOnly @Since("FUTURE") MASHUP_EQUIPTHISSKIN("store.mashup.equipThisSkin"), // Equip the %s Skin!
        @PowerNukkitOnly @Since("FUTURE") MASHUP_READMORE("store.mashup.readMore"), // Read More
        @PowerNukkitOnly @Since("FUTURE") MASHUP_READLESS("store.mashup.readLess"), // Read Less
        @PowerNukkitOnly @Since("FUTURE") MASHUP_MASHUPPACK("store.mashup.mashupPack"), // Mash-up Pack
        @PowerNukkitOnly @Since("FUTURE") MASHUP_SKINPACK("store.mashup.skinPack"), // Skin Pack
        @PowerNukkitOnly @Since("FUTURE") MASHUP_TEXTUREPACK("store.mashup.texturePack"), // Texture Pack
        @PowerNukkitOnly @Since("FUTURE") MASHUP_RATINGS("store.mashup.ratings"), // Ratings
        @PowerNukkitOnly @Since("FUTURE") MASHUP_WORLD("store.mashup.world"), // World
        @PowerNukkitOnly @Since("FUTURE") MASHUP_MISSINGCONTENT("store.mashup.missingContent"), // Unable to complete action. Content missing locally.
        @PowerNukkitOnly @Since("FUTURE") MASHUP_TITLE_BUNDLES("store.mashup.title.bundles"), // %s Packs Included in Bundle!
        @PowerNukkitOnly @Since("FUTURE") MASHUP_TITLE_BUNDLEUPSELL("store.mashup.title.bundleUpsell"), // Get This & More in a Bundle!
        @PowerNukkitOnly @Since("FUTURE") MASHUP_TITLE_RESOURCEPACK("store.mashup.title.resourcePack"), // Take a tour!
        @PowerNukkitOnly @Since("FUTURE") MASHUP_TITLE_SKINPACK("store.mashup.title.skinPack"), // %s: %s
        @PowerNukkitOnly @Since("FUTURE") MASHUP_TITLE_WORLDVIEW("store.mashup.title.worldView"), // Journey in a new world!
        @PowerNukkitOnly @Since("FUTURE") MASHUP_TITLE_RATINGS("store.mashup.title.ratings"), // Community Ratings
        @PowerNukkitOnly @Since("FUTURE") MASHUP_TITLE_RECENTLYVIEWED("store.mashup.title.recentlyViewed"), // Recently Viewed
        @PowerNukkitOnly @Since("FUTURE") MASHUP_TITLE_RELATEDITEMS("store.mashup.title.relatedItems"), // Related Items
        @PowerNukkitOnly @Since("FUTURE") MASHUP_MASHUPCONTENTSFULL("store.mashup.mashupContentsFull"), // %s Skins, Texture Pack, and World
        @PowerNukkitOnly @Since("FUTURE") MASHUP_MASHUPCONTENTSSKINANDTEXTUREPACK("store.mashup.mashupContentsSkinAndTexturePack"), // %s Skins and a Texture Pack
        @PowerNukkitOnly @Since("FUTURE") MASHUP_MASHUPCONTENTSSKINANDWORLD("store.mashup.mashupContentsSkinAndWorld"), // %s Skins and a World
        @PowerNukkitOnly @Since("FUTURE") MASHUP_MASHUPCONTENTSTEXTUREPACKANDWORLD("store.mashup.mashupContentsTexturePackAndWorld"), // Texture Pack and a World
        @PowerNukkitOnly @Since("FUTURE") MASHUP_MASHUPCONTENTSSKINPACK("store.mashup.mashupContentsSkinPack"), // %s Skins
        @PowerNukkitOnly @Since("FUTURE") MASHUP_LAST_UPDATED("store.mashup.last_updated"), // Last Updated: %s
        @PowerNukkitOnly @Since("FUTURE") MASHUP_UP_TO_DATE("store.mashup.up_to_date"), // Pack is up to date
        @PowerNukkitOnly @Since("FUTURE") MASHUP_OUT_OF_DATE_TOOLTIP("store.mashup.out_of_date_tooltip"), // This pack may not have skins for items/blocks released after its latest update
        @PowerNukkitOnly @Since("FUTURE") MASHUP_DESCRIPTION("store.mashup.description"), // DESCRIPTION
        @PowerNukkitOnly @Since("FUTURE") NEW_ICON("store.new.icon"), // New
        @PowerNukkitOnly @Since("FUTURE") OFFERDESCRIPTION_TITLE("store.offerDescription.title"), // Pack Description
        @PowerNukkitOnly @Since("FUTURE") RATINGS_RATINGSCOUNT("store.ratings.ratingsCount"), // %s Ratings
        @PowerNukkitOnly @Since("FUTURE") RATINGS_RATINGOUTOFFIVE("store.ratings.ratingOutOfFive"), // %s out of 5 stars
        @PowerNukkitOnly @Since("FUTURE") RATINGS_RATECONTENT("store.ratings.rateContent"), // Rate this Pack
        @PowerNukkitOnly @Since("FUTURE") RATINGS_RATECONTENTGENERAL("store.ratings.rateContentGeneral"), // Rate this Content
        @PowerNukkitOnly @Since("FUTURE") RATINGS_YOURRATING("store.ratings.yourRating"), // Your Rating: 
        @PowerNukkitOnly @Since("FUTURE") RATINGS_STARS("store.ratings.stars"), //  %s Stars
        @PowerNukkitOnly @Since("FUTURE") RATINGS_RATE("store.ratings.rate"), // Rate this pack!
        @PowerNukkitOnly @Since("FUTURE") RATINGS_SIGNIN_TITLE("store.ratings.signIn.title"), // Rate Items in the Marketplace
        @PowerNukkitOnly @Since("FUTURE") RATINGS_SIGNIN_DESCRIPTION1("store.ratings.signIn.description1"), // Tell the creator and the community about your experience with this item!
        @PowerNukkitOnly @Since("FUTURE") RATINGS_SIGNIN_DESCRIPTION2("store.ratings.signIn.description2"), // Before we can let you rate an item, you will need to sign in with a Microsoft Account.
        @PowerNukkitOnly @Since("FUTURE") PURCHASE_SUCCESS_REALMONEY1("store.purchase.success.realMoney1"), // You just unlocked: %s for %s 
        @PowerNukkitOnly @Since("FUTURE") PURCHASE_SUCCESS_REALMONEY2("store.purchase.success.realMoney2"), // +%s:minecoin:
        @PowerNukkitOnly @Since("FUTURE") PURCHASE_SIGNIN("store.purchase.signIn"), // Expand your game with tons of great content.
        @PowerNukkitOnly @Since("FUTURE") PURCHASE_SIGNINPART2("store.purchase.signInPart2"), // Sign in with a Microsoft Account to start using the Marketplace!
        @PowerNukkitOnly @Since("FUTURE") PURCHASE_REALMONEY_DISCLAIMER("store.purchase.realmoney.disclaimer"), // *Buys %s Minecoins for %s and redeems this pack for %s Minecoins leaving %s left over.
        @PowerNukkitOnly @Since("FUTURE") PURCHASE_NOTAVAILABLE("store.purchase.notAvailable"), // Currently Not Available
        @PowerNukkitOnly @Since("FUTURE") BUNDLEUPSELL_CONTENTS_SINGLE("store.bundleUpsell.contents.single"), // +1 More Pack
        @PowerNukkitOnly @Since("FUTURE") BUNDLEUPSELL_CONTENTS_PLURAL("store.bundleUpsell.contents.plural"), // +%s More Packs
        @PowerNukkitOnly @Since("FUTURE") COINS_CURRENTCOINS("store.coins.currentCoins"), // You Have %s Minecoins
        @PowerNukkitOnly @Since("FUTURE") COINS_PURCHASE_CONFIRMATION("store.coins.purchase.confirmation"), // Get more coins to unlock this pack?
        @PowerNukkitOnly @Since("FUTURE") COINS_PURCHASE_COINSLEFTTOBUY("store.coins.purchase.coinsLeftToBuy"), // You need %s more coins to unlock this pack.
        @PowerNukkitOnly @Since("FUTURE") COINS_PURCHASE("store.coins.purchase"), // Purchase Minecoins
        @PowerNukkitOnly @Since("FUTURE") COINS_OFFER0("store.coins.offer0"), // Stack of Minecoins!
        @PowerNukkitOnly @Since("FUTURE") COINS_OFFER1("store.coins.offer1"), // Pile of Minecoins!
        @PowerNukkitOnly @Since("FUTURE") COINS_OFFER2("store.coins.offer2"), // Mountain of Minecoins!
        @PowerNukkitOnly @Since("FUTURE") COINS_HEADER("store.coins.header"), // Use Minecoins to unlock all kinds of cool stuff!
        @PowerNukkitOnly @Since("FUTURE") COINS_VALUE("store.coins.value"), // Best Value!
        @PowerNukkitOnly @Since("FUTURE") COINS_PURCHASE_TOAST_WITHCOINCOUNT("store.coins.purchase.toast.withCoinCount"), // You just bought %s Minecoins!
        @PowerNukkitOnly @Since("FUTURE") COINS_PURCHASE_TOAST_UNKNOWNCOINCOUNT("store.coins.purchase.toast.unknownCoinCount"), // You just bought Minecoins!
        @PowerNukkitOnly @Since("FUTURE") COINS_PURCHASED_FAILED_TITLE("store.coins.purchased.failed.title"), // Something Went Wrong
        @PowerNukkitOnly @Since("FUTURE") COINS_PURCHASED_FAILED_BODY("store.coins.purchased.failed.body"), // We were unable to connect to the app store. Maybe sign in to the app store or try checking your internet connection.
        @PowerNukkitOnly @Since("FUTURE") COINS_TOOMANYCOINS("store.coins.tooManyCoins"), // Use some of your Minecoins and then you can buy more.
        @PowerNukkitOnly @Since("FUTURE") COINS_INCOMPLETE_TITLE("store.coins.incomplete.title"), // Incomplete Minecoin Purchase
        @PowerNukkitOnly @Since("FUTURE") COINS_INCOMPLETE_FULFILL_A("store.coins.incomplete.fulfill.a"), // It looks like we didn't finish things last time. Let's complete your purchase now.
        @PowerNukkitOnly @Since("FUTURE") COINS_INCOMPLETE_FULFILL_B("store.coins.incomplete.fulfill.b"), // It looks like you started a purchase with a different Microsoft Account. Do you want to complete the purchase with this account instead?
        @PowerNukkitOnly @Since("FUTURE") COINS_INCOMPLETE_FULFILL_C("store.coins.incomplete.fulfill.c"), // Someone started a purchase with the billing account on this device. Would you like to complete the purchase with this account?
        @PowerNukkitOnly @Since("FUTURE") COINS_FIXAPPRECEIPT_TITLE("store.coins.fixAppReceipt.title"), // Something went wrong
        @PowerNukkitOnly @Since("FUTURE") COINS_FIXAPPRECEIPT_BODY("store.coins.fixAppReceipt.body"), // There appears to be a problem with your App Receipt, please sign in to continue.
        @PowerNukkitOnly @Since("FUTURE") COINS_FIXAPPRECEIPT_BUTTON("store.coins.fixAppReceipt.button"), // Sign In to Store
        @PowerNukkitOnly @Since("FUTURE") FEATURED_REALMS_TITLE("store.featured.realms.title"), // Try Realms Free
        @PowerNukkitOnly @Since("FUTURE") FEATURED_REALMS_DESC("store.featured.realms.desc"), // Experience the best way to play Minecraft with your friends.
        @PowerNukkitOnly @Since("FUTURE") HYPERLINK_CREATOR_NOTFOUND("store.hyperlink.creator.notFound"), // Sorry, but the creator specified in the hyperlink was not found.
        @PowerNukkitOnly @Since("FUTURE") HYPERLINK_INGAME("store.hyperlink.ingame"), // Sorry, hyperlinks are not allowed while in a world.  Please exit world and try again.
        @PowerNukkitOnly @Since("FUTURE") RESOURCE_TRY("store.resource.try"), // Try it out!
        @PowerNukkitOnly @Since("FUTURE") RESOURCE_CREATE("store.resource.create"), // Manage your Resource Packs
        @PowerNukkitOnly @Since("FUTURE") RESOURCE_SCREENSHOTS("store.resource.screenshots"), // Screenshots
        @PowerNukkitOnly @Since("FUTURE") RESOURCEPACK_ACTIVATETEXTUREPACK("store.resourcePack.activateTexturePack"), // Activate Texture Pack!
        @PowerNukkitOnly @Since("FUTURE") THREE_PSERVERITEM_FETCHINGCANCEL("store.3pserverItem.fetchingCancel"), // Cancel
        @PowerNukkitOnly @Since("FUTURE") THREE_PSERVERITEM_FETCHINGITEM("store.3pserverItem.fetchingItem"), // %s has something fun to share with you.
        @PowerNukkitOnly @Since("FUTURE") THREE_PSERVERITEM_FETCHINGITEMTITLE("store.3pserverItem.fetchingItemTitle"), // Just a moment
        @PowerNukkitOnly @Since("FUTURE") THREE_PSERVERITEM_UNLOCK("store.3pserverItem.unlock"), // Unlock for %s
        @PowerNukkitOnly @Since("FUTURE") THREE_PSERVERITEM_ALREADYPURCHASED("store.3pserverItem.alreadyPurchased"), // Owned
        @PowerNukkitOnly @Since("FUTURE") RESTORE_DESCRIPTION("store.restore.description"), // We're restoring your purchases!
        @PowerNukkitOnly @Since("FUTURE") RESTORE_FAILED("store.restore.failed"), // Sorry, we were unable to restore your purchases. Maybe check your internet connection?
        @PowerNukkitOnly @Since("FUTURE") CONNECTION_FAILED_TITLE("store.connection.failed.title"), // Something Went Wrong
        @PowerNukkitOnly @Since("FUTURE") CONNECTION_FAILED_BODY("store.connection.failed.body"), // We're unable to connect to the Marketplace. Maybe check your internet connection?
        @PowerNukkitOnly @Since("FUTURE") FEATURED_CREATEDBY("store.featured.createdBy"), // Created by %s
        @PowerNukkitOnly @Since("FUTURE") DOWNLOADING("store.downloading"), // Downloading...
        @PowerNukkitOnly @Since("FUTURE") DOWNLOADING_TITLE("store.downloading.title"), // Downloading: %s
        @PowerNukkitOnly @Since("FUTURE") UPDATING("store.updating"), // Updating...
        @PowerNukkitOnly @Since("FUTURE") UPDATING_TITLE("store.updating.title"), // Updating: %s
        @PowerNukkitOnly @Since("FUTURE") IMPORTING_TITLE("store.importing.title"), // Importing: %s
        @PowerNukkitOnly @Since("FUTURE") IMPORTING("store.importing"), // Importing...
        @PowerNukkitOnly @Since("FUTURE") SHOWMORE("store.showMore"), // See All %d
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_NO_XBL("store.inventory.no.xbl"), // My Packs
        @PowerNukkitOnly @Since("FUTURE") PROMO_TODAY("store.promo.today"), // Today Only!
        @PowerNukkitOnly @Since("FUTURE") PROMO_UPSELL("store.promo.upsell"), // Don't Miss Today's Free Gift!
        @PowerNukkitOnly @Since("FUTURE") PROMO_COMEBACKTOMORROW("store.promo.comeBackTomorrow"), // Come back for Tomorrow's Free Gift!
        @PowerNukkitOnly @Since("FUTURE") PROMO_END("store.promo.end"), // Happy New Year!
        @PowerNukkitOnly @Since("FUTURE") PROMO_COMINGSOON("store.promo.comingSoon"), // 12 days of Minecraft starts tomorrow!
        @PowerNukkitOnly @Since("FUTURE") PROMO_HOLIDAY_FIRST("store.promo.holiday.first"), // On the first day of Minecraft,
        @PowerNukkitOnly @Since("FUTURE") PROMO_HOLIDAY_SECOND("store.promo.holiday.second"), // On the second day of Minecraft,
        @PowerNukkitOnly @Since("FUTURE") PROMO_HOLIDAY_THIRD("store.promo.holiday.third"), // On the third day of Minecraft,
        @PowerNukkitOnly @Since("FUTURE") PROMO_HOLIDAY_FOURTH("store.promo.holiday.fourth"), // On the fourth day of Minecraft,
        @PowerNukkitOnly @Since("FUTURE") PROMO_HOLIDAY_FIFTH("store.promo.holiday.fifth"), // On the fifth day of Minecraft,
        @PowerNukkitOnly @Since("FUTURE") PROMO_HOLIDAY_SIXTH("store.promo.holiday.sixth"), // On the sixth day of Minecraft,
        @PowerNukkitOnly @Since("FUTURE") PROMO_HOLIDAY_SEVENTH("store.promo.holiday.seventh"), // On the seventh day of Minecraft,
        @PowerNukkitOnly @Since("FUTURE") PROMO_HOLIDAY_EIGHTH("store.promo.holiday.eighth"), // On the eighth day of Minecraft,
        @PowerNukkitOnly @Since("FUTURE") PROMO_HOLIDAY_NINTH("store.promo.holiday.ninth"), // On the ninth day of Minecraft,
        @PowerNukkitOnly @Since("FUTURE") PROMO_HOLIDAY_TENTH("store.promo.holiday.tenth"), // On the tenth day of Minecraft,
        @PowerNukkitOnly @Since("FUTURE") PROMO_HOLIDAY_ELEVENTH("store.promo.holiday.eleventh"), // On the eleventh day of Minecraft,
        @PowerNukkitOnly @Since("FUTURE") PROMO_HOLIDAY_TWELFTH("store.promo.holiday.twelfth"), // On the twelfth day of Minecraft,
        @PowerNukkitOnly @Since("FUTURE") PROMO_DATE_JAN("store.promo.date.jan"), // Jan. %s
        @PowerNukkitOnly @Since("FUTURE") PROMO_DATE_FEB("store.promo.date.feb"), // Feb. %s
        @PowerNukkitOnly @Since("FUTURE") PROMO_DATE_MAR("store.promo.date.mar"), // Mar. %s
        @PowerNukkitOnly @Since("FUTURE") PROMO_DATE_APR("store.promo.date.apr"), // Apr. %s
        @PowerNukkitOnly @Since("FUTURE") PROMO_DATE_MAY("store.promo.date.may"), // May %s
        @PowerNukkitOnly @Since("FUTURE") PROMO_DATE_JUN("store.promo.date.jun"), // Jun. %s
        @PowerNukkitOnly @Since("FUTURE") PROMO_DATE_JULY("store.promo.date.july"), // July %s
        @PowerNukkitOnly @Since("FUTURE") PROMO_DATE_AUG("store.promo.date.aug"), // Aug. %s
        @PowerNukkitOnly @Since("FUTURE") PROMO_DATE_SEP("store.promo.date.sep"), // Sep. %s
        @PowerNukkitOnly @Since("FUTURE") PROMO_DATE_OCT("store.promo.date.oct"), // Oct. %s
        @PowerNukkitOnly @Since("FUTURE") PROMO_DATE_NOV("store.promo.date.nov"), // Nov. %s
        @PowerNukkitOnly @Since("FUTURE") PROMO_DATE_DEC("store.promo.date.dec"), // Dec. %s
        @PowerNukkitOnly @Since("FUTURE") MYACCOUNT("store.myAccount"), // My Account
        @PowerNukkitOnly @Since("FUTURE") XBL_SIGNIN("store.xbl.signin"), // Sign In
        @PowerNukkitOnly @Since("FUTURE") XBL_SIGNINORSIGNUP("store.xbl.signinOrSignUp"), // Sign In or Sign Up For Free
        @PowerNukkitOnly @Since("FUTURE") XBL_DISCONNECTED("store.xbl.disconnected"), // Disconnected
        @PowerNukkitOnly @Since("FUTURE") XBL_CONVERSIONFAILEDTITLE("store.xbl.conversionFailedTitle"), // Something Went Wrong
        @PowerNukkitOnly @Since("FUTURE") XBL_CONVERSIONFAILEDMESSAGE("store.xbl.conversionFailedMessage"), // Please try again later.
        @PowerNukkitOnly @Since("FUTURE") SALES_ALLBYCREATOR("store.sales.allByCreator"), // On Sale Now!
        @PowerNukkitOnly @Since("FUTURE") SALES_BUNDLESONSALE("store.sales.bundlesOnSale"), // Bundles on Sale Now!
        @PowerNukkitOnly @Since("FUTURE") SALES_MASHUPSONSALE("store.sales.mashupsOnSale"), // Mash-ups on Sale Now!
        @PowerNukkitOnly @Since("FUTURE") SALES_SKINSONSALE("store.sales.skinsOnSale"), // Skins on Sale Now!
        @PowerNukkitOnly @Since("FUTURE") SALES_TEXTURESONSALE("store.sales.texturesOnSale"), // Texture Packs on Sale Now!
        @PowerNukkitOnly @Since("FUTURE") SALES_WORLDSONSALE("store.sales.worldsOnSale"), // Worlds on Sale Now!
        @PowerNukkitOnly @Since("FUTURE") SHOWALLOFFERS_LIST_TITLE("store.showalloffers.list.title"), // %s Store 
        @PowerNukkitOnly @Since("FUTURE") SHOWALLOFFERS_LIST_BACK("store.showalloffers.list.back"), // Go Back
        @PowerNukkitOnly @Since("FUTURE") SUGGESTEDOFFERS_DEFAULTTITLE("store.suggestedOffers.defaultTitle"), // Fun Ways to Play
        @PowerNukkitOnly @Since("FUTURE") MINECOIN_NOTAVAILABLE("store.minecoin.notavailable"), // Coin purchase is not available on this version of Minecraft.
        @PowerNukkitOnly @Since("FUTURE") SEARCH_ALLRESULTS("store.search.allResults"), // %d Results
        @PowerNukkitOnly @Since("FUTURE") SEARCH_DYNAMICPLACEHOLDERTEXT("store.search.dynamicPlaceHolderText"), // Try searching for %s!
        @PowerNukkitOnly @Since("FUTURE") SEARCH_ERROR_SEARCHSTRINGANDFILTERS("store.search.error.searchStringAndFilters"), // Oops! There are no results for "%s" and the selected filters. Try broadening search...
        @PowerNukkitOnly @Since("FUTURE") SEARCH_ERROR_SEARCHSTRINGANDNOFILTERS("store.search.error.searchStringAndNoFilters"), // Oops! There are no results for "%s". Try another phrase...
        @PowerNukkitOnly @Since("FUTURE") SEARCH_ERROR_EMPTYSEARCHSTRINGANDFILTERS("store.search.error.emptySearchStringAndFilters"), // Oops! No results were found with the selected filters. Try broadening search...
        @PowerNukkitOnly @Since("FUTURE") SEARCH_ERROR_EMPTYSEARCH("store.search.error.emptySearch"), // Oops! We can't search for nothing.
        @PowerNukkitOnly @Since("FUTURE") SEARCH_GREYLISTEDRESULTS("store.search.greyListedResults"), //  -- Only showing content that will work on this device.
        @PowerNukkitOnly @Since("FUTURE") SEARCH_NOCONNECTIONERRORTEXT("store.search.noConnectionErrorText"), // Oops! We think you are disconnected from the internet. Check your connection and try again!
        @PowerNukkitOnly @Since("FUTURE") SEARCH_PLACEHOLDERTEXT("store.search.placeHolderText"), // Enter Search Here...
        @PowerNukkitOnly @Since("FUTURE") SEARCH_PLURALRESULTS("store.search.pluralResults"), //  Results
        @PowerNukkitOnly @Since("FUTURE") SEARCH_PLURALPOSSIBLERESULTS("store.search.pluralPossibleResults"), //  Possible Results
        @PowerNukkitOnly @Since("FUTURE") SEARCH_SINGULARRESULT("store.search.singularResult"), //  Result
        @PowerNukkitOnly @Since("FUTURE") SEARCH_SINGULARPOSSIBLERESULT("store.search.singularPossibleResult"), //  Possible Result
        @PowerNukkitOnly @Since("FUTURE") SEARCH_TITLE("store.search.title"), // Search
        @PowerNukkitOnly @Since("FUTURE") SEARCH_TRENDINGROWTITLE("store.search.trendingRowTitle"), // Trending Search: %s
        @PowerNukkitOnly @Since("FUTURE") SEARCH_BUTTON("store.search.button"), // Search
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTERS_BUNDLES("store.search.filters.bundles"), // Bundles
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTERS_CLEAR("store.search.filters.clear"), // Clear Filters
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTERS_RESET("store.search.filters.reset"), // Reset Filters
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_CLEAR_CREATOR("store.search.filter.clear.creator"), // Clear Creator Filters
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_CREATOR("store.search.filter.creator"), // Creators
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_CREATOR_SELECTEDCOUNT("store.search.filter.creator.selectedCount"), // %d Creators
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_OFFER_TYPE("store.search.filter.offer_type"), // Offer Types
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_OFFER_TYPE_SELECTEDCOUNT("store.search.filter.offer_type.selectedCount"), // %d Offer Types
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_OFFER_TYPE_BUNDLES("store.search.filter.offer_type.bundles"), // Bundles
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_OFFER_TYPE_REALMSPLUS("store.search.filter.offer_type.realmsplus"), // Realms Plus
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_CLEAR_PACK_TYPE("store.search.filter.clear.pack_type"), // Clear Pack Type Filters
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_MASHUPPACKS("store.search.filter.mashupPacks"), // Mash-ups
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_ANDSELECTEDTEXT("store.search.filter.andSelectedText"), // and %s
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_PACK_TYPE("store.search.filter.pack_type"), // Pack Types
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_PACK_TYPE_SELECTEDCOUNT("store.search.filter.pack_type.selectedCount"), // %d Pack Types
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_MINECOIN("store.search.filter.minecoin"), // Minecoins
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_MINECOIN_SELECTEDCOUNT("store.search.filter.minecoin.selectedCount"), // %d Minecoin Filters
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_CLEAR_MINECOIN("store.search.filter.clear.minecoin"), // Clear Minecoin Filters
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_RATING("store.search.filter.rating"), // Ratings
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_RATING_SELECTEDCOUNT("store.search.filter.rating.selectedCount"), // %d Rating Filters
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_CLEAR_RATING("store.search.filter.clear.rating"), // Clear Rating Filters
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_SKINPACKS("store.search.filter.skinPacks"), // Skins
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_TEXTUREPACKS("store.search.filter.texturePacks"), // Textures
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_TITLE("store.search.filter.title"), // Filters
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_WORLDTEMPLATES("store.search.filter.worldTemplates"), // Worlds
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_INSTALLED_STATE("store.search.filter.installed_state"), // Installed State
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_INSTALLED("store.search.filter.installed"), // Installed
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_NOTINSTALLED("store.search.filter.notInstalled"), // Not Installed
        @PowerNukkitOnly @Since("FUTURE") SEARCH_FILTER_CLEAR_INSTALLED("store.search.filter.clear.installed"), // Reset Installed Filters
        @PowerNukkitOnly @Since("FUTURE") SEARCH_SORT_MENU_SORTCONSTWORD("store.search.sort_menu.sortConstWord"), // Sort
        @PowerNukkitOnly @Since("FUTURE") SEARCH_SORT_MENU_DEFAULT("store.search.sort_menu.Default"), // Relevance
        @PowerNukkitOnly @Since("FUTURE") SEARCH_SORT_MENU_NEWESTFIRST("store.search.sort_menu.NewestFirst"), // Newest First
        @PowerNukkitOnly @Since("FUTURE") SEARCH_SORT_MENU_OLDESTFIRST("store.search.sort_menu.OldestFirst"), // Oldest First
        @PowerNukkitOnly @Since("FUTURE") SEARCH_SORT_MENU_A_TO_Z("store.search.sort_menu.A_to_Z"), // A to Z
        @PowerNukkitOnly @Since("FUTURE") SEARCH_SORT_MENU_Z_TO_A("store.search.sort_menu.Z_to_A"), // Z to A
        @PowerNukkitOnly @Since("FUTURE") SEARCH_SORT_MENU_INSTALLED("store.search.sort_menu.Installed"), // Installed
        @PowerNukkitOnly @Since("FUTURE") SEARCH_SORT_MENU_NOTINSTALLED("store.search.sort_menu.notInstalled"), // Not Installed
        @PowerNukkitOnly @Since("FUTURE") SEARCH_SORT_MENU_HIGHESTPRICE("store.search.sort_menu.HighestPrice"), // :minecoin: High to Low
        @PowerNukkitOnly @Since("FUTURE") SEARCH_SORT_MENU_LOWESTPRICE("store.search.sort_menu.LowestPrice"), // :minecoin: Low to High
        @PowerNukkitOnly @Since("FUTURE") SEARCH_SORT_MENU_HIGHESTRATING("store.search.sort_menu.HighestRating"), // Rating: High to Low
        @PowerNukkitOnly @Since("FUTURE") SEARCH_SORT_MENU_LOWESTRATING("store.search.sort_menu.LowestRating"), // Rating: Low to High
        @PowerNukkitOnly @Since("FUTURE") SEARCH_SORT_MENU_RESULTTEXT("store.search.sort_menu.resultText"), // by %s 
        @PowerNukkitOnly @Since("FUTURE") SHAREDESCRIPTION("store.shareDescription"), // Whoa! %s made such a cool pack. You've got to check this out.
        @PowerNukkitOnly @Since("FUTURE") COPYTOASTMESSAGE("store.copyToastMessage"), // Link copied to clipboard!
        @PowerNukkitOnly @Since("FUTURE") UPLOADCONTENTTOREALMSSUCCESS("store.uploadContentToRealmsSuccess"), // Content successfully uploaded to the selected Realm.
        @PowerNukkitOnly @Since("FUTURE") UPLOADCONTENTTOREALMSFAIL_TITLE("store.uploadContentToRealmsFail.title"), // Error
        @PowerNukkitOnly @Since("FUTURE") UPLOADCONTENTTOREALMSPROGRESSTITLE("store.uploadContentToRealmsProgressTitle"), // Applying content to Realm
        @PowerNukkitOnly @Since("FUTURE") UPLOADCONTENTTOREALMSPROGRESSTEXT("store.uploadContentToRealmsProgressText"), // The selected content is being applied to your Realm.
        @PowerNukkitOnly @Since("FUTURE") UPLOADCONTENTTOREALMSFAIL_MESSAGE("store.uploadContentToRealmsFail.message"), // Failed to upload content to the selected Realm!
        @PowerNukkitOnly @Since("FUTURE") UPLOADCONTENTTOREALMSFAIL_FORBIDDEN_MESSAGE("store.uploadContentToRealmsFail.forbidden.message"), // You do not own one or more of the applied content!
        @PowerNukkitOnly @Since("FUTURE") APPLYTOREALM("store.applyToRealm"), // Create on Realm
        @PowerNukkitOnly @Since("FUTURE") INREALMSPLUS("store.inRealmsPlus"), // In Realms Plus
        @PowerNukkitOnly @Since("FUTURE") UPLOADWORLDTITLE("store.uploadWorldTitle"), // Replace World?
        @PowerNukkitOnly @Since("FUTURE") UPLOADPACKTITLE("store.uploadPackTitle"), // Replace Pack?
        @PowerNukkitOnly @Since("FUTURE") UPLOADWORLDMESSAGE("store.uploadWorldMessage"), // This will remove your current world from your Realm and let you replace it with a new one. Your Realm members won't have access to your current world anymore. Do you want to continue?
        @PowerNukkitOnly @Since("FUTURE") UPLOADPACKMESSAGE("store.uploadPackMessage"), // This will remove all current applied resource and behavior packs from your Realm and replace it with the selected pack. Do you want to continue?
        ;
        private final String code; Store(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Date implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") SHORT_JANUARY("date.short_january"), // Jan
        @PowerNukkitOnly @Since("FUTURE") SHORT_FEBRUARY("date.short_february"), // Feb
        @PowerNukkitOnly @Since("FUTURE") SHORT_MARCH("date.short_march"), // Mar
        @PowerNukkitOnly @Since("FUTURE") SHORT_APRIL("date.short_april"), // Apr
        @PowerNukkitOnly @Since("FUTURE") SHORT_MAY("date.short_may"), // May
        @PowerNukkitOnly @Since("FUTURE") SHORT_JUNE("date.short_june"), // Jun
        @PowerNukkitOnly @Since("FUTURE") SHORT_JULY("date.short_july"), // Jul
        @PowerNukkitOnly @Since("FUTURE") SHORT_AUGUST("date.short_august"), // Aug
        @PowerNukkitOnly @Since("FUTURE") SHORT_SEPTEMBER("date.short_september"), // Sep
        @PowerNukkitOnly @Since("FUTURE") SHORT_OCTOBER("date.short_october"), // Oct
        @PowerNukkitOnly @Since("FUTURE") SHORT_NOVEMBER("date.short_november"), // Nov
        @PowerNukkitOnly @Since("FUTURE") SHORT_DECEMBER("date.short_december"), // Dec
        @PowerNukkitOnly @Since("FUTURE") FORMATTED("date.formatted"), // %s %d %d
        ;
        private final String code; Date(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum DayOneExperience implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") CAROUSEL_TITLE("dayOneExperience.carousel.title"), // Welcome to New Minecraft!
        @PowerNukkitOnly @Since("FUTURE") CAROUSEL_WELCOME_TEXT("dayOneExperience.carousel.welcome_text"), // There's a lot of exciting new stuff in this new version of Minecraft! Check out the Marketplace, create a Realm, and play online with Cross-Platform friends!
        @PowerNukkitOnly @Since("FUTURE") CAROUSEL_MARKETPLACE("dayOneExperience.carousel.marketplace"), // Minecraft Marketplace is a place to find new skins, worlds, textures, and mash-up packs by various talented creators.
        @PowerNukkitOnly @Since("FUTURE") CAROUSEL_CROSS_PLATFORM("dayOneExperience.carousel.cross_platform"), // Cross-platform play lets you connect with players on different platforms. Sign in to your Microsoft Account to play with all your Minecraft friends!
        @PowerNukkitOnly @Since("FUTURE") CAROUSEL_REALMS("dayOneExperience.carousel.realms"), // Realms are servers run by us, just for you and your friends. Keep your Minecraft world online and always accessible, even when you log-off.
        @PowerNukkitOnly @Since("FUTURE") CAROUSEL_VILLAGER("dayOneExperience.carousel.villager"), // New Minecraft is the only place to receive future updates containing new features, mobs, items, blocks and much more!
        @PowerNukkitOnly @Since("FUTURE") TAB_LANDING("dayOneExperience.tab.landing"), // What's New
        @PowerNukkitOnly @Since("FUTURE") TAB_MARKETPLACE("dayOneExperience.tab.marketplace"), // Marketplace
        @PowerNukkitOnly @Since("FUTURE") TAB_CROSSPLATFORM("dayOneExperience.tab.crossplatform"), // Cross-platform Play
        @PowerNukkitOnly @Since("FUTURE") TAB_REALMS("dayOneExperience.tab.realms"), // Realms
        @PowerNukkitOnly @Since("FUTURE") TAB_VILLAGER("dayOneExperience.tab.villager"), // More Content
        @PowerNukkitOnly @Since("FUTURE") FINISH("dayOneExperience.finish"), // Finish
        @PowerNukkitOnly @Since("FUTURE") NEXT("dayOneExperience.next"), // Next
        @PowerNukkitOnly @Since("FUTURE") NO_INTERNET("dayOneExperience.no_internet"), // Connect to the internet to load your previous skin.
        @PowerNukkitOnly @Since("FUTURE") INTRO_TITLE("dayOneExperience.intro_title"), // Minecraft has Updated!
        @PowerNukkitOnly @Since("FUTURE") INTRO_BODY_1("dayOneExperience.intro_body_1"), // There's a lot of great new content in this update.
        @PowerNukkitOnly @Since("FUTURE") INTRO_BODY_2("dayOneExperience.intro_body_2"), // Would you like help importing your saves, settings, and content from the previous version of Minecraft?
        @PowerNukkitOnly @Since("FUTURE") INTRO_WELCOME_1("dayOneExperience.intro_welcome_1"), // You've updated to the latest version of Minecraft!
        @PowerNukkitOnly @Since("FUTURE") INTRO_WELCOME_2("dayOneExperience.intro_welcome_2"), // If you would like to return to the previous version of Minecraft, you can find it on the main menu
        @PowerNukkitOnly @Since("FUTURE") EDITIONS_LAUNCH_WARNING("dayOneExperience.editions_launch_warning"), // This is not the latest version of Minecraft, are you sure you want to launch the previous version of Minecraft?
        @PowerNukkitOnly @Since("FUTURE") EDITIONS_TITLE("dayOneExperience.editions_title"), // Launch Previous Version?
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_IMPORTED("dayOneExperience.settings_imported"), // We've imported your settings for you!
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_SKIN_IMPORTED("dayOneExperience.settings_skin_imported"), // We've imported your skin and settings for you!
        @PowerNukkitOnly @Since("FUTURE") SKIN_CURRENT("dayOneExperience.skin_current"), // Current Skin
        @PowerNukkitOnly @Since("FUTURE") SKIN_DEFAULT("dayOneExperience.skin_default"), // Default Skin
        @PowerNukkitOnly @Since("FUTURE") SKIN_TIP("dayOneExperience.skin_tip"), // You can change your skin by selecting the Profile button on the main menu.
        @PowerNukkitOnly @Since("FUTURE") SKIP_TITLE("dayOneExperience.skip_title"), // Skip Conversion?
        @PowerNukkitOnly @Since("FUTURE") SKIP_BODY("dayOneExperience.skip_body"), // Old Worlds can be converted at any time from the Play Game - Worlds menu.
        @PowerNukkitOnly @Since("FUTURE") WORLD_IMPORT_TIME("dayOneExperience.world_import_time"), // Tip: Conversion time will vary based on the size of the world.
        @PowerNukkitOnly @Since("FUTURE") WORLD_PICKER_TITLE("dayOneExperience.world_picker_title"), // Select a World to Convert
        @PowerNukkitOnly @Since("FUTURE") WORLD_PICKER_SKIP("dayOneExperience.world_picker_skip"), // Skip for Now
        ;
        private final String code; DayOneExperience(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Death implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ATTACK_ANVIL("death.attack.anvil"), // %1$s was squashed by a falling anvil
        @PowerNukkitOnly @Since("FUTURE") ATTACK_ARROW("death.attack.arrow"), // %1$s was shot by %2$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_ARROW_ITEM("death.attack.arrow.item"), // %1$s was shot by %2$s using %3$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_BULLET("death.attack.bullet"), // %1$s was sniped by %2$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_CACTUS("death.attack.cactus"), // %1$s was pricked to death
        @PowerNukkitOnly @Since("FUTURE") ATTACK_CACTUS_PLAYER("death.attack.cactus.player"), // %1$s walked into a cactus whilst trying to escape %2$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_DROWN("death.attack.drown"), // %1$s drowned
        @PowerNukkitOnly @Since("FUTURE") ATTACK_DROWN_PLAYER("death.attack.drown.player"), // %1$s drowned whilst trying to escape %2$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_EXPLOSION("death.attack.explosion"), // %1$s blew up
        @PowerNukkitOnly @Since("FUTURE") ATTACK_EXPLOSION_PLAYER("death.attack.explosion.player"), // %1$s was blown up by %2$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_FALL("death.attack.fall"), // %1$s hit the ground too hard
        @PowerNukkitOnly @Since("FUTURE") ATTACK_FALLINGBLOCK("death.attack.fallingBlock"), // %1$s was squashed by a falling block
        @PowerNukkitOnly @Since("FUTURE") ATTACK_FIREBALL("death.attack.fireball"), // %1$s was fireballed by %2$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_FIREBALL_ITEM("death.attack.fireball.item"), // %1$s was fireballed by %2$s using %3$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_FIREWORKS("death.attack.fireworks"), // %1$s went off with a bang
        @PowerNukkitOnly @Since("FUTURE") ATTACK_FLYINTOWALL("death.attack.flyIntoWall"), // %1$s experienced kinetic energy
        @PowerNukkitOnly @Since("FUTURE") ATTACK_GENERIC("death.attack.generic"), // %1$s died
        @PowerNukkitOnly @Since("FUTURE") ATTACK_INDIRECTMAGIC("death.attack.indirectMagic"), // %1$s was killed by %2$s using magic
        @PowerNukkitOnly @Since("FUTURE") ATTACK_INDIRECTMAGIC_ITEM("death.attack.indirectMagic.item"), // %1$s was killed by %2$s using %3$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_INFIRE("death.attack.inFire"), // %1$s went up in flames
        @PowerNukkitOnly @Since("FUTURE") ATTACK_INFIRE_PLAYER("death.attack.inFire.player"), // %1$s walked into fire whilst fighting %2$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_INWALL("death.attack.inWall"), // %1$s suffocated in a wall
        @PowerNukkitOnly @Since("FUTURE") ATTACK_LAVA("death.attack.lava"), // %1$s tried to swim in lava
        @PowerNukkitOnly @Since("FUTURE") ATTACK_LAVA_PLAYER("death.attack.lava.player"), // %1$s tried to swim in lava to escape %2$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_LIGHTNINGBOLT("death.attack.lightningBolt"), // %1$s was struck by lightning
        @PowerNukkitOnly @Since("FUTURE") ATTACK_MAGIC("death.attack.magic"), // %1$s was killed by magic
        @PowerNukkitOnly @Since("FUTURE") ATTACK_MAGMA("death.attack.magma"), // %1$s discovered floor was lava
        @PowerNukkitOnly @Since("FUTURE") ATTACK_MAGMA_PLAYER("death.attack.magma.player"), // %1$s walked on danger zone due to %2$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_MOB("death.attack.mob"), // %1$s was slain by %2$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_ONFIRE("death.attack.onFire"), // %1$s burned to death
        @PowerNukkitOnly @Since("FUTURE") ATTACK_ONFIRE_PLAYER("death.attack.onFire.player"), // %1$s was burnt to a crisp whilst fighting %2$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_OUTOFWORLD("death.attack.outOfWorld"), // %1$s fell out of the world
        @PowerNukkitOnly @Since("FUTURE") ATTACK_PLAYER("death.attack.player"), // %1$s was slain by %2$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_PLAYER_ITEM("death.attack.player.item"), // %1$s was slain by %2$s using %3$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_SPIT("death.attack.spit"), // %1$s was spitballed by %2$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_STARVE("death.attack.starve"), // %1$s starved to death
        @PowerNukkitOnly @Since("FUTURE") ATTACK_THORNS("death.attack.thorns"), // %1$s was killed trying to hurt %2$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_THROWN("death.attack.thrown"), // %1$s was pummeled by %2$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_THROWN_ITEM("death.attack.thrown.item"), // %1$s was pummeled by %2$s using %3$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_TRIDENT("death.attack.trident"), // %1$s was impaled to death by %2$s
        @PowerNukkitOnly @Since("FUTURE") ATTACK_WITHER("death.attack.wither"), // %1$s withered away
        @PowerNukkitOnly @Since("FUTURE") ATTACK_FREEZE("death.attack.freeze"), // %1$s froze to death
        @PowerNukkitOnly @Since("FUTURE") ATTACK_STALACTITE("death.attack.stalactite"), // %1$s was skewered by a falling stalactite
        @PowerNukkitOnly @Since("FUTURE") ATTACK_STALAGMITE("death.attack.stalagmite"), // %1$s was impaled on a stalagmite
        @PowerNukkitOnly @Since("FUTURE") FELL_ACCIDENT_GENERIC("death.fell.accident.generic"), // %1$s fell from a high place
        @PowerNukkitOnly @Since("FUTURE") FELL_ACCIDENT_LADDER("death.fell.accident.ladder"), // %1$s fell off a ladder
        @PowerNukkitOnly @Since("FUTURE") FELL_ACCIDENT_VINES("death.fell.accident.vines"), // %1$s fell off some vines
        @PowerNukkitOnly @Since("FUTURE") FELL_ACCIDENT_WATER("death.fell.accident.water"), // %1$s fell out of the water
        @PowerNukkitOnly @Since("FUTURE") FELL_ASSIST("death.fell.assist"), // %1$s was doomed to fall by %2$s
        @PowerNukkitOnly @Since("FUTURE") FELL_ASSIST_ITEM("death.fell.assist.item"), // %1$s was doomed to fall by %2$s using %3$s
        @PowerNukkitOnly @Since("FUTURE") FELL_FINISH("death.fell.finish"), // %1$s fell too far and was finished by %2$s
        @PowerNukkitOnly @Since("FUTURE") FELL_FINISH_ITEM("death.fell.finish.item"), // %1$s fell too far and was finished by %2$s using %3$s
        @PowerNukkitOnly @Since("FUTURE") FELL_KILLER("death.fell.killer"), // %1$s was doomed to fall
        ;
        private final String code; Death(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum DeathScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") DELETEWORLD("deathScreen.deleteWorld"), // Delete world
        @PowerNukkitOnly @Since("FUTURE") HARDCOREINFO("deathScreen.hardcoreInfo"), // You cannot respawn in hardcore mode!
        @PowerNukkitOnly @Since("FUTURE") LEAVESERVER("deathScreen.leaveServer"), // Leave server
        @PowerNukkitOnly @Since("FUTURE") MESSAGE("deathScreen.message"), // You died!
        @PowerNukkitOnly @Since("FUTURE") QUIT("deathScreen.quit"), // Main menu
        @PowerNukkitOnly @Since("FUTURE") QUIT_CONFIRM("deathScreen.quit.confirm"), // Are you sure you want to quit?
        @PowerNukkitOnly @Since("FUTURE") QUIT_CONFIRMTOMAINMENUWARNING("deathScreen.quit.confirmToMainMenuWarning"), // Are you sure you want to exit the game to the main menu?
        @PowerNukkitOnly @Since("FUTURE") QUIT_CONFIRMTOMAINMENUTITLEWARNING("deathScreen.quit.confirmToMainMenuTitleWarning"), // Quit to Main Menu?
        @PowerNukkitOnly @Since("FUTURE") QUIT_SECONDARYCLIENT("deathScreen.quit.secondaryClient"), // Save and Leave
        @PowerNukkitOnly @Since("FUTURE") QUIT_SECONDARYCLIENT_CONFIRMLEAVEWARNING("deathScreen.quit.secondaryClient.confirmLeaveWarning"), // Are you sure you want to save and leave the game?
        @PowerNukkitOnly @Since("FUTURE") QUIT_SECONDARYCLIENT_CONFIRMLEAVETITLEWARNING("deathScreen.quit.secondaryClient.confirmLeaveTitleWarning"), // Save and Leave
        @PowerNukkitOnly @Since("FUTURE") RESPAWN("deathScreen.respawn"), // Respawn
        @PowerNukkitOnly @Since("FUTURE") SCORE("deathScreen.score"), // Score
        @PowerNukkitOnly @Since("FUTURE") TITLE("deathScreen.title"), // You died!
        @PowerNukkitOnly @Since("FUTURE") TITLE_HARDCORE("deathScreen.title.hardcore"), // Game over!
        @PowerNukkitOnly @Since("FUTURE") TITLESCREEN("deathScreen.titleScreen"), // Title screen
        ;
        private final String code; DeathScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Demo implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") DAY_1("demo.day.1"), // This demo will last five game days, do your best!
        @PowerNukkitOnly @Since("FUTURE") DAY_2("demo.day.2"), // Day Two
        @PowerNukkitOnly @Since("FUTURE") DAY_3("demo.day.3"), // Day Three
        @PowerNukkitOnly @Since("FUTURE") DAY_4("demo.day.4"), // Day Four
        @PowerNukkitOnly @Since("FUTURE") DAY_5("demo.day.5"), // This is your last day!
        @PowerNukkitOnly @Since("FUTURE") DAY_6("demo.day.6"), // You have passed your fifth day, use F2 to save a screenshot of your creation
        @PowerNukkitOnly @Since("FUTURE") DAY_WARNING("demo.day.warning"), // Your time is almost up!
        @PowerNukkitOnly @Since("FUTURE") DEMOEXPIRED("demo.demoExpired"), // Demo time's up!
        @PowerNukkitOnly @Since("FUTURE") HELP_BUY("demo.help.buy"), // Purchase Now!
        @PowerNukkitOnly @Since("FUTURE") HELP_FULLWRAPPED("demo.help.fullWrapped"), // This demo will last 5 ingame days (about 1 hour and 40 minutes of real time). Check the achievements for hints! Have fun!
        @PowerNukkitOnly @Since("FUTURE") HELP_INVENTORY("demo.help.inventory"), // Use %1$s to open your inventory
        @PowerNukkitOnly @Since("FUTURE") HELP_JUMP("demo.help.jump"), // Jump by pressing %1$s
        @PowerNukkitOnly @Since("FUTURE") HELP_LATER("demo.help.later"), // Continue Playing!
        @PowerNukkitOnly @Since("FUTURE") HELP_MOVEMENT("demo.help.movement"), // Use %1$s, %2$s, %3$s, %4$s and the mouse to move around
        @PowerNukkitOnly @Since("FUTURE") HELP_MOVEMENTMOUSE("demo.help.movementMouse"), // Look around using the mouse
        @PowerNukkitOnly @Since("FUTURE") HELP_MOVEMENTSHORT("demo.help.movementShort"), // Move by pressing %1$s, %2$s, %3$s, %4$s
        @PowerNukkitOnly @Since("FUTURE") HELP_TITLE("demo.help.title"), // Minecraft Demo Mode
        @PowerNukkitOnly @Since("FUTURE") REMAININGTIME("demo.remainingTime"), // Remaining time: %s
        @PowerNukkitOnly @Since("FUTURE") REMINDER("demo.reminder"), // The demo time has expired, buy the game to continue or start a new world!
        ;
        private final String code; Demo(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Difficulty implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") LOCK_QUESTION("difficulty.lock.question"), // Are you sure you want to lock the difficulty of this world? This will set this world to always be %1$s, and you will never be able to change that again.
        @PowerNukkitOnly @Since("FUTURE") LOCK_TITLE("difficulty.lock.title"), // Lock World Difficulty
        ;
        private final String code; Difficulty(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Dimension implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") DIMENSIONNAME0("dimension.dimensionName0"), // Overworld
        @PowerNukkitOnly @Since("FUTURE") DIMENSIONNAME1("dimension.dimensionName1"), // Nether
        @PowerNukkitOnly @Since("FUTURE") DIMENSIONNAME2("dimension.dimensionName2"), // The End
        ;
        private final String code; Dimension(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Disconnect implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") CLOSED("disconnect.closed"), // Connection closed
        @PowerNukkitOnly @Since("FUTURE") DOWNLOADPACK("disconnect.downloadPack"), // Error while downloading packs from server. Please try again.
        @PowerNukkitOnly @Since("FUTURE") DISCONNECTED("disconnect.disconnected"), // Disconnected by Server
        @PowerNukkitOnly @Since("FUTURE") ENDOFSTREAM("disconnect.endOfStream"), // End of stream
        @PowerNukkitOnly @Since("FUTURE") GENERICREASON("disconnect.genericReason"), // %s
        @PowerNukkitOnly @Since("FUTURE") KICKED("disconnect.kicked"), // You were kicked from the game
        @PowerNukkitOnly @Since("FUTURE") KICKED_REASON("disconnect.kicked.reason"), // You were kicked from the game:
        @PowerNukkitOnly @Since("FUTURE") REMOVED("disconnect.removed"), // You were removed from the game
        @PowerNukkitOnly @Since("FUTURE") REMOVED_REASON("disconnect.removed.reason"), // You were removed from the game:
        @PowerNukkitOnly @Since("FUTURE") LOGINFAILED("disconnect.loginFailed"), // Failed to login
        @PowerNukkitOnly @Since("FUTURE") LOGINFAILEDINFO("disconnect.loginFailedInfo"), // Failed to login: %s
        @PowerNukkitOnly @Since("FUTURE") LOGINFAILEDINFO_INVALIDSESSION("disconnect.loginFailedInfo.invalidSession"), // Invalid session (Try restarting your game)
        @PowerNukkitOnly @Since("FUTURE") LOGINFAILEDINFO_SERVERSUNAVAILABLE("disconnect.loginFailedInfo.serversUnavailable"), // The authentication servers are currently down for maintenance.
        @PowerNukkitOnly @Since("FUTURE") LOST("disconnect.lost"), // Connection Lost
        @PowerNukkitOnly @Since("FUTURE") OVERFLOW("disconnect.overflow"), // Buffer overflow
        @PowerNukkitOnly @Since("FUTURE") QUITTING("disconnect.quitting"), // Quitting
        @PowerNukkitOnly @Since("FUTURE") SPAM("disconnect.spam"), // Kicked for spamming
        @PowerNukkitOnly @Since("FUTURE") TIMEOUT("disconnect.timeout"), // Timed out
        ;
        private final String code; Disconnect(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum DisconnectionScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") HEADER_REALMS_HIDDEN("disconnectionScreen.header.realms_hidden"), // Multiplayer Invitation
        @PowerNukkitOnly @Since("FUTURE") BODY_REALMS_HIDDEN("disconnectionScreen.body.realms_hidden"), // Unable to join this specific server.
        @PowerNukkitOnly @Since("FUTURE") CANTCONNECT("disconnectionScreen.cantConnect"), // Unable to connect to world.
        @PowerNukkitOnly @Since("FUTURE") CANTCONNECTTOREALM("disconnectionScreen.cantConnectToRealm"), // Unable to connect to realm.
        @PowerNukkitOnly @Since("FUTURE") CANTCONNECTTOREALMS("disconnectionScreen.cantConnectToRealms"), // Unable to connect to realms.
        @PowerNukkitOnly @Since("FUTURE") CROSSPLATFORMDISABLED("disconnectionScreen.crossPlatformDisabled"), // Enable cross-platform play in the main menu to connect with friends on other platforms. To play with other friends online without cross-play, the host of the game must also have cross-play disabled via the main menu.
        @PowerNukkitOnly @Since("FUTURE") CROSSPLATFORMDISABLED_HEADER("disconnectionScreen.crossPlatformDisabled.header"), // Cross-Platform Play Disabled.
        @PowerNukkitOnly @Since("FUTURE") INCOMPATIBLEREALM("disconnectionScreen.incompatibleRealm"), // Your client is incompatible or out of date. Update your client to connect to realms.
        @PowerNukkitOnly @Since("FUTURE") REALMSALPHAENDEDTITLE("disconnectionScreen.realmsAlphaEndedTitle"), // Testing the Realms Alpha has ended.  Thank you for helping!
        @PowerNukkitOnly @Since("FUTURE") REALMSALPHAENDEDMESSAGE("disconnectionScreen.realmsAlphaEndedMessage"), // Realms is not available right now.
        @PowerNukkitOnly @Since("FUTURE") DISCONNECTED("disconnectionScreen.disconnected"), // Disconnected from Server
        @PowerNukkitOnly @Since("FUTURE") EDITIONMISMATCH("disconnectionScreen.editionMismatch"), // This level was saved from Minecraft: Education Edition. It cannot be loaded.
        @PowerNukkitOnly @Since("FUTURE") EDITIONMISMATCHEDUTOVANILLA("disconnectionScreen.editionMismatchEduToVanilla"), // The server is not running Minecraft: Education Edition. Failed to connect.
        @PowerNukkitOnly @Since("FUTURE") EDITIONMISMATCHVANILLATOEDU("disconnectionScreen.editionMismatchVanillaToEdu"), // The server is running an incompatible edition of Minecraft. Failed to connect.
        @PowerNukkitOnly @Since("FUTURE") EDITIONVERSIONMISMATCH_BODY("disconnectionScreen.editionVersionMismatch.body"), // The world you selected cannot be opened in this version of Minecraft: Education Edition.
        @PowerNukkitOnly @Since("FUTURE") EDITIONVERSIONMISMATCH_TITLE("disconnectionScreen.editionVersionMismatch.title"), // Unable to load world.
        @PowerNukkitOnly @Since("FUTURE") FUTUREVERSION("disconnectionScreen.futureVersion"), // A newer version of the game has saved this level. It cannot be loaded.
        @PowerNukkitOnly @Since("FUTURE") INTERNALERROR_CANTCONNECT("disconnectionScreen.internalError.cantConnect"), // We were unable to connect you.
        @PowerNukkitOnly @Since("FUTURE") INTERNALERROR_CANTEDIT("disconnectionScreen.internalError.cantEdit"), // There was a problem finding this server.
        @PowerNukkitOnly @Since("FUTURE") INTERNALERROR_CANTFINDEDIT("disconnectionScreen.internalError.cantFindEdit"), // We were unable to connect you. Try adding a new server.
        @PowerNukkitOnly @Since("FUTURE") INTERNALERROR_CANTFINDLOCAL("disconnectionScreen.internalError.cantFindLocal"), // There was a problem loading this world.
        @PowerNukkitOnly @Since("FUTURE") INTERNALERROR_CANTFINDREALM("disconnectionScreen.internalError.cantFindRealm"), // There was a problem finding this Realm.
        @PowerNukkitOnly @Since("FUTURE") INTERNALERROR_CANTFINDSERVER("disconnectionScreen.internalError.cantFindServer"), // There was a problem finding this server.
        @PowerNukkitOnly @Since("FUTURE") INVALIDNAME("disconnectionScreen.invalidName"), // Invalid name!
        @PowerNukkitOnly @Since("FUTURE") INVALIDPLAYER("disconnectionScreen.invalidPlayer"), // This world's multiplayer setting is set to friends only. You must be friends with the host of this world to join.
        @PowerNukkitOnly @Since("FUTURE") INVALIDIP("disconnectionScreen.invalidIP"), // Invalid IP address!
        @PowerNukkitOnly @Since("FUTURE") INVALIDSKIN("disconnectionScreen.invalidSkin"), // Invalid or corrupt skin!
        @PowerNukkitOnly @Since("FUTURE") LOCKEDSKIN_TITLE("disconnectionScreen.lockedSkin.title"), // Platform Restricted Skin!
        @PowerNukkitOnly @Since("FUTURE") LOCKEDSKIN("disconnectionScreen.lockedSkin"), // The Skin that you have equipped is from a content pack that is not allowed in cross-platform multiplayer games.
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYERLOCKEDSKIN_TITLE("disconnectionScreen.multiplayerLockedSkin.title"), // Multiplayer Restricted Skin!
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYERLOCKEDSKIN("disconnectionScreen.multiplayerLockedSkin"), // The Skin that you have equipped is from a content pack that is not allowed in multiplayer games.
        @PowerNukkitOnly @Since("FUTURE") LOGGEDINOTHERLOCATION("disconnectionScreen.loggedinOtherLocation"), // Logged in from other location
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYERDISABLED("disconnectionScreen.multiplayerDisabled"), // The world has been set to single player mode.
        @PowerNukkitOnly @Since("FUTURE") NOREASON("disconnectionScreen.noReason"), // You have been disconnected
        @PowerNukkitOnly @Since("FUTURE") NOINTERNET("disconnectionScreen.noInternet"), // Please check your connection to the internet and try again.
        @PowerNukkitOnly @Since("FUTURE") NOTALLOWED("disconnectionScreen.notAllowed"), // You're not invited to play on this server.
        @PowerNukkitOnly @Since("FUTURE") NOTAUTHENTICATED("disconnectionScreen.notAuthenticated"), // You need to authenticate to Microsoft services.
        @PowerNukkitOnly @Since("FUTURE") OUTDATEDCLIENT("disconnectionScreen.outdatedClient"), // Could not connect: Outdated client!
        @PowerNukkitOnly @Since("FUTURE") OUTDATEDSERVER("disconnectionScreen.outdatedServer"), // Could not connect: Outdated server!
        @PowerNukkitOnly @Since("FUTURE") OUTDATEDCLIENTREALMS("disconnectionScreen.outdatedClientRealms"), // You need to update your game to continue playing on this Realm.
        @PowerNukkitOnly @Since("FUTURE") OUTDATEDCLIENTREALMS_TITLE("disconnectionScreen.outdatedClientRealms.title"), // Realms Has Updated
        @PowerNukkitOnly @Since("FUTURE") OUTDATEDSERVERREALMS("disconnectionScreen.outdatedServerRealms"), // Your game is up-to-date but this Realm is not.
        @PowerNukkitOnly @Since("FUTURE") OUTDATEDSERVERREALMS_TITLE("disconnectionScreen.outdatedServerRealms.title"), // Realms Update Pending Within 48 Hours
        @PowerNukkitOnly @Since("FUTURE") OUTDATEDSERVERREALMSNONOWNER_TITLE("disconnectionScreen.outdatedServerRealmsNonOwner.title"), // The Realm you are attempting to access is a different version. Contact the owner of the Realm to address the issue.
        @PowerNukkitOnly @Since("FUTURE") REALMSSERVERUPDATEINCOMING("disconnectionScreen.realmsServerUpdateIncoming"), // Your Realm will soon be updated. You will need an update too.
        @PowerNukkitOnly @Since("FUTURE") REALMSSERVERUPDATEINCOMING_TITLE("disconnectionScreen.realmsServerUpdateIncoming.title"), // Check For Game Update Now?
        @PowerNukkitOnly @Since("FUTURE") REALMSWORLDUNASSIGNED("disconnectionScreen.realmsWorldUnassigned"), // Assign version in dev options.
        @PowerNukkitOnly @Since("FUTURE") REALMSWORLDUNASSIGNED_TITLE("disconnectionScreen.realmsWorldUnassigned.title"), // Realm is Unassigned!
        @PowerNukkitOnly @Since("FUTURE") SCRIPTNOTSUPPORTED("disconnectionScreen.scriptNotSupported"), // The world you are trying to enter requires your device to run scripts.  Your device doesn't support scripting at this time, so you can't join from this device.
        @PowerNukkitOnly @Since("FUTURE") SERVERFULL("disconnectionScreen.serverFull"), // Wow this server is popular! Check back later to see if space opens up.
        @PowerNukkitOnly @Since("FUTURE") SERVERFULL_TITLE("disconnectionScreen.serverFull.title"), // Server Full
        @PowerNukkitOnly @Since("FUTURE") CROSSPLAYDISABLED("disconnectionScreen.crossPlayDisabled"), // CrossPlay is temporarily disabled!
        @PowerNukkitOnly @Since("FUTURE") CROSSPLAYDISABLED_TITLE("disconnectionScreen.crossPlayDisabled.title"), // CrossPlay Disabled
        @PowerNukkitOnly @Since("FUTURE") SERVERIDCONFLICT("disconnectionScreen.serverIdConflict"), // Cannot join world. The account you are signed in to is currently playing in this world on a different device.
        @PowerNukkitOnly @Since("FUTURE") SESSIONNOTFOUND("disconnectionScreen.sessionNotFound"), // Unable to connect to world. The world is no longer available to join.
        @PowerNukkitOnly @Since("FUTURE") TIMEOUT("disconnectionScreen.timeout"), // Connection timed out.
        @PowerNukkitOnly @Since("FUTURE") NOWIFI("disconnectionScreen.nowifi"), // You must be connected to Wifi to play with your friends.
        @PowerNukkitOnly @Since("FUTURE") INVALIDTENANT("disconnectionScreen.invalidTenant"), // Unable to connect to world. Your school does not have access to this server.
        @PowerNukkitOnly @Since("FUTURE") RESOURCEPACK("disconnectionScreen.resourcePack"), // Encountered a problem while downloading or applying resource pack.
        @PowerNukkitOnly @Since("FUTURE") BADPACKET("disconnectionScreen.badPacket"), // Server sent broken packet.
        @PowerNukkitOnly @Since("FUTURE") REALMSDISABLED("disconnectionScreen.realmsDisabled"), // Realms are disabled.
        @PowerNukkitOnly @Since("FUTURE") REALMSDISABLEDBETA("disconnectionScreen.realmsDisabledBeta"), // Realms are disabled for the beta.
        @PowerNukkitOnly @Since("FUTURE") INCOMPATIBLEPACK("disconnectionScreen.incompatiblePack"), // You are unable to join the world because you have the following incompatible packs: %s
        @PowerNukkitOnly @Since("FUTURE") INCOMPATIBLEPACK_MEMORY("disconnectionScreen.incompatiblePack.memory"), // You are unable to join the world because your device doesn't have enough memory for the following packs: %s
        @PowerNukkitOnly @Since("FUTURE") INCOMPATIBLEPACK_GRAPHICS_RAYTRACING("disconnectionScreen.incompatiblePack.graphics.raytracing"), // You are unable to join the world because your device doesn't have compatible hardware to support ray tracing
        @PowerNukkitOnly @Since("FUTURE") WORLDCORRUPTION_MESSAGE("disconnectionScreen.worldCorruption.message"), // Try reopening the world or restoring it from a previous backup
        @PowerNukkitOnly @Since("FUTURE") WORLDCORRUPTION("disconnectionScreen.worldCorruption"), // Disconnected due to world corruption
        @PowerNukkitOnly @Since("FUTURE") HOSTSUSPENDED("disconnectionScreen.hostSuspended"), // Disconnected due to the server being unavailable
        @PowerNukkitOnly @Since("FUTURE") INVALIDLEVEL("disconnectionScreen.invalidLevel"), // Invalid Level!
        ;
        private final String code; DisconnectionScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum StorageSpaceWarningScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") FRONTEND("storageSpaceWarningScreen.frontend"), // You are almost out of data storage space! Minecraft has restricted access to this feature until you clear up additional storage space.
        @PowerNukkitOnly @Since("FUTURE") LOWDURINGGAMEPLAY("storageSpaceWarningScreen.lowduringgameplay"), // Your device is almost out of the space that Minecraft can use to save worlds and settings on this device.  Why not delete some old stuff you don't need so that you can keep saving new stuff?
        @PowerNukkitOnly @Since("FUTURE") FULLDURINGGAMEPLAY("storageSpaceWarningScreen.fullduringgameplay"), // You are out of data storage space and Minecraft is unable to save your progress! Minecraft will return you to the Main Menu to clear up storage space.
        ;
        private final String code; StorageSpaceWarningScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Edu implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") PLAY_SCREEN_VIEW_WORLDS("edu.play_screen.view_worlds"), // VIEW MY WORLDS
        @PowerNukkitOnly @Since("FUTURE") PLAY_SCREEN_VIEW_LIBRARY("edu.play_screen.view_library"), // VIEW LIBRARY
        @PowerNukkitOnly @Since("FUTURE") PLAY_SCREEN_CREATE_NEW("edu.play_screen.create_new"), // CREATE NEW
        @PowerNukkitOnly @Since("FUTURE") PLAY_SCREEN_JOIN_WORLD("edu.play_screen.join_world"), // JOIN WORLD
        @PowerNukkitOnly @Since("FUTURE") PLAY_SCREEN_IMPORT("edu.play_screen.import"), // IMPORT
        @PowerNukkitOnly @Since("FUTURE") PLAY_SCREEN_NEW("edu.play_screen.new"), // NEW
        @PowerNukkitOnly @Since("FUTURE") PLAY_SCREEN_FROM_TEMPLATE("edu.play_screen.from_template"), // TEMPLATES
        @PowerNukkitOnly @Since("FUTURE") WORLDS_SCREEN_TITLE("edu.worlds_screen.title"), // My Worlds
        @PowerNukkitOnly @Since("FUTURE") WORLDS_SCREEN_NEW_WORLD("edu.worlds_screen.new_world"), // New World
        @PowerNukkitOnly @Since("FUTURE") WORLDS_SCREEN_NEW("edu.worlds_screen.new"), // NEW
        @PowerNukkitOnly @Since("FUTURE") WORLDS_SCREEN_TEMPLATES("edu.worlds_screen.templates"), // TEMPLATES
        @PowerNukkitOnly @Since("FUTURE") WORLDS_SCREEN_SEARCH_PLACEHOLDER("edu.worlds_screen.search_placeholder"), // Search
        @PowerNukkitOnly @Since("FUTURE") WORLDS_SCREEN_PLAY("edu.worlds_screen.play"), // PLAY
        @PowerNukkitOnly @Since("FUTURE") WORLDS_SCREEN_HOST("edu.worlds_screen.host"), // HOST
        @PowerNukkitOnly @Since("FUTURE") WORLDS_SCREEN_SETTINGS("edu.worlds_screen.settings"), // SETTINGS
        @PowerNukkitOnly @Since("FUTURE") WORLDS_SCREEN_COURSES_TITLE("edu.worlds_screen.courses_title"), // My Courses
        @PowerNukkitOnly @Since("FUTURE") TEMPLATES_TITLE("edu.templates.title"), // My Templates
        @PowerNukkitOnly @Since("FUTURE") TEMPLATES_LOCAL_HEADER("edu.templates.local_header"), // MY TEMPLATES: %1
        @PowerNukkitOnly @Since("FUTURE") TEMPLATES_FEATURED_HEADER("edu.templates.featured_header"), // FEATURED TEMPLATES
        @PowerNukkitOnly @Since("FUTURE") TEMPLATES_VIEW_MORE("edu.templates.view_more"), // View More Templates
        @PowerNukkitOnly @Since("FUTURE") TEMPLATES_SEARCH_PLACEHOLDER("edu.templates.search_placeholder"), // Search
        @PowerNukkitOnly @Since("FUTURE") TEMPLATES_CREATED_BY("edu.templates.created_by"), // By %1
        @PowerNukkitOnly @Since("FUTURE") TEMPLATES_QUICK_PLAY("edu.templates.quick_play"), // PLAY
        @PowerNukkitOnly @Since("FUTURE") TEMPLATES_HOST("edu.templates.host"), // HOST
        @PowerNukkitOnly @Since("FUTURE") TEMPLATES_CREATE_NEW("edu.templates.create_new"), // CREATE NEW
        @PowerNukkitOnly @Since("FUTURE") PAUSE_MULTIPLAYER_DISABLED("edu.pause.multiplayer.disabled"), // Multiplayer is not available in this lesson.
        @PowerNukkitOnly @Since("FUTURE") PAUSE_IPADDRESS("edu.pause.ipaddress"), // IP ADDRESS
        @PowerNukkitOnly @Since("FUTURE") PAUSE_PORT("edu.pause.port"), // PORT
        ;
        private final String code; Edu(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Effect implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") BADOMEN("effect.badOmen"), // Bad Omen
        @PowerNukkitOnly @Since("FUTURE") VILLAGEHERO("effect.villageHero"), // Hero of the Village
        ;
        private final String code; Effect(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Enchantment implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ARROWDAMAGE("enchantment.arrowDamage"), // Power
        @PowerNukkitOnly @Since("FUTURE") ARROWFIRE("enchantment.arrowFire"), // Flame
        @PowerNukkitOnly @Since("FUTURE") ARROWINFINITE("enchantment.arrowInfinite"), // Infinity
        @PowerNukkitOnly @Since("FUTURE") ARROWKNOCKBACK("enchantment.arrowKnockback"), // Punch
        @PowerNukkitOnly @Since("FUTURE") CROSSBOWMULTISHOT("enchantment.crossbowMultishot"), // Multishot
        @PowerNukkitOnly @Since("FUTURE") CROSSBOWPIERCING("enchantment.crossbowPiercing"), // Piercing
        @PowerNukkitOnly @Since("FUTURE") CROSSBOWQUICKCHARGE("enchantment.crossbowQuickCharge"), // Quick Charge
        @PowerNukkitOnly @Since("FUTURE") CURSE_BINDING("enchantment.curse.binding"), // Curse of Binding
        @PowerNukkitOnly @Since("FUTURE") CURSE_VANISHING("enchantment.curse.vanishing"), // Curse of Vanishing
        @PowerNukkitOnly @Since("FUTURE") DAMAGE_ALL("enchantment.damage.all"), // Sharpness
        @PowerNukkitOnly @Since("FUTURE") DAMAGE_ARTHROPODS("enchantment.damage.arthropods"), // Bane of Arthropods
        @PowerNukkitOnly @Since("FUTURE") DAMAGE_UNDEAD("enchantment.damage.undead"), // Smite
        @PowerNukkitOnly @Since("FUTURE") DIGGING("enchantment.digging"), // Efficiency
        @PowerNukkitOnly @Since("FUTURE") DURABILITY("enchantment.durability"), // Unbreaking
        @PowerNukkitOnly @Since("FUTURE") FIRE("enchantment.fire"), // Fire Aspect
        @PowerNukkitOnly @Since("FUTURE") FISHINGSPEED("enchantment.fishingSpeed"), // Lure
        @PowerNukkitOnly @Since("FUTURE") FROSTWALKER("enchantment.frostwalker"), // Frost Walker
        @PowerNukkitOnly @Since("FUTURE") KNOCKBACK("enchantment.knockback"), // Knockback
        @PowerNukkitOnly @Since("FUTURE") LEVEL_1("enchantment.level.1"), // I
        @PowerNukkitOnly @Since("FUTURE") LEVEL_10("enchantment.level.10"), // X
        @PowerNukkitOnly @Since("FUTURE") LEVEL_2("enchantment.level.2"), // II
        @PowerNukkitOnly @Since("FUTURE") LEVEL_3("enchantment.level.3"), // III
        @PowerNukkitOnly @Since("FUTURE") LEVEL_4("enchantment.level.4"), // IV
        @PowerNukkitOnly @Since("FUTURE") LEVEL_5("enchantment.level.5"), // V
        @PowerNukkitOnly @Since("FUTURE") LEVEL_6("enchantment.level.6"), // VI
        @PowerNukkitOnly @Since("FUTURE") LEVEL_7("enchantment.level.7"), // VII
        @PowerNukkitOnly @Since("FUTURE") LEVEL_8("enchantment.level.8"), // VIII
        @PowerNukkitOnly @Since("FUTURE") LEVEL_9("enchantment.level.9"), // IX
        @PowerNukkitOnly @Since("FUTURE") LOOTBONUS("enchantment.lootBonus"), // Looting
        @PowerNukkitOnly @Since("FUTURE") LOOTBONUSDIGGER("enchantment.lootBonusDigger"), // Fortune
        @PowerNukkitOnly @Since("FUTURE") LOOTBONUSFISHING("enchantment.lootBonusFishing"), // Luck of the Sea
        @PowerNukkitOnly @Since("FUTURE") MENDING("enchantment.mending"), // Mending
        @PowerNukkitOnly @Since("FUTURE") OXYGEN("enchantment.oxygen"), // Respiration
        @PowerNukkitOnly @Since("FUTURE") PROTECT_ALL("enchantment.protect.all"), // Protection
        @PowerNukkitOnly @Since("FUTURE") PROTECT_EXPLOSION("enchantment.protect.explosion"), // Blast Protection
        @PowerNukkitOnly @Since("FUTURE") PROTECT_FALL("enchantment.protect.fall"), // Feather Falling
        @PowerNukkitOnly @Since("FUTURE") PROTECT_FIRE("enchantment.protect.fire"), // Fire Protection
        @PowerNukkitOnly @Since("FUTURE") PROTECT_PROJECTILE("enchantment.protect.projectile"), // Projectile Protection
        @PowerNukkitOnly @Since("FUTURE") SOUL_SPEED("enchantment.soul_speed"), // Soul Speed
        @PowerNukkitOnly @Since("FUTURE") THORNS("enchantment.thorns"), // Thorns
        @PowerNukkitOnly @Since("FUTURE") UNTOUCHING("enchantment.untouching"), // Silk Touch
        @PowerNukkitOnly @Since("FUTURE") WATERWALKER("enchantment.waterWalker"), // Depth Strider
        @PowerNukkitOnly @Since("FUTURE") WATERWORKER("enchantment.waterWorker"), // Aqua Affinity
        @PowerNukkitOnly @Since("FUTURE") TRIDENTCHANNELING("enchantment.tridentChanneling"), // Channeling
        @PowerNukkitOnly @Since("FUTURE") TRIDENTLOYALTY("enchantment.tridentLoyalty"), // Loyalty
        @PowerNukkitOnly @Since("FUTURE") TRIDENTRIPTIDE("enchantment.tridentRiptide"), // Riptide
        @PowerNukkitOnly @Since("FUTURE") TRIDENTIMPALING("enchantment.tridentImpaling"), // Impaling
        ;
        private final String code; Enchantment(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Entity implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") AREA_EFFECT_CLOUD_NAME("entity.area_effect_cloud.name"), // Area Effect Cloud
        @PowerNukkitOnly @Since("FUTURE") ARMOR_STAND_NAME("entity.armor_stand.name"), // Armor Stand
        @PowerNukkitOnly @Since("FUTURE") ARROW_NAME("entity.arrow.name"), // Arrow
        @PowerNukkitOnly @Since("FUTURE") BAT_NAME("entity.bat.name"), // Bat
        @PowerNukkitOnly @Since("FUTURE") BEE_NAME("entity.bee.name"), // Bee
        @PowerNukkitOnly @Since("FUTURE") BLAZE_NAME("entity.blaze.name"), // Blaze
        @PowerNukkitOnly @Since("FUTURE") BOAT_NAME("entity.boat.name"), // Boat
        @PowerNukkitOnly @Since("FUTURE") CAT_NAME("entity.cat.name"), // Cat
        @PowerNukkitOnly @Since("FUTURE") CAVE_SPIDER_NAME("entity.cave_spider.name"), // Cave Spider
        @PowerNukkitOnly @Since("FUTURE") CHICKEN_NAME("entity.chicken.name"), // Chicken
        @PowerNukkitOnly @Since("FUTURE") COW_NAME("entity.cow.name"), // Cow
        @PowerNukkitOnly @Since("FUTURE") CREEPER_NAME("entity.creeper.name"), // Creeper
        @PowerNukkitOnly @Since("FUTURE") DOLPHIN_NAME("entity.dolphin.name"), // Dolphin
        @PowerNukkitOnly @Since("FUTURE") GOAT_NAME("entity.goat.name"), // Goat
        @PowerNukkitOnly @Since("FUTURE") PANDA_NAME("entity.panda.name"), // Panda
        @PowerNukkitOnly @Since("FUTURE") DONKEY_NAME("entity.donkey.name"), // Donkey
        @PowerNukkitOnly @Since("FUTURE") DRAGON_FIREBALL_NAME("entity.dragon_fireball.name"), // Dragon Fireball
        @PowerNukkitOnly @Since("FUTURE") DROWNED_NAME("entity.drowned.name"), // Drowned
        @PowerNukkitOnly @Since("FUTURE") EGG_NAME("entity.egg.name"), // Egg
        @PowerNukkitOnly @Since("FUTURE") ELDER_GUARDIAN_NAME("entity.elder_guardian.name"), // Elder Guardian
        @PowerNukkitOnly @Since("FUTURE") ENDER_CRYSTAL_NAME("entity.ender_crystal.name"), // Ender Crystal
        @PowerNukkitOnly @Since("FUTURE") ENDER_DRAGON_NAME("entity.ender_dragon.name"), // Ender Dragon
        @PowerNukkitOnly @Since("FUTURE") ENDERMAN_NAME("entity.enderman.name"), // Enderman
        @PowerNukkitOnly @Since("FUTURE") ENDERMITE_NAME("entity.endermite.name"), // Endermite
        @PowerNukkitOnly @Since("FUTURE") ENDER_PEARL_NAME("entity.ender_pearl.name"), // Ender Pearl
        @PowerNukkitOnly @Since("FUTURE") EVOCATION_ILLAGER_NAME("entity.evocation_illager.name"), // Evoker
        @PowerNukkitOnly @Since("FUTURE") EVOCATION_FANG_NAME("entity.evocation_fang.name"), // Evoker Fang
        @PowerNukkitOnly @Since("FUTURE") EYE_OF_ENDER_SIGNAL_NAME("entity.eye_of_ender_signal.name"), // Eye of Ender
        @PowerNukkitOnly @Since("FUTURE") FALLING_BLOCK_NAME("entity.falling_block.name"), // Falling Block
        @PowerNukkitOnly @Since("FUTURE") FIREBALL_NAME("entity.fireball.name"), // Fireball
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_ROCKET_NAME("entity.fireworks_rocket.name"), // Firework Rocket
        @PowerNukkitOnly @Since("FUTURE") FISHING_HOOK_NAME("entity.fishing_hook.name"), // Fishing Hook
        @PowerNukkitOnly @Since("FUTURE") FISH_CLOWNFISH_NAME("entity.fish.clownfish.name"), // Clownfish
        @PowerNukkitOnly @Since("FUTURE") FOX_NAME("entity.fox.name"), // Fox
        @PowerNukkitOnly @Since("FUTURE") COD_NAME("entity.cod.name"), // Cod
        @PowerNukkitOnly @Since("FUTURE") PUFFERFISH_NAME("entity.pufferfish.name"), // Pufferfish
        @PowerNukkitOnly @Since("FUTURE") SALMON_NAME("entity.salmon.name"), // Salmon
        @PowerNukkitOnly @Since("FUTURE") TROPICALFISH_NAME("entity.tropicalfish.name"), // Tropical Fish
        @PowerNukkitOnly @Since("FUTURE") AXOLOTL_NAME("entity.axolotl.name"), // Axolotl
        @PowerNukkitOnly @Since("FUTURE") GHAST_NAME("entity.ghast.name"), // Ghast
        @PowerNukkitOnly @Since("FUTURE") GLOW_SQUID_NAME("entity.glow_squid.name"), // Glow Squid
        @PowerNukkitOnly @Since("FUTURE") PIGLIN_BRUTE_NAME("entity.piglin_brute.name"), // Piglin Brute
        @PowerNukkitOnly @Since("FUTURE") GUARDIAN_NAME("entity.guardian.name"), // Guardian
        @PowerNukkitOnly @Since("FUTURE") HOGLIN_NAME("entity.hoglin.name"), // Hoglin
        @PowerNukkitOnly @Since("FUTURE") HORSE_NAME("entity.horse.name"), // Horse
        @PowerNukkitOnly @Since("FUTURE") HUSK_NAME("entity.husk.name"), // Husk
        @PowerNukkitOnly @Since("FUTURE") RAVAGER_NAME("entity.ravager.name"), // Ravager
        @PowerNukkitOnly @Since("FUTURE") IRON_GOLEM_NAME("entity.iron_golem.name"), // Iron Golem
        @PowerNukkitOnly @Since("FUTURE") ITEM_NAME("entity.item.name"), // Item
        @PowerNukkitOnly @Since("FUTURE") LEASH_KNOT_NAME("entity.leash_knot.name"), // Leash Knot
        @PowerNukkitOnly @Since("FUTURE") LIGHTNING_BOLT_NAME("entity.lightning_bolt.name"), // Lightning Bolt
        @PowerNukkitOnly @Since("FUTURE") LINGERING_POTION_NAME("entity.lingering_potion.name"), // Lingering Potion
        @PowerNukkitOnly @Since("FUTURE") LLAMA_NAME("entity.llama.name"), // Llama
        @PowerNukkitOnly @Since("FUTURE") LLAMA_SPIT_NAME("entity.llama_spit.name"), // Llama Spit
        @PowerNukkitOnly @Since("FUTURE") MAGMA_CUBE_NAME("entity.magma_cube.name"), // Magma Cube
        @PowerNukkitOnly @Since("FUTURE") MINECART_NAME("entity.minecart.name"), // Minecart
        @PowerNukkitOnly @Since("FUTURE") CHEST_MINECART_NAME("entity.chest_minecart.name"), // Minecart with Chest
        @PowerNukkitOnly @Since("FUTURE") COMMAND_BLOCK_MINECART_NAME("entity.command_block_minecart.name"), // Minecart with Command Block
        @PowerNukkitOnly @Since("FUTURE") FURNACE_MINECART_NAME("entity.furnace_minecart.name"), // Minecart with Furnace
        @PowerNukkitOnly @Since("FUTURE") HOPPER_MINECART_NAME("entity.hopper_minecart.name"), // Minecart with Hopper
        @PowerNukkitOnly @Since("FUTURE") TNT_MINECART_NAME("entity.tnt_minecart.name"), // Minecart with TNT
        @PowerNukkitOnly @Since("FUTURE") MULE_NAME("entity.mule.name"), // Mule
        @PowerNukkitOnly @Since("FUTURE") MOOSHROOM_NAME("entity.mooshroom.name"), // Mooshroom
        @PowerNukkitOnly @Since("FUTURE") MOVING_BLOCK_NAME("entity.moving_block.name"), // Moving Block
        @PowerNukkitOnly @Since("FUTURE") OCELOT_NAME("entity.ocelot.name"), // Ocelot
        @PowerNukkitOnly @Since("FUTURE") PAINTING_NAME("entity.painting.name"), // Painting
        @PowerNukkitOnly @Since("FUTURE") PARROT_NAME("entity.parrot.name"), // Parrot
        @PowerNukkitOnly @Since("FUTURE") PHANTOM_NAME("entity.phantom.name"), // Phantom
        @PowerNukkitOnly @Since("FUTURE") PIG_NAME("entity.pig.name"), // Pig
        @PowerNukkitOnly @Since("FUTURE") PIGLIN_NAME("entity.piglin.name"), // Piglin
        @PowerNukkitOnly @Since("FUTURE") PILLAGER_NAME("entity.pillager.name"), // Pillager
        @PowerNukkitOnly @Since("FUTURE") POLAR_BEAR_NAME("entity.polar_bear.name"), // Polar Bear
        @PowerNukkitOnly @Since("FUTURE") RABBIT_NAME("entity.rabbit.name"), // Rabbit
        @PowerNukkitOnly @Since("FUTURE") SHEEP_NAME("entity.sheep.name"), // Sheep
        @PowerNukkitOnly @Since("FUTURE") SHULKER_NAME("entity.shulker.name"), // Shulker
        @PowerNukkitOnly @Since("FUTURE") SHULKER_BULLET_NAME("entity.shulker_bullet.name"), // Shulker Bullet
        @PowerNukkitOnly @Since("FUTURE") SILVERFISH_NAME("entity.silverfish.name"), // Silverfish
        @PowerNukkitOnly @Since("FUTURE") SKELETON_NAME("entity.skeleton.name"), // Skeleton
        @PowerNukkitOnly @Since("FUTURE") SKELETON_HORSE_NAME("entity.skeleton_horse.name"), // Skeleton Horse
        @PowerNukkitOnly @Since("FUTURE") STRAY_NAME("entity.stray.name"), // Stray
        @PowerNukkitOnly @Since("FUTURE") SLIME_NAME("entity.slime.name"), // Slime
        @PowerNukkitOnly @Since("FUTURE") SMALL_FIREBALL_NAME("entity.small_fireball.name"), // Small Fireball
        @PowerNukkitOnly @Since("FUTURE") SNOWBALL_NAME("entity.snowball.name"), // Snowball
        @PowerNukkitOnly @Since("FUTURE") SNOW_GOLEM_NAME("entity.snow_golem.name"), // Snow Golem
        @PowerNukkitOnly @Since("FUTURE") SPIDER_NAME("entity.spider.name"), // Spider
        @PowerNukkitOnly @Since("FUTURE") SPLASH_POTION_NAME("entity.splash_potion.name"), // Potion
        @PowerNukkitOnly @Since("FUTURE") SQUID_NAME("entity.squid.name"), // Squid
        @PowerNukkitOnly @Since("FUTURE") STRIDER_NAME("entity.strider.name"), // Strider
        @PowerNukkitOnly @Since("FUTURE") TNT_NAME("entity.tnt.name"), // Block of TNT
        @PowerNukkitOnly @Since("FUTURE") THROWN_TRIDENT_NAME("entity.thrown_trident.name"), // Trident
        @PowerNukkitOnly @Since("FUTURE") TRIPOD_CAMERA_NAME("entity.tripod_camera.name"), // Tripod Camera
        @PowerNukkitOnly @Since("FUTURE") TURTLE_NAME("entity.turtle.name"), // Turtle
        @PowerNukkitOnly @Since("FUTURE") UNKNOWN_NAME("entity.unknown.name"), // Unknown
        @PowerNukkitOnly @Since("FUTURE") VEX_NAME("entity.vex.name"), // Vex
        @PowerNukkitOnly @Since("FUTURE") VILLAGER_NAME("entity.villager.name"), // Villager
        @PowerNukkitOnly @Since("FUTURE") VILLAGER_ARMOR("entity.villager.armor"), // Armorer
        @PowerNukkitOnly @Since("FUTURE") VILLAGER_BUTCHER("entity.villager.butcher"), // Butcher
        @PowerNukkitOnly @Since("FUTURE") VILLAGER_CARTOGRAPHER("entity.villager.cartographer"), // Cartographer
        @PowerNukkitOnly @Since("FUTURE") VILLAGER_CLERIC("entity.villager.cleric"), // Cleric
        @PowerNukkitOnly @Since("FUTURE") VILLAGER_FARMER("entity.villager.farmer"), // Farmer
        @PowerNukkitOnly @Since("FUTURE") VILLAGER_FISHERMAN("entity.villager.fisherman"), // Fisherman
        @PowerNukkitOnly @Since("FUTURE") VILLAGER_FLETCHER("entity.villager.fletcher"), // Fletcher
        @PowerNukkitOnly @Since("FUTURE") VILLAGER_LEATHER("entity.villager.leather"), // Leatherworker
        @PowerNukkitOnly @Since("FUTURE") VILLAGER_LIBRARIAN("entity.villager.librarian"), // Librarian
        @PowerNukkitOnly @Since("FUTURE") VILLAGER_SHEPHERD("entity.villager.shepherd"), // Shepherd
        @PowerNukkitOnly @Since("FUTURE") VILLAGER_TOOL("entity.villager.tool"), // Tool Smith
        @PowerNukkitOnly @Since("FUTURE") VILLAGER_WEAPON("entity.villager.weapon"), // Weapon Smith
        @PowerNukkitOnly @Since("FUTURE") VILLAGER_MASON("entity.villager.mason"), // Stone Mason
        @PowerNukkitOnly @Since("FUTURE") VILLAGER_UNSKILLED("entity.villager.unskilled"), // Unskilled Villager
        @PowerNukkitOnly @Since("FUTURE") VILLAGER_V2_NAME("entity.villager_v2.name"), // Villager
        @PowerNukkitOnly @Since("FUTURE") VINDICATOR_NAME("entity.vindicator.name"), // Vindicator
        @PowerNukkitOnly @Since("FUTURE") WANDERING_TRADER_NAME("entity.wandering_trader.name"), // Wandering Trader
        @PowerNukkitOnly @Since("FUTURE") WITCH_NAME("entity.witch.name"), // Witch
        @PowerNukkitOnly @Since("FUTURE") WITHER_NAME("entity.wither.name"), // Wither
        @PowerNukkitOnly @Since("FUTURE") WITHER_SKELETON_NAME("entity.wither_skeleton.name"), // Wither Skeleton
        @PowerNukkitOnly @Since("FUTURE") WITHER_SKULL_NAME("entity.wither_skull.name"), // Wither Skull
        @PowerNukkitOnly @Since("FUTURE") WITHER_SKULL_DANGEROUS_NAME("entity.wither_skull_dangerous.name"), // Wither Skull
        @PowerNukkitOnly @Since("FUTURE") WOLF_NAME("entity.wolf.name"), // Wolf
        @PowerNukkitOnly @Since("FUTURE") XP_ORB_NAME("entity.xp_orb.name"), // Experience Orb
        @PowerNukkitOnly @Since("FUTURE") XP_BOTTLE_NAME("entity.xp_bottle.name"), // Bottle o' Enchanting
        @PowerNukkitOnly @Since("FUTURE") ZOGLIN_NAME("entity.zoglin.name"), // Zoglin
        @PowerNukkitOnly @Since("FUTURE") ZOMBIE_NAME("entity.zombie.name"), // Zombie
        @PowerNukkitOnly @Since("FUTURE") ZOMBIE_HORSE_NAME("entity.zombie_horse.name"), // Zombie Horse
        @PowerNukkitOnly @Since("FUTURE") ZOMBIE_PIGMAN_NAME("entity.zombie_pigman.name"), // Zombified Piglin
        @PowerNukkitOnly @Since("FUTURE") ZOMBIE_VILLAGER_NAME("entity.zombie_villager.name"), // Zombie Villager
        @PowerNukkitOnly @Since("FUTURE") ZOMBIE_VILLAGER_V2_NAME("entity.zombie_villager_v2.name"), // Zombie Villager
        ;
        private final String code; Entity(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Exports implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") SHARE_FILE("exports.share.file"), // Share %s
        @PowerNukkitOnly @Since("FUTURE") SUSPENDWARNING_CLIENT_CONTENT("exports.suspendWarning.client.content"), // Warning: If you continue, you will be disconnected from this multiplayer session.
        @PowerNukkitOnly @Since("FUTURE") SUSPENDWARNING_HOST_CONTENT("exports.suspendWarning.host.content"), // Warning: If you continue, this will end the multiplayer session for all players.
        @PowerNukkitOnly @Since("FUTURE") SUSPENDWARNING_TITLE("exports.suspendWarning.title"), // Warning
        @PowerNukkitOnly @Since("FUTURE") FILEERROR_TITLE("exports.fileError.title"), // Unable to save your file
        @PowerNukkitOnly @Since("FUTURE") FILEERROR_BODY("exports.fileError.body"), // The disk may be full or write-protected or the file may be in use. Please check to make sure the file is not open and try again.
        ;
        private final String code; Exports(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum AddExternalServerScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ADDSERVER("addExternalServerScreen.addServer"), // Add Server
        @PowerNukkitOnly @Since("FUTURE") NAMETEXTBOXLABEL("addExternalServerScreen.nameTextBoxLabel"), // Server Name
        @PowerNukkitOnly @Since("FUTURE") NAMEPLACEHOLDER("addExternalServerScreen.namePlaceholder"), // Please enter server name
        @PowerNukkitOnly @Since("FUTURE") IPTEXTBOXLABEL("addExternalServerScreen.ipTextBoxLabel"), // Server Address
        @PowerNukkitOnly @Since("FUTURE") PORTTEXTBOXLABEL("addExternalServerScreen.portTextBoxLabel"), // Port
        @PowerNukkitOnly @Since("FUTURE") IPPLACEHOLDER("addExternalServerScreen.ipPlaceholder"), // Please enter IP or Address
        @PowerNukkitOnly @Since("FUTURE") ALREADYADDED("addExternalServerScreen.alreadyAdded"), // This server has already been added
        @PowerNukkitOnly @Since("FUTURE") SAVEBUTTONLABEL("addExternalServerScreen.saveButtonLabel"), // Save
        @PowerNukkitOnly @Since("FUTURE") PLAYBUTTONLABEL("addExternalServerScreen.playButtonLabel"), // Play
        @PowerNukkitOnly @Since("FUTURE") REMOVEBUTTONLABEL("addExternalServerScreen.removeButtonLabel"), // Remove
        @PowerNukkitOnly @Since("FUTURE") REMOVECONFIRMATION("addExternalServerScreen.removeConfirmation"), // Are you sure you want to remove this server? 
        @PowerNukkitOnly @Since("FUTURE") ADDTITLE("addExternalServerScreen.addTitle"), // Add External Server
        @PowerNukkitOnly @Since("FUTURE") EDITTITLE("addExternalServerScreen.editTitle"), // Edit External Server
        ;
        private final String code; AddExternalServerScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Feature implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ENDCITY("feature.endcity"), // End City
        @PowerNukkitOnly @Since("FUTURE") FORTRESS("feature.fortress"), // Nether Fortress
        @PowerNukkitOnly @Since("FUTURE") MANSION("feature.mansion"), // Woodland Mansion
        @PowerNukkitOnly @Since("FUTURE") MINESHAFT("feature.mineshaft"), // Mineshaft
        @PowerNukkitOnly @Since("FUTURE") MISSINGNO("feature.missingno"), // Unknown Feature
        @PowerNukkitOnly @Since("FUTURE") MONUMENT("feature.monument"), // Ocean Monument
        @PowerNukkitOnly @Since("FUTURE") STRONGHOLD("feature.stronghold"), // Stronghold
        @PowerNukkitOnly @Since("FUTURE") TEMPLE("feature.temple"), // Temple
        @PowerNukkitOnly @Since("FUTURE") VILLAGE("feature.village"), // Village
        @PowerNukkitOnly @Since("FUTURE") SHIPWRECK("feature.shipwreck"), // Shipwreck
        @PowerNukkitOnly @Since("FUTURE") BURIEDTREASURE("feature.buriedtreasure"), // Buried Treasure
        @PowerNukkitOnly @Since("FUTURE") RUINS("feature.ruins"), // Ocean Ruins
        @PowerNukkitOnly @Since("FUTURE") PILLAGEROUTPOST("feature.pillageroutpost"), // Pillager Outpost
        @PowerNukkitOnly @Since("FUTURE") BASTIONREMNANT("feature.bastionremnant"), // Bastion Remnant
        @PowerNukkitOnly @Since("FUTURE") RUINEDPORTAL("feature.ruinedportal"), // Ruined Portal
        ;
        private final String code; Feature(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Feed implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") LIKE("feed.like"), // Like
        @PowerNukkitOnly @Since("FUTURE") MANAGE_FEED("feed.manage_feed"), // Manage feed
        @PowerNukkitOnly @Since("FUTURE") COMMENT("feed.comment"), // Comment
        @PowerNukkitOnly @Since("FUTURE") REPORTED_LABEL("feed.reported_label"), // Reports
        @PowerNukkitOnly @Since("FUTURE") IGNORE("feed.ignore"), // Ignore
        @PowerNukkitOnly @Since("FUTURE") NRREPORT("feed.nrreport"), // %d report
        @PowerNukkitOnly @Since("FUTURE") NRREPORTS("feed.nrreports"), // %d reports
        @PowerNukkitOnly @Since("FUTURE") NEWPOST("feed.newPost"), // New post
        @PowerNukkitOnly @Since("FUTURE") DAYSAGO("feed.daysAgo"), // %dd ago
        @PowerNukkitOnly @Since("FUTURE") HOURSAGO("feed.hoursAgo"), // %dh ago
        @PowerNukkitOnly @Since("FUTURE") MINUTESAGO("feed.minutesAgo"), // %dm ago
        @PowerNukkitOnly @Since("FUTURE") NOW("feed.now"), // Just now
        @PowerNukkitOnly @Since("FUTURE") WHATUP("feed.whatup"), // What are you up to?
        @PowerNukkitOnly @Since("FUTURE") UPLOAD("feed.upload"), // Your screenshot is being uploaded...
        @PowerNukkitOnly @Since("FUTURE") MANAGE("feed.manage"), // Manage Feed
        @PowerNukkitOnly @Since("FUTURE") SHARE("feed.share"), // Share
        @PowerNukkitOnly @Since("FUTURE") ADDSCREENSHOT("feed.addScreenshot"), // Add Screenshot
        @PowerNukkitOnly @Since("FUTURE") COMMENTS("feed.comments"), // Comments
        @PowerNukkitOnly @Since("FUTURE") EDIT("feed.edit"), // Edit
        @PowerNukkitOnly @Since("FUTURE") SCREENSHOTS("feed.screenshots"), // Screenshots
        @PowerNukkitOnly @Since("FUTURE") RETURN("feed.return"), // Menu
        @PowerNukkitOnly @Since("FUTURE") GOTOFEED("feed.goToFeed"), // Feed
        @PowerNukkitOnly @Since("FUTURE") CANCEL("feed.cancel"), // Cancel
        @PowerNukkitOnly @Since("FUTURE") PREVIOUS("feed.previous"), // Previous
        @PowerNukkitOnly @Since("FUTURE") NEXT("feed.next"), // Next
        @PowerNukkitOnly @Since("FUTURE") DELETE("feed.delete"), // Delete
        @PowerNukkitOnly @Since("FUTURE") DELETED("feed.deleted"), // Deleted item
        @PowerNukkitOnly @Since("FUTURE") REPORT_XBOX("feed.report_xbox"), // Report to Xbox Live Enforcement
        @PowerNukkitOnly @Since("FUTURE") REPORT_CLUB("feed.report_club"), // Report to Club
        @PowerNukkitOnly @Since("FUTURE") CLUBDESCRIPTION("feed.clubdescription"), // Realm Description
        @PowerNukkitOnly @Since("FUTURE") NO_FEED_ITEM_CONTENT("feed.no_feed_item_content"), // Screenshots and discussions in your Realm will show up here. Get started by pressing "New post"
        @PowerNukkitOnly @Since("FUTURE") NO_REPORTED_ITEM_CONTENT("feed.no_reported_item_content"), // No items have been reported
        @PowerNukkitOnly @Since("FUTURE") NO_SCREENSHOT("feed.no_screenshot"), // You do not have any screenshots
        @PowerNukkitOnly @Since("FUTURE") REPORTTOASTMESSAGE("feed.reportToastMessage"), // Item reported
        @PowerNukkitOnly @Since("FUTURE") FORBIDDEN("feed.forbidden"), // Unauthorized to post to timeline
        @PowerNukkitOnly @Since("FUTURE") FAILEDTOPOST("feed.failedToPost"), // Post unsuccessful
        @PowerNukkitOnly @Since("FUTURE") FAILEDTOPOSTDESCRIPTION("feed.failedToPostDescription"), // Screenshot invalid
        @PowerNukkitOnly @Since("FUTURE") UPPLOAD_STARTED("feed.uppload_started"), // Screenshot is being uploaded
        @PowerNukkitOnly @Since("FUTURE") UPPLOAD_SUCCESS("feed.uppload_success"), // Screenshot has been uploaded
        @PowerNukkitOnly @Since("FUTURE") CONNECTED("feed.connected"), // Every Realm is connected to a Club with your Microsoft Account.
        ;
        private final String code; Feed(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Comment implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") LIKE("comment.like"), // %d like					## 1 like
        @PowerNukkitOnly @Since("FUTURE") LIKES("comment.likes"), // %d likes					## 0 or 2+ likes
        @PowerNukkitOnly @Since("FUTURE") COMMENT("comment.comment"), // %d comment				## 1 comment
        @PowerNukkitOnly @Since("FUTURE") COMMENTS("comment.comments"), // %d comments			## 0 or 2+ comments
        @PowerNukkitOnly @Since("FUTURE") LIKES_AND_COMMENTS("comment.likes_and_comments"), // %1 and %2	## comment.like(s) will be inserted at %1 and comment.comment(s) at %2
        @PowerNukkitOnly @Since("FUTURE") COMMENTPLACEHOLDER("comment.commentplaceholder"), // Comment...
        ;
        private final String code; Comment(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum FurnaceScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") FUEL("furnaceScreen.fuel"), // Fuel
        @PowerNukkitOnly @Since("FUTURE") HEADER("furnaceScreen.header"), // Furnace
        @PowerNukkitOnly @Since("FUTURE") INPUT("furnaceScreen.input"), // Input
        @PowerNukkitOnly @Since("FUTURE") RESULT("furnaceScreen.result"), // Result
        ;
        private final String code; FurnaceScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum GameArgument implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") FEATUREUNSUPPORTED("gameArgument.featureUnsupported"), // This version of Minecraft doesn't support this feature
        ;
        private final String code; GameArgument(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum GameMode implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ADVENTURE("gameMode.adventure"), // Adventure Mode
        @PowerNukkitOnly @Since("FUTURE") CHANGED("gameMode.changed"), // Your game mode has been updated to %s
        @PowerNukkitOnly @Since("FUTURE") CREATIVE("gameMode.creative"), // Creative Mode
        @PowerNukkitOnly @Since("FUTURE") HARDCORE("gameMode.hardcore"), // Hardcore Mode!
        @PowerNukkitOnly @Since("FUTURE") SPECTATOR("gameMode.spectator"), // Spectator Mode
        @PowerNukkitOnly @Since("FUTURE") SURVIVAL("gameMode.survival"), // Survival Mode
        ;
        private final String code; GameMode(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum GameTip implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") CAMERAMOVEMENT_MOUSE("gameTip.cameraMovement.mouse"), // Move :light_mouse_button: to look around.
        @PowerNukkitOnly @Since("FUTURE") CAMERAMOVEMENT_TOUCH("gameTip.cameraMovement.touch"), // Touch and drag the screen to look around.
        @PowerNukkitOnly @Since("FUTURE") CAMERAMOVEMENT_CONTROLLER("gameTip.cameraMovement.controller"), // Move :tip_right_stick: to look around.
        @PowerNukkitOnly @Since("FUTURE") PLAYERMOVEMENT_KEYBOARD("gameTip.playerMovement.keyboard"), // Press :_input_key.forward:, :_input_key.left:, :_input_key.back:, or :_input_key.right: to move.
        @PowerNukkitOnly @Since("FUTURE") PLAYERMOVEMENT_TOUCH("gameTip.playerMovement.touch"), // Touch :tip_touch_forward: :tip_touch_left: :tip_touch_back: :tip_touch_right: to move.
        @PowerNukkitOnly @Since("FUTURE") PLAYERMOVEMENT_CONTROLLER("gameTip.playerMovement.controller"), // Move :tip_left_stick: to move around.
        @PowerNukkitOnly @Since("FUTURE") JUMPMOVEMENT_KEYBOARD("gameTip.jumpMovement.keyboard"), // Press :_input_key.jump: to jump.
        @PowerNukkitOnly @Since("FUTURE") JUMPMOVEMENT_TOUCH("gameTip.jumpMovement.touch"), // Tap :tip_touch_jump: to jump.
        @PowerNukkitOnly @Since("FUTURE") JUMPMOVEMENT_CONTROLLER("gameTip.jumpMovement.controller"), // Press :_input_key.jump: to jump.
        @PowerNukkitOnly @Since("FUTURE") JUMPFORWARD_KEYBOARD("gameTip.jumpForward.keyboard"), // Press :_input_key.forward: and :_input_key.jump: to jump forward.
        @PowerNukkitOnly @Since("FUTURE") JUMPFORWARD_TOUCH("gameTip.jumpForward.touch"), // Touch :tip_touch_forward: and :tip_touch_jump: to jump forward.
        @PowerNukkitOnly @Since("FUTURE") JUMPFORWARD_CONTROLLER("gameTip.jumpForward.controller"), // Push up on :tip_left_stick: and press :_input_key.jump: to jump forward.
        @PowerNukkitOnly @Since("FUTURE") FINDTREE("gameTip.findTree"), // Find a tree to gather wood.
        @PowerNukkitOnly @Since("FUTURE") BREAKWOOD_MOUSE("gameTip.breakWood.mouse"), // Hold :_input_key.attack: to break wood.
        @PowerNukkitOnly @Since("FUTURE") BREAKWOOD_TOUCH("gameTip.breakWood.touch"), // Tap and hold to break wood.
        @PowerNukkitOnly @Since("FUTURE") BREAKWOOD_CONTROLLER("gameTip.breakWood.controller"), // Hold down :_input_key.attack: to break wood.
        @PowerNukkitOnly @Since("FUTURE") OPENINVENTORY_KEYBOARD("gameTip.openInventory.keyboard"), // Press :_input_key.inventory: to open your inventory.
        @PowerNukkitOnly @Since("FUTURE") OPENINVENTORY_TOUCH("gameTip.openInventory.touch"), // Tap the :tip_touch_inventory: button to open your inventory.
        @PowerNukkitOnly @Since("FUTURE") OPENINVENTORY_CONTROLLER("gameTip.openInventory.controller"), // Press :_input_key.inventory: to open your inventory.
        @PowerNukkitOnly @Since("FUTURE") SELECTWOODFORMAKEPLANK_KEYBOARD("gameTip.selectWoodForMakePlank.keyboard"), // :light_mouse_left_button: to select the wood.
        @PowerNukkitOnly @Since("FUTURE") SELECTWOODFORMAKEPLANK_TOUCH("gameTip.selectWoodForMakePlank.touch"), // Tap to select the wood.
        @PowerNukkitOnly @Since("FUTURE") SELECTWOODFORMAKEPLANK_CONTROLLER("gameTip.selectWoodForMakePlank.controller"), // Use :tip_left_stick: and :_gamepad_face_button_down: to select the wood.
        @PowerNukkitOnly @Since("FUTURE") SELECTGRIDFORMAKEPLANK_KEYBOARD("gameTip.selectGridForMakePlank.keyboard"), // :light_mouse_left_button: in the crafting grid.
        @PowerNukkitOnly @Since("FUTURE") SELECTGRIDFORMAKEPLANK_TOUCH("gameTip.selectGridForMakePlank.touch"), // Tap in the crafting grid.
        @PowerNukkitOnly @Since("FUTURE") SELECTGRIDFORMAKEPLANK_CONTROLLER("gameTip.selectGridForMakePlank.controller"), // Use :tip_left_stick: and :_gamepad_face_button_down: to place in the crafting grid.
        @PowerNukkitOnly @Since("FUTURE") SELECTOUTPUTSLOT_KEYBOARD("gameTip.selectOutputSlot.keyboard"), // :light_mouse_left_button: the output slot to craft.
        @PowerNukkitOnly @Since("FUTURE") SELECTOUTPUTSLOT_TOUCH("gameTip.selectOutputSlot.touch"), // Tap the output slot to craft.
        @PowerNukkitOnly @Since("FUTURE") SELECTOUTPUTSLOT_CONTROLLER("gameTip.selectOutputSlot.controller"), // Press :_gamepad_face_button_down: on the output slot to craft.
        @PowerNukkitOnly @Since("FUTURE") SELECTHOTBAR_KEYBOARD("gameTip.selectHotBar.keyboard"), // :light_mouse_left_button: an open slot to add to your inventory.
        @PowerNukkitOnly @Since("FUTURE") SELECTHOTBAR_TOUCH("gameTip.selectHotBar.touch"), // Tap an open slot to add to your inventory.
        @PowerNukkitOnly @Since("FUTURE") SELECTHOTBAR_CONTROLLER("gameTip.selectHotBar.controller"), // Press :_gamepad_face_button_down: on an open slot below to add it to your inventory.
        @PowerNukkitOnly @Since("FUTURE") OPEN_RECIPE_KEYBOARD("gameTip.open.recipe.keyboard"), // :light_mouse_left_button: here to open the recipe book.
        @PowerNukkitOnly @Since("FUTURE") OPEN_RECIPE_TOUCH("gameTip.open.recipe.touch"), // Tap here to open the search tab.
        @PowerNukkitOnly @Since("FUTURE") OPEN_RECIPE_CONTROLLER("gameTip.open.recipe.controller"), // Press :tip_left_trigger: to open the recipe book.
        @PowerNukkitOnly @Since("FUTURE") OPEN_RECIPE_TOUCHCONTROLLER("gameTip.open.recipe.touchcontroller"), // Press :_input_key.jump: here to open the search tab.
        @PowerNukkitOnly @Since("FUTURE") CRAFTTABLE_KEYBOARD("gameTip.craftTable.keyboard"), // :light_mouse_left_button: here to select the crafting table recipe.
        @PowerNukkitOnly @Since("FUTURE") CRAFTTABLE_TOUCH("gameTip.craftTable.touch"), // Tap here to select the crafting table recipe.
        @PowerNukkitOnly @Since("FUTURE") CRAFTTABLE_CONTROLLER("gameTip.craftTable.controller"), // Use :tip_left_stick: to select the crafting table recipe.
        @PowerNukkitOnly @Since("FUTURE") OUTPUTSLOTCRAFTTABLE_CONTROLLER("gameTip.outputSlotCraftTable.controller"), // Press :_gamepad_face_button_down: to craft the crafting table.
        @PowerNukkitOnly @Since("FUTURE") SELECTHOTBAR_CRAFTTABLE("gameTip.selectHotBar.craftTable"), // Put the crafting table in the hotbar to use it.
        @PowerNukkitOnly @Since("FUTURE") CLOSEINVENTORY_KEYBOARD("gameTip.closeInventory.keyboard"), // Press :_input_key.inventory: or :light_mouse_left_button: here to close the inventory.
        @PowerNukkitOnly @Since("FUTURE") CLOSEINVENTORY_TOUCH("gameTip.closeInventory.touch"), // Tap here to close the inventory.
        @PowerNukkitOnly @Since("FUTURE") CLOSEINVENTORY_CONTROLLER("gameTip.closeInventory.controller"), // Press :_gamepad_face_button_right: to close the inventory.
        @PowerNukkitOnly @Since("FUTURE") NEEDMOREMATERIALS("gameTip.needMoreMaterials"), // You need 2 Wood to make a Wooden Pickaxe.
        @PowerNukkitOnly @Since("FUTURE") SELECTITEMINHOTBAR_KEYBOARD("gameTip.selectItemInHotBar.keyboard"), // Use the :light_mouse_middle_button: or number keys to select items.
        @PowerNukkitOnly @Since("FUTURE") SELECTITEMINHOTBAR_TOUCH("gameTip.selectItemInHotBar.touch"), // Tap the hotbar to select items.
        @PowerNukkitOnly @Since("FUTURE") SELECTITEMINHOTBAR_CONTROLLER("gameTip.selectItemInHotBar.controller"), // Use :_input_key.cycleItemLeft: and :_input_key.cycleItemRight: to select hotbar items.
        @PowerNukkitOnly @Since("FUTURE") PLACECRAFTTABLE_KEYBOARD("gameTip.placeCraftTable.keyboard"), // :_input_key.use: the ground to place a crafting table.
        @PowerNukkitOnly @Since("FUTURE") PLACECRAFTTABLE_TOUCH("gameTip.placeCraftTable.touch"), // Tap the ground to place a crafting table.
        @PowerNukkitOnly @Since("FUTURE") PLACECRAFTTABLE_CONTROLLER("gameTip.placeCraftTable.controller"), // Press :_input_key.use: to place a crafting table.
        @PowerNukkitOnly @Since("FUTURE") USECRAFTTABLE_KEYBOARD("gameTip.useCraftTable.keyboard"), // :_input_key.use: a crafting table to use it.
        @PowerNukkitOnly @Since("FUTURE") USECRAFTTABLE_TOUCH("gameTip.useCraftTable.touch"), // Touch a crafting table to use it.
        @PowerNukkitOnly @Since("FUTURE") USECRAFTTABLE_CONTROLLER("gameTip.useCraftTable.controller"), // Press :_input_key.use: on a crafting table to use it.
        @PowerNukkitOnly @Since("FUTURE") NEEDPLANKSANDSTICKS("gameTip.needPlanksAndSticks"), // You need 3 planks and 2 sticks.
        @PowerNukkitOnly @Since("FUTURE") SELECTWOODENPICKAXE("gameTip.selectWoodenPickaxe"), // Make a wooden pickaxe to mine stone and coal.
        @PowerNukkitOnly @Since("FUTURE") OUTPUTSLOT_WOODEN_PICKAXE_KEYBOARD("gameTip.outputSlot.wooden.pickaxe.keyboard"), // :light_mouse_left_button: the output slot to craft a wooden pickaxe.
        @PowerNukkitOnly @Since("FUTURE") OUTPUTSLOT_WOODEN_PICKAXE_TOUCH("gameTip.outputSlot.wooden.pickaxe.touch"), // Tap the output slot to craft a wooden pickaxe.
        @PowerNukkitOnly @Since("FUTURE") OUTPUTSLOT_WOODEN_PICKAXE_CONTROLLER("gameTip.outputSlot.wooden.pickaxe.controller"), // Press :_gamepad_face_button_down: to craft a wooden pickaxe.
        @PowerNukkitOnly @Since("FUTURE") SELECTHOTBAR_WOODEN_PICKAXE("gameTip.selectHotBar.wooden.pickaxe"), // Put the pickaxe in your hotbar to use it.
        @PowerNukkitOnly @Since("FUTURE") HINTSDONE("gameTip.hintsDone"), // You're ready to explore on your own now. Have fun!
        ;
        private final String code; GameTip(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Gametip implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") OPENSEARCHTAB_KEYBOARD("gametip.openSearchTab.keyboard"), // :light_mouse_left_button: here to open the search tab.
        @PowerNukkitOnly @Since("FUTURE") OPENSEARCHTAB_TOUCH("gametip.openSearchTab.touch"), // Tap here to open the search tab.
        @PowerNukkitOnly @Since("FUTURE") OPENSEARCHTAB_CONTROLLER("gametip.openSearchTab.controller"), // Press :_gamepad_face_button_down: here to open the search tab.
        ;
        private final String code; Gametip(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Generator implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") AMPLIFIED("generator.amplified"), // AMPLIFIED
        @PowerNukkitOnly @Since("FUTURE") AMPLIFIED_INFO("generator.amplified.info"), // Notice: Just for fun, requires beefy computer
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZED("generator.customized"), // Customized
        @PowerNukkitOnly @Since("FUTURE") DEBUG_ALL_BLOCK_STATES("generator.debug_all_block_states"), // Debug Mode
        @PowerNukkitOnly @Since("FUTURE") DEFAULT("generator.default"), // Default
        @PowerNukkitOnly @Since("FUTURE") FLAT("generator.flat"), // Flat
        @PowerNukkitOnly @Since("FUTURE") INFINITE("generator.infinite"), // Infinite
        @PowerNukkitOnly @Since("FUTURE") LARGEBIOMES("generator.largeBiomes"), // Large Biomes
        @PowerNukkitOnly @Since("FUTURE") NETHER("generator.nether"), // Nether
        @PowerNukkitOnly @Since("FUTURE") OLD("generator.old"), // Old
        ;
        private final String code; Generator(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum GlobalPauseScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") MESSAGE("globalPauseScreen.message"), // The game has been paused
        @PowerNukkitOnly @Since("FUTURE") QUIT("globalPauseScreen.quit"), // Quit
        ;
        private final String code; GlobalPauseScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Gui implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ACCEPT("gui.accept"), // Accept
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTS("gui.achievements"), // Achievements
        @PowerNukkitOnly @Since("FUTURE") ALL("gui.all"), // All
        @PowerNukkitOnly @Since("FUTURE") BACK("gui.back"), // Back
        @PowerNukkitOnly @Since("FUTURE") CANCEL("gui.cancel"), // Cancel
        @PowerNukkitOnly @Since("FUTURE") CLEAR("gui.clear"), // Clear
        @PowerNukkitOnly @Since("FUTURE") CLOSE("gui.close"), // Close
        @PowerNukkitOnly @Since("FUTURE") CONFIRM("gui.confirm"), // Confirm
        @PowerNukkitOnly @Since("FUTURE") CONFIRMANDPLAY("gui.confirmAndPlay"), // Confirm and Play Now
        @PowerNukkitOnly @Since("FUTURE") CUSTOM("gui.custom"), // Custom
        @PowerNukkitOnly @Since("FUTURE") DEFAULT("gui.default"), // Default
        @PowerNukkitOnly @Since("FUTURE") DECLINE("gui.decline"), // Decline
        @PowerNukkitOnly @Since("FUTURE") DELETE("gui.delete"), // Delete
        @PowerNukkitOnly @Since("FUTURE") DELETEWORLDLONG("gui.deleteWorldLong"), // Delete World
        @PowerNukkitOnly @Since("FUTURE") DONE("gui.done"), // Done
        @PowerNukkitOnly @Since("FUTURE") DOWN("gui.down"), // Down
        @PowerNukkitOnly @Since("FUTURE") EDIT("gui.edit"), // Edit
        @PowerNukkitOnly @Since("FUTURE") ERROR("gui.error"), // Error
        @PowerNukkitOnly @Since("FUTURE") EXIT("gui.exit"), // Exit
        @PowerNukkitOnly @Since("FUTURE") EXPORTWORLD("gui.exportWorld"), // Export
        @PowerNukkitOnly @Since("FUTURE") EXPORTWORLDLONG("gui.exportWorldLong"), // Export World
        @PowerNukkitOnly @Since("FUTURE") EXPORTTEMPLATE("gui.exportTemplate"), // Export Template
        @PowerNukkitOnly @Since("FUTURE") TEMPLATEMINVERSION("gui.templateMinVersion"), // Template Minimum Version
        @PowerNukkitOnly @Since("FUTURE") TEMPLATELOCPICKERTITLE("gui.templateLocPickerTitle"), // Browse for languages.json in localization folder
        @PowerNukkitOnly @Since("FUTURE") TEMPLATELOCPICKERBUTTON("gui.templateLocPickerButton"), // Select Localization
        @PowerNukkitOnly @Since("FUTURE") TEMPLATEICONPICKERTITLE("gui.templateIconPickerTitle"), // Browse for a world icon
        @PowerNukkitOnly @Since("FUTURE") TEMPLATEICONPICKERDESC("gui.templateIconPickerDesc"), // Minecraft Icon
        @PowerNukkitOnly @Since("FUTURE") TEMPLATEICONPICKERBUTTON("gui.templateIconPickerButton"), // Pick world icon
        @PowerNukkitOnly @Since("FUTURE") PICKLOC_SUCCESSMESSAGE("gui.pickLoc.successMessage"), // Copied localization
        @PowerNukkitOnly @Since("FUTURE") PICKLOC_FAILEDMESSAGE("gui.pickLoc.failedMessage"), // Error: File picked wasn't languages.json
        @PowerNukkitOnly @Since("FUTURE") PICKICON_SUCCESSMESSAGE("gui.pickIcon.successMessage"), // Copied world icon
        @PowerNukkitOnly @Since("FUTURE") PICKICON_FAILEDMESSAGE("gui.pickIcon.failedMessage"), // Error: Invalid file format
        @PowerNukkitOnly @Since("FUTURE") PREVIOUS("gui.previous"), // Previous
        @PowerNukkitOnly @Since("FUTURE") COPYWORLD("gui.copyWorld"), // Copy World
        @PowerNukkitOnly @Since("FUTURE") COPYWORLD_FAILEDMESSAGE("gui.copyWorld.failedMessage"), // Failed to create a copy of your world.
        @PowerNukkitOnly @Since("FUTURE") GOBACK("gui.goBack"), // Go Back
        @PowerNukkitOnly @Since("FUTURE") IMPORT("gui.import"), // Import
        @PowerNukkitOnly @Since("FUTURE") IMPORTWORLD("gui.importWorld"), // Import
        @PowerNukkitOnly @Since("FUTURE") IMPORTRETAILWORLD_TITLE("gui.importRetailWorld.title"), // Import World?
        @PowerNukkitOnly @Since("FUTURE") IMPORTRETAILWORLD_TEXT_1("gui.importRetailWorld.text.1"), // This world must be imported before you can use it in the Beta.
        @PowerNukkitOnly @Since("FUTURE") IMPORTRETAILWORLD_TEXT_2("gui.importRetailWorld.text.2"), // Importing the world creates a copy, and will not affect the original world.
        @PowerNukkitOnly @Since("FUTURE") IMPORTRETAILWORLD_TEXT_3("gui.importRetailWorld.text.3"), // Would you like to make a Beta copy of this world?
        @PowerNukkitOnly @Since("FUTURE") IMPORTRETAILWORLD_FAILEDMESSAGE("gui.importRetailWorld.failedMessage"), // Failed to import your world.
        @PowerNukkitOnly @Since("FUTURE") MINECRAFTWORLD("gui.minecraftWorld"), // Minecraft World
        @PowerNukkitOnly @Since("FUTURE") MINECRAFTBUNDLE("gui.minecraftBundle"), // Minecraft Bundle
        @PowerNukkitOnly @Since("FUTURE") LOGIN("gui.login"), // Login
        @PowerNukkitOnly @Since("FUTURE") LOGOUT("gui.logout"), // Logout
        @PowerNukkitOnly @Since("FUTURE") NEXT("gui.next"), // Next
        @PowerNukkitOnly @Since("FUTURE") NO("gui.no"), // No
        @PowerNukkitOnly @Since("FUTURE") NONE("gui.none"), // None
        @PowerNukkitOnly @Since("FUTURE") OK("gui.ok"), // OK
        @PowerNukkitOnly @Since("FUTURE") STORE("gui.store"), // Check Store
        @PowerNukkitOnly @Since("FUTURE") CONTINUE("gui.continue"), // Continue
        @PowerNukkitOnly @Since("FUTURE") PICKWORLD("gui.pickWorld"), // Browse for a Minecraft World
        @PowerNukkitOnly @Since("FUTURE") RETRY("gui.retry"), // Retry
        @PowerNukkitOnly @Since("FUTURE") SELECT("gui.select"), // Select
        @PowerNukkitOnly @Since("FUTURE") SKIP("gui.skip"), // Skip
        @PowerNukkitOnly @Since("FUTURE") STATS("gui.stats"), // Statistics
        @PowerNukkitOnly @Since("FUTURE") TAB("gui.tab"), // Tab
        @PowerNukkitOnly @Since("FUTURE") TOMENU("gui.toMenu"), // Back to title screen
        @PowerNukkitOnly @Since("FUTURE") TRYAGAIN("gui.tryAgain"), // Try Again
        @PowerNukkitOnly @Since("FUTURE") UP("gui.up"), // Up
        @PowerNukkitOnly @Since("FUTURE") WARNING_EXITGAMEWARNING("gui.warning.exitGameWarning"), // Do you want to exit Minecraft?
        @PowerNukkitOnly @Since("FUTURE") WORLDTEMPLATE("gui.worldTemplate"), // Minecraft World Template
        @PowerNukkitOnly @Since("FUTURE") YES("gui.yes"), // Yes
        @PowerNukkitOnly @Since("FUTURE") FEEDBACKYES("gui.feedbackYes"), // Yes, go to Feedback website
        @PowerNukkitOnly @Since("FUTURE") RESOURCEPACKS("gui.resourcepacks"), // Resource Packs...
        @PowerNukkitOnly @Since("FUTURE") SUBMIT("gui.submit"), // Submit
        @PowerNukkitOnly @Since("FUTURE") PLAYOFFLINE("gui.playOffline"), // Play Offline
        @PowerNukkitOnly @Since("FUTURE") SIGNIN("gui.signIn"), // Sign In
        @PowerNukkitOnly @Since("FUTURE") GENERICNETWORKERROR("gui.genericNetworkError"), // Something went wrong. Try checking your internet connection.
        @PowerNukkitOnly @Since("FUTURE") EDU_EXITGAMEWARNINGCAPTION("gui.edu.exitGameWarningCaption"), // Minecraft: Education Edition	## Use Minecraft 教育版 in zh_CN translation
        @PowerNukkitOnly @Since("FUTURE") EDU_EXITGAMEWARNINGMESSAGE("gui.edu.exitGameWarningMessage"), // Exit Minecraft: Education Edition?	## Use 离开 Minecraft 教育版? in zh_CN translation
        ;
        private final String code; Gui(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum UpdateScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") UPDATE("updateScreen.update"), // Update
        @PowerNukkitOnly @Since("FUTURE") UPDATEREQUIRED("updateScreen.updateRequired"), // Update Required
        @PowerNukkitOnly @Since("FUTURE") TITLE("updateScreen.title"), // Version Out of Date
        @PowerNukkitOnly @Since("FUTURE") BODY("updateScreen.body"), // Update to the latest version to access all the new features, play with friends online, or see what's new in the Marketplace.
        @PowerNukkitOnly @Since("FUTURE") COMMERCENOTSUPPORTED_TITLE("updateScreen.commerceNotSupported.title"), // Can't Access Marketplace
        @PowerNukkitOnly @Since("FUTURE") COMMERCENOTSUPPORTED_BODY("updateScreen.commerceNotSupported.body"), // This version of Minecraft can no longer access Minecraft Marketplace. Update to the latest version to restore Marketplace access.
        @PowerNukkitOnly @Since("FUTURE") PACKS_UPDATEREQUIRED("updateScreen.packs.updateRequired"), // Please update to the latest version to download your pack purchased in Minecraft Marketplace.
        @PowerNukkitOnly @Since("FUTURE") PATCHVERSION("updateScreen.patchVersion"), // Version %s Patch Notes:
        ;
        private final String code; UpdateScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum HostOption implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") CODEBUILDER("hostOption.codeBuilder"), // Code Builder
        @PowerNukkitOnly @Since("FUTURE") SETWORLDSPAWN("hostOption.setWorldSpawn"), // Set World Spawn
        @PowerNukkitOnly @Since("FUTURE") TELEPORT("hostOption.teleport"), // Teleport
        @PowerNukkitOnly @Since("FUTURE") TELEPORT_WHO("hostOption.teleport.who"), // Who
        @PowerNukkitOnly @Since("FUTURE") TELEPORT_WHERE("hostOption.teleport.where"), // Where
        @PowerNukkitOnly @Since("FUTURE") TIME("hostOption.time"), // Time
        @PowerNukkitOnly @Since("FUTURE") TIME_DAY("hostOption.time.day"), // Day
        @PowerNukkitOnly @Since("FUTURE") TIME_MIDNIGHT("hostOption.time.midnight"), // Midnight
        @PowerNukkitOnly @Since("FUTURE") TIME_NOON("hostOption.time.noon"), // Noon
        @PowerNukkitOnly @Since("FUTURE") TIME_NIGHT("hostOption.time.night"), // Night
        @PowerNukkitOnly @Since("FUTURE") TIME_SUNRISE("hostOption.time.sunrise"), // Sunrise
        @PowerNukkitOnly @Since("FUTURE") TIME_SUNSET("hostOption.time.sunset"), // Sunset
        @PowerNukkitOnly @Since("FUTURE") WEATHER("hostOption.weather"), // Weather
        @PowerNukkitOnly @Since("FUTURE") WEATHER_CLEAR("hostOption.weather.clear"), // Clear
        @PowerNukkitOnly @Since("FUTURE") WEATHER_RAIN("hostOption.weather.rain"), // Rain
        @PowerNukkitOnly @Since("FUTURE") WEATHER_THUNDERSTORM("hostOption.weather.thunderstorm"), // Thunderstorm
        ;
        private final String code; HostOption(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Howtoplay implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") NEXT("howtoplay.next"), // Next
        @PowerNukkitOnly @Since("FUTURE") PREVIOUS("howtoplay.previous"), // Previous
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_BASICS("howtoplay.category.basics"), // Basics
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_CRAFTING("howtoplay.category.crafting"), // Crafting
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_EDUCATION("howtoplay.category.education"), // Education
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_ENGINEERING("howtoplay.category.engineering"), // Engineering
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_ENHANCEDPLAY("howtoplay.category.enhancedPlay"), // Enhanced Play
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_FIRSTDAY("howtoplay.category.firstDay"), // First Day
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_OPTIONSANDCHEATS("howtoplay.category.optionsAndCheats"), // Options & Cheats
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_PLAY("howtoplay.category.play"), // Play
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_THEEND("howtoplay.category.theEnd"), // The End
        @PowerNukkitOnly @Since("FUTURE") ADVENTUREMODE("howtoplay.adventureMode"), // Adventure Mode
        @PowerNukkitOnly @Since("FUTURE") ADVENTUREMODE_TITLE("howtoplay.adventureMode.title"), // How to Play : Adventure Mode
        @PowerNukkitOnly @Since("FUTURE") ADVENTUREMODE_TEXT_1("howtoplay.adventureMode.text.1"), // Adventure Mode is a gamemode for world builders. In Adventure Mode, players must use special tools to place or break blocks.
        @PowerNukkitOnly @Since("FUTURE") ADVENTUREMODE_TEXT_2("howtoplay.adventureMode.text.2"), // To get these special tools, you must use /give with canplace or candestroy parameters while in creative mode.
        @PowerNukkitOnly @Since("FUTURE") ANVIL("howtoplay.anvil"), // Anvil
        @PowerNukkitOnly @Since("FUTURE") ANVIL_TITLE("howtoplay.anvil.title"), // How to Play : Anvil
        @PowerNukkitOnly @Since("FUTURE") ANVIL_TEXT_1("howtoplay.anvil.text.1"), // Experience Levels can be used to repair, enchant, or rename items with the Anvil.
        @PowerNukkitOnly @Since("FUTURE") ANVIL_HEADER_1("howtoplay.anvil.header.1"), // Renaming and Applying Enchantments
        @PowerNukkitOnly @Since("FUTURE") ANVIL_TEXT_2("howtoplay.anvil.text.2"), // All items can be renamed, although only items with durability can be repaired or enchanted with Books on the Anvil.
        @PowerNukkitOnly @Since("FUTURE") ANVIL_HEADER_2("howtoplay.anvil.header.2"), // Repairing
        @PowerNukkitOnly @Since("FUTURE") ANVIL_TEXT_3("howtoplay.anvil.text.3"), // An item can be repaired by placing it in one of the input slots on the left, along with either some raw materials of the item, like Iron Ingots for an Iron Sword, or combined with another item of the same type.
        @PowerNukkitOnly @Since("FUTURE") ANVIL_TEXT_4("howtoplay.anvil.text.4"), // Combining items is more efficient when done with an Anvil.
        @PowerNukkitOnly @Since("FUTURE") ANVIL_TEXT_5("howtoplay.anvil.text.5"), // There is a chance that the Anvil will be damaged with each use and after enough usage it will be destroyed.
        @PowerNukkitOnly @Since("FUTURE") ARMOR("howtoplay.armor"), // Armor
        @PowerNukkitOnly @Since("FUTURE") ARMOR_TITLE("howtoplay.armor.title"), // How to Play : Armor
        @PowerNukkitOnly @Since("FUTURE") ARMOR_TEXT_1("howtoplay.armor.text.1"), // By wearing Armor, you can protect yourself from incoming damage. Your Armor level is represented by :armor: on the HUD, the higher the level, the less damage you will take.
        @PowerNukkitOnly @Since("FUTURE") ARMOR_HEADER_1("howtoplay.armor.header.1"), // Crafting
        @PowerNukkitOnly @Since("FUTURE") ARMOR_TEXT_2("howtoplay.armor.text.2"), // Armor can be crafted from Leather, Iron, Gold, or Diamond. Chain Armor can be obtained through villager trading and loot from zombies and skeletons.
        @PowerNukkitOnly @Since("FUTURE") ARMOR_TEXT_3("howtoplay.armor.text.3"), // Equip Armor by opening your inventory and moving pieces of Armor to the appropriate slot next to your player skin.
        @PowerNukkitOnly @Since("FUTURE") ARMOR_TEXT_4("howtoplay.armor.text.4"), // Iron, Chain, and Gold Armor can be smelted into Iron or Gold Nuggets in a Furnace.
        @PowerNukkitOnly @Since("FUTURE") ARMOR_HEADER_2("howtoplay.armor.header.2"), // Shield
        @PowerNukkitOnly @Since("FUTURE") ARMOR_TEXT_5_KEYBOARD("howtoplay.armor.text.5.keyboard"), // The Shield will block incoming damage. The Shield can be equipped in the offhand slot as well as the hotbar. Press and hold :_input_key.sneak: to block with the Shield.
        @PowerNukkitOnly @Since("FUTURE") ARMOR_TEXT_5_GAMEPAD("howtoplay.armor.text.5.gamepad"), // The Shield will block incoming damage. The Shield can be equipped in the offhand slot as well as the hotbar. Press the :_input_key.sneak: button or click :_gamepad_stick_right: to toggle block with the Shield.
        @PowerNukkitOnly @Since("FUTURE") ARMOR_TEXT_5_TOUCH("howtoplay.armor.text.5.touch"), // The Shield will block incoming damage. The Shield can be equipped in the offhand slot as well as the hotbar. Tap :touch_sneak: to toggle block with the Shield.
        @PowerNukkitOnly @Since("FUTURE") ARMOR_TEXT_5_RIFT_CONTROLLER("howtoplay.armor.text.5.rift_controller"), // The Shield will block incoming damage. The Shield can be equipped in the offhand slot as well as the hotbar. Press the :_input_key.sneak: button or click :rift_X: to toggle block with the Shield.
        @PowerNukkitOnly @Since("FUTURE") ARMOR_TEXT_5_WINDOWSMR_CONTROLLER("howtoplay.armor.text.5.windowsmr_controller"), // The Shield will block incoming damage. The Shield can be equipped in the offhand slot as well as the hotbar. Press the :_input_key.sneak: button or click :windowsmr_right_stick: to toggle block with the Shield.
        @PowerNukkitOnly @Since("FUTURE") ARMOR_TEXT_6("howtoplay.armor.text.6"), // The Shield can even block a Creeper explosion!
        @PowerNukkitOnly @Since("FUTURE") ARMOR_HEADER_3("howtoplay.armor.header.3"), // Disguise
        @PowerNukkitOnly @Since("FUTURE") ARMOR_TEXT_7("howtoplay.armor.text.7"), // You can also wear a Carved Pumpkin on your head. This won't give you any :armor: but will make it so Endermen won't get mad when you look at them.
        @PowerNukkitOnly @Since("FUTURE") ARMORSTAND("howtoplay.armorStand"), // Armor Stand
        @PowerNukkitOnly @Since("FUTURE") ARMORSTAND_TITLE("howtoplay.armorStand.title"), // How to Play : Armor Stand
        @PowerNukkitOnly @Since("FUTURE") ARMORSTAND_TEXT_1("howtoplay.armorStand.text.1"), // An Armor Stand holds your armor while you aren't using it.
        @PowerNukkitOnly @Since("FUTURE") ARMORSTAND_HEADER_1("howtoplay.armorStand.header.1"), // Outfitting
        @PowerNukkitOnly @Since("FUTURE") ARMORSTAND_TEXT_2_NOTTOUCH("howtoplay.armorStand.text.2.notTouch"), // Press :_input_key.use: on an Armor Stand while holding a piece of armor to place it on the Armor Stand.
        @PowerNukkitOnly @Since("FUTURE") ARMORSTAND_TEXT_2_TOUCH("howtoplay.armorStand.text.2.touch"), // Tap an Armor Stand while holding a piece of armor to place it on the Armor Stand.
        @PowerNukkitOnly @Since("FUTURE") ARMORSTAND_TEXT_3_NOTTOUCH("howtoplay.armorStand.text.3.notTouch"), // Press :_input_key.use: on an Armor Stand with an open hand to remove something from the Armor Stand.
        @PowerNukkitOnly @Since("FUTURE") ARMORSTAND_TEXT_3_TOUCH("howtoplay.armorStand.text.3.touch"), // Tap an Armor Stand with an open hand to remove something from the Armor Stand.
        @PowerNukkitOnly @Since("FUTURE") ARMORSTAND_HEADER_2("howtoplay.armorStand.header.2"), // Posing
        @PowerNukkitOnly @Since("FUTURE") ARMORSTAND_TEXT_4_NOTTOUCH("howtoplay.armorStand.text.4.notTouch"), // An Armor Stand can change its pose, sneak and press :_input_key.use: on an Armor Stand to change the pose.  
        @PowerNukkitOnly @Since("FUTURE") ARMORSTAND_TEXT_4_TOUCH("howtoplay.armorStand.text.4.touch"), // An Armor Stand can change its pose, sneak and tap an Armor Stand to change the pose.
        @PowerNukkitOnly @Since("FUTURE") ARMORSTAND_HEADER_3("howtoplay.armorStand.header.3"), // Dancing
        @PowerNukkitOnly @Since("FUTURE") ARMORSTAND_TEXT_5("howtoplay.armorStand.text.5"), // Armor Stands will react to a Redstone signal, try giving it different signal strengths and see what happens.
        @PowerNukkitOnly @Since("FUTURE") BANNERS("howtoplay.banners"), // Banners
        @PowerNukkitOnly @Since("FUTURE") BANNERS_TITLE("howtoplay.banners.title"), // How to Play : Banners
        @PowerNukkitOnly @Since("FUTURE") BANNERS_TEXT_1("howtoplay.banners.text.1"), // Banners are a cool way to decorate your house or castle with custom patterns and colors.
        @PowerNukkitOnly @Since("FUTURE") BANNERS_TEXT_2("howtoplay.banners.text.2"), // After crafting a Banner, you can put it on a Crafting Table or Loom and add different dyes to create your own unique, cool design!
        @PowerNukkitOnly @Since("FUTURE") BANNERS_HEADER_1("howtoplay.banners.header.1"), // Applying a Pattern
        @PowerNukkitOnly @Since("FUTURE") BANNERS_TEXT_3("howtoplay.banners.text.3"), // There are many different patterns that you can create with your dye such as:
        @PowerNukkitOnly @Since("FUTURE") BANNERS_TEXT_4("howtoplay.banners.text.4"), //   - Making a triangle will give you a chevron pattern.
        @PowerNukkitOnly @Since("FUTURE") BANNERS_TEXT_5("howtoplay.banners.text.5"), //   - Making a cross gives you a cross pattern.
        @PowerNukkitOnly @Since("FUTURE") BANNERS_TEXT_6("howtoplay.banners.text.6"), //   - Adding a Oxeye Daisy gives you a flower pattern.
        @PowerNukkitOnly @Since("FUTURE") BANNERS_TEXT_7("howtoplay.banners.text.7"), // Experiment with different combinations to get even more patterns!
        @PowerNukkitOnly @Since("FUTURE") BANNERS_HEADER_2("howtoplay.banners.header.2"), // Multiple Layers
        @PowerNukkitOnly @Since("FUTURE") BANNERS_TEXT_8("howtoplay.banners.text.8"), // A Banner can also have multiple layers, allowing you to have more than one pattern on your Banner. If you don't like the last pattern you put on a Banner, you can wash the last layer off in a Cauldron.
        @PowerNukkitOnly @Since("FUTURE") BANNERS_HEADER_3("howtoplay.banners.header.3"), // Making Copies
        @PowerNukkitOnly @Since("FUTURE") BANNERS_TEXT_9("howtoplay.banners.text.9"), // If you want to copy a Banner, put it on the Crafting Table with a blank Banner.
        @PowerNukkitOnly @Since("FUTURE") BEACONS("howtoplay.beacons"), // Beacons
        @PowerNukkitOnly @Since("FUTURE") BEACONS_TITLE("howtoplay.beacons.title"), // How to Play : Beacons
        @PowerNukkitOnly @Since("FUTURE") BEACONS_TEXT_1("howtoplay.beacons.text.1"), // Active Beacons project a bright beam of light into the sky.
        @PowerNukkitOnly @Since("FUTURE") BEACONS_TEXT_2("howtoplay.beacons.text.2"), // They are crafted with Glass, Obsidian, and Nether Stars (which is obtained by defeating the Wither).
        @PowerNukkitOnly @Since("FUTURE") BEACONS_HEADER_1("howtoplay.beacons.header.1"), // Construction
        @PowerNukkitOnly @Since("FUTURE") BEACONS_TEXT_3("howtoplay.beacons.text.3"), // Beacons must be placed so that they have an unobstructed view of the sky and must be placed on Pyramids of Iron, Gold, Emerald, or Diamond blocks.
        @PowerNukkitOnly @Since("FUTURE") BEACONS_TEXT_4("howtoplay.beacons.text.4"), // The material that the Beacon is placed on has no effect on the power of the Beacon.
        @PowerNukkitOnly @Since("FUTURE") BEACONS_HEADER_2("howtoplay.beacons.header.2"), // Use
        @PowerNukkitOnly @Since("FUTURE") BEACONS_TEXT_5("howtoplay.beacons.text.5"), // In the Beacon menu you can select one primary power for your Beacon. The more tiers your pyramid has the more powers you can have.
        @PowerNukkitOnly @Since("FUTURE") BEACONS_TEXT_6("howtoplay.beacons.text.6"), // To set the powers of your Beacon you must use an Emerald, Diamond, Gold Ingot, or Iron Ingot in the payment slot.
        @PowerNukkitOnly @Since("FUTURE") BEACONS_TEXT_7("howtoplay.beacons.text.7"), // Once set, the powers will emanate from the Beacon indefinitely. Powers are granted to all nearby players.
        @PowerNukkitOnly @Since("FUTURE") BEACONS_TEXT_8("howtoplay.beacons.text.8"), // To change the color of the beam, place a stained glass block in its path.
        @PowerNukkitOnly @Since("FUTURE") BEDS("howtoplay.beds"), // Beds
        @PowerNukkitOnly @Since("FUTURE") BEDS_TITLE("howtoplay.beds.title"), // How to Play : Beds
        @PowerNukkitOnly @Since("FUTURE") BEDS_TEXT_1("howtoplay.beds.text.1"), // Sleeping in a Bed passes the night and sets your spawn point.
        @PowerNukkitOnly @Since("FUTURE") BEDS_TEXT_2_NOTTOUCH("howtoplay.beds.text.2.notTouch"), // Press :_input_key.use: on a Bed to go to sleep. This can only be done at night.
        @PowerNukkitOnly @Since("FUTURE") BEDS_TEXT_2_TOUCH("howtoplay.beds.text.2.touch"), // Tap a Bed to go to sleep. This can only be done at night.
        @PowerNukkitOnly @Since("FUTURE") BEDS_TEXT_3("howtoplay.beds.text.3"), // If you are playing Multiplayer, everyone in the world must be in a Bed at the same time to pass the night.
        @PowerNukkitOnly @Since("FUTURE") BEDS_TEXT_4("howtoplay.beds.text.4"), // If your Bed is broken you will return to where you first spawned into the world.
        @PowerNukkitOnly @Since("FUTURE") BEDS_TEXT_5("howtoplay.beds.text.5"), // Be careful when using a Bed in the Nether, it's usually too hot to sleep.
        @PowerNukkitOnly @Since("FUTURE") BLOCKS("howtoplay.blocks"), // Blocks
        @PowerNukkitOnly @Since("FUTURE") BLOCKS_TITLE("howtoplay.blocks.title"), // How to Play : Blocks
        @PowerNukkitOnly @Since("FUTURE") BLOCKS_TEXT_1("howtoplay.blocks.text.1"), // The world of Minecraft is made from millions of blocks. Each one is breakable, collectable, and placeable. There are almost no limits to what you can build!
        @PowerNukkitOnly @Since("FUTURE") BLOCKS_TEXT_2("howtoplay.blocks.text.2"), // Most blocks you will have to find in the world, but some can only be crafted such as combining other blocks on a crafting table like a Redstone Block or smelted in a furnace like Glass.
        @PowerNukkitOnly @Since("FUTURE") BLOCKS_HEADER_1("howtoplay.blocks.header.1"), // Falling Blocks
        @PowerNukkitOnly @Since("FUTURE") BLOCKS_TEXT_3("howtoplay.blocks.text.3"), // Most blocks are not affected by gravity and can float in mid air, but some like Sand and Gravel, will fall if there is no block underneath them.
        @PowerNukkitOnly @Since("FUTURE") BLOCKS_HEADER_2("howtoplay.blocks.header.2"), // Interesting Blocks
        @PowerNukkitOnly @Since("FUTURE") BLOCKS_TEXT_4("howtoplay.blocks.text.4"), // Here are some examples of the more interesting blocks in Minecraft:
        @PowerNukkitOnly @Since("FUTURE") BLOCKS_TEXT_5("howtoplay.blocks.text.5"), // Glass - This is a transparent block that is made by smelting Sand in a Furnace.
        @PowerNukkitOnly @Since("FUTURE") BLOCKS_TEXT_6("howtoplay.blocks.text.6"), // Concrete - This is made by dropping a Concrete Powder block into water.
        @PowerNukkitOnly @Since("FUTURE") BLOCKS_TEXT_7("howtoplay.blocks.text.7"), // Terracotta - This is found naturally in Badlands biomes or can be crafted and dyed from Clay that is found underwater. Terracotta can be made into Glazed Terracotta by smelting it in a Furnace.
        @PowerNukkitOnly @Since("FUTURE") BLOCKS_TEXT_8("howtoplay.blocks.text.8"), // Magma - This is found naturally in the Nether, it gives off a little light and will burn whoever steps on it.
        @PowerNukkitOnly @Since("FUTURE") BLOCKS_TEXT_9("howtoplay.blocks.text.9"), // Coarse Dirt - This is almost like a normal Dirt Block but Grass can't grow on it. It can be found in Savanna and Mega Taiga biomes.
        @PowerNukkitOnly @Since("FUTURE") BOOKANDQUILL("howtoplay.bookAndQuill"), // Book & Quill
        @PowerNukkitOnly @Since("FUTURE") BOOKANDQUILL_TITLE("howtoplay.bookAndQuill.title"), // How to Play : Book & Quill
        @PowerNukkitOnly @Since("FUTURE") BOOKANDQUILL_TEXT_1("howtoplay.bookAndQuill.text.1"), // The Book & Quill lets you record your adventures. Tell your story by entering text into the pages. You can even change the title and the author! Sign the Book & Quill to finalize your work. The Book & Quill will be editable until it is signed. 
        @PowerNukkitOnly @Since("FUTURE") BREWINGSTAND("howtoplay.brewingStand"), // Brewing Stand
        @PowerNukkitOnly @Since("FUTURE") BREWINGSTAND_TITLE("howtoplay.brewingStand.title"), // How to Play : Brewing Stand
        @PowerNukkitOnly @Since("FUTURE") BREWINGSTAND_TEXT_1("howtoplay.brewingStand.text.1"), // Brewing potions requires a Brewing Stand. Every potion starts off with a bottle of water, which is made by filling a Glass Bottle with water from a Cauldron or water source.
        @PowerNukkitOnly @Since("FUTURE") BREWINGSTAND_HEADER_1("howtoplay.brewingStand.header.1"), // Know your Brewing Stand
        @PowerNukkitOnly @Since("FUTURE") BREWINGSTAND_TEXT_2("howtoplay.brewingStand.text.2"), // A Brewing Stand has three slots for creating different potions. One ingredient can be used over all three bottles, so always brew three potions at the same time to best use your resources.
        @PowerNukkitOnly @Since("FUTURE") BREWINGSTAND_HEADER_2("howtoplay.brewingStand.header.2"), // Ingredients and Potions
        @PowerNukkitOnly @Since("FUTURE") BREWINGSTAND_TEXT_3("howtoplay.brewingStand.text.3"), // Putting Netherwart in the top position of the Brewing Stand will give you an Awkward Potion. This doesn't have any effect by itself, but creates a base potion that can be used to create more advanced potions.
        @PowerNukkitOnly @Since("FUTURE") BREWINGSTAND_TEXT_4("howtoplay.brewingStand.text.4"), // There are many potion effects to discover, experiment with different ingredients and combinations to become a true alchemist.
        @PowerNukkitOnly @Since("FUTURE") CAULDRON("howtoplay.cauldron"), // Cauldron
        @PowerNukkitOnly @Since("FUTURE") CAULDRON_TITLE("howtoplay.cauldron.title"), // How to Play : Cauldron
        @PowerNukkitOnly @Since("FUTURE") CAULDRON_TEXT_1("howtoplay.cauldron.text.1"), // The Cauldron is a container that can hold buckets or bottles of liquid. 
        @PowerNukkitOnly @Since("FUTURE") CAULDRON_HEADER_1("howtoplay.cauldron.header.1"), // Filling
        @PowerNukkitOnly @Since("FUTURE") CAULDRON_TEXT_2_NOTTOUCH("howtoplay.cauldron.text.2.notTouch"), // Press :_input_key.use: on a Cauldron while holding a Bucket of Water or a Potion to fill the Cauldron with its contents.
        @PowerNukkitOnly @Since("FUTURE") CAULDRON_TEXT_2_TOUCH("howtoplay.cauldron.text.2.touch"), // Tap a Cauldron while holding a Bucket of Water or a Potion to fill the Cauldron with its contents.
        @PowerNukkitOnly @Since("FUTURE") CAULDRON_TEXT_3("howtoplay.cauldron.text.3"), // A Potion will only partially fill a Cauldron so you will have to use multiple Potions to fill it up completely.
        @PowerNukkitOnly @Since("FUTURE") CAULDRON_HEADER_2("howtoplay.cauldron.header.2"), // Dipping Arrows
        @PowerNukkitOnly @Since("FUTURE") CAULDRON_TEXT_4_NOTTOUCH("howtoplay.cauldron.text.4.notTouch"), // Press :_input_key.use: on a Cauldron with your Arrow in hand to create all kinds of different arrows!
        @PowerNukkitOnly @Since("FUTURE") CAULDRON_TEXT_4_TOUCH("howtoplay.cauldron.text.4.touch"), // Tap a Cauldron with your Arrow in hand to create all kinds of different arrows!
        @PowerNukkitOnly @Since("FUTURE") CAULDRON_HEADER_3("howtoplay.cauldron.header.3"), // Dyeing Armor
        @PowerNukkitOnly @Since("FUTURE") CAULDRON_TEXT_5_NOTTOUCH("howtoplay.cauldron.text.5.notTouch"), // To dye Leather Armor or Leather Horse Armor, press :_input_key.use: on a Cauldron filled with water while holding the desired dye. This will change the color of the water inside of the Cauldron. Then dip your armor into the Cauldron by pressing :_input_key.use: with armor in your hand.
        @PowerNukkitOnly @Since("FUTURE") CAULDRON_TEXT_5_TOUCH("howtoplay.cauldron.text.5.touch"), // To dye Leather Armor or Leather Horse Armor, tap a Cauldron filled with water while holding the desired dye. This will change the color of the water inside of the Cauldron. Then dip your armor into the Cauldron by tapping the Cauldron with the armor in your hand.
        @PowerNukkitOnly @Since("FUTURE") CAULDRON_TEXT_6("howtoplay.cauldron.text.6"), // If you want to wash the dye off, dip the dyed item into a Cauldron of undyed Water.
        @PowerNukkitOnly @Since("FUTURE") CHAT("howtoplay.chat"), // Chat
        @PowerNukkitOnly @Since("FUTURE") CHAT_TITLE("howtoplay.chat.title"), // How to Play : Chat
        @PowerNukkitOnly @Since("FUTURE") CHAT_TEXT_1_KEYBOARD("howtoplay.chat.text.1.keyboard"), // Press :_input_key.chat: to open Chat. Type your message and press ENTER.
        @PowerNukkitOnly @Since("FUTURE") CHAT_TEXT_1_GAMEPAD("howtoplay.chat.text.1.gamepad"), // Press :_input_key.chat: to open Chat. Type your message and press the send button.
        @PowerNukkitOnly @Since("FUTURE") CHAT_TEXT_1_TOUCH("howtoplay.chat.text.1.touch"), // Tap the chat button to open Chat. Type your message and tap the send button.
        @PowerNukkitOnly @Since("FUTURE") CHESTS("howtoplay.chests"), // Chests
        @PowerNukkitOnly @Since("FUTURE") CHESTS_TITLE("howtoplay.chests.title"), // How to Play : Chests
        @PowerNukkitOnly @Since("FUTURE") CHESTS_TEXT_1_NOTTOUCH("howtoplay.chests.text.1.notTouch"), // Once you have crafted a Chest, you can place it in the world and then open it with :_input_key.use: to store items from your inventory.
        @PowerNukkitOnly @Since("FUTURE") CHESTS_TEXT_1_TOUCH("howtoplay.chests.text.1.touch"), // Once you have crafted a Chest, you can place it in the world and then tap to open it and store items from your inventory.
        @PowerNukkitOnly @Since("FUTURE") CHESTS_TEXT_2("howtoplay.chests.text.2"), // Items in the Chest will be stored there for you to put into your inventory later.
        @PowerNukkitOnly @Since("FUTURE") CHESTS_TEXT_3("howtoplay.chests.text.3"), // Two Chests placed next to each other will be combined to form a Large Chest.
        @PowerNukkitOnly @Since("FUTURE") COMMANDBLOCKS("howtoplay.commandBlocks"), // Command Blocks
        @PowerNukkitOnly @Since("FUTURE") COMMANDBLOCKS_TITLE("howtoplay.commandBlocks.title"), // How to Play : Command Blocks
        @PowerNukkitOnly @Since("FUTURE") COMMANDBLOCKS_TEXT_1("howtoplay.commandBlocks.text.1"), // Command Blocks are a powerful tool for map creators. They store and execute commands upon receiving a Redstone signal.
        @PowerNukkitOnly @Since("FUTURE") COMMANDBLOCKS_TEXT_2("howtoplay.commandBlocks.text.2"), // To get a command block you must use /give.
        @PowerNukkitOnly @Since("FUTURE") COMMANDBLOCKS_TEXT_3("howtoplay.commandBlocks.text.3"), // When a Command Block has either executed or failed to execute its stored command, it sends a Redstone signal from the side where the arrow is pointing.
        @PowerNukkitOnly @Since("FUTURE") COMMANDBLOCKS_TEXT_4("howtoplay.commandBlocks.text.4"), // You can set the name of the Command Block in the Hover Note field.
        @PowerNukkitOnly @Since("FUTURE") COMMANDBLOCKS_TEXT_5("howtoplay.commandBlocks.text.5"), // Block Type - There are three types of Command Blocks, each with their own color and behavior:
        @PowerNukkitOnly @Since("FUTURE") COMMANDBLOCKS_TEXT_5_1("howtoplay.commandBlocks.text.5.1"), //   - Impulse - Only executes the stored command when the block receives a redstone signal.
        @PowerNukkitOnly @Since("FUTURE") COMMANDBLOCKS_TEXT_5_2("howtoplay.commandBlocks.text.5.2"), //   - Chain - Executes the stored command when the Command Block behind it has or has not executed its command. 
        @PowerNukkitOnly @Since("FUTURE") COMMANDBLOCKS_TEXT_5_3("howtoplay.commandBlocks.text.5.3"), //   - Repeat - Once activated, this Command Block will continue executing its stored command as long as it exists.
        @PowerNukkitOnly @Since("FUTURE") COMMANDBLOCKS_TEXT_6("howtoplay.commandBlocks.text.6"), // Condition - There are two conditions, each will affect the behavior of the Command Block:
        @PowerNukkitOnly @Since("FUTURE") COMMANDBLOCKS_TEXT_6_1("howtoplay.commandBlocks.text.6.1"), //   - Unconditional - Executes the stored command even if the Command Block behind it failed to execute its command.
        @PowerNukkitOnly @Since("FUTURE") COMMANDBLOCKS_TEXT_6_2("howtoplay.commandBlocks.text.6.2"), //   - Conditional - Only executes the stored command if the Command Block behind it succeeded in executing its command.
        @PowerNukkitOnly @Since("FUTURE") COMMANDBLOCKS_TEXT_7("howtoplay.commandBlocks.text.7"), // Redstone -  There are two redstone settings, each will affect the behavior of the Command Block:
        @PowerNukkitOnly @Since("FUTURE") COMMANDBLOCKS_TEXT_7_1("howtoplay.commandBlocks.text.7.1"), //   - Needs Redstone - Requires a redstone signal to activate.
        @PowerNukkitOnly @Since("FUTURE") COMMANDBLOCKS_TEXT_7_2("howtoplay.commandBlocks.text.7.2"), //   - Always Active - Does not require a redstone signal to activate.
        @PowerNukkitOnly @Since("FUTURE") COMMANDBLOCKS_TEXT_8("howtoplay.commandBlocks.text.8"), // A Command Block will also show you its previous output. This will help you figure out if a Command Block failed to execute its command and why.
        @PowerNukkitOnly @Since("FUTURE") COMMANDS("howtoplay.commands"), // Commands
        @PowerNukkitOnly @Since("FUTURE") COMMANDS_TITLE("howtoplay.commands.title"), // How to Play : Commands
        @PowerNukkitOnly @Since("FUTURE") COMMANDS_TEXT_1("howtoplay.commands.text.1"), // Commands can be executed from Chat. Type / before you type the command.
        @PowerNukkitOnly @Since("FUTURE") COMMANDS_TEXT_2("howtoplay.commands.text.2"), // There are multitudes of commands that will allow you to do amazing things. There are many sources out there that will provide you with all of the info that you'll ever need.
        @PowerNukkitOnly @Since("FUTURE") CONDUITS("howtoplay.conduits"), // Conduits
        @PowerNukkitOnly @Since("FUTURE") CONDUITS_TITLE("howtoplay.conduits.title"), // How to Play : Conduits
        @PowerNukkitOnly @Since("FUTURE") CONDUITS_TEXT_1("howtoplay.conduits.text.1"), // An active Conduit gives you powers when you are underwater.
        @PowerNukkitOnly @Since("FUTURE") CONDUITS_TEXT_2("howtoplay.conduits.text.2"), // A Conduit is crafted with Nautilus Shells and a Heart of the Sea. The Conduit draws power from Prismarine and Sea Lanterns.
        @PowerNukkitOnly @Since("FUTURE") CONDUITS_HEADER_1("howtoplay.conduits.header.1"), // Construction
        @PowerNukkitOnly @Since("FUTURE") CONDUITS_TEXT_3("howtoplay.conduits.text.3"), // Once activated, a Conduit will grant Conduit Power to anything nearby.
        @PowerNukkitOnly @Since("FUTURE") CONDUITS_TEXT_4("howtoplay.conduits.text.4"), // The more power it draws in, the further its abilities reach.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS("howtoplay.controls"), // Controls
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TITLE("howtoplay.controls.title"), // How to Play : Controls
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_1("howtoplay.controls.text.1"), // Minecraft is a game about placing blocks to build anything you can imagine. At night monsters come out, so make sure to build a shelter before that happens.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_HEADER_1("howtoplay.controls.header.1"), // Movement
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_2_KEYBOARD("howtoplay.controls.text.2.keyboard"), // Use the mouse to look around.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_2_GAMEPAD("howtoplay.controls.text.2.gamepad"), // Use :_gamepad_stick_right: to look around.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_2_TOUCH("howtoplay.controls.text.2.touch"), // Touch and drag along the screen to look around.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_2_RIFT_CONTROLLER("howtoplay.controls.text.2.rift_controller"), // Use :rift_right_stick: to look around.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_2_WINDOWSMR_CONTROLLER("howtoplay.controls.text.2.windowsmr_controller"), // Use :windowsmr_right_stick: to look around.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_3_KEYBOARD("howtoplay.controls.text.3.keyboard"), // Use :_input_key.forward: :_input_key.left: :_input_key.back: :_input_key.right: to move around.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_3_GAMEPAD("howtoplay.controls.text.3.gamepad"), // Use :_gamepad_stick_left: to move around.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_3_TOUCH("howtoplay.controls.text.3.touch"), // Use :touch_forward::touch_left::touch_back::touch_right: to move around.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_3_RIFT_CONTROLLER("howtoplay.controls.text.3.rift_controller"), // Use :rift_left_stick: to move around.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_3_WINDOWSMR_CONTROLLER("howtoplay.controls.text.3.windowsmr_controller"), // Use :windowsmr_left_stick: to move around.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_4_KEYBOARD("howtoplay.controls.text.4.keyboard"), // Press :_input_key.jump: to jump.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_4_GAMEPAD("howtoplay.controls.text.4.gamepad"), // Press :_input_key.jump: to jump.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_4_TOUCH("howtoplay.controls.text.4.touch"), // Press :touch_jump: to jump.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_4_RIFT_CONTROLLER("howtoplay.controls.text.4.rift_controller"), // Press :rift_A: to jump.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_4_WINDOWSMR_CONTROLLER("howtoplay.controls.text.4.windowsmr_controller"), // Press :windowsmr_right_touchpad: to jump.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_5_KEYBOARD("howtoplay.controls.text.5.keyboard"), // Press :_input_key.forward: twice in rapid succession or press :_input_key.sprint: to sprint. While you hold :_input_key.forward:, you will continue to sprint until you have less than :shank::shank::shank:.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_5_GAMEPAD("howtoplay.controls.text.5.gamepad"), // Push :_gamepad_stick_left: forward twice in rapid succession to sprint. While you hold :_gamepad_stick_left: forward, you will continue to sprint until you have less than :shank::shank::shank:.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_5_TOUCH("howtoplay.controls.text.5.touch"), // Press :touch_forward: twice in rapid succession to sprint. While you hold :touch_forward:, you will continue to sprint until you have less than :shank::shank::shank:.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_5_RIFT_CONTROLLER("howtoplay.controls.text.5.rift_controller"), // Push :rift_left_stick: forward twice in rapid succession to sprint. While you hold :rift_left_stick: forward, you will continue to sprint until you have less than :shank::shank::shank:.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_5_WINDOWSMR_CONTROLLER("howtoplay.controls.text.5.windowsmr_controller"), // Push :windowsmr_left_stick: forward twice in rapid succession to sprint. While you hold :windowsmr_left_stick: forward, you will continue to sprint until you have less than :shank::shank::shank:.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_HEADER_2("howtoplay.controls.header.2"), // Breaking and Placing
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_6_NOTTOUCH("howtoplay.controls.text.6.notTouch"), // Hold :_input_key.attack: to mine and chop using your hand or whatever you are holding. You may need to craft a tool to mine some blocks.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_6_TOUCH("howtoplay.controls.text.6.touch"), // Touch and hold the screen on a block to mine and chop using your hand or whatever you are holding. You may need to craft a tool to mine some blocks.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_7_KEYBOARD("howtoplay.controls.text.7.keyboard"), // If you are holding an item in your hand, use :_input_key.use: to use that item or press :_input_key.drop: to drop it.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_7_GAMEPAD("howtoplay.controls.text.7.gamepad"), // If you are holding an item in your hand, use :_input_key.use: to use that item or press :_input_key.drop: to drop it.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_7_RIFT_CONTROLLER("howtoplay.controls.text.7.rift_controller"), // If you are holding an item in your hand, use :rift_right_grab: to use that item or press :rift_right_stick: to drop it.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_7_WINDOWSMR_CONTROLLER("howtoplay.controls.text.7.windowsmr_controller"), // If you are holding an item in your hand, use :windowsmr_left_trigger: to use that item or press :windowsmr_right_grab: to drop it.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_7_TOUCH("howtoplay.controls.text.7.touch"), // If you are holding an item in your hand, touch the screen to use that item or touch and hold the item in your hotbar to drop it.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_HEADER_3("howtoplay.controls.header.3"), // Sneaking
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_8_KEYBOARD("howtoplay.controls.text.8.keyboard"), // Sneaking is incredibly useful in Minecraft, sneaking keeps you from falling off of a block and hides your nametag. To sneak, hold :_input_key.sneak:.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_8_GAMEPAD("howtoplay.controls.text.8.gamepad"), // Sneaking is incredibly useful in Minecraft, sneaking keeps you from falling off of a block and hides your nametag. To toggle sneak, press :_input_key.sneak: or click :_gamepad_stick_right:.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_8_TOUCH("howtoplay.controls.text.8.touch"), // Sneaking is incredibly useful in Minecraft, sneaking keeps you from falling off of a block and hides your nametag. To toggle sneak, tap :touch_sneak:.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_8_RIFT_CONTROLLER("howtoplay.controls.text.8.rift_controller"), // Sneaking is incredibly useful in Minecraft, sneaking keeps you from falling off of a block and hides your nametag. To toggle sneak, press :rift_X:.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_8_WINDOWSMR_CONTROLLER("howtoplay.controls.text.8.windowsmr_controller"), // Sneaking is incredibly useful in Minecraft, sneaking keeps you from falling off of a block and hides your nametag. To toggle sneak, press :windowsmr_right_stick:.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_SWIM_KEYBOARD("howtoplay.controls.text.swim.keyboard"), // Sprinting while in water will make you swim. Use the mouse to control the direction that you are swimming.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_SWIM_GAMEPAD("howtoplay.controls.text.swim.gamepad"), // Sprinting while in water will make you swim. Use the :_gamepad_stick_right: to control the direction that you are swimming.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_SWIM_TOUCH("howtoplay.controls.text.swim.touch"), // Sprinting while in water will make you swim. Touch and drag along the screen to control the direction that you are swimming.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_SWIM_RIFT_CONTROLLER("howtoplay.controls.text.swim.rift_controller"), // Sprinting while in water will make you swim. Use the :rift_right_stick: to control the direction that you are swimming.
        @PowerNukkitOnly @Since("FUTURE") CONTROLS_TEXT_SWIM_WINDOWSMR_CONTROLLER("howtoplay.controls.text.swim.windowsmr_controller"), // Sprinting while in water will make you swim. Use the :windowsmr_right_stick: to control the direction that you are swimming.
        @PowerNukkitOnly @Since("FUTURE") WORLDBUILDER("howtoplay.worldBuilder"), // World Builder
        @PowerNukkitOnly @Since("FUTURE") WORLDBUILDER_TITLE("howtoplay.worldBuilder.title"), // How to Play : World Builder
        @PowerNukkitOnly @Since("FUTURE") WORLDBUILDER_TEXT_1("howtoplay.worldBuilder.text.1"), // To place or use certain Minecraft: Education Edition blocks or items, a player must possess a special ability called 'World Builder'.
        @PowerNukkitOnly @Since("FUTURE") WORLDBUILDER_TEXT_2("howtoplay.worldBuilder.text.2"), // With cheats activated, the host can enable or disable the World Builder ability for any players in the world.
        @PowerNukkitOnly @Since("FUTURE") WORLDBUILDER_TEXT_3("howtoplay.worldBuilder.text.3"), // To grant World Builder ability to all players in the world, run the following command:
        @PowerNukkitOnly @Since("FUTURE") WORLDBUILDER_TEXT_4("howtoplay.worldBuilder.text.4"), // /ability @a worldbuilder true
        @PowerNukkitOnly @Since("FUTURE") WORLDBUILDER_TEXT_5("howtoplay.worldBuilder.text.5"), // To quickly toggle your own World Builder ability, run either of the following commands:
        @PowerNukkitOnly @Since("FUTURE") WORLDBUILDER_TEXT_6("howtoplay.worldBuilder.text.6"), // /worldbuilder
        @PowerNukkitOnly @Since("FUTURE") WORLDBUILDER_TEXT_7("howtoplay.worldBuilder.text.7"), // /wb
        @PowerNukkitOnly @Since("FUTURE") WORLDBUILDER_TEXT_8("howtoplay.worldBuilder.text.8"), // To query your World Builder ability, run the following command:
        @PowerNukkitOnly @Since("FUTURE") WORLDBUILDER_TEXT_9("howtoplay.worldBuilder.text.9"), // /ability @p worldbuilder
        @PowerNukkitOnly @Since("FUTURE") PERMISSIONBLOCKS("howtoplay.permissionBlocks"), // Permission Blocks
        @PowerNukkitOnly @Since("FUTURE") PERMISSIONBLOCKS_TITLE("howtoplay.permissionBlocks.title"), // How to Play : Permission Blocks
        @PowerNukkitOnly @Since("FUTURE") PERMISSIONBLOCKS_TEXT_1("howtoplay.permissionBlocks.text.1"), // Minecraft: Education Edition features several special blocks that make it easier for teachers to create and employ lessons.  Only players with World Builder ability can place and destroy these blocks.  Only players without World Builder ability are subject to the restrictions imposed by these blocks.
        @PowerNukkitOnly @Since("FUTURE") PERMISSIONBLOCKS_TITLE_1("howtoplay.permissionBlocks.title.1"), // Allow/Deny
        @PowerNukkitOnly @Since("FUTURE") PERMISSIONBLOCKS_TEXT_2("howtoplay.permissionBlocks.text.2"), // Allow and Deny blocks control where players can build in a world.
        @PowerNukkitOnly @Since("FUTURE") PERMISSIONBLOCKS_TEXT_3("howtoplay.permissionBlocks.text.3"), // Players can place or destroy blocks above Allow blocks.  Players cannot place or destroy blocks above Deny blocks.
        @PowerNukkitOnly @Since("FUTURE") PERMISSIONBLOCKS_TEXT_4("howtoplay.permissionBlocks.text.4"), // Allow and Deny blocks do not affect the area below them.
        @PowerNukkitOnly @Since("FUTURE") PERMISSIONBLOCKS_TEXT_5("howtoplay.permissionBlocks.text.5"), // An Allow block with a Deny block somewhere below it prevents players from building in the space between the two blocks.  Above the Allow block, players can place and destroy blocks.
        @PowerNukkitOnly @Since("FUTURE") PERMISSIONBLOCKS_TITLE_2("howtoplay.permissionBlocks.title.2"), // Border
        @PowerNukkitOnly @Since("FUTURE") PERMISSIONBLOCKS_TEXT_6("howtoplay.permissionBlocks.text.6"), // Border blocks provide a force field that extends infinitely upward and downward, regardless of the presence of other blocks.  Players cannot move through, over, or under a Border block.  Players cannot place or destroy blocks that are above or below a Border block.
        @PowerNukkitOnly @Since("FUTURE") CHALKBOARD("howtoplay.chalkboard"), // Chalkboards
        @PowerNukkitOnly @Since("FUTURE") CHALKBOARD_TITLE("howtoplay.chalkboard.title"), // How to Play : Chalkboards
        @PowerNukkitOnly @Since("FUTURE") CHALKBOARD_TEXT_1("howtoplay.chalkboard.text.1"), // Chalkboards are used to display text in the world.  Chalkboards display more text than Signs, can be edited after they have been placed, and come in three sizes: Slate, Poster, and Board.  The lock toggle allows you to prevent non-World Builders from destroying or editing your chalkboards.  Press :_input_key.use: on an existing chalkboard to edit it.
        @PowerNukkitOnly @Since("FUTURE") CHALKBOARD_TEXT_1_TOUCH("howtoplay.chalkboard.text.1.touch"), // Chalkboards are used to display text in the world.  Chalkboards display more text than Signs, can be edited after they have been placed, and come in three sizes: Slate, Poster, and Board.  The lock toggle allows you to prevent non-World Builders from destroying or editing your chalkboards.  Tap an existing chalkboard to edit it.
        @PowerNukkitOnly @Since("FUTURE") CHEMISTRY("howtoplay.chemistry"), // Chemistry
        @PowerNukkitOnly @Since("FUTURE") CHEMISTRY_TITLE("howtoplay.chemistry.title"), // How to Play : Chemistry
        @PowerNukkitOnly @Since("FUTURE") CHEMISTRY_TEXT_1("howtoplay.chemistry.text.1"), // Students can simulate real world chemistry by using the Chemistry Equipment blocks.  Build any of the 118 different elements by adjusting the sliders in the Element Constructor or view the composition of elements by placing them in the Element Constructor.  Combine elements in the Compound Creator to produce chemical compounds.  Put elements and compounds into the Lab Table to create Minecraft items.  Reduce blocks to their component elements with the Material Reducer.
        @PowerNukkitOnly @Since("FUTURE") CHEMISTRY_TEXT_2("howtoplay.chemistry.text.2"), // Download the Chemistry Journal from the Minecraft: Education Edition website for a comprehensive guide to chemistry in Minecraft.
        @PowerNukkitOnly @Since("FUTURE") NPC("howtoplay.npc"), // Non-Player Characters
        @PowerNukkitOnly @Since("FUTURE") NPC_TITLE("howtoplay.npc.title"), // How to Play : Non-Player Characters
        @PowerNukkitOnly @Since("FUTURE") NPC_TEXT_1("howtoplay.npc.text.1"), // NPCs are non-player characters that can provide additional lesson information, hints, or instructions.
        @PowerNukkitOnly @Since("FUTURE") NPC_TEXT_2("howtoplay.npc.text.2"), // Only World Builders can place, delete, name, or edit NPCs.  NPCs can execute commands and link to websites.  Commands can be assigned to buttons in the NPC's dialog window; website links will always have a button.
        @PowerNukkitOnly @Since("FUTURE") NPC_TEXT_3("howtoplay.npc.text.3"), // NPCs have a variety of skins to choose from and are immobile.
        @PowerNukkitOnly @Since("FUTURE") CAMERA("howtoplay.camera"), // Camera
        @PowerNukkitOnly @Since("FUTURE") CAMERA_TITLE("howtoplay.camera.title"), // How to Play : Camera
        @PowerNukkitOnly @Since("FUTURE") CAMERA_TEXT_1("howtoplay.camera.text.1"), // The Camera allows players to take pictures in the world.
        @PowerNukkitOnly @Since("FUTURE") CAMERA_TEXT_2("howtoplay.camera.text.2"), // To take a picture from your point of view, press :_input_key.use:.
        @PowerNukkitOnly @Since("FUTURE") CAMERA_TEXT_2_TOUCH("howtoplay.camera.text.2.touch"), // To take a picture from your point of view, tap and hold, then release.
        @PowerNukkitOnly @Since("FUTURE") CAMERA_TEXT_3("howtoplay.camera.text.3"), // To take a selfie, place a camera and press :_input_key.use: on it.
        @PowerNukkitOnly @Since("FUTURE") CAMERA_TEXT_3_TOUCH("howtoplay.camera.text.3.touch"), // To take a selfie, place a camera and tap the Take Picture button.
        @PowerNukkitOnly @Since("FUTURE") CAMERA_TEXT_4("howtoplay.camera.text.4"), // Pictures can be viewed in the Portfolio or inserted into the Book & Quill.
        @PowerNukkitOnly @Since("FUTURE") PORTFOLIO("howtoplay.portfolio"), // Portfolio
        @PowerNukkitOnly @Since("FUTURE") PORTFOLIO_TITLE("howtoplay.portfolio.title"), // How to Play : Portfolio
        @PowerNukkitOnly @Since("FUTURE") PORTFOLIO_TEXT_1("howtoplay.portfolio.text.1"), // Pictures you have taken appear in the Portfolio.  Press :_input_key.use: to view the Portfolio.  When viewing the Portfolio, you can add captions to pictures, delete pictures, and export pictures as a series of images.
        @PowerNukkitOnly @Since("FUTURE") PORTFOLIO_TEXT_1_TOUCH("howtoplay.portfolio.text.1.touch"), // Pictures you have taken appear in the Portfolio.  Tap and hold to view the Portfolio.  When viewing the Portfolio, you can add captions to pictures, delete pictures, and export pictures as a series of images.
        @PowerNukkitOnly @Since("FUTURE") CLASSROOMMODE("howtoplay.classroomMode"), // Classroom Mode
        @PowerNukkitOnly @Since("FUTURE") CLASSROOMMODE_TITLE("howtoplay.classroomMode.title"), // How to Play : Classroom Mode
        @PowerNukkitOnly @Since("FUTURE") CLASSROOMMODE_TEXT_1("howtoplay.classroomMode.text.1"), // Classroom Mode is an external application that provides educators with features designed to facilitate interaction with students.  You can download Classroom Mode from the Minecraft: Education Edition website.
        @PowerNukkitOnly @Since("FUTURE") CLASSROOMMODE_TEXT_2("howtoplay.classroomMode.text.2"), // As the host of a world, use the command /classroommode to launch the Classroom Mode app and connect it to Minecraft: Education Edition.
        @PowerNukkitOnly @Since("FUTURE") CODEBUILDER("howtoplay.codeBuilder"), // Code Builder
        @PowerNukkitOnly @Since("FUTURE") CODEBUILDER_TITLE("howtoplay.codeBuilder.title"), // How to Play : Code Builder
        @PowerNukkitOnly @Since("FUTURE") CODEBUILDER_TEXT_1("howtoplay.codeBuilder.text.1"), // Code Builder allows players to explore, create, and play in Minecraft by writing code using familiar learn-to-code platforms.
        @PowerNukkitOnly @Since("FUTURE") CODEBUILDER_TEXT_2("howtoplay.codeBuilder.text.2"), // Launch Code Builder by pressing :_input_key.codeBuilder: or by using the command /code.
        @PowerNukkitOnly @Since("FUTURE") CODEBUILDER_TEXT_2_TOUCH("howtoplay.codeBuilder.text.2.touch"), // Launch Code Builder by tapping :code_builder_button: or by using the command /code.
        @PowerNukkitOnly @Since("FUTURE") CRAFTING("howtoplay.crafting"), // Crafting
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TITLE("howtoplay.crafting.title"), // How to Play : Crafting
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TEXT_1_KEYBOARD("howtoplay.crafting.text.1.keyboard"), // Press :_input_key.inventory: to access the Recipe Book and Crafting Grid.
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TEXT_1_GAMEPAD("howtoplay.crafting.text.1.gamepad"), // Press :_input_container.crafting: to access the Recipe Book and Crafting Grid.
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TEXT_1_TOUCH("howtoplay.crafting.text.1.touch"), // Tap the Inventory Button to access the Recipe Book and Crafting Grid.
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TEXT_1_RIFT_CONTROLLER("howtoplay.crafting.text.1.rift_controller"), // Press :rift_B: to access the Recipe Book and Crafting Grid.
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TEXT_1_WINDOWSMR_CONTROLLER("howtoplay.crafting.text.1.windowsmr_controller"), // Press :windowsmr_left_grab: to access the Recipe Book and Crafting Grid.
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_HEADER_1("howtoplay.crafting.header.1"), // Crafting Grid
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TEXT_2("howtoplay.crafting.text.2"), // Arrange items from your Inventory or Hotbar in the crafting grid in the shape of an item recipe.
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TEXT_3("howtoplay.crafting.text.3"), // If the recipe is correct the item you are attempting to craft will appear in the Output Slot to the right of the Crafting Grid. Take it from the Output Slot and put it in your Inventory. You can now use the item.
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TEXT_4("howtoplay.crafting.text.4"), // There are many recipes and for some you will need a larger Crafting Grid than the 2x2 grid that you start with. 
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TEXT_5("howtoplay.crafting.text.5"), // Craft 4 Wooden Planks into a Crafting Table and place it in the world.
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TEXT_6_KEYBOARD("howtoplay.crafting.text.6.keyboard"), // Press :_input_key.use: on a Crafting Table in the world to gain access to a 3x3 Crafting Grid.
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TEXT_6_GAMEPAD("howtoplay.crafting.text.6.gamepad"), // Press :_input_key.use: on a Crafting Table in the world to gain access to a 3x3 Crafting Grid.
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TEXT_6_RIFT_CONTROLLER("howtoplay.crafting.text.6.rift_controller"), // Press :rift_right_grab: on a Crafting Table in the world to gain access to a 3x3 Crafting Grid.
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TEXT_6_WINDOWSMR_CONTROLLER("howtoplay.crafting.text.6.windowsmr_controller"), // Press :windowsmr_left_trigger: on a Crafting Table in the world to gain access to a 3x3 Crafting Grid.
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TEXT_6_TOUCH("howtoplay.crafting.text.6.touch"), // Tap on a Crafting Table in the world to gain access to a 3x3 Crafting Grid.
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_HEADER_2("howtoplay.crafting.header.2"), // Recipe Book
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TEXT_7("howtoplay.crafting.text.7"), // On the left side of the screen you will see the Recipe Book, which is good if you don't know a recipe or want to quickly craft a recipe that you already know. You will also see the Crafting grid on the right side of the screen above your Inventory.
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TEXT_8_KEYBOARD("howtoplay.crafting.text.8.keyboard"), // Once you have found the recipe you want to craft, :_input_key.attack: the recipe to load it into the crafting grid, then take it from the Output Slot to the right of the Crafting Grid and put it in your Inventory. :_input_key.use: the recipe to auto-craft, this automatically crafts one set and puts it in your inventory. SHIFT + :_input_key.use: the recipe to auto-craft a whole stack.
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TEXT_8_GAMEPAD("howtoplay.crafting.text.8.gamepad"), // Once you have found the recipe you want to craft, press :_gamepad_face_button_down: on the recipe to auto-craft, this automatically crafts one set and puts it in your inventory. Press :_gamepad_face_button_up: on the recipe to auto-craft a whole stack.
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TEXT_8_TOUCH("howtoplay.crafting.text.8.touch"), // Once you have found the recipe you want to craft, tap the recipe to load it into the crafting grid, then tap the item in the output slot to craft it. Press and hold the item in the output slot to craft continuously.
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TEXT_9("howtoplay.crafting.text.9"), // When the :craftable_toggle_on: is on, the Recipe Book shows all of the recipes that you have ingredients for. When the :craftable_toggle_off: is off, the Recipe Book shows every recipe in the game, even if you can't craft it. Check the tabs or search if you are looking for something specific. In Creative Mode some recipes will be collapsed inside lists. Opening the list will expand it and show you all of the recipes inside. 
        @PowerNukkitOnly @Since("FUTURE") CRAFTINGTABLE("howtoplay.craftingTable"), // Crafting Table
        @PowerNukkitOnly @Since("FUTURE") CRAFTINGTABLE_TITLE("howtoplay.craftingTable.title"), // How to Play : Crafting Table
        @PowerNukkitOnly @Since("FUTURE") CRAFTINGTABLE_TEXT_1("howtoplay.craftingTable.text.1"), // The Crafting Table will let you craft more complicated recipes.
        @PowerNukkitOnly @Since("FUTURE") CRAFTINGTABLE_TEXT_2_NOTTOUCH("howtoplay.craftingTable.text.2.notTouch"), // Place it in the world, then press :_input_key.use: on the Crafting Table to use it.
        @PowerNukkitOnly @Since("FUTURE") CRAFTINGTABLE_TEXT_2_TOUCH("howtoplay.craftingTable.text.2.touch"), // Place it in the world, then tap the Crafting Table to use it.
        @PowerNukkitOnly @Since("FUTURE") CREATIVEMODE("howtoplay.creativeMode"), // Creative Mode
        @PowerNukkitOnly @Since("FUTURE") CREATIVEMODE_TITLE("howtoplay.creativeMode.title"), // How to Play : Creative Mode
        @PowerNukkitOnly @Since("FUTURE") CREATIVEMODE_TEXT_1("howtoplay.creativeMode.text.1"), // Creative Mode is there so you can build the land of your dreams mob free!
        @PowerNukkitOnly @Since("FUTURE") CREATIVEMODE_HEADER_1("howtoplay.creativeMode.header.1"), // Unlimited Building
        @PowerNukkitOnly @Since("FUTURE") CREATIVEMODE_TEXT_2("howtoplay.creativeMode.text.2"), // The creative mode interface allows any item in the game to be moved into the player's inventory without the need for mining or crafting the item. The items in the player's inventory will not be removed when they are placed or used in the world, and this allows the player to focus on building rather than resource gathering.
        @PowerNukkitOnly @Since("FUTURE") CREATIVEMODE_TEXT_3("howtoplay.creativeMode.text.3"), // If you create, load, or save a world in Creative Mode, that world will have achievements and leaderboard updates disabled, even if it is then loaded in Survival Mode.
        @PowerNukkitOnly @Since("FUTURE") CREATIVEMODE_HEADER_2("howtoplay.creativeMode.header.2"), // Flying
        @PowerNukkitOnly @Since("FUTURE") CREATIVEMODE_TEXT_4_KEYBOARD("howtoplay.creativeMode.text.4.keyboard"), // To fly when in Creative Mode, press :_input_key.jump: twice quickly. To exit flying, repeat the action. To fly faster, push :_input_key.forward: twice in rapid succession or press :_input_key.sprint: while flying. When in flying mode, you can hold down :_input_key.jump: to move up and :_input_key.sneak: to move down.
        @PowerNukkitOnly @Since("FUTURE") CREATIVEMODE_TEXT_4_GAMEPAD("howtoplay.creativeMode.text.4.gamepad"), // To fly when in Creative Mode, press :_input_key.jump: twice quickly. To exit flying, repeat the action. To fly faster, push :_gamepad_stick_left: forward twice in rapid succession while flying. When in flying mode, you can hold down :_input_key.jump: to move up and :_input_key.sneak: to move down.
        @PowerNukkitOnly @Since("FUTURE") CREATIVEMODE_TEXT_4_TOUCH("howtoplay.creativeMode.text.4.touch"), // To fly when in Creative Mode, Tap :_input_key.jump: twice quickly. To exit flying, repeat the action. To fly faster, tap :_input_key.forward: twice in rapid succession while flying. When in flying mode, you can press :touch_fly_up: to move up and :touch_fly_down: to move down.
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY("howtoplay.difficulty"), // Difficulty
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY_TITLE("howtoplay.difficulty.title"), // How to Play : Difficulty
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY_TEXT_1("howtoplay.difficulty.text.1"), // Minecraft has varying levels of difficulty so you can tailor the game to your level.
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY_HEADER_1("howtoplay.difficulty.header.1"), // Peaceful
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY_TEXT_2("howtoplay.difficulty.text.2"), // No hostile mobs will spawn except for shulkers and the Ender Dragon, but they won't do any damage to you.
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY_HEADER_2("howtoplay.difficulty.header.2"), // Easy
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY_TEXT_3("howtoplay.difficulty.text.3"), // Hostile mobs spawn but deal less damage. Hunger bar depletes and drains health down to 5 hearts.
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY_HEADER_3("howtoplay.difficulty.header.3"), // Normal
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY_TEXT_4("howtoplay.difficulty.text.4"), // Hostile mobs will do normal damage, and if your hunger level drops to zero your health will begin to drop, but you won't die.
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY_HEADER_4("howtoplay.difficulty.header.4"), // Hard
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY_TEXT_5("howtoplay.difficulty.text.5"), // Hostile mobs will do more damage, zombies will break through doors, and if your hunger level drops to zero, your health will drop and you could die.
        @PowerNukkitOnly @Since("FUTURE") DISPENSERS("howtoplay.dispensers"), // Dispensers
        @PowerNukkitOnly @Since("FUTURE") DISPENSERS_TITLE("howtoplay.dispensers.title"), // How to Play : Dispensers
        @PowerNukkitOnly @Since("FUTURE") DISPENSERS_TEXT_1("howtoplay.dispensers.text.1"), // Dispensers are used to shoot out items. You will need to power each Dispenser with a redstone signal (for example, with a lever) to trigger it.
        @PowerNukkitOnly @Since("FUTURE") DISPENSERS_TEXT_2_NOTTOUCH("howtoplay.dispensers.text.2.notTouch"), // To fill a Dispenser with items, press :_input_key.use: on the Dispenser, then move the items that you want to dispense from your inventory to the Dispenser.
        @PowerNukkitOnly @Since("FUTURE") DISPENSERS_TEXT_2_TOUCH("howtoplay.dispensers.text.2.touch"), // To fill a Dispenser, tap the Dispenser, then move the items that you want to dispense from your inventory into the Dispenser.
        @PowerNukkitOnly @Since("FUTURE") DISPENSERS_HEADER_1("howtoplay.dispensers.header.1"), // Usage
        @PowerNukkitOnly @Since("FUTURE") DISPENSERS_TEXT_3("howtoplay.dispensers.text.3"), // Whenever you power a Dispenser, an item will shoot out.
        @PowerNukkitOnly @Since("FUTURE") DISPENSERS_TEXT_4("howtoplay.dispensers.text.4"), // Dispensers can also be used to place items as well, such as Pumpkins on Iron Golems and equipment on Armor Stands.
        @PowerNukkitOnly @Since("FUTURE") DROPPERS("howtoplay.droppers"), // Droppers
        @PowerNukkitOnly @Since("FUTURE") DROPPERS_TITLE("howtoplay.droppers.title"), // How to Play : Droppers
        @PowerNukkitOnly @Since("FUTURE") DROPPERS_TEXT_1_NOTTOUCH("howtoplay.droppers.text.1.notTouch"), // When powered by Redstone, Droppers will drop a single random item contained within. Press :_input_key.use: on the Dropper to open it and then you can load it with items from your inventory.
        @PowerNukkitOnly @Since("FUTURE") DROPPERS_TEXT_1_TOUCH("howtoplay.droppers.text.1.touch"), // When powered by Redstone, Droppers will drop a single random item contained within. Tap the Dropper to open it and then you can load the it with items from your inventory.
        @PowerNukkitOnly @Since("FUTURE") DROPPERS_HEADER_1("howtoplay.droppers.header.1"), // Usage
        @PowerNukkitOnly @Since("FUTURE") DROPPERS_TEXT_2("howtoplay.droppers.text.2"), // If a Dropper is facing a Chest or another type of container, the item will be placed into that instead. Long chains of Droppers can be constructed to transport items over a distance.
        @PowerNukkitOnly @Since("FUTURE") DYES("howtoplay.dyes"), // Dyes
        @PowerNukkitOnly @Since("FUTURE") DYES_TITLE("howtoplay.dyes.title"), // How to Play : Dyes
        @PowerNukkitOnly @Since("FUTURE") DYES_TEXT_1("howtoplay.dyes.text.1"), // Dye is used to change the color of many things in Minecraft.
        @PowerNukkitOnly @Since("FUTURE") DYES_TEXT_2("howtoplay.dyes.text.2"), // Some dye materials are harder to find than others. While most Dyes can be crafted from flowers like Red Dye from a Poppy, some Dyes are found or created in more obscure ways such as: 
        @PowerNukkitOnly @Since("FUTURE") DYES_TEXT_3("howtoplay.dyes.text.3"), // -Mining Lapis Lazuli deep underground
        @PowerNukkitOnly @Since("FUTURE") DYES_TEXT_4("howtoplay.dyes.text.4"), // -Collecting Ink Sacs underwater
        @PowerNukkitOnly @Since("FUTURE") DYES_TEXT_5("howtoplay.dyes.text.5"), // -Harvesting Cocoa Beans in the Jungle
        @PowerNukkitOnly @Since("FUTURE") DYES_TEXT_6("howtoplay.dyes.text.6"), // -Green Dye must be smelted from Cactus
        @PowerNukkitOnly @Since("FUTURE") DYES_TEXT_7("howtoplay.dyes.text.7"), // -Bonemeal can help grow plants and trees or be crafted into White Dye
        @PowerNukkitOnly @Since("FUTURE") DYES_TEXT_8("howtoplay.dyes.text.8"), // -Collect Ink Sacs from Squids for Black Dye
        @PowerNukkitOnly @Since("FUTURE") ELYTRA("howtoplay.elytra"), // Elytra
        @PowerNukkitOnly @Since("FUTURE") ELYTRA_TITLE("howtoplay.elytra.title"), // How to Play : Elytra
        @PowerNukkitOnly @Since("FUTURE") ELYTRA_TEXT_1("howtoplay.elytra.text.1"), // Elytra are an item that can be equipped to allow gliding. Elytra are equipped in the chest armor slot.
        @PowerNukkitOnly @Since("FUTURE") ELYTRA_TEXT_2("howtoplay.elytra.text.2"), // Elytra cannot be crafted, but are found in Item Frames in rare End Ships, guarded by fearsome Shulkers.
        @PowerNukkitOnly @Since("FUTURE") ELYTRA_HEADER_1("howtoplay.elytra.header.1"), // Learn to Fly
        @PowerNukkitOnly @Since("FUTURE") ELYTRA_TEXT_3_NOTTOUCH("howtoplay.elytra.text.3.notTouch"), // When equipped with Elytra, a player can press :_input_key.jump: while falling to start gliding. Note that you need to be quite high to really get the full effect!
        @PowerNukkitOnly @Since("FUTURE") ELYTRA_TEXT_3_TOUCH("howtoplay.elytra.text.3.touch"), // When equipped with Elytra, a player can tap :_input_key.jump: while falling to start gliding. Note that you need to be quite high to really get the full effect!
        @PowerNukkitOnly @Since("FUTURE") ELYTRA_TEXT_4("howtoplay.elytra.text.4"), // While gliding, you can steer by looking around. If you look downwards, you'll move faster - but you'll also hit the ground sooner. If you look upwards, you'll gain some height - but do it for too long and you'll stall, falling instead of rising!
        @PowerNukkitOnly @Since("FUTURE") ELYTRA_TEXT_5("howtoplay.elytra.text.5"), // As you fly, your Elytra will lose durability. You can repair them by combining them with some Phantom Membrane at an Anvil. If they break mid-flight you'll fall, so be careful!
        @PowerNukkitOnly @Since("FUTURE") ELYTRA_HEADER_2("howtoplay.elytra.header.2"), // Rocket Powered Flight
        @PowerNukkitOnly @Since("FUTURE") ELYTRA_TEXT_6("howtoplay.elytra.text.6"), // Firework Rockets that have no effects can be used to extend Elytra flight. You will be damaged if you use a Firework Rocket that has effects to extend flight.
        @PowerNukkitOnly @Since("FUTURE") ENCHANTINGTABLE("howtoplay.enchantingTable"), // Enchanting Table
        @PowerNukkitOnly @Since("FUTURE") ENCHANTINGTABLE_TITLE("howtoplay.enchantingTable.title"), // How to Play : Enchanting Table
        @PowerNukkitOnly @Since("FUTURE") ENCHANTINGTABLE_TEXT_1("howtoplay.enchantingTable.text.1"), // The Experience Points collected by picking up Experience Orbs can be used to enchant Weapons, Armor, Tools, and Books.
        @PowerNukkitOnly @Since("FUTURE") ENCHANTINGTABLE_HEADER_1("howtoplay.enchantingTable.header.1"), // Enchanting
        @PowerNukkitOnly @Since("FUTURE") ENCHANTINGTABLE_TEXT_2("howtoplay.enchantingTable.text.2"), // When an enchantable item is placed in the slot below the book in the Enchantment Table, the three buttons to the right of the slot will display some enchantments with their Experience Level cost and Lapis Lazuli cost.
        @PowerNukkitOnly @Since("FUTURE") ENCHANTINGTABLE_TEXT_3("howtoplay.enchantingTable.text.3"), // The actual enchantment applied is randomly selected based on the cost displayed.
        @PowerNukkitOnly @Since("FUTURE") ENCHANTINGTABLE_HEADER_2("howtoplay.enchantingTable.header.2"), // Stronger Enchantments
        @PowerNukkitOnly @Since("FUTURE") ENCHANTINGTABLE_TEXT_4("howtoplay.enchantingTable.text.4"), // If the Enchantment Table is surrounded by Bookshelves (up to a maximum of 15), with a one block gap between the Bookshelf and the Enchantment Table, arcane glyphs will be seen going to the book on the Enchantment Table and the potency of the enchantments will be increased.
        @PowerNukkitOnly @Since("FUTURE") ENCHANTINGTABLE_HEADER_3("howtoplay.enchantingTable.header.3"), // Enchanting Books
        @PowerNukkitOnly @Since("FUTURE") ENCHANTINGTABLE_TEXT_5("howtoplay.enchantingTable.text.5"), // Enchanted Books are used at the Anvil to apply enchantments to items. This gives you more control over which enchantments you would like on your items.
        @PowerNukkitOnly @Since("FUTURE") ENDCITIES("howtoplay.endCities"), // End Cities
        @PowerNukkitOnly @Since("FUTURE") ENDCITIES_TITLE("howtoplay.endCities.title"), // How to Play : End Cities
        @PowerNukkitOnly @Since("FUTURE") ENDCITIES_TEXT_1("howtoplay.endCities.text.1"), // After killing the Ender Dragon, an End Gateway will appear. Throwing an Ender Pearl into the portal will teleport you to the outer islands.
        @PowerNukkitOnly @Since("FUTURE") ENDCITIES_TEXT_2("howtoplay.endCities.text.2"), // This alien new landscape must hide something interesting, and maybe something to bring back with you.
        @PowerNukkitOnly @Since("FUTURE") ENDERCHEST("howtoplay.enderChest"), // Ender Chest
        @PowerNukkitOnly @Since("FUTURE") ENDERCHEST_TITLE("howtoplay.enderChest.title"), // How to Play : Ender Chest
        @PowerNukkitOnly @Since("FUTURE") ENDERCHEST_TEXT_1("howtoplay.enderChest.text.1"), // All Ender Chests in a world are linked. Items placed into an Ender Chest are accessible in any other Ender Chest. However, the contents of the Ender Chests are specific for each player. This allows players to store items in any Ender Chest, and retrieve them from other Ender Chests in different positions in the world.
        @PowerNukkitOnly @Since("FUTURE") EYEOFENDER("howtoplay.eyeOfEnder"), // Eye Of Ender
        @PowerNukkitOnly @Since("FUTURE") EYEOFENDER_TITLE("howtoplay.eyeOfEnder.title"), // How to Play : Eye Of Ender
        @PowerNukkitOnly @Since("FUTURE") EYEOFENDER_TEXT_1("howtoplay.eyeOfEnder.text.1"), // Eyes of Ender are mysteriously connected to the End and will behave strangely when used.
        @PowerNukkitOnly @Since("FUTURE") EYEOFENDER_TEXT_2("howtoplay.eyeOfEnder.text.2"), // Rumor has it that they can lead you to open another dimension.
        @PowerNukkitOnly @Since("FUTURE") FARMING("howtoplay.farming"), // Farming
        @PowerNukkitOnly @Since("FUTURE") FARMING_TITLE("howtoplay.farming.title"), // How to Play : Farming
        @PowerNukkitOnly @Since("FUTURE") FARMING_TEXT_1("howtoplay.farming.text.1"), // There are a variety of different crops that you can farm in Minecraft. Farming, while challenging, can provide an infinite food source.
        @PowerNukkitOnly @Since("FUTURE") FARMING_HEADER_1("howtoplay.farming.header.1"), // Plan Ahead
        @PowerNukkitOnly @Since("FUTURE") FARMING_TEXT_2("howtoplay.farming.text.2"), // Crops require light, water, and farmland to grow. You need a hoe, a water source, and seeds to farm.
        @PowerNukkitOnly @Since("FUTURE") FARMING_TEXT_3("howtoplay.farming.text.3"), // The Blocks next to the water need to be converted to farmland, do this with the hoe. Water will saturate up to four block away.
        @PowerNukkitOnly @Since("FUTURE") FARMING_HEADER_2("howtoplay.farming.header.2"), // Planting and Harvesting
        @PowerNukkitOnly @Since("FUTURE") FARMING_TEXT_4("howtoplay.farming.text.4"), // Now you can plant your seeds. Make sure your crops are protected as they can easily die from being trampled or lack of water or light.
        @PowerNukkitOnly @Since("FUTURE") FARMING_TEXT_5("howtoplay.farming.text.5"), // Fences can help protect your crops from hungry rabbits or trampling toes!
        @PowerNukkitOnly @Since("FUTURE") FARMING_TEXT_6("howtoplay.farming.text.6"), // When the crops are fully grown they change in appearance and can be harvested.
        @PowerNukkitOnly @Since("FUTURE") FARMING_TEXT_7("howtoplay.farming.text.7"), // Some plants like pumpkins and melons grow on stalks. Be careful not to harvest the stalks!
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS("howtoplay.fireworks"), // Fireworks
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_TITLE("howtoplay.fireworks.title"), // How to Play : Fireworks
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_TEXT_1("howtoplay.fireworks.text.1"), // Fireworks are a fun way to create your own unique celebration in Minecraft!
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_TEXT_2("howtoplay.fireworks.text.2"), // Fireworks have two components, the Firework Rocket and the Firework Star.
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_HEADER_1("howtoplay.fireworks.header.1"), // Firework Rocket
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_TEXT_3_NOTTOUCH("howtoplay.fireworks.text.3.notTouch"), // To use a Firework, press :_input_key.use: on a block to send the Firework shooting into the sky. 
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_TEXT_3_TOUCH("howtoplay.fireworks.text.3.touch"), // To use a Firework, tap on a block to send the Firework shooting into the sky. 
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_TEXT_4("howtoplay.fireworks.text.4"), // Fireworks have no effect other than shooting up into the air.
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_HEADER_2("howtoplay.fireworks.header.2"), // Firework Stars
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_TEXT_5("howtoplay.fireworks.text.5"), // Firework Stars can be added to during the crafting of the Firework Rocket to give it many different colors and effects.
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_TEXT_6("howtoplay.fireworks.text.6"), // Firework Stars are made from gunpowder and various other items.
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_TEXT_6_1("howtoplay.fireworks.text.6.1"), //   - Color - Adding dye of any color will make an explosion of that color.
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_TEXT_6_2("howtoplay.fireworks.text.6.2"), //   - Twinkle - Adding Glowstone Dust will make the explosion twinkle.
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_TEXT_6_3("howtoplay.fireworks.text.6.3"), //   - Creeper Shaped - Adding a Head will make a creeper pattern in the sky.
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_TEXT_6_4("howtoplay.fireworks.text.6.4"), //   - Burst - Adding a feather will give the explosion a burst effect.
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_TEXT_6_5("howtoplay.fireworks.text.6.5"), //   - Trail - Adding a Diamond will give the explosion trails.
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_TEXT_6_6("howtoplay.fireworks.text.6.6"), //   - Star Shaped - Adding a Gold Nugget will make a star pattern in the sky.
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_HEADER_3("howtoplay.fireworks.header.3"), // Pyrotechnics
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_TEXT_7("howtoplay.fireworks.text.7"), // Fireworks can be fired from a dispenser. This will shoot the Firework in the direction that the dispenser is facing.
        @PowerNukkitOnly @Since("FUTURE") FISHING("howtoplay.fishing"), // Fishing
        @PowerNukkitOnly @Since("FUTURE") FISHING_TITLE("howtoplay.fishing.title"), // How to Play : Fishing
        @PowerNukkitOnly @Since("FUTURE") FISHING_TEXT_1("howtoplay.fishing.text.1"), // Fishing must be done with a Fishing Rod and is an excellent way to catch some fish or other cool items from the sea!
        @PowerNukkitOnly @Since("FUTURE") FISHING_HEADER_1("howtoplay.fishing.header.1"), // Casting
        @PowerNukkitOnly @Since("FUTURE") FISHING_TEXT_2_NOTTOUCH("howtoplay.fishing.text.2.notTouch"), // Aim at a block of water and press :_input_key.use: while holding a fishing rod to cast the lure into the water.
        @PowerNukkitOnly @Since("FUTURE") FISHING_TEXT_2_TOUCH("howtoplay.fishing.text.2.touch"), // Look at a block of water and tap the Fish button while holding a Fishing Rod to cast the lure into the water.
        @PowerNukkitOnly @Since("FUTURE") FISHING_HEADER_2("howtoplay.fishing.header.2"), // Fish On!
        @PowerNukkitOnly @Since("FUTURE") FISHING_TEXT_3("howtoplay.fishing.text.3"), // Wait until you start to see a trail of bubbles coming for the lure.
        @PowerNukkitOnly @Since("FUTURE") FISHING_TEXT_4_NOTTOUCH("howtoplay.fishing.text.4.notTouch"), // When the bubbles touch the lure, it will bob up and down. Press :_input_key.use: to reel in the lure. Be careful not to let your fish get away!
        @PowerNukkitOnly @Since("FUTURE") FISHING_TEXT_4_TOUCH("howtoplay.fishing.text.4.touch"), // When the bubbles touch the lure, it will bob up and down. Tap the Fish button again to reel in the lure. Be careful not to let your fish get away!
        @PowerNukkitOnly @Since("FUTURE") FURNACE("howtoplay.furnace"), // Furnace
        @PowerNukkitOnly @Since("FUTURE") FURNACE_TITLE("howtoplay.furnace.title"), // How to Play : Furnace
        @PowerNukkitOnly @Since("FUTURE") FURNACE_TEXT_1("howtoplay.furnace.text.1"), // A Furnace allows you to cook or smelt items. For example, you can smelt Iron Ore into Iron Ingots.
        @PowerNukkitOnly @Since("FUTURE") FURNACE_TEXT_2_NOTTOUCH("howtoplay.furnace.text.2.notTouch"), // Place the Furnace in the world and press :_input_key.use: to use it.
        @PowerNukkitOnly @Since("FUTURE") FURNACE_TEXT_2_TOUCH("howtoplay.furnace.text.2.touch"), // Place the Furnace in the world and tap to use it.
        @PowerNukkitOnly @Since("FUTURE") FURNACE_HEADER_1("howtoplay.furnace.header.1"), // Fuel
        @PowerNukkitOnly @Since("FUTURE") FURNACE_TEXT_3("howtoplay.furnace.text.3"), // You need to put some fuel into the bottom of the Furnace, and the item that you want smelted in the top. The Furnace will then fire up and start working. Lots of things can be used as fuel;  try experimenting with anything burnable!
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS("howtoplay.gameSettings"), // Game Settings
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TITLE("howtoplay.gameSettings.title"), // How to Play : Game Settings
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_1("howtoplay.gameSettings.text.1"), // When creating a world, you have many options. Below are the various settings that can be used to fine tune your experience. Don't worry if you didn't set them when you created the world, they can be changed at any time.
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_2("howtoplay.gameSettings.text.2"), // -World Name: This is where you can name your world.
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_3("howtoplay.gameSettings.text.3"), // -Default Game Mode: This is the gamemode that all new players to the world will start with. You can have players start in either survival or creative mode. Selecting creative mode will turn cheats on.
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_4("howtoplay.gameSettings.text.4"), // -Difficulty: This setting affects how difficult the world will be. You can choose Peaceful, Easy, Normal, or Hard.
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_HEADER_1("howtoplay.gameSettings.header.1"), // World Preferences 
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_5("howtoplay.gameSettings.text.5"), // -Starting Map: If this setting is turned on, every player will start with a map in their hotbar.
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_6("howtoplay.gameSettings.text.6"), // -Bonus Chest: If this setting is turned on, there will be a chest with some starting loot near your initial spawn location.
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_7("howtoplay.gameSettings.text.7"), // -World Type: This setting controls the way the world is created. Select Infinite, Flat, or Old from the drop down menu to change the world type.
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_7_1("howtoplay.gameSettings.text.7.1"), //   - Infinite worlds go on and on forever.
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_7_2("howtoplay.gameSettings.text.7.2"), //   - Flat worlds do not have any hills or trees, just an infinite flat area to fill with your creations.
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_7_3("howtoplay.gameSettings.text.7.3"), //   - Old worlds limited in size and height.
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_8("howtoplay.gameSettings.text.8"), // -Seed: This is a unique number for the world. By entering a seed when you make a new world, you can control how it is created. You can also use a word or phrase for the seed and the game will convert it to a number for you.
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_HEADER_2("howtoplay.gameSettings.header.2"), // Cheats and Gamerules
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_9("howtoplay.gameSettings.text.9"), // -Activate Cheats: This setting allows players to use commands. When a world is created with this setting on, all achievements are disabled.
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_10("howtoplay.gameSettings.text.10"), // Below are gamerules, cheats must be turned on to use them:
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_11("howtoplay.gameSettings.text.11"), // -Always Day: Night will never fall when this setting is turned on.
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_12("howtoplay.gameSettings.text.12"), // -Do Daylight Cycle: The time will not advance when this setting is turned off.
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_13("howtoplay.gameSettings.text.13"), // -Keep Inventory: This setting allows players to keep their inventory when they die.
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_14("howtoplay.gameSettings.text.14"), // -Mob Spawning: This prevents all mobs from spawning when this setting is off.
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_15("howtoplay.gameSettings.text.15"), // -Mob Griefing: Prevents mobs from destroying the world.
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_16("howtoplay.gameSettings.text.16"), // -Entities Drop Loot: Controls whether things like minecarts and armor stands will drop themselves when they are broken.
        @PowerNukkitOnly @Since("FUTURE") GAMESETTINGS_TEXT_17("howtoplay.gameSettings.text.17"), // -Weather Cycle: The weather will not change when this setting is turned off.
        @PowerNukkitOnly @Since("FUTURE") HOPPERS("howtoplay.hoppers"), // Hoppers
        @PowerNukkitOnly @Since("FUTURE") HOPPERS_TITLE("howtoplay.hoppers.title"), // How to Play : Hoppers
        @PowerNukkitOnly @Since("FUTURE") HOPPERS_TEXT_1("howtoplay.hoppers.text.1"), // Hoppers are used to automatically move items. Hoppers can be attached to some other items like containers such as Chests or Jukeboxes. 
        @PowerNukkitOnly @Since("FUTURE") HOPPERS_TEXT_2("howtoplay.hoppers.text.2"), // Hoppers will continuously remove items out of a container placed above them and move them into the container they are pointing to.
        @PowerNukkitOnly @Since("FUTURE") HOPPERS_HEADER_1("howtoplay.hoppers.header.1"), // Usage
        @PowerNukkitOnly @Since("FUTURE") HOPPERS_TEXT_3("howtoplay.hoppers.text.3"), // To make a Hopper point to a particular block, place the Hopper against that block while sneaking.
        @PowerNukkitOnly @Since("FUTURE") HOPPERS_TEXT_4("howtoplay.hoppers.text.4"), // If a Hopper is powered by Redstone, it will become inactive and stop moving items.
        @PowerNukkitOnly @Since("FUTURE") HOSTANDPLAYEROPTIONS("howtoplay.hostAndPlayerOptions"), // Host and Player Options
        @PowerNukkitOnly @Since("FUTURE") HOSTANDPLAYEROPTIONS_TITLE("howtoplay.hostAndPlayerOptions.title"), // How to Play : Host and Player Options
        @PowerNukkitOnly @Since("FUTURE") HOSTANDPLAYEROPTIONS_TEXT_1_NOTTOUCH("howtoplay.hostAndPlayerOptions.text.1.notTouch"), // When playing with cheats on, host options will allow you to teleport yourself or friends, change the weather, set the time of day, and change the entry point or world spawn of your game. Once cheats have been enabled, you can find these options in the chat window by pressing the [/] button next to the chat bar.
        @PowerNukkitOnly @Since("FUTURE") HOSTANDPLAYEROPTIONS_TEXT_1_TOUCH("howtoplay.hostAndPlayerOptions.text.1.touch"), // When playing with cheats on, host options will allow you to teleport yourself or friends, change the weather, set the time of day, and change the entry point or world spawn of your game. Once cheats have been enabled, you can find these options in the chat window by tapping the chat button.
        @PowerNukkitOnly @Since("FUTURE") HUD("howtoplay.HUD"), // HUD
        @PowerNukkitOnly @Since("FUTURE") HUD_TITLE("howtoplay.HUD.title"), // How to Play : HUD
        @PowerNukkitOnly @Since("FUTURE") HUD_TEXT_1("howtoplay.HUD.text.1"), // The HUD shows information about your status, your health, your remaining oxygen (when you are underwater), your hunger level, and your armor (if you are wearing any).
        @PowerNukkitOnly @Since("FUTURE") HUD_HEADER_1("howtoplay.HUD.header.1"), // Food and Health
        @PowerNukkitOnly @Since("FUTURE") HUD_TEXT_2("howtoplay.HUD.text.2"), // If you lose some health but have at least nine :shank:, your health will replenish. Eating food will replenish your :shank:.
        @PowerNukkitOnly @Since("FUTURE") HUD_TEXT_3_KEYBOARD("howtoplay.HUD.text.3.keyboard"), // Press and hold :_input_key.use: while holding a piece of food to eat it.
        @PowerNukkitOnly @Since("FUTURE") HUD_TEXT_3_GAMEPAD("howtoplay.HUD.text.3.gamepad"), // Press and hold :_input_key.use: while holding a piece of food to eat it.
        @PowerNukkitOnly @Since("FUTURE") HUD_TEXT_3_RIFT_CONTROLLER("howtoplay.HUD.text.3.rift_controller"), // Press and hold :rift_right_grab: while holding a piece of food to eat it.
        @PowerNukkitOnly @Since("FUTURE") HUD_TEXT_3_WINDOWSMR_CONTROLLER("howtoplay.HUD.text.3.windowsmr_controller"), // Press and hold :windowsmr_left_trigger: while holding a piece of food to eat it.
        @PowerNukkitOnly @Since("FUTURE") HUD_TEXT_3_TOUCH("howtoplay.HUD.text.3.touch"), // Press and hold a piece of food to eat it.
        @PowerNukkitOnly @Since("FUTURE") HUD_TEXT_4("howtoplay.HUD.text.4"), // You must watch your hunger level while adventuring, your hunger level is represented on your HUD with :shank:. The hunger level decreases as you explore. Certain activities will decrease hunger level at a faster rate, such as sprinting. You can replenish your hunger level by eating food. Some foods are more nourishing than others and will fill up more :shank:. When you get your hunger level up to maximum, the last food you ate applies a saturation value. Saturation is a hidden number that gives you an extra bonus to your hunger level.
        @PowerNukkitOnly @Since("FUTURE") HUD_HEADER_2("howtoplay.HUD.header.2"), // Experience
        @PowerNukkitOnly @Since("FUTURE") HUD_TEXT_5("howtoplay.HUD.text.5"), // The Experience Bar is also shown on the HUD. The number shows your current Experience Level, and the bar indicates how many Experience Points are required to increase your Experience Level.
        @PowerNukkitOnly @Since("FUTURE") HUD_TEXT_6("howtoplay.HUD.text.6"), // Experience Points are gained by collecting Experience Orbs. You can get Experience Orbs from activities such as killing mobs, mining certain blocks, and more! Don't leave any Experience Orbs behind, you're going to need them. Move near Experience Orbs to collect them.
        @PowerNukkitOnly @Since("FUTURE") HUD_HEADER_3("howtoplay.HUD.header.3"), // The Hotbar
        @PowerNukkitOnly @Since("FUTURE") HUD_TEXT_7_KEYBOARD("howtoplay.HUD.text.7.keyboard"), // The hotbar shows the items that are available to use. Scroll the mouse wheel to change the item in your hand.
        @PowerNukkitOnly @Since("FUTURE") HUD_TEXT_7_GAMEPAD("howtoplay.HUD.text.7.gamepad"), // The hotbar shows the items that are available to use. Use :_input_key.cycleItemLeft: and :_input_key.cycleItemRight: to change the item in your hand.
        @PowerNukkitOnly @Since("FUTURE") HUD_TEXT_7_TOUCH("howtoplay.HUD.text.7.touch"), // The hotbar shows the items that are available to use. Tap items in your hotbar to change the item in your hand.
        @PowerNukkitOnly @Since("FUTURE") HUD_TEXT_7_WINDOWSMR_CONTROLLER("howtoplay.HUD.text.7.windowsmr_controller"), // The hotbar shows the items that are available to use. Press :windowsmr_left_touchpad_horizontal: to change the item in your hand.
        @PowerNukkitOnly @Since("FUTURE") HUD_TEXT_7_RIFT_CONTROLLER("howtoplay.HUD.text.7.rift_controller"), // The hotbar shows the items that are available to use. Press :rift_left_trigger: or :rift_left_grab: to change the item in your hand.
        @PowerNukkitOnly @Since("FUTURE") INVENTORY("howtoplay.inventory"), // Inventory
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_TITLE("howtoplay.inventory.title"), // How to Play : Inventory
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_TEXT_1_KEYBOARD("howtoplay.inventory.text.1.keyboard"), // Press :_input_key.inventory: to view your inventory.
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_TEXT_1_GAMEPAD("howtoplay.inventory.text.1.gamepad"), // Press :_input_key.inventory: to view your inventory.
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_TEXT_1_RIFT_CONTROLLER("howtoplay.inventory.text.1.rift_controller"), // Press :rift_B: to view your inventory.
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_TEXT_1_WINDOWSMR_CONTROLLER("howtoplay.inventory.text.1.windowsmr_controller"), // Press :windowsmr_left_grab: to view your inventory.
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_TEXT_1_TOUCH("howtoplay.inventory.text.1.touch"), // Tap the Inventory tab to view your inventory.
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_TEXT_2("howtoplay.inventory.text.2"), // This screen shows the items that are available for use in your hand, and all of the other items that you are carrying. Your armor is also shown here.
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_TEXT_3_KEYBOARD("howtoplay.inventory.text.3.keyboard"), // Use :mouse_left_button: to pick up the item that is under the cursor. If there is more than one item here this will pick them all up, or you can use :mouse_right_button: to pick up just half of them.
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_TEXT_3_GAMEPAD("howtoplay.inventory.text.3.gamepad"), // Use :_gamepad_face_button_down: to pick up the item that is under the cursor. If there is more than one item here this will pick them all up, or you can use :_gamepad_face_button_left: to pick up just half of them.
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_TEXT_3_TOUCH("howtoplay.inventory.text.3.touch"), // Tap to select an item. If there is more than one item here this will select them all.
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_TEXT_4_KEYBOARD("howtoplay.inventory.text.4.keyboard"), // You can place items down again by using :mouse_left_button:. With multiple items on the cursor, use :mouse_left_button: to place them all or :mouse_right_button: to place just one.
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_TEXT_4_GAMEPAD("howtoplay.inventory.text.4.gamepad"), // You can place items down again by using :_gamepad_face_button_down:. With multiple items on the cursor, use :_gamepad_face_button_down: to place them all or :_gamepad_face_button_left: to place just one.
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_TEXT_4_TOUCH("howtoplay.inventory.text.4.touch"), // Tap another place in the inventory to move the item.
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_TEXT_5_KEYBOARD("howtoplay.inventory.text.5.keyboard"), // If the item the cursor is over is armor, you can quick move it to the correct armor slot by pressing SHIFT+:mouse_left_button:.
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_TEXT_5_GAMEPAD("howtoplay.inventory.text.5.gamepad"), // If the item the cursor is over is armor, you can quick move it to the correct armor slot by pressing :_gamepad_face_button_up:.
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_TEXT_6_KEYBOARD("howtoplay.inventory.text.6.keyboard"), // To drop an item, pick up the item and put it down outside of the inventory window.
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_TEXT_6_GAMEPAD("howtoplay.inventory.text.6.gamepad"), // To drop an item, pick up the item and press :_gamepad_face_button_up:.
        @PowerNukkitOnly @Since("FUTURE") INVENTORY_TEXT_6_TOUCH("howtoplay.inventory.text.6.touch"), // To drop an item, tap the item and then tap outside of the inventory window.
        @PowerNukkitOnly @Since("FUTURE") JUKEBOX("howtoplay.jukebox"), // Jukebox
        @PowerNukkitOnly @Since("FUTURE") JUKEBOX_TITLE("howtoplay.jukebox.title"), // How to Play : Jukebox
        @PowerNukkitOnly @Since("FUTURE") JUKEBOX_TEXT_1("howtoplay.jukebox.text.1"), // The Jukebox will play Music Discs that you have found.
        @PowerNukkitOnly @Since("FUTURE") JUKEBOX_HEADER_1("howtoplay.jukebox.header.1"), // Get the Party Started
        @PowerNukkitOnly @Since("FUTURE") JUKEBOX_TEXT_2_NOTTOUCH("howtoplay.jukebox.text.2.notTouch"), // Press :_input_key.use: on a Jukebox with a Music Disc in your hand to play it. Press :_input_key.use: the Jukebox again to eject the Music Disc.
        @PowerNukkitOnly @Since("FUTURE") JUKEBOX_TEXT_2_TOUCH("howtoplay.jukebox.text.2.touch"), // Tap a Jukebox with a Music Disc in your hand to play it. Tap the Jukebox again to eject the Music Disc.
        @PowerNukkitOnly @Since("FUTURE") JUKEBOX_HEADER_2("howtoplay.jukebox.header.2"), // Redstone
        @PowerNukkitOnly @Since("FUTURE") JUKEBOX_TEXT_3("howtoplay.jukebox.text.3"), // When a Jukebox is playing a Music Disc, it will power Redstone Dust.
        @PowerNukkitOnly @Since("FUTURE") JUKEBOX_TEXT_4("howtoplay.jukebox.text.4"), // Try different Music Discs for a different power level.
        @PowerNukkitOnly @Since("FUTURE") JUKEBOX_TEXT_5("howtoplay.jukebox.text.5"), // See what happens when you let it play to the end. 
        @PowerNukkitOnly @Since("FUTURE") JUKEBOX_TEXT_6("howtoplay.jukebox.text.6"), // A Hopper can put a Music Disc in for you, and take it out when it's done playing.
        @PowerNukkitOnly @Since("FUTURE") JUKEBOX_HEADER_3("howtoplay.jukebox.header.3"), // Finding Music Discs
        @PowerNukkitOnly @Since("FUTURE") JUKEBOX_TEXT_7("howtoplay.jukebox.text.7"), // There are a couple of Music Discs that can be found in Chests around the world.
        @PowerNukkitOnly @Since("FUTURE") JUKEBOX_TEXT_8("howtoplay.jukebox.text.8"), // Others are more difficult to come by, Creepers secretly appreciate music.
        @PowerNukkitOnly @Since("FUTURE") LOOM("howtoplay.loom"), // Loom
        @PowerNukkitOnly @Since("FUTURE") LOOM_TITLE("howtoplay.loom.title"), // How to Play : Loom
        @PowerNukkitOnly @Since("FUTURE") LOOM_TEXT_1("howtoplay.loom.text.1"), // The Loom is a fast and efficient way to apply patterns to Banners. The Loom only uses one Dye to apply a pattern. It can also use Loom patterns to apply special patterns.
        @PowerNukkitOnly @Since("FUTURE") LOOM_HEADER_1("howtoplay.loom.header.1"), // Weaving
        @PowerNukkitOnly @Since("FUTURE") LOOM_TEXT_2("howtoplay.loom.text.2"), // By placing a Banner into the Loom's first slot, and any color dye into the second slot, patterns can be added to the Banner. Once a pattern is selected, take it from the output slot on the right and move it to your inventory.
        @PowerNukkitOnly @Since("FUTURE") LOOM_TEXT_3("howtoplay.loom.text.3"), // A Banner can have multiple layers allowing you to experiment with many different banner possibilities. Up to 6 patterns can be applied to a Banner to create a unique design.
        @PowerNukkitOnly @Since("FUTURE") LOOM_HEADER_2("howtoplay.loom.header.2"), // Loom Patterns 
        @PowerNukkitOnly @Since("FUTURE") LOOM_TEXT_4("howtoplay.loom.text.4"), // Adding a Loom Pattern to the Loom's third slot will allow the crafting of special patterns like a creeper face or a flower pattern. You will not lose you Loom Patterns when you apply these patterns to your Banners.
        @PowerNukkitOnly @Since("FUTURE") MOUNTS("howtoplay.mounts"), // Mounts
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_TITLE("howtoplay.mounts.title"), // How to Play : Mounts
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_TEXT_1("howtoplay.mounts.text.1"), // A player can ride any adult Horse, Donkey, or Mule. Only Horses can be armored.
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_TEXT_2("howtoplay.mounts.text.2"), // Mules and Donkeys may be equipped with saddlebags (for transporting items) by attaching a Chest. These saddlebags can then be accessed whilst riding or sneaking.
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_HEADER_1("howtoplay.mounts.header.1"), // Taming
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_TEXT_3_NOTTOUCH("howtoplay.mounts.text.3.notTouch"), // Horses, Donkeys, and Mules must be tamed before they can be used. A player can tame a horse by riding it and staying on while it tries to buck them off.  Press :_input_key.use: with an empty hand to attempt to tame Horses, Donkeys, and Mules.
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_TEXT_3_TOUCH("howtoplay.mounts.text.3.touch"), // Horses, Donkeys, and Mules must be tamed before they can be used. A player can tame a horse by riding it and staying on while it tries to buck them off.  Tap the Mount button that appears when near a horse  to attempt to tame Horses, Donkeys, and Mules.
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_TEXT_4("howtoplay.mounts.text.4"), // When Hearts appear around the horse, it has been tamed and will no longer attempt to throw the player off.
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_HEADER_2("howtoplay.mounts.header.2"), // Riding Animals
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_TEXT_5("howtoplay.mounts.text.5"), // To steer a horse, the player must equip it with a Saddle. 
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_TEXT_6("howtoplay.mounts.text.6"), // Saddles can be bought from villagers, found inside Chests hidden in the world, or acquired by fishing. While riding a horse, open your inventory and put a saddle in the horse's saddle slot. 
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_TEXT_7("howtoplay.mounts.text.7"), // Horses and Donkeys can be bred like other animals using Golden Apples or Golden Carrots.
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_TEXT_8("howtoplay.mounts.text.8"), // Foals will grow into adult horses over time, although feeding them Wheat or Hay will speed this up.
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_HEADER_3("howtoplay.mounts.header.3"), // Pack Animals
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_TEXT_9("howtoplay.mounts.text.9"), // Llamas are another ridable mob which can be tamed and used to transport large shipments of items. 
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_TEXT_10("howtoplay.mounts.text.10"), // Llamas can be tamed the same as horses. However, even when tamed, the player can't control their movements when riding them. 
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_TEXT_11("howtoplay.mounts.text.11"), // A lead can be attached to one, and when this happens, surrounding llamas (both tamed and un-tamed) will follow, making a caravan. 
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_TEXT_12("howtoplay.mounts.text.12"), // Llamas can be equipped with chests, giving it 3-15 slots of inventory space depending on the strength of the Llama. They can also be equipped with carpets. Each carpet color yields a different pattern.
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_HEADER_4("howtoplay.mounts.header.4"), // Pigs
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_TEXT_13("howtoplay.mounts.text.13"), // Pigs can be ridden as well, although they won't go where you want without a little incentive. 
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_TEXT_14("howtoplay.mounts.text.14"), // Equip a pig with a Saddle and point a Carrot on a Stick in the direction you want to go.
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_HEADER_5("howtoplay.mounts.header.5"), // Dismount
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_TEXT_15_NOTTOUCH("howtoplay.mounts.text.15.notTouch"), // Press :_input_key.sneak: to dismount.
        @PowerNukkitOnly @Since("FUTURE") MOUNTS_TEXT_15_TOUCH("howtoplay.mounts.text.15.touch"), // Tap :_input_key.sneak: to dismount.
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYER("howtoplay.multiplayer"), // Multiplayer
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYER_TITLE("howtoplay.multiplayer.title"), // How to Play : Multiplayer
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYER_TEXT_1("howtoplay.multiplayer.text.1"), // Minecraft is a multiplayer game by default.
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYER_HEADER_1("howtoplay.multiplayer.header.1"), // Splitscreen
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYER_TEXT_2_SPLITSCREEN("howtoplay.multiplayer.text.2.splitscreen"), // You can have local players join your game by connecting controllers and pressing any button on their controller at any point during the game.
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYER_HEADER_2("howtoplay.multiplayer.header.2"), // Online Multiplayer
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYER_TEXT_3("howtoplay.multiplayer.text.3"), // By default, all worlds start with multiplayer enabled. If you would like to make the world private, go to world settings and select the multiplayer option, then toggle multiplayer off.
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYER_TEXT_3_NOREALMS("howtoplay.multiplayer.text.3.norealms"), // By default, all worlds start with multiplayer enabled. If you would like to make the world private, go to world settings and select the multiplayer option, then toggle multiplayer off.
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYER_HEADER_3("howtoplay.multiplayer.header.3"), // Joining an Online Game
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYER_TEXT_4("howtoplay.multiplayer.text.4"), // To join a multiplayer game, go to the friends tab. All joinable Realms, Friends, and LAN Games will be shown here. Pick a game and select it to join.
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYER_TEXT_4_NOREALMS("howtoplay.multiplayer.text.4.norealms"), // To join a multiplayer game, go to the friends tab. All joinable Realms, Friends, and LAN Games will be shown here. Pick a game and select it to join.
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYER_TEXT_5("howtoplay.multiplayer.text.5"), // When you start or join an online game, it will be visible to people in your friends tab. Once your friends join, the game will now be visible to friends of these friends.
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYER_TEXT_6("howtoplay.multiplayer.text.6"), // Note: You must have an internet connection and be signed in to a Microsoft Account to play multiplayer.
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYER_HEADER_4("howtoplay.multiplayer.header.4"), // Player Permissions
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYER_TEXT_7("howtoplay.multiplayer.text.7"), // If you would like to manage the permissions of individual players, player permissions makes it easy. Open the pause menu and on the right, you will see a list of players currently in the world. Select their permission icon to adjust that player's permissions.
        @PowerNukkitOnly @Since("FUTURE") NAVIGATION("howtoplay.navigation"), // Navigation
        @PowerNukkitOnly @Since("FUTURE") NAVIGATION_TITLE("howtoplay.navigation.title"), // How to Play : Navigation
        @PowerNukkitOnly @Since("FUTURE") NAVIGATION_TEXT_1("howtoplay.navigation.text.1"), // Navigation is an important skill that you will learn in Minecraft as it's not always easy to find your way home.
        @PowerNukkitOnly @Since("FUTURE") NAVIGATION_TEXT_2("howtoplay.navigation.text.2"), // First of all, there are some basic tools that you should know about.
        @PowerNukkitOnly @Since("FUTURE") NAVIGATION_HEADER_1("howtoplay.navigation.header.1"), // Navigation Tools
        @PowerNukkitOnly @Since("FUTURE") NAVIGATION_TEXT_3("howtoplay.navigation.text.3"), // A Compass will point in the direction of the first place you spawned into the world, an easy way to find where you started.
        @PowerNukkitOnly @Since("FUTURE") NAVIGATION_TEXT_4("howtoplay.navigation.text.4"), // A Map lets you see the area you've explored. Put it in your offhand slot to use it like a mini-map. You can increase its size by adding more paper to the edges in a Crafting Table.
        @PowerNukkitOnly @Since("FUTURE") NAVIGATION_TEXT_5("howtoplay.navigation.text.5"), // A Locator Map will show you where you are and what direction you are facing in relation to the Locator Map's origin. It will also show you the location of other players in the same world.
        @PowerNukkitOnly @Since("FUTURE") NAVIGATION_TEXT_6("howtoplay.navigation.text.6"), // A Cartography Table can help you create, expand, copy and even name maps.
        @PowerNukkitOnly @Since("FUTURE") NAVIGATION_TEXT_7("howtoplay.navigation.text.7"), // Place paper into the first slot to craft a Map. If you add a compass into the second slot you can craft a Locator Map. Adding Paper or a blank Map will let you expand or copy your Map.  
        @PowerNukkitOnly @Since("FUTURE") NAVIGATION_HEADER_2("howtoplay.navigation.header.2"), // Navigation Techniques
        @PowerNukkitOnly @Since("FUTURE") NAVIGATION_TEXT_8("howtoplay.navigation.text.8"), // Try to watch for landmarks as you explore. The more you play on a world, the more you will be able to remember where you are. Another good trick is to place Torches as you go so that you may find your way back home.
        @PowerNukkitOnly @Since("FUTURE") NAVIGATION_TEXT_9("howtoplay.navigation.text.9"), // The sun can also tell you what direction you are facing. Remember: the sun rises in the east and sets in the west!
        @PowerNukkitOnly @Since("FUTURE") NAVIGATION_HEADER_3("howtoplay.navigation.header.3"), // Explorer Maps
        @PowerNukkitOnly @Since("FUTURE") NAVIGATION_TEXT_10("howtoplay.navigation.text.10"), // There are several places for you to explore. Find a village and look for a Cartographer. He will trade you Explorer Maps that will lead you to strange places very far away.
        @PowerNukkitOnly @Since("FUTURE") NETHERPORTALS("howtoplay.netherPortals"), // Nether Portal
        @PowerNukkitOnly @Since("FUTURE") NETHERPORTALS_TITLE("howtoplay.netherPortals.title"), // How to Play : Nether Portal
        @PowerNukkitOnly @Since("FUTURE") NETHERPORTALS_TEXT_1("howtoplay.netherPortals.text.1"), // A Nether Portal allows you to travel to a different dimension.
        @PowerNukkitOnly @Since("FUTURE") NETHERPORTALS_TEXT_2("howtoplay.netherPortals.text.2"), // If constructed correctly the Nether Portal can be lit and activated.
        @PowerNukkitOnly @Since("FUTURE") NETHERPORTALS_TEXT_3("howtoplay.netherPortals.text.3"), // Examples of portal construction are shown here:
        @PowerNukkitOnly @Since("FUTURE") NIGHTFALL("howtoplay.nightfall"), // Nightfall
        @PowerNukkitOnly @Since("FUTURE") NIGHTFALL_TITLE("howtoplay.nightfall.title"), // How to Play : Nightfall
        @PowerNukkitOnly @Since("FUTURE") NIGHTFALL_TEXT_1("howtoplay.nightfall.text.1"), // In Minecraft, the sun rises and sets as you adventure in your world. As the sun sets, you must take precautions. There are many dangers at night!
        @PowerNukkitOnly @Since("FUTURE") NIGHTFALL_HEADER_1("howtoplay.nightfall.header.1"), // Take Shelter
        @PowerNukkitOnly @Since("FUTURE") NIGHTFALL_TEXT_2("howtoplay.nightfall.text.2"), // If you have not already, you will need a place to take shelter from the dark and what lurks within it. This can be as simple as a hole in the side of a hill or a small cabin in the forest.
        @PowerNukkitOnly @Since("FUTURE") NIGHTFALL_TEXT_3("howtoplay.nightfall.text.3"), // Be sure to block off all entrances, you may want to use a door so you can go in and out. If you have made a bed this is a good place to put it along with your Crafting Table and Furnace.
        @PowerNukkitOnly @Since("FUTURE") NIGHTFALL_TEXT_4("howtoplay.nightfall.text.4"), // Also be sure to light up the area with torches, it may save your life.
        @PowerNukkitOnly @Since("FUTURE") PETS("howtoplay.pets"), // Pets
        @PowerNukkitOnly @Since("FUTURE") PETS_TITLE("howtoplay.pets.title"), // How to Play : Pets
        @PowerNukkitOnly @Since("FUTURE") PETS_HEADER_1("howtoplay.pets.header.1"), // Befriending Pets
        @PowerNukkitOnly @Since("FUTURE") PETS_TEXT_1_NOTTOUCH("howtoplay.pets.text.1.notTouch"), // There are several mobs in Minecraft that you can tame and make your pet. Each can be tamed by giving them an item that they like. Once tamed you can have them stay by pressing :_input_key.use: while looking at them.
        @PowerNukkitOnly @Since("FUTURE") PETS_TEXT_1_TOUCH("howtoplay.pets.text.1.touch"), // There are several mobs in Minecraft that you can tame and make your pet. Each can be tamed by giving them an item that they like. Once tamed you can have them stay by tapping the Sit Button.
        @PowerNukkitOnly @Since("FUTURE") PETS_HEADER_2("howtoplay.pets.header.2"), // Wolves
        @PowerNukkitOnly @Since("FUTURE") PETS_TEXT_2("howtoplay.pets.text.2"), // Wolves are a neutral mob that hunt in the colder climates. They will attack Rabbits, Skeletons, and Sheep but run away from Llamas. They won't attack you unless you provoke them. You can tame them by giving them Bones.
        @PowerNukkitOnly @Since("FUTURE") PETS_HEADER_3("howtoplay.pets.header.3"), // Cats
        @PowerNukkitOnly @Since("FUTURE") PETS_TEXT_3("howtoplay.pets.text.3"), // Cats are a neutral mob that can be found in villages. They will attack Rabbits and Baby Turtles. They will also keep Phantoms and Creepers away. They will try to run from you so taming them can be tough. They like fish so give them Raw Cod or Salmon to tame them.
        @PowerNukkitOnly @Since("FUTURE") PETS_HEADER_4("howtoplay.pets.header.4"), // Parrots
        @PowerNukkitOnly @Since("FUTURE") PETS_TEXT_4("howtoplay.pets.text.4"), // Parrots are a passive mob that live in the Jungle. They will imitate any other mob in the area. Seeds are their favorite, give them a few to tame them. Parrots will also sit on your shoulder... Yes, you can have more than one up there.
        @PowerNukkitOnly @Since("FUTURE") RAIDS("howtoplay.raids"), // Raids
        @PowerNukkitOnly @Since("FUTURE") RAIDS_TITLE("howtoplay.raids.title"), // How to Play : Raids
        @PowerNukkitOnly @Since("FUTURE") RAIDS_TEXT_1("howtoplay.raids.text.1"), // While exploring the world you may encounter a Pillager encampment or patrol. Pillagers are always looking for villages to raid. Taking their Banners will get their attention, and they may choose to attack a nearby village.  
        @PowerNukkitOnly @Since("FUTURE") RAIDS_TEXT_2("howtoplay.raids.text.2"), // Be sure to defend your village, the attack will stop if you defeat all the raiders.
        @PowerNukkitOnly @Since("FUTURE") RAIDS_HEADER_1("howtoplay.raids.header.1"), // I Need A Hero
        @PowerNukkitOnly @Since("FUTURE") RAIDS_TEXT_3("howtoplay.raids.text.3"), // Villagers will most likely be very grateful that you have saved them from the raiders. Be sure to check back with them, you might get a good deal.  
        @PowerNukkitOnly @Since("FUTURE") RANCHING("howtoplay.ranching"), // Ranching
        @PowerNukkitOnly @Since("FUTURE") RANCHING_TITLE("howtoplay.ranching.title"), // How to Play : Ranching
        @PowerNukkitOnly @Since("FUTURE") RANCHING_TEXT_1("howtoplay.ranching.text.1"), // In Minecraft, you can have your own ranch filled with livestock! Ranching provides lots of resources such as wool, eggs, and raw meat.
        @PowerNukkitOnly @Since("FUTURE") RANCHING_HEADER_1("howtoplay.ranching.header.1"), // Growing Your Herd
        @PowerNukkitOnly @Since("FUTURE") RANCHING_TEXT_2("howtoplay.ranching.text.2"), // In order to keep your livestock growing, you have to make baby animals. Adult animals must enter Love Mode for this to happen. Feed the animals their preferred food to get them to enter Love Mode.
        @PowerNukkitOnly @Since("FUTURE") RANCHING_TEXT_3("howtoplay.ranching.text.3"), // When two like animals are nearby and in Love Mode, they will kiss for a moment and then a baby animal will appear! The baby animal will stay with their parents until they grow into an adult. After having a baby, adult animals must wait 5 minutes before entering Love Mode.
        @PowerNukkitOnly @Since("FUTURE") RANCHING_HEADER_2("howtoplay.ranching.header.2"), // What Do Mobs Eat?
        @PowerNukkitOnly @Since("FUTURE") RANCHING_TEXT_4("howtoplay.ranching.text.4"), // Cows, mooshrooms, and sheep all eat Wheat. Pigs can eat Carrots or Beetroot. Chickens love Seeds of any kinds. Rabbits will eat Carrots, Golden Carrots, or Dandelions. Ocelots enjoy Raw Cod or Salmon. Wolves like to eat any kind of meat.
        @PowerNukkitOnly @Since("FUTURE") RANCHING_TEXT_5("howtoplay.ranching.text.5"), // Animals will follow you when you hold their desired food item. This will help you lead them to your ranch or another animal.
        @PowerNukkitOnly @Since("FUTURE") REALMS("howtoplay.realms"), // Realms
        @PowerNukkitOnly @Since("FUTURE") REALMS_TITLE("howtoplay.realms.title"), // How to Play : Realms
        @PowerNukkitOnly @Since("FUTURE") REALMS_TEXT_1("howtoplay.realms.text.1"), // Realms is an awesome place to host a multiplayer game that is always running. Even when you aren't playing, your Realm will be up and running for your friends to explore!
        @PowerNukkitOnly @Since("FUTURE") REALMS_HEADER_1("howtoplay.realms.header.1"), // Get Started
        @PowerNukkitOnly @Since("FUTURE") REALMS_TEXT_2("howtoplay.realms.text.2"), // To set up a Realm, select Create New from the Worlds tab. Then select the New Realm button, then the Create New World button. Here you can name your Realm, and set the number of players. Then you will be able to add friends to your Realm.
        @PowerNukkitOnly @Since("FUTURE") REALMS_HEADER_2("howtoplay.realms.header.2"), // Realm Settings
        @PowerNukkitOnly @Since("FUTURE") REALMS_TEXT_3("howtoplay.realms.text.3"), // Once you have a Realm created, select the Pencil button to change the Realm settings.
        @PowerNukkitOnly @Since("FUTURE") REALMS_TEXT_4("howtoplay.realms.text.4"), // Under the Game button, you can rename the Realm, set the difficulty and gamemode, turn on cheats, and download/upload the world.
        @PowerNukkitOnly @Since("FUTURE") REALMS_TEXT_5("howtoplay.realms.text.5"), // Under the Members button you can manage all of the friends you've invited to your Realm, add/remove members, and set their permissions.
        @PowerNukkitOnly @Since("FUTURE") REALMS_TEXT_6("howtoplay.realms.text.6"), // Under the Subscription button you can see when the Realm will expire, extend the time until expiration, and open/close the Realm.
        @PowerNukkitOnly @Since("FUTURE") REDSTONE("howtoplay.redstone"), // Redstone
        @PowerNukkitOnly @Since("FUTURE") REDSTONE_TITLE("howtoplay.redstone.title"), // How to Play : Redstone
        @PowerNukkitOnly @Since("FUTURE") REDSTONE_TEXT_1("howtoplay.redstone.text.1"), // Redstone Dust comes from Redstone that transmits an electrical signal. When it has power it lights up and transmits its signal to other Redstone items that are next to it.
        @PowerNukkitOnly @Since("FUTURE") REDSTONE_HEADER_1("howtoplay.redstone.header.1"), // Redstone Power
        @PowerNukkitOnly @Since("FUTURE") REDSTONE_TEXT_2("howtoplay.redstone.text.2"), // In order for one of these items to be powered, it needs a power source such as a Lever, Button, or Pressure Plate. Experiment to find them all!
        @PowerNukkitOnly @Since("FUTURE") REDSTONE_TEXT_3("howtoplay.redstone.text.3"), // Place some Redstone Dust next to a power source and turn it on to power it.
        @PowerNukkitOnly @Since("FUTURE") REDSTONE_TEXT_4("howtoplay.redstone.text.4"), // There are many items that use a Redstone signal to do something, such as a Hopper or a Piston.
        @PowerNukkitOnly @Since("FUTURE") REDSTONE_TEXT_5("howtoplay.redstone.text.5"), // Redstone allows for endless possibilities! Try creating something useful for yourself like an automatic farm!
        @PowerNukkitOnly @Since("FUTURE") RESOURCEANDBEHAVIORPACKS("howtoplay.resourceAndBehaviorPacks"), // Resource And Behavior Packs
        @PowerNukkitOnly @Since("FUTURE") RESOURCEANDBEHAVIORPACKS_TITLE("howtoplay.resourceAndBehaviorPacks.title"), // How to Play : Resource And Behavior Packs
        @PowerNukkitOnly @Since("FUTURE") RESOURCEANDBEHAVIORPACKS_TEXT_1("howtoplay.resourceAndBehaviorPacks.text.1"), // You can change the way that Minecraft looks and behaves using Resource and Behavior Packs.
        @PowerNukkitOnly @Since("FUTURE") RESOURCEANDBEHAVIORPACKS_TEXT_2("howtoplay.resourceAndBehaviorPacks.text.2"), // In the Settings Menu, choose a pack from the available packs list and select the plus sign next to it. Now your pack will apply its changes to the default Minecraft pack.
        @PowerNukkitOnly @Since("FUTURE") SCAFFOLDING("howtoplay.scaffolding"), // Scaffolding
        @PowerNukkitOnly @Since("FUTURE") SCAFFOLDING_TITLE("howtoplay.scaffolding.title"), // How to Play : Scaffolding
        @PowerNukkitOnly @Since("FUTURE") SCAFFOLDING_HEADER_1("howtoplay.scaffolding.header.1"), // Reach For The Sky
        @PowerNukkitOnly @Since("FUTURE") SCAFFOLDING_TEXT_1_KEYBOARD("howtoplay.scaffolding.text.1.keyboard"), // Scaffolding can help you create huge structures safely! You can walk inside scaffolding and stand on it. If you have a column of scaffolding you can go upward by standing in the scaffolding and pressing :_input_key.jump:. If you want to travel downward you can press :_input_key.sneak:.
        @PowerNukkitOnly @Since("FUTURE") SCAFFOLDING_TEXT_1_GAMEPAD("howtoplay.scaffolding.text.1.gamepad"), // Scaffolding can help you create huge structures safely! You can walk inside scaffolding and stand on it. If you have a column of scaffolding you can go upward by standing in the scaffolding and pressing the :_input_key.jump: button. If you want to travel downward you can press and hold the :_input_key.sneak: button.
        @PowerNukkitOnly @Since("FUTURE") SCAFFOLDING_TEXT_1_TOUCH("howtoplay.scaffolding.text.1.touch"), // Scaffolding can help you create huge structures safely! You can walk inside scaffolding and stand on it. If you have a column of scaffolding you can go upward by standing in the scaffolding and pressing the :touch_jump: button. If you want to travel downward you can press the :touch_fly_down: button.
        @PowerNukkitOnly @Since("FUTURE") SCAFFOLDING_TEXT_1_RIFT_CONTROLLER("howtoplay.scaffolding.text.1.rift_controller"), // Scaffolding can help you create huge structures safely! You can walk inside scaffolding and stand on it. If you have a column of scaffolding you can go upward by standing in the scaffolding and pressing the :rift_A: button. If you want to travel downward you can press and hold the :rift_X: button.
        @PowerNukkitOnly @Since("FUTURE") SCAFFOLDING_TEXT_1_WINDOWSMR_CONTROLLER("howtoplay.scaffolding.text.1.windowsmr_controller"), // Scaffolding can help you create huge structures safely! You can walk inside scaffolding and stand on it. If you have a column of scaffolding you can go upward by standing in the scaffolding and pressing the :windowsmr_right_touchpad: button. If you want to travel downward you can press and hold the :windowsmr_right_stick: button.
        @PowerNukkitOnly @Since("FUTURE") SCAFFOLDING_HEADER_2("howtoplay.scaffolding.header.2"), // Support Your Build
        @PowerNukkitOnly @Since("FUTURE") SCAFFOLDING_TEXT_2("howtoplay.scaffolding.text.2"), // Scaffolding needs support. You can only place so many scaffolding horizontally without touching a different block. When you attempt to place too many scaffolding blocks without proper support, it will fall. Scaffolding can be placed like normal blocks, but it can also be placed on its own foundation to quickly build a tall tower.
        @PowerNukkitOnly @Since("FUTURE") SCAFFOLDING_HEADER_3("howtoplay.scaffolding.header.3"), // Break It Down
        @PowerNukkitOnly @Since("FUTURE") SCAFFOLDING_TEXT_3("howtoplay.scaffolding.text.3"), // When Scaffolding is broken it will also break every Scaffolding block that was being supported by it. This will let you quickly clean up your scaffolding by breaking the supporting blocks!
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS("howtoplay.structureBlocks"), // Structure Blocks
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_TITLE("howtoplay.structureBlocks.title"), // How to Play : Structure Blocks	##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_TEXT_1("howtoplay.structureBlocks.text.1"), // Structure Blocks give creators the ability to copy and save out sections of their world into structures. Saved structures can then be pasted back into the world.	##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_HEADER_1("howtoplay.structureBlocks.header.1"), // How to Obtain	##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_TEXT_2("howtoplay.structureBlocks.text.2"), //  To get a Structure Block you must use the /give slash command. To use a Structure Block, you must have Operator permissions.	##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_HEADER_2("howtoplay.structureBlocks.header.2"), //  Modes	##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_TEXT_3("howtoplay.structureBlocks.text.3"), // Structure Blocks have 3 modes that can be switched between with the Mode dropdown: Save, Load, and 3D Export.	##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_TEXT_4("howtoplay.structureBlocks.text.4"), // Save mode saves an area of the world as a structure. ##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_TEXT_5("howtoplay.structureBlocks.text.5"), // Load mode loads a structure into the world. Only structures saved to the world or included in a behavior pack that is applied to the world can be loaded. ##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_TEXT_6("howtoplay.structureBlocks.text.6"), // 3D Export exports a 3D model file on supported platforms.  ##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_HEADER_3("howtoplay.structureBlocks.header.3"), // Preview Window	##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_TEXT_7("howtoplay.structureBlocks.text.7"), // On the right side of the Structure Block screen, a preview of the area you have selected or the structure to load will appear depending on the mode the block is in.	##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_TEXT_8_KEYBOARD("howtoplay.structureBlocks.text.8.keyboard"), // Press :_input_key.attack: and drag, to rotate the 3D preview. 
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_TEXT_8_GAMEPAD("howtoplay.structureBlocks.text.8.gamepad"), // Use :_gamepad_stick_right: to rotate the 3D preview. 
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_TEXT_8_TOUCH("howtoplay.structureBlocks.text.8.touch"), // Touch and drag on the preview to rotate the 3D preview. 
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_HEADER_4("howtoplay.structureBlocks.header.4"), // Redstone Activation	##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_TEXT_9("howtoplay.structureBlocks.text.9"), // Redstone can be used to activate a Structure Block. This will cause it to either save a structure out or load a structure into the world, depending on the mode of the block and its settings.	##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_HEADER_5("howtoplay.structureBlocks.header.5"), // Integrity and Seed	##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_TEXT_10("howtoplay.structureBlocks.text.10"), // You can change how much of a structure is loaded in by changing the values for Integrity and Seed.	##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_TEXT_11("howtoplay.structureBlocks.text.11"), // Integrity - the percentage of blocks to load in from the structure, accepted values are 0 to 100. Blocks will be chosen randomly if a Seed is not specified. ##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_TEXT_12("howtoplay.structureBlocks.text.12"), // Seed - the value entered here will determine which blocks to remove when using Integrity. Leave this field blank if you want the blocks to be chosen randomly. ##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_HEADER_6("howtoplay.structureBlocks.header.6"), // Structure Void Blocks	##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_TEXT_13("howtoplay.structureBlocks.text.13"), // When a structure with Structure Void blocks is loaded into the world, any block that would have been removed where the structure void block is loading into, will instead stay in the world.	##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_TEXT_14("howtoplay.structureBlocks.text.14"), // Example: loading an empty shipwreck into the bottom of the ocean will normally copy air over the water blocks. If the shipwreck was filled with structure void, then the water will stay, and you will have a shipwreck filled with water.  ##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_HEADER_7("howtoplay.structureBlocks.header.7"), // Detect and Corner Mode	##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_TEXT_15("howtoplay.structureBlocks.text.15"), // To automatically select the area you want to save, you can place Corner Mode blocks around your structure and name them with the same name as the structure you want to save.  ##
        @PowerNukkitOnly @Since("FUTURE") STRUCTUREBLOCKS_TEXT_16("howtoplay.structureBlocks.text.16"), // Pressing the Detect button in Save mode will find all of the Corner Blocks with the same name and create a selection area so that it will save everything inside of the volume those Corner Blocks make. ##
        @PowerNukkitOnly @Since("FUTURE") SERVERS("howtoplay.servers"), // Servers
        @PowerNukkitOnly @Since("FUTURE") SERVERS_TITLE("howtoplay.servers.title"), // How to Play : Servers
        @PowerNukkitOnly @Since("FUTURE") SERVERS_TEXT("howtoplay.servers.text"), // The Server Tab will show popular Minecraft servers.
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXES("howtoplay.shulkerBoxes"), // Shulker Boxes
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXES_TITLE("howtoplay.shulkerBoxes.title"), // How to Play : Shulker Boxes
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXES_TEXT_1("howtoplay.shulkerBoxes.text.1"), // Combine two Shulker Shells with a Chest to create a Shulker Box. Shulker Shells are dropped by Shulkers found in End Cities. Unlike other containers, Shulker Boxes keep their items when broken. Shulker Boxes will break and drop as an item if pushed by Pistons, and can be placed using Dispensers.
        @PowerNukkitOnly @Since("FUTURE") THEEND("howtoplay.theEnd"), // The End
        @PowerNukkitOnly @Since("FUTURE") THEEND_TITLE("howtoplay.theEnd.title"), // How to Play : The End
        @PowerNukkitOnly @Since("FUTURE") THEEND_TEXT_1("howtoplay.theEnd.text.1"), // The End is another dimension which can be accessed through an active End Portal. The End Portal can be found in a Stronghold, which is deep underground in the Overworld.
        @PowerNukkitOnly @Since("FUTURE") THEEND_TEXT_2("howtoplay.theEnd.text.2"), // Every End Portal frame block is missing something mysterious to bring out the power within.
        @PowerNukkitOnly @Since("FUTURE") THEEND_HEADER_1("howtoplay.theEnd.header.1"), // The Other Side
        @PowerNukkitOnly @Since("FUTURE") THEEND_TEXT_3("howtoplay.theEnd.text.3"), // Once the portal is active, jump into it to go to The End.
        @PowerNukkitOnly @Since("FUTURE") THEEND_TEXT_4("howtoplay.theEnd.text.4"), // The End is home to the dreaded Ender Dragon. She is a fierce and powerful enemy and seems to draw power from strange crystals. Her breath and fireball attacks leave lingering acid across the battlefield. Bring some friends to ensure your victory!
        @PowerNukkitOnly @Since("FUTURE") THEEND_TEXT_5("howtoplay.theEnd.text.5"), // If once wasn't enough, add four Ender Crystals to the exit portal corners to reawaken the Ender Dragon.
        @PowerNukkitOnly @Since("FUTURE") THESTORE("howtoplay.theStore"), // The Marketplace
        @PowerNukkitOnly @Since("FUTURE") THESTORE_TITLE("howtoplay.theStore.title"), // How to Play : The Marketplace
        @PowerNukkitOnly @Since("FUTURE") THESTORE_TEXT_1("howtoplay.theStore.text.1"), // Minecraft Marketplace is a place to find new skins, worlds, textures, and mash-up packs by various talented creators.
        @PowerNukkitOnly @Since("FUTURE") THESTORE_HEADER_1("howtoplay.theStore.header.1"), // Explore Content
        @PowerNukkitOnly @Since("FUTURE") THESTORE_TEXT_2("howtoplay.theStore.text.2"), // Try a new skin for a fresh new look!
        @PowerNukkitOnly @Since("FUTURE") THESTORE_TEXT_3("howtoplay.theStore.text.3"), // Check out worlds to unlock new maps and challenges that you will want to play again and again!
        @PowerNukkitOnly @Since("FUTURE") THESTORE_TEXT_4("howtoplay.theStore.text.4"), // Give your old game a new look with texture packs that can be layered over your current worlds and Realms!
        @PowerNukkitOnly @Since("FUTURE") THESTORE_TEXT_4_NOREALMS("howtoplay.theStore.text.4.norealms"), // Give your old game a new look with texture packs that can be layered over your current worlds!
        @PowerNukkitOnly @Since("FUTURE") THESTORE_TEXT_5("howtoplay.theStore.text.5"), // Or try them all with mash-up packs which are curated collections of skins, worlds, and textures that, when combined, will transform your worlds and Realms!
        @PowerNukkitOnly @Since("FUTURE") THESTORE_TEXT_5_NOREALMS("howtoplay.theStore.text.5.norealms"), // Or try them all with mash-up packs which are curated collections of skins, worlds, and textures that, when combined, will transform your worlds!
        @PowerNukkitOnly @Since("FUTURE") TOOLS("howtoplay.tools"), // Tools
        @PowerNukkitOnly @Since("FUTURE") TOOLS_TITLE("howtoplay.tools.title"), // How to Play : Tools
        @PowerNukkitOnly @Since("FUTURE") TOOLS_TEXT_1("howtoplay.tools.text.1"), // There are many tools in Minecraft that will allow you mine blocks faster than your fist. Tools can be crafted from Wood, Stone, Iron, Gold, or Diamond.
        @PowerNukkitOnly @Since("FUTURE") TOOLS_TEXT_2("howtoplay.tools.text.2"), // Using the right tool for the job will not only mine that block faster, but will also lose less durability. More complex tools must be created in order to mine rarer resources.
        @PowerNukkitOnly @Since("FUTURE") TOOLS_HEADER_1("howtoplay.tools.header.1"), // Tools that Break Stuff
        @PowerNukkitOnly @Since("FUTURE") TOOLS_TEXT_3("howtoplay.tools.text.3"), // The Pickaxe is good at breaking hard blocks like Cobblestone, Iron, or Furnaces.
        @PowerNukkitOnly @Since("FUTURE") TOOLS_TEXT_4("howtoplay.tools.text.4"), // The Axe is good at breaking wooden blocks like Logs, Planks, or Crafting Tables.
        @PowerNukkitOnly @Since("FUTURE") TOOLS_TEXT_5_NOTTOUCH("howtoplay.tools.text.5.notTouch"), // The Shovel is good at breaking loose blocks like Dirt, Sand, and Gravel. Shovels can also create a path by pressing :_input_key.use: on grass blocks.
        @PowerNukkitOnly @Since("FUTURE") TOOLS_TEXT_5_TOUCH("howtoplay.tools.text.5.touch"), // The Shovel is good at breaking loose blocks like Dirt, Sand, and Gravel. Shovels can also create a path by tapping on grass blocks.
        @PowerNukkitOnly @Since("FUTURE") TOOLS_TEXT_6_NOTTOUCH("howtoplay.tools.text.6.notTouch"), // The Hoe is required for tilling Dirt to plant crops. Press :_input_key.use: on Dirt or Grass blocks to turn them into soil.
        @PowerNukkitOnly @Since("FUTURE") TOOLS_TEXT_6_TOUCH("howtoplay.tools.text.6.touch"), // The Hoe is required for tilling Dirt to plant crops. Tap Dirt or Grass blocks to turn them into soil.
        @PowerNukkitOnly @Since("FUTURE") TOOLS_TEXT_7("howtoplay.tools.text.7"), // All of these tools can accept enchantments, either from the Enchanting Table or Anvil.
        @PowerNukkitOnly @Since("FUTURE") TOOLS_HEADER_2("howtoplay.tools.header.2"), // Other Tools
        @PowerNukkitOnly @Since("FUTURE") TOOLS_TEXT_8("howtoplay.tools.text.8"), // There are even more tools to aid you on your adventure:
        @PowerNukkitOnly @Since("FUTURE") TOOLS_TEXT_9("howtoplay.tools.text.9"), // A Bucket will allow you to collect things like Water, Milk, Lava, and even Fish.
        @PowerNukkitOnly @Since("FUTURE") TOOLS_TEXT_10("howtoplay.tools.text.10"), // Flint & Steel allows you to light fires... be careful in densely wooded areas!
        @PowerNukkitOnly @Since("FUTURE") TOOLS_TEXT_11("howtoplay.tools.text.11"), // A Fishing Rod lets you catch fish and other loot from water blocks. It can also be used to pull other players and mobs. Fishing Rods can also be enchanted!
        @PowerNukkitOnly @Since("FUTURE") TOOLS_TEXT_12("howtoplay.tools.text.12"), // Shears are very handy for collecting items like Wool, Leaves, and Cobwebs.
        @PowerNukkitOnly @Since("FUTURE") TRADING("howtoplay.trading"), // Villager Trading
        @PowerNukkitOnly @Since("FUTURE") TRADING_TITLE("howtoplay.trading.title"), // How to Play : Villager Trading
        @PowerNukkitOnly @Since("FUTURE") TRADING_TEXT_1("howtoplay.trading.text.1"), // Trading can be done in villages. Each villager has a profession; they can be Farmers, Butchers, Blacksmiths, Cartographers, Librarians, or Priests. Some professions will trade for items that other professions cannot. Explore and trade with many villagers to find all the trades. 
        @PowerNukkitOnly @Since("FUTURE") TRADING_HEADER_1("howtoplay.trading.header.1"), // Goods for Emeralds
        @PowerNukkitOnly @Since("FUTURE") TRADING_TEXT_2("howtoplay.trading.text.2"), // You can find out what a villager is offering as trade by interacting with them. A villager may adjust the price of a trade whenever a player trades with it. A villager may run out of stock, temporarily disabling the trade if it is used too frequently. Trades usually involve buying or selling items for emeralds. 
        @PowerNukkitOnly @Since("FUTURE") TRADING_TEXT_3("howtoplay.trading.text.3"), // As you trade with villagers, they will get better at their profession and start to offer better and more valuable trades.  
        @PowerNukkitOnly @Since("FUTURE") TRADING_TEXT_4("howtoplay.trading.text.4"), // Take care of your villagers, they need to rest, work, and eat to thrive.
        @PowerNukkitOnly @Since("FUTURE") TRANSPORTATION("howtoplay.transportation"), // Transportation
        @PowerNukkitOnly @Since("FUTURE") TRANSPORTATION_TITLE("howtoplay.transportation.title"), // How to Play : Transportation
        @PowerNukkitOnly @Since("FUTURE") TRANSPORTATION_TEXT_1("howtoplay.transportation.text.1"), // There are many ways to get around other than walking or riding a mount or flying.
        @PowerNukkitOnly @Since("FUTURE") TRANSPORTATION_HEADER_1("howtoplay.transportation.header.1"), // Minecarts
        @PowerNukkitOnly @Since("FUTURE") TRANSPORTATION_TEXT_2("howtoplay.transportation.text.2"), // Minecarts are ridable carts that roll on Rails. You can make the Rails go wherever you want by placing them next to each other, place a Minecart on it and you are ready to ride.
        @PowerNukkitOnly @Since("FUTURE") TRANSPORTATION_TEXT_3_KEYBOARD("howtoplay.transportation.text.3.keyboard"), // Press :_input_key.use: while looking at a Minecart to hop in and ride. Press :_input_key.forward: to roll forward. Press :_input_key.jump: or :_input_key.sneak: to get out. 
        @PowerNukkitOnly @Since("FUTURE") TRANSPORTATION_TEXT_3_GAMEPAD("howtoplay.transportation.text.3.gamepad"), // Press :_input_key.use: while looking at a Minecart to hop in and ride. Push :_gamepad_stick_left: forward to roll forward. Press :_input_key.jump: or :_input_key.sneak: to get out.
        @PowerNukkitOnly @Since("FUTURE") TRANSPORTATION_TEXT_3_TOUCH("howtoplay.transportation.text.3.touch"), // Tap the Ride button while near a Minecart to hop in and ride. Press :_input_key.forward: to roll forward. Tap :_input_key.jump: to get out. 
        @PowerNukkitOnly @Since("FUTURE") TRANSPORTATION_HEADER_2("howtoplay.transportation.header.2"), // Boats
        @PowerNukkitOnly @Since("FUTURE") TRANSPORTATION_TEXT_4("howtoplay.transportation.text.4"), // Boats let you travel across water, place one on a water block and you are ready to go.
        @PowerNukkitOnly @Since("FUTURE") TRANSPORTATION_TEXT_5_KEYBOARD("howtoplay.transportation.text.5.keyboard"), // Press :_input_key.use: while looking at a Boat to board it. Press :_input_key.left: or :_input_key.right: to turn left or right. Press :_input_key.forward: to move forward. Press :_input_key.jump: or :_input_key.sneak: to get out.
        @PowerNukkitOnly @Since("FUTURE") TRANSPORTATION_TEXT_5_GAMEPAD("howtoplay.transportation.text.5.gamepad"), // Press :_input_key.use: while looking at a Boat to board it. Push :_gamepad_stick_left: left or right to turn. Push :_gamepad_stick_left: forward to move forward. Press :_input_key.jump: or :_input_key.sneak: to get out.
        @PowerNukkitOnly @Since("FUTURE") TRANSPORTATION_TEXT_5_TOUCH("howtoplay.transportation.text.5.touch"), // Tap the board button while near a Boat to board it. Press :_input_key.left: or :_input_key.right: to turn left or right. Press them both to move forward. Tap the leave boat button to get out.
        @PowerNukkitOnly @Since("FUTURE") WEAPONS("howtoplay.weapons"), // Weapons
        @PowerNukkitOnly @Since("FUTURE") WEAPONS_TITLE("howtoplay.weapons.title"), // How to Play : Weapons
        @PowerNukkitOnly @Since("FUTURE") WEAPONS_HEADER_1("howtoplay.weapons.header.1"), // Sword
        @PowerNukkitOnly @Since("FUTURE") WEAPONS_TEXT_1("howtoplay.weapons.text.1"), // The Sword is the primary melee weapon in Minecraft. It can be made from Wood, Stone, Iron, Gold, or Diamond. Jump attacks do critical damage!
        @PowerNukkitOnly @Since("FUTURE") WEAPONS_TEXT_2_NOTTOUCH("howtoplay.weapons.text.2.notTouch"), // Press :_input_key.attack: with a Sword in your hand to attack. 
        @PowerNukkitOnly @Since("FUTURE") WEAPONS_TEXT_2_TOUCH("howtoplay.weapons.text.2.touch"), // Tap mobs to attack them.
        @PowerNukkitOnly @Since("FUTURE") WEAPONS_HEADER_2("howtoplay.weapons.header.2"), // Bow
        @PowerNukkitOnly @Since("FUTURE") WEAPONS_TEXT_3_NOTTOUCH("howtoplay.weapons.text.3.notTouch"), // The Bow is the primary ranged weapon in Minecraft. Press and hold :_input_key.use: to draw the bow back. Release :_input_key.use: to fire an arrow. The bow requires arrows to fire. 
        @PowerNukkitOnly @Since("FUTURE") WEAPONS_TEXT_3_TOUCH("howtoplay.weapons.text.3.touch"), // The Bow is the primary ranged weapon in Minecraft. Press and hold the Screen to draw the bow back. Release the press to fire an arrow. The bow requires arrows to fire.
        @PowerNukkitOnly @Since("FUTURE") WEAPONS_TEXT_4("howtoplay.weapons.text.4"), // Bows do more damage the further they are pulled back, make sure to pull it all the way back.
        @PowerNukkitOnly @Since("FUTURE") WEAPONS_HEADER_3("howtoplay.weapons.header.3"), // Crossbow
        @PowerNukkitOnly @Since("FUTURE") WEAPONS_TEXT_5_NOTTOUCH("howtoplay.weapons.text.5.notTouch"), // The Crossbow is an alternate ranged weapon. Press and hold the :_input_key.use: to load the crossbow. Once the Crossbow is loaded, it will stay loaded until it is fired. Press :_input_key.use: to fire an arrow. The Crossbow requires arrows to load.
        @PowerNukkitOnly @Since("FUTURE") WEAPONS_TEXT_5_TOUCH("howtoplay.weapons.text.5.touch"), // The Crossbow is an alternate ranged weapon. Press and hold the screen to load the crossbow. Once the Crossbow is loaded, it will stay loaded until it is fired, even if you put it in your inventory. Press the hold the screen to fire an arrow. The Crossbow requires arrows to load.
        @PowerNukkitOnly @Since("FUTURE") WEAPONS_HEADER_4("howtoplay.weapons.header.4"), // Trident
        @PowerNukkitOnly @Since("FUTURE") WEAPONS_TEXT_6_NOTTOUCH("howtoplay.weapons.text.6.notTouch"), // The Trident is a dual-purpose melee and ranged weapon. Press :_input_key.attack: to attack. Press and hold :_input_key.use: to draw the trident back. Release :_input_key.use: to throw the trident. The Trident is the best weapon underwater.
        @PowerNukkitOnly @Since("FUTURE") WEAPONS_TEXT_6_TOUCH("howtoplay.weapons.text.6.touch"), // The Trident is a dual-purpose melee and ranged weapon. Tap mobs to attack them. Press and hold the Screen to draw the trident back. Release the press to throw the trident. The Trident is the best weapon underwater.
        @PowerNukkitOnly @Since("FUTURE") WEAPONS_HEADER_5("howtoplay.weapons.header.5"), // Enchanted Weapons
        @PowerNukkitOnly @Since("FUTURE") WEAPONS_TEXT_7("howtoplay.weapons.text.7"), // The Sword, Bow, Crossbow, and Trident have specific enchantments that you can get from the Enchanting Table or Anvil that will improve damage, durability and even light mobs on fire!
        @PowerNukkitOnly @Since("FUTURE") WHATSNEW("howtoplay.whatsNew"), // What's New
        ;
        private final String code; Howtoplay(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum ImmersiveReader implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") BOOK_PAGE_HEADER("immersive_reader.book_page_header"), // Page %1 of %2
        @PowerNukkitOnly @Since("FUTURE") PORTFOLIO_PAGE_HEADER("immersive_reader.portfolio_page_header"), //  Page %1
        @PowerNukkitOnly @Since("FUTURE") ERROR_WEBVIEW_FAILURE("immersive_reader.error.webview_failure"), // There was a problem connecting to Immersive Reader.
        @PowerNukkitOnly @Since("FUTURE") ERROR_IDENTITY_FAILURE("immersive_reader.error.identity_failure"), // There was a problem connecting to Immersive Reader. Please restart Minecraft: Education Edition and try again.
        ;
        private final String code; ImmersiveReader(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Level implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") LAUNCH_FAILED("level.launch.failed"), // Launch failed
        @PowerNukkitOnly @Since("FUTURE") EXPORT_STARTED("level.export.started"), // Level export started...
        @PowerNukkitOnly @Since("FUTURE") IMPORT_STARTED("level.import.started"), // Level import started...
        @PowerNukkitOnly @Since("FUTURE") EXPORT_SUCCESS("level.export.success"), // Level export finished successfully
        @PowerNukkitOnly @Since("FUTURE") IMPORT_SUCCESS("level.import.success"), // Level import finished successfully
        @PowerNukkitOnly @Since("FUTURE") EXPORT_FAILED("level.export.failed"), // Level export failed
        @PowerNukkitOnly @Since("FUTURE") IMPORT_FAILED("level.import.failed"), // Level import failed
        @PowerNukkitOnly @Since("FUTURE") IMPORT_FAILED_INCOMPATIBLEEDITION("level.import.failed.incompatibleEdition"), // Level import failed: Unsupported file format
        ;
        private final String code; Level(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Invite implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") CLEAR("invite.clear"), // Clear Selection
        @PowerNukkitOnly @Since("FUTURE") SEND("invite.send"), // Send %d Invites
        @PowerNukkitOnly @Since("FUTURE") SENDONE("invite.sendOne"), // Send 1 Invite
        @PowerNukkitOnly @Since("FUTURE") SENDUNNUMBERED("invite.sendUnnumbered"), // Send Invites
        @PowerNukkitOnly @Since("FUTURE") TITLE("invite.title"), // Invite Friends to your Game
        @PowerNukkitOnly @Since("FUTURE") TITLEREALMS("invite.titleRealms"), // Invite Members to your Realm Server
        @PowerNukkitOnly @Since("FUTURE") ERROR_MESSAGE("invite.error.message"), // Some of your invites may have failed to send.
        @PowerNukkitOnly @Since("FUTURE") NOFRIENDS("invite.noFriends"), // You haven't added anyone to your friend's list!
        @PowerNukkitOnly @Since("FUTURE") NOREALMFRIENDS("invite.noRealmFriends"), // You haven't added anyone to your Realm!
        @PowerNukkitOnly @Since("FUTURE") ONLINEFRIENDS("invite.OnlineFriends"), // Online Friends
        @PowerNukkitOnly @Since("FUTURE") OFFLINEFRIENDS("invite.OfflineFriends"), // Offline Friends
        @PowerNukkitOnly @Since("FUTURE") SUGGESTEDFRIENDS("invite.SuggestedFriends"), // Suggested Friends
        @PowerNukkitOnly @Since("FUTURE") ERROR1("invite.error1"), // Something went wrong.  We couldn't load your friends list.
        @PowerNukkitOnly @Since("FUTURE") ERROR2("invite.error2"), // Something went wrong.  We couldn't load some of your friends details.
        @PowerNukkitOnly @Since("FUTURE") REALM_ADD_MEMBER("invite.realm.add_member"), // Add Realm Members
        @PowerNukkitOnly @Since("FUTURE") NOTIFICATION_TITLE("invite.notification.title"), // Game Invite
        @PowerNukkitOnly @Since("FUTURE") NOTIFICATION_DESCRIPTION("invite.notification.description"), // %s has invited you to play Minecraft
        @PowerNukkitOnly @Since("FUTURE") CONFIRMATION_DESCRIPTION("invite.confirmation.description"), // %s has invited you to play Minecraft
        @PowerNukkitOnly @Since("FUTURE") PAGECOUNTER("invite.pageCounter"), // %d/%d
        ;
        private final String code; Invite(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Inventory implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") BINSLOT("inventory.binSlot"), // Destroy Item
        ;
        private final String code; Inventory(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Item implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") AIR_NAME("item.air.name"), // Air
        @PowerNukkitOnly @Since("FUTURE") APPLE_NAME("item.apple.name"), // Apple
        @PowerNukkitOnly @Since("FUTURE") AXOLOTLADULTBODYSINGLE_NAME("item.axolotlAdultBodySingle.name"), // Adult %1$s Axolotl
        @PowerNukkitOnly @Since("FUTURE") AXOLOTLBABYBODYSINGLE_NAME("item.axolotlBabyBodySingle.name"), // Baby %1$s Axolotl
        @PowerNukkitOnly @Since("FUTURE") AXOLOTLCOLORLUCY_NAME("item.axolotlColorLucy.name"), // Leucistic
        @PowerNukkitOnly @Since("FUTURE") AXOLOTLCOLORCYAN_NAME("item.axolotlColorCyan.name"), // Cyan
        @PowerNukkitOnly @Since("FUTURE") AXOLOTLCOLORGOLD_NAME("item.axolotlColorGold.name"), // Gold
        @PowerNukkitOnly @Since("FUTURE") AXOLOTLCOLORWILD_NAME("item.axolotlColorWild.name"), // Brown
        @PowerNukkitOnly @Since("FUTURE") AXOLOTLCOLORBLUE_NAME("item.axolotlColorBlue.name"), // Blue
        @PowerNukkitOnly @Since("FUTURE") GOLDEN_APPLE_NAME("item.golden_apple.name"), // Golden Apple
        @PowerNukkitOnly @Since("FUTURE") APPLEENCHANTED_NAME("item.appleEnchanted.name"), // Enchanted Apple
        @PowerNukkitOnly @Since("FUTURE") ARMOR_STAND_NAME("item.armor_stand.name"), // Armor Stand
        @PowerNukkitOnly @Since("FUTURE") ARROW_NAME("item.arrow.name"), // Arrow
        @PowerNukkitOnly @Since("FUTURE") TIPPED_ARROW_NAME("item.tipped_arrow.name"), // Tipped Arrow
        @PowerNukkitOnly @Since("FUTURE") BANNER_BLACK_NAME("item.banner.black.name"), // Black Banner
        @PowerNukkitOnly @Since("FUTURE") BANNER_BLUE_NAME("item.banner.blue.name"), // Blue Banner
        @PowerNukkitOnly @Since("FUTURE") BANNER_BORDER_BLACK("item.banner.border.black"), // Black Bordure
        @PowerNukkitOnly @Since("FUTURE") BANNER_BORDER_BLUE("item.banner.border.blue"), // Blue Bordure
        @PowerNukkitOnly @Since("FUTURE") BANNER_BORDER_BROWN("item.banner.border.brown"), // Brown Bordure
        @PowerNukkitOnly @Since("FUTURE") BANNER_BORDER_CYAN("item.banner.border.cyan"), // Cyan Bordure
        @PowerNukkitOnly @Since("FUTURE") BANNER_BORDER_GRAY("item.banner.border.gray"), // Gray Bordure
        @PowerNukkitOnly @Since("FUTURE") BANNER_BORDER_GREEN("item.banner.border.green"), // Green Bordure
        @PowerNukkitOnly @Since("FUTURE") BANNER_BORDER_LIGHTBLUE("item.banner.border.lightBlue"), // Light Blue Bordure
        @PowerNukkitOnly @Since("FUTURE") BANNER_BORDER_LIME("item.banner.border.lime"), // Lime Bordure
        @PowerNukkitOnly @Since("FUTURE") BANNER_BORDER_MAGENTA("item.banner.border.magenta"), // Magenta Bordure
        @PowerNukkitOnly @Since("FUTURE") BANNER_BORDER_ORANGE("item.banner.border.orange"), // Orange Bordure
        @PowerNukkitOnly @Since("FUTURE") BANNER_BORDER_PINK("item.banner.border.pink"), // Pink Bordure
        @PowerNukkitOnly @Since("FUTURE") BANNER_BORDER_PURPLE("item.banner.border.purple"), // Purple Bordure
        @PowerNukkitOnly @Since("FUTURE") BANNER_BORDER_RED("item.banner.border.red"), // Red Bordure
        @PowerNukkitOnly @Since("FUTURE") BANNER_BORDER_SILVER("item.banner.border.silver"), // Light Gray Bordure
        @PowerNukkitOnly @Since("FUTURE") BANNER_BORDER_WHITE("item.banner.border.white"), // White Bordure
        @PowerNukkitOnly @Since("FUTURE") BANNER_BORDER_YELLOW("item.banner.border.yellow"), // Yellow Bordure
        @PowerNukkitOnly @Since("FUTURE") BANNER_BRICKS_BLACK("item.banner.bricks.black"), // Black Field Masoned
        @PowerNukkitOnly @Since("FUTURE") BANNER_BRICKS_BLUE("item.banner.bricks.blue"), // Blue Field Masoned
        @PowerNukkitOnly @Since("FUTURE") BANNER_BRICKS_BROWN("item.banner.bricks.brown"), // Brown Field Masoned
        @PowerNukkitOnly @Since("FUTURE") BANNER_BRICKS_CYAN("item.banner.bricks.cyan"), // Cyan Field Masoned
        @PowerNukkitOnly @Since("FUTURE") BANNER_BRICKS_GRAY("item.banner.bricks.gray"), // Gray Field Masoned
        @PowerNukkitOnly @Since("FUTURE") BANNER_BRICKS_GREEN("item.banner.bricks.green"), // Green Field Masoned
        @PowerNukkitOnly @Since("FUTURE") BANNER_BRICKS_LIGHTBLUE("item.banner.bricks.lightBlue"), // Light Blue Field Masoned
        @PowerNukkitOnly @Since("FUTURE") BANNER_BRICKS_LIME("item.banner.bricks.lime"), // Lime Field Masoned
        @PowerNukkitOnly @Since("FUTURE") BANNER_BRICKS_MAGENTA("item.banner.bricks.magenta"), // Magenta Field Masoned
        @PowerNukkitOnly @Since("FUTURE") BANNER_BRICKS_ORANGE("item.banner.bricks.orange"), // Orange Field Masoned
        @PowerNukkitOnly @Since("FUTURE") BANNER_BRICKS_PINK("item.banner.bricks.pink"), // Pink Field Masoned
        @PowerNukkitOnly @Since("FUTURE") BANNER_BRICKS_PURPLE("item.banner.bricks.purple"), // Purple Field Masoned
        @PowerNukkitOnly @Since("FUTURE") BANNER_BRICKS_RED("item.banner.bricks.red"), // Red Field Masoned
        @PowerNukkitOnly @Since("FUTURE") BANNER_BRICKS_SILVER("item.banner.bricks.silver"), // Light Gray Field Masoned
        @PowerNukkitOnly @Since("FUTURE") BANNER_BRICKS_WHITE("item.banner.bricks.white"), // White Field Masoned
        @PowerNukkitOnly @Since("FUTURE") BANNER_BRICKS_YELLOW("item.banner.bricks.yellow"), // Yellow Field Masoned
        @PowerNukkitOnly @Since("FUTURE") BANNER_BROWN_NAME("item.banner.brown.name"), // Brown Banner
        @PowerNukkitOnly @Since("FUTURE") BANNER_CIRCLE_BLACK("item.banner.circle.black"), // Black Roundel
        @PowerNukkitOnly @Since("FUTURE") BANNER_CIRCLE_BLUE("item.banner.circle.blue"), // Blue Roundel
        @PowerNukkitOnly @Since("FUTURE") BANNER_CIRCLE_BROWN("item.banner.circle.brown"), // Brown Roundel
        @PowerNukkitOnly @Since("FUTURE") BANNER_CIRCLE_CYAN("item.banner.circle.cyan"), // Cyan Roundel
        @PowerNukkitOnly @Since("FUTURE") BANNER_CIRCLE_GRAY("item.banner.circle.gray"), // Gray Roundel
        @PowerNukkitOnly @Since("FUTURE") BANNER_CIRCLE_GREEN("item.banner.circle.green"), // Green Roundel
        @PowerNukkitOnly @Since("FUTURE") BANNER_CIRCLE_LIGHTBLUE("item.banner.circle.lightBlue"), // Light Blue Roundel
        @PowerNukkitOnly @Since("FUTURE") BANNER_CIRCLE_LIME("item.banner.circle.lime"), // Lime Roundel
        @PowerNukkitOnly @Since("FUTURE") BANNER_CIRCLE_MAGENTA("item.banner.circle.magenta"), // Magenta Roundel
        @PowerNukkitOnly @Since("FUTURE") BANNER_CIRCLE_ORANGE("item.banner.circle.orange"), // Orange Roundel
        @PowerNukkitOnly @Since("FUTURE") BANNER_CIRCLE_PINK("item.banner.circle.pink"), // Pink Roundel
        @PowerNukkitOnly @Since("FUTURE") BANNER_CIRCLE_PURPLE("item.banner.circle.purple"), // Purple Roundel
        @PowerNukkitOnly @Since("FUTURE") BANNER_CIRCLE_RED("item.banner.circle.red"), // Red Roundel
        @PowerNukkitOnly @Since("FUTURE") BANNER_CIRCLE_SILVER("item.banner.circle.silver"), // Light Gray Roundel
        @PowerNukkitOnly @Since("FUTURE") BANNER_CIRCLE_WHITE("item.banner.circle.white"), // White Roundel
        @PowerNukkitOnly @Since("FUTURE") BANNER_CIRCLE_YELLOW("item.banner.circle.yellow"), // Yellow Roundel
        @PowerNukkitOnly @Since("FUTURE") BANNER_CREEPER_BLACK("item.banner.creeper.black"), // Black Creeper Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_CREEPER_BLUE("item.banner.creeper.blue"), // Blue Creeper Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_CREEPER_BROWN("item.banner.creeper.brown"), // Brown Creeper Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_CREEPER_CYAN("item.banner.creeper.cyan"), // Cyan Creeper Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_CREEPER_GRAY("item.banner.creeper.gray"), // Gray Creeper Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_CREEPER_GREEN("item.banner.creeper.green"), // Green Creeper Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_CREEPER_LIGHTBLUE("item.banner.creeper.lightBlue"), // Light Blue Creeper Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_CREEPER_LIME("item.banner.creeper.lime"), // Lime Creeper Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_CREEPER_MAGENTA("item.banner.creeper.magenta"), // Magenta Creeper Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_CREEPER_ORANGE("item.banner.creeper.orange"), // Orange Creeper Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_CREEPER_PINK("item.banner.creeper.pink"), // Pink Creeper Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_CREEPER_PURPLE("item.banner.creeper.purple"), // Purple Creeper Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_CREEPER_RED("item.banner.creeper.red"), // Red Creeper Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_CREEPER_SILVER("item.banner.creeper.silver"), // Light Gray Creeper Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_CREEPER_WHITE("item.banner.creeper.white"), // White Creeper Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_CREEPER_YELLOW("item.banner.creeper.yellow"), // Yellow Creeper Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_CROSS_BLACK("item.banner.cross.black"), // Black Saltire
        @PowerNukkitOnly @Since("FUTURE") BANNER_CROSS_BLUE("item.banner.cross.blue"), // Blue Saltire
        @PowerNukkitOnly @Since("FUTURE") BANNER_CROSS_BROWN("item.banner.cross.brown"), // Brown Saltire
        @PowerNukkitOnly @Since("FUTURE") BANNER_CROSS_CYAN("item.banner.cross.cyan"), // Cyan Saltire
        @PowerNukkitOnly @Since("FUTURE") BANNER_CROSS_GRAY("item.banner.cross.gray"), // Gray Saltire
        @PowerNukkitOnly @Since("FUTURE") BANNER_CROSS_GREEN("item.banner.cross.green"), // Green Saltire
        @PowerNukkitOnly @Since("FUTURE") BANNER_CROSS_LIGHTBLUE("item.banner.cross.lightBlue"), // Light Blue Saltire
        @PowerNukkitOnly @Since("FUTURE") BANNER_CROSS_LIME("item.banner.cross.lime"), // Lime Saltire
        @PowerNukkitOnly @Since("FUTURE") BANNER_CROSS_MAGENTA("item.banner.cross.magenta"), // Magenta Saltire
        @PowerNukkitOnly @Since("FUTURE") BANNER_CROSS_ORANGE("item.banner.cross.orange"), // Orange Saltire
        @PowerNukkitOnly @Since("FUTURE") BANNER_CROSS_PINK("item.banner.cross.pink"), // Pink Saltire
        @PowerNukkitOnly @Since("FUTURE") BANNER_CROSS_PURPLE("item.banner.cross.purple"), // Purple Saltire
        @PowerNukkitOnly @Since("FUTURE") BANNER_CROSS_RED("item.banner.cross.red"), // Red Saltire
        @PowerNukkitOnly @Since("FUTURE") BANNER_CROSS_SILVER("item.banner.cross.silver"), // Light Gray Saltire
        @PowerNukkitOnly @Since("FUTURE") BANNER_CROSS_WHITE("item.banner.cross.white"), // White Saltire
        @PowerNukkitOnly @Since("FUTURE") BANNER_CROSS_YELLOW("item.banner.cross.yellow"), // Yellow Saltire
        @PowerNukkitOnly @Since("FUTURE") BANNER_CURLY_BORDER_BLACK("item.banner.curly_border.black"), // Black Bordure Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_CURLY_BORDER_BLUE("item.banner.curly_border.blue"), // Blue Bordure Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_CURLY_BORDER_BROWN("item.banner.curly_border.brown"), // Brown Bordure Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_CURLY_BORDER_CYAN("item.banner.curly_border.cyan"), // Cyan Bordure Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_CURLY_BORDER_GRAY("item.banner.curly_border.gray"), // Gray Bordure Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_CURLY_BORDER_GREEN("item.banner.curly_border.green"), // Green Bordure Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_CURLY_BORDER_LIGHTBLUE("item.banner.curly_border.lightBlue"), // Light Blue Bordure Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_CURLY_BORDER_LIME("item.banner.curly_border.lime"), // Lime Bordure Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_CURLY_BORDER_MAGENTA("item.banner.curly_border.magenta"), // Magenta Bordure Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_CURLY_BORDER_ORANGE("item.banner.curly_border.orange"), // Orange Bordure Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_CURLY_BORDER_PINK("item.banner.curly_border.pink"), // Pink Bordure Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_CURLY_BORDER_PURPLE("item.banner.curly_border.purple"), // Purple Bordure Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_CURLY_BORDER_RED("item.banner.curly_border.red"), // Red Bordure Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_CURLY_BORDER_SILVER("item.banner.curly_border.silver"), // Light Gray Bordure Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_CURLY_BORDER_WHITE("item.banner.curly_border.white"), // White Bordure Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_CURLY_BORDER_YELLOW("item.banner.curly_border.yellow"), // Yellow Bordure Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_CYAN_NAME("item.banner.cyan.name"), // Cyan Banner
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_LEFT_BLACK("item.banner.diagonal_left.black"), // Black Per Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_LEFT_BLUE("item.banner.diagonal_left.blue"), // Blue Per Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_LEFT_BROWN("item.banner.diagonal_left.brown"), // Brown Per Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_LEFT_CYAN("item.banner.diagonal_left.cyan"), // Cyan Per Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_LEFT_GRAY("item.banner.diagonal_left.gray"), // Gray Per Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_LEFT_GREEN("item.banner.diagonal_left.green"), // Green Per Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_LEFT_LIGHTBLUE("item.banner.diagonal_left.lightBlue"), // Light Blue Per Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_LEFT_LIME("item.banner.diagonal_left.lime"), // Lime Per Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_LEFT_MAGENTA("item.banner.diagonal_left.magenta"), // Magenta Per Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_LEFT_ORANGE("item.banner.diagonal_left.orange"), // Orange Per Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_LEFT_PINK("item.banner.diagonal_left.pink"), // Pink Per Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_LEFT_PURPLE("item.banner.diagonal_left.purple"), // Purple Per Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_LEFT_RED("item.banner.diagonal_left.red"), // Red Per Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_LEFT_SILVER("item.banner.diagonal_left.silver"), // Light Gray Per Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_LEFT_WHITE("item.banner.diagonal_left.white"), // White Per Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_LEFT_YELLOW("item.banner.diagonal_left.yellow"), // Yellow Per Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_RIGHT_BLACK("item.banner.diagonal_right.black"), // Black Per Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_RIGHT_BLUE("item.banner.diagonal_right.blue"), // Blue Per Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_RIGHT_BROWN("item.banner.diagonal_right.brown"), // Brown Per Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_RIGHT_CYAN("item.banner.diagonal_right.cyan"), // Cyan Per Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_RIGHT_GRAY("item.banner.diagonal_right.gray"), // Gray Per Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_RIGHT_GREEN("item.banner.diagonal_right.green"), // Green Per Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_RIGHT_LIGHTBLUE("item.banner.diagonal_right.lightBlue"), // Light Blue Per Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_RIGHT_LIME("item.banner.diagonal_right.lime"), // Lime Per Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_RIGHT_MAGENTA("item.banner.diagonal_right.magenta"), // Magenta Per Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_RIGHT_ORANGE("item.banner.diagonal_right.orange"), // Orange Per Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_RIGHT_PINK("item.banner.diagonal_right.pink"), // Pink Per Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_RIGHT_PURPLE("item.banner.diagonal_right.purple"), // Purple Per Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_RIGHT_RED("item.banner.diagonal_right.red"), // Red Per Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_RIGHT_SILVER("item.banner.diagonal_right.silver"), // Light Gray Per Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_RIGHT_WHITE("item.banner.diagonal_right.white"), // White Per Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_RIGHT_YELLOW("item.banner.diagonal_right.yellow"), // Yellow Per Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_LEFT_BLACK("item.banner.diagonal_up_left.black"), // Black Per Bend Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_LEFT_BLUE("item.banner.diagonal_up_left.blue"), // Blue Per Bend Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_LEFT_BROWN("item.banner.diagonal_up_left.brown"), // Brown Per Bend Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_LEFT_CYAN("item.banner.diagonal_up_left.cyan"), // Cyan Per Bend Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_LEFT_GRAY("item.banner.diagonal_up_left.gray"), // Gray Per Bend Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_LEFT_GREEN("item.banner.diagonal_up_left.green"), // Green Per Bend Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_LEFT_LIGHTBLUE("item.banner.diagonal_up_left.lightBlue"), // Light Blue Per Bend Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_LEFT_LIME("item.banner.diagonal_up_left.lime"), // Lime Per Bend Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_LEFT_MAGENTA("item.banner.diagonal_up_left.magenta"), // Magenta Per Bend Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_LEFT_ORANGE("item.banner.diagonal_up_left.orange"), // Orange Per Bend Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_LEFT_PINK("item.banner.diagonal_up_left.pink"), // Pink Per Bend Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_LEFT_PURPLE("item.banner.diagonal_up_left.purple"), // Purple Per Bend Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_LEFT_RED("item.banner.diagonal_up_left.red"), // Red Per Bend Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_LEFT_SILVER("item.banner.diagonal_up_left.silver"), // Light Gray Per Bend Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_LEFT_WHITE("item.banner.diagonal_up_left.white"), // White Per Bend Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_LEFT_YELLOW("item.banner.diagonal_up_left.yellow"), // Yellow Per Bend Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_RIGHT_BLACK("item.banner.diagonal_up_right.black"), // Black Per Bend Sinister Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_RIGHT_BLUE("item.banner.diagonal_up_right.blue"), // Blue Per Bend Sinister Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_RIGHT_BROWN("item.banner.diagonal_up_right.brown"), // Brown Per Bend Sinister Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_RIGHT_CYAN("item.banner.diagonal_up_right.cyan"), // Cyan Per Bend Sinister Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_RIGHT_GRAY("item.banner.diagonal_up_right.gray"), // Gray Per Bend Sinister Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_RIGHT_GREEN("item.banner.diagonal_up_right.green"), // Green Per Bend Sinister Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_RIGHT_LIGHTBLUE("item.banner.diagonal_up_right.lightBlue"), // Light Blue Per Bend Sinister Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_RIGHT_LIME("item.banner.diagonal_up_right.lime"), // Lime Per Bend Sinister Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_RIGHT_MAGENTA("item.banner.diagonal_up_right.magenta"), // Magenta Per Bend Sinister Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_RIGHT_ORANGE("item.banner.diagonal_up_right.orange"), // Orange Per Bend Sinister Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_RIGHT_PINK("item.banner.diagonal_up_right.pink"), // Pink Per Bend Sinister Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_RIGHT_PURPLE("item.banner.diagonal_up_right.purple"), // Purple Per Bend Sinister Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_RIGHT_RED("item.banner.diagonal_up_right.red"), // Red Per Bend Sinister Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_RIGHT_SILVER("item.banner.diagonal_up_right.silver"), // Light Gray Per Bend Sinister Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_RIGHT_WHITE("item.banner.diagonal_up_right.white"), // White Per Bend Sinister Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_DIAGONAL_UP_RIGHT_YELLOW("item.banner.diagonal_up_right.yellow"), // Yellow Per Bend Sinister Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_FLOWER_BLACK("item.banner.flower.black"), // Black Flower Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_FLOWER_BLUE("item.banner.flower.blue"), // Blue Flower Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_FLOWER_BROWN("item.banner.flower.brown"), // Brown Flower Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_FLOWER_CYAN("item.banner.flower.cyan"), // Cyan Flower Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_FLOWER_GRAY("item.banner.flower.gray"), // Gray Flower Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_FLOWER_GREEN("item.banner.flower.green"), // Green Flower Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_FLOWER_LIGHTBLUE("item.banner.flower.lightBlue"), // Light Blue Flower Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_FLOWER_LIME("item.banner.flower.lime"), // Lime Flower Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_FLOWER_MAGENTA("item.banner.flower.magenta"), // Magenta Flower Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_FLOWER_ORANGE("item.banner.flower.orange"), // Orange Flower Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_FLOWER_PINK("item.banner.flower.pink"), // Pink Flower Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_FLOWER_PURPLE("item.banner.flower.purple"), // Purple Flower Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_FLOWER_RED("item.banner.flower.red"), // Red Flower Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_FLOWER_SILVER("item.banner.flower.silver"), // Light Gray Flower Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_FLOWER_WHITE("item.banner.flower.white"), // White Flower Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_FLOWER_YELLOW("item.banner.flower.yellow"), // Yellow Flower Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_BLACK("item.banner.gradient.black"), // Black Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_BLUE("item.banner.gradient.blue"), // Blue Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_BROWN("item.banner.gradient.brown"), // Brown Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_CYAN("item.banner.gradient.cyan"), // Cyan Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_GRAY("item.banner.gradient.gray"), // Gray Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_GREEN("item.banner.gradient.green"), // Green Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_LIGHTBLUE("item.banner.gradient.lightBlue"), // Light Blue Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_LIME("item.banner.gradient.lime"), // Lime Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_MAGENTA("item.banner.gradient.magenta"), // Magenta Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_ORANGE("item.banner.gradient.orange"), // Orange Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_PINK("item.banner.gradient.pink"), // Pink Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_PURPLE("item.banner.gradient.purple"), // Purple Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_RED("item.banner.gradient.red"), // Red Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_SILVER("item.banner.gradient.silver"), // Light Gray Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_WHITE("item.banner.gradient.white"), // White Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_YELLOW("item.banner.gradient.yellow"), // Yellow Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_UP_BLACK("item.banner.gradient_up.black"), // Black Base Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_UP_BLUE("item.banner.gradient_up.blue"), // Blue Base Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_UP_BROWN("item.banner.gradient_up.brown"), // Brown Base Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_UP_CYAN("item.banner.gradient_up.cyan"), // Cyan Base Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_UP_GRAY("item.banner.gradient_up.gray"), // Gray Base Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_UP_GREEN("item.banner.gradient_up.green"), // Green Base Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_UP_LIGHTBLUE("item.banner.gradient_up.lightBlue"), // Light Blue Base Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_UP_LIME("item.banner.gradient_up.lime"), // Lime Base Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_UP_MAGENTA("item.banner.gradient_up.magenta"), // Magenta Base Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_UP_ORANGE("item.banner.gradient_up.orange"), // Orange Base Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_UP_PINK("item.banner.gradient_up.pink"), // Pink Base Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_UP_PURPLE("item.banner.gradient_up.purple"), // Purple Base Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_UP_RED("item.banner.gradient_up.red"), // Red Base Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_UP_SILVER("item.banner.gradient_up.silver"), // Light Gray Base Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_UP_WHITE("item.banner.gradient_up.white"), // White Base Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRADIENT_UP_YELLOW("item.banner.gradient_up.yellow"), // Yellow Base Gradient
        @PowerNukkitOnly @Since("FUTURE") BANNER_GRAY_NAME("item.banner.gray.name"), // Gray Banner
        @PowerNukkitOnly @Since("FUTURE") BANNER_GREEN_NAME("item.banner.green.name"), // Green Banner
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_BLACK("item.banner.half_horizontal.black"), // Black Per Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_BLUE("item.banner.half_horizontal.blue"), // Blue Per Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_BROWN("item.banner.half_horizontal.brown"), // Brown Per Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_CYAN("item.banner.half_horizontal.cyan"), // Cyan Per Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_GRAY("item.banner.half_horizontal.gray"), // Gray Per Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_GREEN("item.banner.half_horizontal.green"), // Green Per Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_LIGHTBLUE("item.banner.half_horizontal.lightBlue"), // Light Blue Per Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_LIME("item.banner.half_horizontal.lime"), // Lime Per Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_MAGENTA("item.banner.half_horizontal.magenta"), // Magenta Per Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_ORANGE("item.banner.half_horizontal.orange"), // Orange Per Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_PINK("item.banner.half_horizontal.pink"), // Pink Per Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_PURPLE("item.banner.half_horizontal.purple"), // Purple Per Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_RED("item.banner.half_horizontal.red"), // Red Per Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_SILVER("item.banner.half_horizontal.silver"), // Light Gray Per Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_WHITE("item.banner.half_horizontal.white"), // White Per Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_YELLOW("item.banner.half_horizontal.yellow"), // Yellow Per Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_BOTTOM_BLACK("item.banner.half_horizontal_bottom.black"), // Black Per Fess Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_BOTTOM_BLUE("item.banner.half_horizontal_bottom.blue"), // Blue Per Fess Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_BOTTOM_BROWN("item.banner.half_horizontal_bottom.brown"), // Brown Per Fess Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_BOTTOM_CYAN("item.banner.half_horizontal_bottom.cyan"), // Cyan Per Fess Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_BOTTOM_GRAY("item.banner.half_horizontal_bottom.gray"), // Gray Per Fess Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_BOTTOM_GREEN("item.banner.half_horizontal_bottom.green"), // Green Per Fess Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_BOTTOM_LIGHTBLUE("item.banner.half_horizontal_bottom.lightBlue"), // Light Blue Per Fess Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_BOTTOM_LIME("item.banner.half_horizontal_bottom.lime"), // Lime Per Fess Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_BOTTOM_MAGENTA("item.banner.half_horizontal_bottom.magenta"), // Magenta Per Fess Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_BOTTOM_ORANGE("item.banner.half_horizontal_bottom.orange"), // Orange Per Fess Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_BOTTOM_PINK("item.banner.half_horizontal_bottom.pink"), // Pink Per Fess Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_BOTTOM_PURPLE("item.banner.half_horizontal_bottom.purple"), // Purple Per Fess Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_BOTTOM_RED("item.banner.half_horizontal_bottom.red"), // Red Per Fess Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_BOTTOM_SILVER("item.banner.half_horizontal_bottom.silver"), // Light Gray Per Fess Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_BOTTOM_WHITE("item.banner.half_horizontal_bottom.white"), // White Per Fess Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_HORIZONTAL_BOTTOM_YELLOW("item.banner.half_horizontal_bottom.yellow"), // Yellow Per Fess Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_BLACK("item.banner.half_vertical.black"), // Black Per Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_BLUE("item.banner.half_vertical.blue"), // Blue Per Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_BROWN("item.banner.half_vertical.brown"), // Brown Per Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_CYAN("item.banner.half_vertical.cyan"), // Cyan Per Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_GRAY("item.banner.half_vertical.gray"), // Gray Per Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_GREEN("item.banner.half_vertical.green"), // Green Per Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_LIGHTBLUE("item.banner.half_vertical.lightBlue"), // Light Blue Per Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_LIME("item.banner.half_vertical.lime"), // Lime Per Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_MAGENTA("item.banner.half_vertical.magenta"), // Magenta Per Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_ORANGE("item.banner.half_vertical.orange"), // Orange Per Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_PINK("item.banner.half_vertical.pink"), // Pink Per Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_PURPLE("item.banner.half_vertical.purple"), // Purple Per Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_RED("item.banner.half_vertical.red"), // Red Per Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_SILVER("item.banner.half_vertical.silver"), // Light Gray Per Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_WHITE("item.banner.half_vertical.white"), // White Per Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_YELLOW("item.banner.half_vertical.yellow"), // Yellow Per Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_RIGHT_BLACK("item.banner.half_vertical_right.black"), // Black Per Pale Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_RIGHT_BLUE("item.banner.half_vertical_right.blue"), // Blue Per Pale Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_RIGHT_BROWN("item.banner.half_vertical_right.brown"), // Brown Per Pale Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_RIGHT_CYAN("item.banner.half_vertical_right.cyan"), // Cyan Per Pale Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_RIGHT_GRAY("item.banner.half_vertical_right.gray"), // Gray Per Pale Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_RIGHT_GREEN("item.banner.half_vertical_right.green"), // Green Per Pale Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_RIGHT_LIGHTBLUE("item.banner.half_vertical_right.lightBlue"), // Light Blue Per Pale Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_RIGHT_LIME("item.banner.half_vertical_right.lime"), // Lime Per Pale Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_RIGHT_MAGENTA("item.banner.half_vertical_right.magenta"), // Magenta Per Pale Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_RIGHT_ORANGE("item.banner.half_vertical_right.orange"), // Orange Per Pale Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_RIGHT_PINK("item.banner.half_vertical_right.pink"), // Pink Per Pale Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_RIGHT_PURPLE("item.banner.half_vertical_right.purple"), // Purple Per Pale Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_RIGHT_RED("item.banner.half_vertical_right.red"), // Red Per Pale Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_RIGHT_SILVER("item.banner.half_vertical_right.silver"), // Light Gray Per Pale Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_RIGHT_WHITE("item.banner.half_vertical_right.white"), // White Per Pale Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_HALF_VERTICAL_RIGHT_YELLOW("item.banner.half_vertical_right.yellow"), // Yellow Per Pale Inverted
        @PowerNukkitOnly @Since("FUTURE") BANNER_ILLAGER_CAPTAIN_NAME("item.banner.illager_captain.name"), // Illager Banner
        @PowerNukkitOnly @Since("FUTURE") BANNER_LIGHTBLUE_NAME("item.banner.lightBlue.name"), // Light Blue Banner
        @PowerNukkitOnly @Since("FUTURE") BANNER_LIME_NAME("item.banner.lime.name"), // Lime Banner
        @PowerNukkitOnly @Since("FUTURE") BANNER_MAGENTA_NAME("item.banner.magenta.name"), // Magenta Banner
        @PowerNukkitOnly @Since("FUTURE") BANNER_MOJANG_BLACK("item.banner.mojang.black"), // Black Thing
        @PowerNukkitOnly @Since("FUTURE") BANNER_MOJANG_BLUE("item.banner.mojang.blue"), // Blue Thing
        @PowerNukkitOnly @Since("FUTURE") BANNER_MOJANG_BROWN("item.banner.mojang.brown"), // Brown Thing
        @PowerNukkitOnly @Since("FUTURE") BANNER_MOJANG_CYAN("item.banner.mojang.cyan"), // Cyan Thing
        @PowerNukkitOnly @Since("FUTURE") BANNER_MOJANG_GRAY("item.banner.mojang.gray"), // Gray Thing
        @PowerNukkitOnly @Since("FUTURE") BANNER_MOJANG_GREEN("item.banner.mojang.green"), // Green Thing
        @PowerNukkitOnly @Since("FUTURE") BANNER_MOJANG_LIGHTBLUE("item.banner.mojang.lightBlue"), // Light Blue Thing
        @PowerNukkitOnly @Since("FUTURE") BANNER_MOJANG_LIME("item.banner.mojang.lime"), // Lime Thing
        @PowerNukkitOnly @Since("FUTURE") BANNER_MOJANG_MAGENTA("item.banner.mojang.magenta"), // Magenta Thing
        @PowerNukkitOnly @Since("FUTURE") BANNER_MOJANG_ORANGE("item.banner.mojang.orange"), // Orange Thing
        @PowerNukkitOnly @Since("FUTURE") BANNER_MOJANG_PINK("item.banner.mojang.pink"), // Pink Thing
        @PowerNukkitOnly @Since("FUTURE") BANNER_MOJANG_PURPLE("item.banner.mojang.purple"), // Purple Thing
        @PowerNukkitOnly @Since("FUTURE") BANNER_MOJANG_RED("item.banner.mojang.red"), // Red Thing
        @PowerNukkitOnly @Since("FUTURE") BANNER_MOJANG_SILVER("item.banner.mojang.silver"), // Light Gray Thing
        @PowerNukkitOnly @Since("FUTURE") BANNER_MOJANG_WHITE("item.banner.mojang.white"), // White Thing
        @PowerNukkitOnly @Since("FUTURE") BANNER_MOJANG_YELLOW("item.banner.mojang.yellow"), // Yellow Thing
        @PowerNukkitOnly @Since("FUTURE") BANNER_ORANGE_NAME("item.banner.orange.name"), // Orange Banner
        @PowerNukkitOnly @Since("FUTURE") BANNER_PIGLIN_BLACK("item.banner.piglin.black"), // Black Snout
        @PowerNukkitOnly @Since("FUTURE") BANNER_PIGLIN_BLUE("item.banner.piglin.blue"), // Blue Snout
        @PowerNukkitOnly @Since("FUTURE") BANNER_PIGLIN_BROWN("item.banner.piglin.brown"), // Brown Snout
        @PowerNukkitOnly @Since("FUTURE") BANNER_PIGLIN_CYAN("item.banner.piglin.cyan"), // Cyan Snout
        @PowerNukkitOnly @Since("FUTURE") BANNER_PIGLIN_GRAY("item.banner.piglin.gray"), // Gray Snout
        @PowerNukkitOnly @Since("FUTURE") BANNER_PIGLIN_GREEN("item.banner.piglin.green"), // Green Snout
        @PowerNukkitOnly @Since("FUTURE") BANNER_PIGLIN_LIGHTBLUE("item.banner.piglin.lightBlue"), // Light Blue Snout
        @PowerNukkitOnly @Since("FUTURE") BANNER_PIGLIN_LIME("item.banner.piglin.lime"), // Lime Snout
        @PowerNukkitOnly @Since("FUTURE") BANNER_PIGLIN_MAGENTA("item.banner.piglin.magenta"), // Magenta Snout
        @PowerNukkitOnly @Since("FUTURE") BANNER_PIGLIN_ORANGE("item.banner.piglin.orange"), // Orange Snout
        @PowerNukkitOnly @Since("FUTURE") BANNER_PIGLIN_PINK("item.banner.piglin.pink"), // Pink Snout
        @PowerNukkitOnly @Since("FUTURE") BANNER_PIGLIN_PURPLE("item.banner.piglin.purple"), // Purple Snout
        @PowerNukkitOnly @Since("FUTURE") BANNER_PIGLIN_RED("item.banner.piglin.red"), // Red Snout
        @PowerNukkitOnly @Since("FUTURE") BANNER_PIGLIN_SILVER("item.banner.piglin.silver"), // Light Gray Snout
        @PowerNukkitOnly @Since("FUTURE") BANNER_PIGLIN_WHITE("item.banner.piglin.white"), // White Snout
        @PowerNukkitOnly @Since("FUTURE") BANNER_PIGLIN_YELLOW("item.banner.piglin.yellow"), // Yellow Snout
        @PowerNukkitOnly @Since("FUTURE") BANNER_PINK_NAME("item.banner.pink.name"), // Pink Banner
        @PowerNukkitOnly @Since("FUTURE") BANNER_PURPLE_NAME("item.banner.purple.name"), // Purple Banner
        @PowerNukkitOnly @Since("FUTURE") BANNER_RED_NAME("item.banner.red.name"), // Red Banner
        @PowerNukkitOnly @Since("FUTURE") BANNER_RHOMBUS_BLACK("item.banner.rhombus.black"), // Black Lozenge
        @PowerNukkitOnly @Since("FUTURE") BANNER_RHOMBUS_BLUE("item.banner.rhombus.blue"), // Blue Lozenge
        @PowerNukkitOnly @Since("FUTURE") BANNER_RHOMBUS_BROWN("item.banner.rhombus.brown"), // Brown Lozenge
        @PowerNukkitOnly @Since("FUTURE") BANNER_RHOMBUS_CYAN("item.banner.rhombus.cyan"), // Cyan Lozenge
        @PowerNukkitOnly @Since("FUTURE") BANNER_RHOMBUS_GRAY("item.banner.rhombus.gray"), // Gray Lozenge
        @PowerNukkitOnly @Since("FUTURE") BANNER_RHOMBUS_GREEN("item.banner.rhombus.green"), // Green Lozenge
        @PowerNukkitOnly @Since("FUTURE") BANNER_RHOMBUS_LIGHTBLUE("item.banner.rhombus.lightBlue"), // Light Blue Lozenge
        @PowerNukkitOnly @Since("FUTURE") BANNER_RHOMBUS_LIME("item.banner.rhombus.lime"), // Lime Lozenge
        @PowerNukkitOnly @Since("FUTURE") BANNER_RHOMBUS_MAGENTA("item.banner.rhombus.magenta"), // Magenta Lozenge
        @PowerNukkitOnly @Since("FUTURE") BANNER_RHOMBUS_ORANGE("item.banner.rhombus.orange"), // Orange Lozenge
        @PowerNukkitOnly @Since("FUTURE") BANNER_RHOMBUS_PINK("item.banner.rhombus.pink"), // Pink Lozenge
        @PowerNukkitOnly @Since("FUTURE") BANNER_RHOMBUS_PURPLE("item.banner.rhombus.purple"), // Purple Lozenge
        @PowerNukkitOnly @Since("FUTURE") BANNER_RHOMBUS_RED("item.banner.rhombus.red"), // Red Lozenge
        @PowerNukkitOnly @Since("FUTURE") BANNER_RHOMBUS_SILVER("item.banner.rhombus.silver"), // Light Gray Lozenge
        @PowerNukkitOnly @Since("FUTURE") BANNER_RHOMBUS_WHITE("item.banner.rhombus.white"), // White Lozenge
        @PowerNukkitOnly @Since("FUTURE") BANNER_RHOMBUS_YELLOW("item.banner.rhombus.yellow"), // Yellow Lozenge
        @PowerNukkitOnly @Since("FUTURE") BANNER_SILVER_NAME("item.banner.silver.name"), // Light Gray Banner
        @PowerNukkitOnly @Since("FUTURE") BANNER_SKULL_BLACK("item.banner.skull.black"), // Black Skull Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_SKULL_BLUE("item.banner.skull.blue"), // Blue Skull Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_SKULL_BROWN("item.banner.skull.brown"), // Brown Skull Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_SKULL_CYAN("item.banner.skull.cyan"), // Cyan Skull Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_SKULL_GRAY("item.banner.skull.gray"), // Gray Skull Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_SKULL_GREEN("item.banner.skull.green"), // Green Skull Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_SKULL_LIGHTBLUE("item.banner.skull.lightBlue"), // Light Blue Skull Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_SKULL_LIME("item.banner.skull.lime"), // Lime Skull Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_SKULL_MAGENTA("item.banner.skull.magenta"), // Magenta Skull Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_SKULL_ORANGE("item.banner.skull.orange"), // Orange Skull Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_SKULL_PINK("item.banner.skull.pink"), // Pink Skull Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_SKULL_PURPLE("item.banner.skull.purple"), // Purple Skull Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_SKULL_RED("item.banner.skull.red"), // Red Skull Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_SKULL_SILVER("item.banner.skull.silver"), // Light Gray Skull Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_SKULL_WHITE("item.banner.skull.white"), // White Skull Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_SKULL_YELLOW("item.banner.skull.yellow"), // Yellow Skull Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_SMALL_STRIPES_BLACK("item.banner.small_stripes.black"), // Black Paly
        @PowerNukkitOnly @Since("FUTURE") BANNER_SMALL_STRIPES_BLUE("item.banner.small_stripes.blue"), // Blue Paly
        @PowerNukkitOnly @Since("FUTURE") BANNER_SMALL_STRIPES_BROWN("item.banner.small_stripes.brown"), // Brown Paly
        @PowerNukkitOnly @Since("FUTURE") BANNER_SMALL_STRIPES_CYAN("item.banner.small_stripes.cyan"), // Cyan Paly
        @PowerNukkitOnly @Since("FUTURE") BANNER_SMALL_STRIPES_GRAY("item.banner.small_stripes.gray"), // Gray Paly
        @PowerNukkitOnly @Since("FUTURE") BANNER_SMALL_STRIPES_GREEN("item.banner.small_stripes.green"), // Green Paly
        @PowerNukkitOnly @Since("FUTURE") BANNER_SMALL_STRIPES_LIGHTBLUE("item.banner.small_stripes.lightBlue"), // Light Blue Paly
        @PowerNukkitOnly @Since("FUTURE") BANNER_SMALL_STRIPES_LIME("item.banner.small_stripes.lime"), // Lime Paly
        @PowerNukkitOnly @Since("FUTURE") BANNER_SMALL_STRIPES_MAGENTA("item.banner.small_stripes.magenta"), // Magenta Paly
        @PowerNukkitOnly @Since("FUTURE") BANNER_SMALL_STRIPES_ORANGE("item.banner.small_stripes.orange"), // Orange Paly
        @PowerNukkitOnly @Since("FUTURE") BANNER_SMALL_STRIPES_PINK("item.banner.small_stripes.pink"), // Pink Paly
        @PowerNukkitOnly @Since("FUTURE") BANNER_SMALL_STRIPES_PURPLE("item.banner.small_stripes.purple"), // Purple Paly
        @PowerNukkitOnly @Since("FUTURE") BANNER_SMALL_STRIPES_RED("item.banner.small_stripes.red"), // Red Paly
        @PowerNukkitOnly @Since("FUTURE") BANNER_SMALL_STRIPES_SILVER("item.banner.small_stripes.silver"), // Light Gray Paly
        @PowerNukkitOnly @Since("FUTURE") BANNER_SMALL_STRIPES_WHITE("item.banner.small_stripes.white"), // White Paly
        @PowerNukkitOnly @Since("FUTURE") BANNER_SMALL_STRIPES_YELLOW("item.banner.small_stripes.yellow"), // Yellow Paly
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_LEFT_BLACK("item.banner.square_bottom_left.black"), // Black Base Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_LEFT_BLUE("item.banner.square_bottom_left.blue"), // Blue Base Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_LEFT_BROWN("item.banner.square_bottom_left.brown"), // Brown Base Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_LEFT_CYAN("item.banner.square_bottom_left.cyan"), // Cyan Base Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_LEFT_GRAY("item.banner.square_bottom_left.gray"), // Gray Base Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_LEFT_GREEN("item.banner.square_bottom_left.green"), // Green Base Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_LEFT_LIGHTBLUE("item.banner.square_bottom_left.lightBlue"), // Light Blue Base Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_LEFT_LIME("item.banner.square_bottom_left.lime"), // Lime Base Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_LEFT_MAGENTA("item.banner.square_bottom_left.magenta"), // Magenta Base Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_LEFT_ORANGE("item.banner.square_bottom_left.orange"), // Orange Base Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_LEFT_PINK("item.banner.square_bottom_left.pink"), // Pink Base Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_LEFT_PURPLE("item.banner.square_bottom_left.purple"), // Purple Base Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_LEFT_RED("item.banner.square_bottom_left.red"), // Red Base Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_LEFT_SILVER("item.banner.square_bottom_left.silver"), // Light Gray Base Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_LEFT_WHITE("item.banner.square_bottom_left.white"), // White Base Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_LEFT_YELLOW("item.banner.square_bottom_left.yellow"), // Yellow Base Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_RIGHT_BLACK("item.banner.square_bottom_right.black"), // Black Base Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_RIGHT_BLUE("item.banner.square_bottom_right.blue"), // Blue Base Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_RIGHT_BROWN("item.banner.square_bottom_right.brown"), // Brown Base Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_RIGHT_CYAN("item.banner.square_bottom_right.cyan"), // Cyan Base Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_RIGHT_GRAY("item.banner.square_bottom_right.gray"), // Gray Base Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_RIGHT_GREEN("item.banner.square_bottom_right.green"), // Green Base Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_RIGHT_LIGHTBLUE("item.banner.square_bottom_right.lightBlue"), // Light Blue Base Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_RIGHT_LIME("item.banner.square_bottom_right.lime"), // Lime Base Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_RIGHT_MAGENTA("item.banner.square_bottom_right.magenta"), // Magenta Base Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_RIGHT_ORANGE("item.banner.square_bottom_right.orange"), // Orange Base Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_RIGHT_PINK("item.banner.square_bottom_right.pink"), // Pink Base Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_RIGHT_PURPLE("item.banner.square_bottom_right.purple"), // Purple Base Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_RIGHT_RED("item.banner.square_bottom_right.red"), // Red Base Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_RIGHT_SILVER("item.banner.square_bottom_right.silver"), // Light Gray Base Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_RIGHT_WHITE("item.banner.square_bottom_right.white"), // White Base Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_BOTTOM_RIGHT_YELLOW("item.banner.square_bottom_right.yellow"), // Yellow Base Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_LEFT_BLACK("item.banner.square_top_left.black"), // Black Chief Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_LEFT_BLUE("item.banner.square_top_left.blue"), // Blue Chief Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_LEFT_BROWN("item.banner.square_top_left.brown"), // Brown Chief Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_LEFT_CYAN("item.banner.square_top_left.cyan"), // Cyan Chief Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_LEFT_GRAY("item.banner.square_top_left.gray"), // Gray Chief Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_LEFT_GREEN("item.banner.square_top_left.green"), // Green Chief Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_LEFT_LIGHTBLUE("item.banner.square_top_left.lightBlue"), // Light Blue Chief Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_LEFT_LIME("item.banner.square_top_left.lime"), // Lime Chief Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_LEFT_MAGENTA("item.banner.square_top_left.magenta"), // Magenta Chief Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_LEFT_ORANGE("item.banner.square_top_left.orange"), // Orange Chief Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_LEFT_PINK("item.banner.square_top_left.pink"), // Pink Chief Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_LEFT_PURPLE("item.banner.square_top_left.purple"), // Purple Chief Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_LEFT_RED("item.banner.square_top_left.red"), // Red Chief Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_LEFT_SILVER("item.banner.square_top_left.silver"), // Light Gray Chief Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_LEFT_WHITE("item.banner.square_top_left.white"), // White Chief Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_LEFT_YELLOW("item.banner.square_top_left.yellow"), // Yellow Chief Dexter Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_RIGHT_BLACK("item.banner.square_top_right.black"), // Black Chief Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_RIGHT_BLUE("item.banner.square_top_right.blue"), // Blue Chief Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_RIGHT_BROWN("item.banner.square_top_right.brown"), // Brown Chief Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_RIGHT_CYAN("item.banner.square_top_right.cyan"), // Cyan Chief Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_RIGHT_GRAY("item.banner.square_top_right.gray"), // Gray Chief Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_RIGHT_GREEN("item.banner.square_top_right.green"), // Green Chief Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_RIGHT_LIGHTBLUE("item.banner.square_top_right.lightBlue"), // Light Blue Chief Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_RIGHT_LIME("item.banner.square_top_right.lime"), // Lime Chief Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_RIGHT_MAGENTA("item.banner.square_top_right.magenta"), // Magenta Chief Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_RIGHT_ORANGE("item.banner.square_top_right.orange"), // Orange Chief Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_RIGHT_PINK("item.banner.square_top_right.pink"), // Pink Chief Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_RIGHT_PURPLE("item.banner.square_top_right.purple"), // Purple Chief Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_RIGHT_RED("item.banner.square_top_right.red"), // Red Chief Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_RIGHT_SILVER("item.banner.square_top_right.silver"), // Light Gray Chief Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_RIGHT_WHITE("item.banner.square_top_right.white"), // White Chief Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_SQUARE_TOP_RIGHT_YELLOW("item.banner.square_top_right.yellow"), // Yellow Chief Sinister Canton
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRAIGHT_CROSS_BLACK("item.banner.straight_cross.black"), // Black Cross
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRAIGHT_CROSS_BLUE("item.banner.straight_cross.blue"), // Blue Cross
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRAIGHT_CROSS_BROWN("item.banner.straight_cross.brown"), // Brown Cross
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRAIGHT_CROSS_CYAN("item.banner.straight_cross.cyan"), // Cyan Cross
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRAIGHT_CROSS_GRAY("item.banner.straight_cross.gray"), // Gray Cross
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRAIGHT_CROSS_GREEN("item.banner.straight_cross.green"), // Green Cross
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRAIGHT_CROSS_LIGHTBLUE("item.banner.straight_cross.lightBlue"), // Light Blue Cross
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRAIGHT_CROSS_LIME("item.banner.straight_cross.lime"), // Lime Cross
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRAIGHT_CROSS_MAGENTA("item.banner.straight_cross.magenta"), // Magenta Cross
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRAIGHT_CROSS_ORANGE("item.banner.straight_cross.orange"), // Orange Cross
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRAIGHT_CROSS_PINK("item.banner.straight_cross.pink"), // Pink Cross
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRAIGHT_CROSS_PURPLE("item.banner.straight_cross.purple"), // Purple Cross
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRAIGHT_CROSS_RED("item.banner.straight_cross.red"), // Red Cross
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRAIGHT_CROSS_SILVER("item.banner.straight_cross.silver"), // Light Gray Cross
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRAIGHT_CROSS_WHITE("item.banner.straight_cross.white"), // White Cross
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRAIGHT_CROSS_YELLOW("item.banner.straight_cross.yellow"), // Yellow Cross
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_BOTTOM_BLACK("item.banner.stripe_bottom.black"), // Black Base Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_BOTTOM_BLUE("item.banner.stripe_bottom.blue"), // Blue Base Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_BOTTOM_BROWN("item.banner.stripe_bottom.brown"), // Brown Base Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_BOTTOM_CYAN("item.banner.stripe_bottom.cyan"), // Cyan Base Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_BOTTOM_GRAY("item.banner.stripe_bottom.gray"), // Gray Base Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_BOTTOM_GREEN("item.banner.stripe_bottom.green"), // Green Base Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_BOTTOM_LIGHTBLUE("item.banner.stripe_bottom.lightBlue"), // Light Blue Base Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_BOTTOM_LIME("item.banner.stripe_bottom.lime"), // Lime Base Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_BOTTOM_MAGENTA("item.banner.stripe_bottom.magenta"), // Magenta Base Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_BOTTOM_ORANGE("item.banner.stripe_bottom.orange"), // Orange Base Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_BOTTOM_PINK("item.banner.stripe_bottom.pink"), // Pink Base Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_BOTTOM_PURPLE("item.banner.stripe_bottom.purple"), // Purple Base Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_BOTTOM_RED("item.banner.stripe_bottom.red"), // Red Base Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_BOTTOM_SILVER("item.banner.stripe_bottom.silver"), // Light Gray Base Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_BOTTOM_WHITE("item.banner.stripe_bottom.white"), // White Base Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_BOTTOM_YELLOW("item.banner.stripe_bottom.yellow"), // Yellow Base Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_CENTER_BLACK("item.banner.stripe_center.black"), // Black Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_CENTER_BLUE("item.banner.stripe_center.blue"), // Blue Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_CENTER_BROWN("item.banner.stripe_center.brown"), // Brown Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_CENTER_CYAN("item.banner.stripe_center.cyan"), // Cyan Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_CENTER_GRAY("item.banner.stripe_center.gray"), // Gray Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_CENTER_GREEN("item.banner.stripe_center.green"), // Green Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_CENTER_LIGHTBLUE("item.banner.stripe_center.lightBlue"), // Light Blue Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_CENTER_LIME("item.banner.stripe_center.lime"), // Lime Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_CENTER_MAGENTA("item.banner.stripe_center.magenta"), // Magenta Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_CENTER_ORANGE("item.banner.stripe_center.orange"), // Orange Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_CENTER_PINK("item.banner.stripe_center.pink"), // Pink Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_CENTER_PURPLE("item.banner.stripe_center.purple"), // Purple Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_CENTER_RED("item.banner.stripe_center.red"), // Red Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_CENTER_SILVER("item.banner.stripe_center.silver"), // Light Gray Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_CENTER_WHITE("item.banner.stripe_center.white"), // White Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_CENTER_YELLOW("item.banner.stripe_center.yellow"), // Yellow Pale
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNLEFT_BLACK("item.banner.stripe_downleft.black"), // Black Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNLEFT_BLUE("item.banner.stripe_downleft.blue"), // Blue Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNLEFT_BROWN("item.banner.stripe_downleft.brown"), // Brown Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNLEFT_CYAN("item.banner.stripe_downleft.cyan"), // Cyan Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNLEFT_GRAY("item.banner.stripe_downleft.gray"), // Gray Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNLEFT_GREEN("item.banner.stripe_downleft.green"), // Green Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNLEFT_LIGHTBLUE("item.banner.stripe_downleft.lightBlue"), // Light Blue Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNLEFT_LIME("item.banner.stripe_downleft.lime"), // Lime Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNLEFT_MAGENTA("item.banner.stripe_downleft.magenta"), // Magenta Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNLEFT_ORANGE("item.banner.stripe_downleft.orange"), // Orange Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNLEFT_PINK("item.banner.stripe_downleft.pink"), // Pink Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNLEFT_PURPLE("item.banner.stripe_downleft.purple"), // Purple Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNLEFT_RED("item.banner.stripe_downleft.red"), // Red Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNLEFT_SILVER("item.banner.stripe_downleft.silver"), // Light Gray Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNLEFT_WHITE("item.banner.stripe_downleft.white"), // White Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNLEFT_YELLOW("item.banner.stripe_downleft.yellow"), // Yellow Bend Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNRIGHT_BLACK("item.banner.stripe_downright.black"), // Black Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNRIGHT_BLUE("item.banner.stripe_downright.blue"), // Blue Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNRIGHT_BROWN("item.banner.stripe_downright.brown"), // Brown Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNRIGHT_CYAN("item.banner.stripe_downright.cyan"), // Cyan Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNRIGHT_GRAY("item.banner.stripe_downright.gray"), // Gray Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNRIGHT_GREEN("item.banner.stripe_downright.green"), // Green Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNRIGHT_LIGHTBLUE("item.banner.stripe_downright.lightBlue"), // Light Blue Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNRIGHT_LIME("item.banner.stripe_downright.lime"), // Lime Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNRIGHT_MAGENTA("item.banner.stripe_downright.magenta"), // Magenta Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNRIGHT_ORANGE("item.banner.stripe_downright.orange"), // Orange Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNRIGHT_PINK("item.banner.stripe_downright.pink"), // Pink Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNRIGHT_PURPLE("item.banner.stripe_downright.purple"), // Purple Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNRIGHT_RED("item.banner.stripe_downright.red"), // Red Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNRIGHT_SILVER("item.banner.stripe_downright.silver"), // Light Gray Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNRIGHT_WHITE("item.banner.stripe_downright.white"), // White Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_DOWNRIGHT_YELLOW("item.banner.stripe_downright.yellow"), // Yellow Bend
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_LEFT_BLACK("item.banner.stripe_left.black"), // Black Pale Dexter
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_LEFT_BLUE("item.banner.stripe_left.blue"), // Blue Pale Dexter
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_LEFT_BROWN("item.banner.stripe_left.brown"), // Brown Pale Dexter
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_LEFT_CYAN("item.banner.stripe_left.cyan"), // Cyan Pale Dexter
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_LEFT_GRAY("item.banner.stripe_left.gray"), // Gray Pale Dexter
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_LEFT_GREEN("item.banner.stripe_left.green"), // Green Pale Dexter
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_LEFT_LIGHTBLUE("item.banner.stripe_left.lightBlue"), // Light Blue Pale Dexter
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_LEFT_LIME("item.banner.stripe_left.lime"), // Lime Pale Dexter
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_LEFT_MAGENTA("item.banner.stripe_left.magenta"), // Magenta Pale Dexter
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_LEFT_ORANGE("item.banner.stripe_left.orange"), // Orange Pale Dexter
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_LEFT_PINK("item.banner.stripe_left.pink"), // Pink Pale Dexter
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_LEFT_PURPLE("item.banner.stripe_left.purple"), // Purple Pale Dexter
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_LEFT_RED("item.banner.stripe_left.red"), // Red Pale Dexter
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_LEFT_SILVER("item.banner.stripe_left.silver"), // Light Gray Pale Dexter
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_LEFT_WHITE("item.banner.stripe_left.white"), // White Pale Dexter
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_LEFT_YELLOW("item.banner.stripe_left.yellow"), // Yellow Pale Dexter
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_MIDDLE_BLACK("item.banner.stripe_middle.black"), // Black Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_MIDDLE_BLUE("item.banner.stripe_middle.blue"), // Blue Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_MIDDLE_BROWN("item.banner.stripe_middle.brown"), // Brown Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_MIDDLE_CYAN("item.banner.stripe_middle.cyan"), // Cyan Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_MIDDLE_GRAY("item.banner.stripe_middle.gray"), // Gray Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_MIDDLE_GREEN("item.banner.stripe_middle.green"), // Green Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_MIDDLE_LIGHTBLUE("item.banner.stripe_middle.lightBlue"), // Light Blue Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_MIDDLE_LIME("item.banner.stripe_middle.lime"), // Lime Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_MIDDLE_MAGENTA("item.banner.stripe_middle.magenta"), // Magenta Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_MIDDLE_ORANGE("item.banner.stripe_middle.orange"), // Orange Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_MIDDLE_PINK("item.banner.stripe_middle.pink"), // Pink Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_MIDDLE_PURPLE("item.banner.stripe_middle.purple"), // Purple Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_MIDDLE_RED("item.banner.stripe_middle.red"), // Red Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_MIDDLE_SILVER("item.banner.stripe_middle.silver"), // Light Gray Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_MIDDLE_WHITE("item.banner.stripe_middle.white"), // White Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_MIDDLE_YELLOW("item.banner.stripe_middle.yellow"), // Yellow Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_RIGHT_BLACK("item.banner.stripe_right.black"), // Black Pale Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_RIGHT_BLUE("item.banner.stripe_right.blue"), // Blue Pale Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_RIGHT_BROWN("item.banner.stripe_right.brown"), // Brown Pale Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_RIGHT_CYAN("item.banner.stripe_right.cyan"), // Cyan Pale Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_RIGHT_GRAY("item.banner.stripe_right.gray"), // Gray Pale Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_RIGHT_GREEN("item.banner.stripe_right.green"), // Green Pale Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_RIGHT_LIGHTBLUE("item.banner.stripe_right.lightBlue"), // Light Blue Pale Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_RIGHT_LIME("item.banner.stripe_right.lime"), // Lime Pale Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_RIGHT_MAGENTA("item.banner.stripe_right.magenta"), // Magenta Pale Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_RIGHT_ORANGE("item.banner.stripe_right.orange"), // Orange Pale Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_RIGHT_PINK("item.banner.stripe_right.pink"), // Pink Pale Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_RIGHT_PURPLE("item.banner.stripe_right.purple"), // Purple Pale Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_RIGHT_RED("item.banner.stripe_right.red"), // Red Pale Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_RIGHT_SILVER("item.banner.stripe_right.silver"), // Light Gray Pale Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_RIGHT_WHITE("item.banner.stripe_right.white"), // White Pale Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_RIGHT_YELLOW("item.banner.stripe_right.yellow"), // Yellow Pale Sinister
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_TOP_BLACK("item.banner.stripe_top.black"), // Black Chief Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_TOP_BLUE("item.banner.stripe_top.blue"), // Blue Chief Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_TOP_BROWN("item.banner.stripe_top.brown"), // Brown Chief Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_TOP_CYAN("item.banner.stripe_top.cyan"), // Cyan Chief Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_TOP_GRAY("item.banner.stripe_top.gray"), // Gray Chief Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_TOP_GREEN("item.banner.stripe_top.green"), // Green Chief Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_TOP_LIGHTBLUE("item.banner.stripe_top.lightBlue"), // Light Blue Chief Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_TOP_LIME("item.banner.stripe_top.lime"), // Lime Chief Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_TOP_MAGENTA("item.banner.stripe_top.magenta"), // Magenta Chief Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_TOP_ORANGE("item.banner.stripe_top.orange"), // Orange Chief Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_TOP_PINK("item.banner.stripe_top.pink"), // Pink Chief Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_TOP_PURPLE("item.banner.stripe_top.purple"), // Purple Chief Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_TOP_RED("item.banner.stripe_top.red"), // Red Chief Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_TOP_SILVER("item.banner.stripe_top.silver"), // Light Gray Chief Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_TOP_WHITE("item.banner.stripe_top.white"), // White Chief Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_STRIPE_TOP_YELLOW("item.banner.stripe_top.yellow"), // Yellow Chief Fess
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_BOTTOM_BLACK("item.banner.triangle_bottom.black"), // Black Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_BOTTOM_BLUE("item.banner.triangle_bottom.blue"), // Blue Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_BOTTOM_BROWN("item.banner.triangle_bottom.brown"), // Brown Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_BOTTOM_CYAN("item.banner.triangle_bottom.cyan"), // Cyan Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_BOTTOM_GRAY("item.banner.triangle_bottom.gray"), // Gray Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_BOTTOM_GREEN("item.banner.triangle_bottom.green"), // Green Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_BOTTOM_LIGHTBLUE("item.banner.triangle_bottom.lightBlue"), // Light Blue Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_BOTTOM_LIME("item.banner.triangle_bottom.lime"), // Lime Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_BOTTOM_MAGENTA("item.banner.triangle_bottom.magenta"), // Magenta Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_BOTTOM_ORANGE("item.banner.triangle_bottom.orange"), // Orange Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_BOTTOM_PINK("item.banner.triangle_bottom.pink"), // Pink Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_BOTTOM_PURPLE("item.banner.triangle_bottom.purple"), // Purple Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_BOTTOM_RED("item.banner.triangle_bottom.red"), // Red Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_BOTTOM_SILVER("item.banner.triangle_bottom.silver"), // Light Gray Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_BOTTOM_WHITE("item.banner.triangle_bottom.white"), // White Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_BOTTOM_YELLOW("item.banner.triangle_bottom.yellow"), // Yellow Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_TOP_BLACK("item.banner.triangle_top.black"), // Black Inverted Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_TOP_BLUE("item.banner.triangle_top.blue"), // Blue Inverted Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_TOP_BROWN("item.banner.triangle_top.brown"), // Brown Inverted Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_TOP_CYAN("item.banner.triangle_top.cyan"), // Cyan Inverted Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_TOP_GRAY("item.banner.triangle_top.gray"), // Gray Inverted Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_TOP_GREEN("item.banner.triangle_top.green"), // Green Inverted Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_TOP_LIGHTBLUE("item.banner.triangle_top.lightBlue"), // Light Blue Inverted Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_TOP_LIME("item.banner.triangle_top.lime"), // Lime Inverted Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_TOP_MAGENTA("item.banner.triangle_top.magenta"), // Magenta Inverted Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_TOP_ORANGE("item.banner.triangle_top.orange"), // Orange Inverted Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_TOP_PINK("item.banner.triangle_top.pink"), // Pink Inverted Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_TOP_PURPLE("item.banner.triangle_top.purple"), // Purple Inverted Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_TOP_RED("item.banner.triangle_top.red"), // Red Inverted Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_TOP_SILVER("item.banner.triangle_top.silver"), // Light Gray Inverted Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_TOP_WHITE("item.banner.triangle_top.white"), // White Inverted Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLE_TOP_YELLOW("item.banner.triangle_top.yellow"), // Yellow Inverted Chevron
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_BOTTOM_BLACK("item.banner.triangles_bottom.black"), // Black Base Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_BOTTOM_BLUE("item.banner.triangles_bottom.blue"), // Blue Base Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_BOTTOM_BROWN("item.banner.triangles_bottom.brown"), // Brown Base Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_BOTTOM_CYAN("item.banner.triangles_bottom.cyan"), // Cyan Base Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_BOTTOM_GRAY("item.banner.triangles_bottom.gray"), // Gray Base Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_BOTTOM_GREEN("item.banner.triangles_bottom.green"), // Green Base Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_BOTTOM_LIGHTBLUE("item.banner.triangles_bottom.lightBlue"), // Light Blue Base Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_BOTTOM_LIME("item.banner.triangles_bottom.lime"), // Lime Base Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_BOTTOM_MAGENTA("item.banner.triangles_bottom.magenta"), // Magenta Base Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_BOTTOM_ORANGE("item.banner.triangles_bottom.orange"), // Orange Base Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_BOTTOM_PINK("item.banner.triangles_bottom.pink"), // Pink Base Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_BOTTOM_PURPLE("item.banner.triangles_bottom.purple"), // Purple Base Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_BOTTOM_RED("item.banner.triangles_bottom.red"), // Red Base Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_BOTTOM_SILVER("item.banner.triangles_bottom.silver"), // Light Gray Base Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_BOTTOM_WHITE("item.banner.triangles_bottom.white"), // White Base Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_BOTTOM_YELLOW("item.banner.triangles_bottom.yellow"), // Yellow Base Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_TOP_BLACK("item.banner.triangles_top.black"), // Black Chief Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_TOP_BLUE("item.banner.triangles_top.blue"), // Blue Chief Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_TOP_BROWN("item.banner.triangles_top.brown"), // Brown Chief Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_TOP_CYAN("item.banner.triangles_top.cyan"), // Cyan Chief Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_TOP_GRAY("item.banner.triangles_top.gray"), // Gray Chief Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_TOP_GREEN("item.banner.triangles_top.green"), // Green Chief Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_TOP_LIGHTBLUE("item.banner.triangles_top.lightBlue"), // Light Blue Chief Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_TOP_LIME("item.banner.triangles_top.lime"), // Lime Chief Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_TOP_MAGENTA("item.banner.triangles_top.magenta"), // Magenta Chief Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_TOP_ORANGE("item.banner.triangles_top.orange"), // Orange Chief Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_TOP_PINK("item.banner.triangles_top.pink"), // Pink Chief Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_TOP_PURPLE("item.banner.triangles_top.purple"), // Purple Chief Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_TOP_RED("item.banner.triangles_top.red"), // Red Chief Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_TOP_SILVER("item.banner.triangles_top.silver"), // Light Gray Chief Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_TOP_WHITE("item.banner.triangles_top.white"), // White Chief Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_TRIANGLES_TOP_YELLOW("item.banner.triangles_top.yellow"), // Yellow Chief Indented
        @PowerNukkitOnly @Since("FUTURE") BANNER_WHITE_NAME("item.banner.white.name"), // White Banner
        @PowerNukkitOnly @Since("FUTURE") BANNER_YELLOW_NAME("item.banner.yellow.name"), // Yellow Banner
        @PowerNukkitOnly @Since("FUTURE") BED_BLACK_NAME("item.bed.black.name"), // Black Bed
        @PowerNukkitOnly @Since("FUTURE") BED_RED_NAME("item.bed.red.name"), // Red Bed
        @PowerNukkitOnly @Since("FUTURE") BED_GREEN_NAME("item.bed.green.name"), // Green Bed
        @PowerNukkitOnly @Since("FUTURE") BED_BROWN_NAME("item.bed.brown.name"), // Brown Bed
        @PowerNukkitOnly @Since("FUTURE") BED_BLUE_NAME("item.bed.blue.name"), // Blue Bed
        @PowerNukkitOnly @Since("FUTURE") BED_PURPLE_NAME("item.bed.purple.name"), // Purple Bed
        @PowerNukkitOnly @Since("FUTURE") BED_CYAN_NAME("item.bed.cyan.name"), // Cyan Bed
        @PowerNukkitOnly @Since("FUTURE") BED_SILVER_NAME("item.bed.silver.name"), // Light Gray Bed
        @PowerNukkitOnly @Since("FUTURE") BED_GRAY_NAME("item.bed.gray.name"), // Gray Bed
        @PowerNukkitOnly @Since("FUTURE") BED_PINK_NAME("item.bed.pink.name"), // Pink Bed
        @PowerNukkitOnly @Since("FUTURE") BED_LIME_NAME("item.bed.lime.name"), // Lime Bed
        @PowerNukkitOnly @Since("FUTURE") BED_YELLOW_NAME("item.bed.yellow.name"), // Yellow Bed
        @PowerNukkitOnly @Since("FUTURE") BED_LIGHTBLUE_NAME("item.bed.lightBlue.name"), // Light Blue Bed
        @PowerNukkitOnly @Since("FUTURE") BED_MAGENTA_NAME("item.bed.magenta.name"), // Magenta Bed
        @PowerNukkitOnly @Since("FUTURE") BED_ORANGE_NAME("item.bed.orange.name"), // Orange Bed
        @PowerNukkitOnly @Since("FUTURE") BED_WHITE_NAME("item.bed.white.name"), // White Bed
        @PowerNukkitOnly @Since("FUTURE") BELL_NAME("item.bell.name"), // Bell
        @PowerNukkitOnly @Since("FUTURE") STEAK_NAME("item.steak.name"), // Steak
        @PowerNukkitOnly @Since("FUTURE") BEEF_NAME("item.beef.name"), // Raw Beef
        @PowerNukkitOnly @Since("FUTURE") BEETROOT_NAME("item.beetroot.name"), // Beetroot
        @PowerNukkitOnly @Since("FUTURE") BEETROOT_SOUP_NAME("item.beetroot_soup.name"), // Beetroot Soup
        @PowerNukkitOnly @Since("FUTURE") BLAZE_POWDER_NAME("item.blaze_powder.name"), // Blaze Powder
        @PowerNukkitOnly @Since("FUTURE") BLAZE_ROD_NAME("item.blaze_rod.name"), // Blaze Rod
        @PowerNukkitOnly @Since("FUTURE") BOAT_OAK_NAME("item.boat.oak.name"), // Oak Boat
        @PowerNukkitOnly @Since("FUTURE") BOAT_SPRUCE_NAME("item.boat.spruce.name"), // Spruce Boat
        @PowerNukkitOnly @Since("FUTURE") BOAT_BIRCH_NAME("item.boat.birch.name"), // Birch Boat
        @PowerNukkitOnly @Since("FUTURE") BOAT_JUNGLE_NAME("item.boat.jungle.name"), // Jungle Boat
        @PowerNukkitOnly @Since("FUTURE") BOAT_ACACIA_NAME("item.boat.acacia.name"), // Acacia Boat
        @PowerNukkitOnly @Since("FUTURE") BOAT_BIG_OAK_NAME("item.boat.big_oak.name"), // Dark Oak Boat
        @PowerNukkitOnly @Since("FUTURE") BONE_NAME("item.bone.name"), // Bone
        @PowerNukkitOnly @Since("FUTURE") BOOK_NAME("item.book.name"), // Book
        @PowerNukkitOnly @Since("FUTURE") CHAINMAIL_BOOTS_NAME("item.chainmail_boots.name"), // Chain Boots
        @PowerNukkitOnly @Since("FUTURE") LEATHER_BOOTS_NAME("item.leather_boots.name"), // Leather Boots
        @PowerNukkitOnly @Since("FUTURE") DIAMOND_BOOTS_NAME("item.diamond_boots.name"), // Diamond Boots
        @PowerNukkitOnly @Since("FUTURE") GOLDEN_BOOTS_NAME("item.golden_boots.name"), // Golden Boots
        @PowerNukkitOnly @Since("FUTURE") IRON_BOOTS_NAME("item.iron_boots.name"), // Iron Boots
        @PowerNukkitOnly @Since("FUTURE") BOW_NAME("item.bow.name"), // Bow
        @PowerNukkitOnly @Since("FUTURE") BOWL_NAME("item.bowl.name"), // Bowl
        @PowerNukkitOnly @Since("FUTURE") BREAD_NAME("item.bread.name"), // Bread
        @PowerNukkitOnly @Since("FUTURE") BREWING_STAND_NAME("item.brewing_stand.name"), // Brewing Stand
        @PowerNukkitOnly @Since("FUTURE") BRICK_NAME("item.brick.name"), // Brick
        @PowerNukkitOnly @Since("FUTURE") BUCKET_NAME("item.bucket.name"), // Bucket
        @PowerNukkitOnly @Since("FUTURE") BUCKETLAVA_NAME("item.bucketLava.name"), // Lava Bucket
        @PowerNukkitOnly @Since("FUTURE") BUCKETWATER_NAME("item.bucketWater.name"), // Water Bucket
        @PowerNukkitOnly @Since("FUTURE") BUCKETFISH_NAME("item.bucketFish.name"), // Bucket of Cod
        @PowerNukkitOnly @Since("FUTURE") BUCKETSALMON_NAME("item.bucketSalmon.name"), // Bucket of Salmon
        @PowerNukkitOnly @Since("FUTURE") BUCKETTROPICAL_NAME("item.bucketTropical.name"), // Bucket of Tropical Fish
        @PowerNukkitOnly @Since("FUTURE") BUCKETPUFFER_NAME("item.bucketPuffer.name"), // Bucket of Pufferfish
        @PowerNukkitOnly @Since("FUTURE") BUCKETCUSTOMFISH_NAME("item.bucketCustomFish.name"), // Bucket of 
        @PowerNukkitOnly @Since("FUTURE") BUCKETAXOLOTL_NAME("item.bucketAxolotl.name"), // Bucket of Axolotl
        @PowerNukkitOnly @Since("FUTURE") TROPICALCOLORWHITE_NAME("item.tropicalColorWhite.name"), // White
        @PowerNukkitOnly @Since("FUTURE") TROPICALCOLORORANGE_NAME("item.tropicalColorOrange.name"), // Orange
        @PowerNukkitOnly @Since("FUTURE") TROPICALCOLORMAGENTA_NAME("item.tropicalColorMagenta.name"), // Magenta
        @PowerNukkitOnly @Since("FUTURE") TROPICALCOLORSKY_NAME("item.tropicalColorSky.name"), // Sky
        @PowerNukkitOnly @Since("FUTURE") TROPICALCOLORYELLOW_NAME("item.tropicalColorYellow.name"), // Yellow
        @PowerNukkitOnly @Since("FUTURE") TROPICALCOLORLIME_NAME("item.tropicalColorLime.name"), // Lime
        @PowerNukkitOnly @Since("FUTURE") TROPICALCOLORROSE_NAME("item.tropicalColorRose.name"), // Rose
        @PowerNukkitOnly @Since("FUTURE") TROPICALCOLORGRAY_NAME("item.tropicalColorGray.name"), // Gray
        @PowerNukkitOnly @Since("FUTURE") TROPICALCOLORSILVER_NAME("item.tropicalColorSilver.name"), // Silver
        @PowerNukkitOnly @Since("FUTURE") TROPICALCOLORTEAL_NAME("item.tropicalColorTeal.name"), // Teal
        @PowerNukkitOnly @Since("FUTURE") TROPICALCOLORPLUM_NAME("item.tropicalColorPlum.name"), // Plum
        @PowerNukkitOnly @Since("FUTURE") TROPICALCOLORBLUE_NAME("item.tropicalColorBlue.name"), // Blue
        @PowerNukkitOnly @Since("FUTURE") TROPICALCOLORBROWN_NAME("item.tropicalColorBrown.name"), // Brown
        @PowerNukkitOnly @Since("FUTURE") TROPICALCOLORGREEN_NAME("item.tropicalColorGreen.name"), // Green
        @PowerNukkitOnly @Since("FUTURE") TROPICALCOLORRED_NAME("item.tropicalColorRed.name"), // Red
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYKOBSINGLE_NAME("item.tropicalBodyKobSingle.name"), // %1$s Kob
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYSUNSTREAKSINGLE_NAME("item.tropicalBodySunstreakSingle.name"), // %1$s SunStreak
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYSNOOPERSINGLE_NAME("item.tropicalBodySnooperSingle.name"), // %1$s Snooper
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYDASHERSINGLE_NAME("item.tropicalBodyDasherSingle.name"), // %1$s Dasher
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYBRINELYSINGLE_NAME("item.tropicalBodyBrinelySingle.name"), // %1$s Brinely
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYSPOTTYSINGLE_NAME("item.tropicalBodySpottySingle.name"), // %1$s Spotty
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYFLOPPERSINGLE_NAME("item.tropicalBodyFlopperSingle.name"), // %1$s Flopper
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYSTRIPEYSINGLE_NAME("item.tropicalBodyStripeySingle.name"), // %1$s Stripey
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYGLITTERSINGLE_NAME("item.tropicalBodyGlitterSingle.name"), // %1$s Glitter
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYBLOCKFISHSINGLE_NAME("item.tropicalBodyBlockfishSingle.name"), // %1$s Blockfish
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYBETTYSINGLE_NAME("item.tropicalBodyBettySingle.name"), // %1$s Betty
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYCLAYFISHSINGLE_NAME("item.tropicalBodyClayfishSingle.name"), // %1$s Clayfish
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYKOBMULTI_NAME("item.tropicalBodyKobMulti.name"), // %1$s-%2$s Kob
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYSUNSTREAKMULTI_NAME("item.tropicalBodySunstreakMulti.name"), // %1$s-%2$s SunStreak
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYSNOOPERMULTI_NAME("item.tropicalBodySnooperMulti.name"), // %1$s-%2$s Snooper
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYDASHERMULTI_NAME("item.tropicalBodyDasherMulti.name"), // %1$s-%2$s Dasher
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYBRINELYMULTI_NAME("item.tropicalBodyBrinelyMulti.name"), // %1$s-%2$s Brinely
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYSPOTTYMULTI_NAME("item.tropicalBodySpottyMulti.name"), // %1$s-%2$s Spotty
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYFLOPPERMULTI_NAME("item.tropicalBodyFlopperMulti.name"), // %1$s-%2$s Flopper
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYSTRIPEYMULTI_NAME("item.tropicalBodyStripeyMulti.name"), // %1$s-%2$s Stripey
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYGLITTERMULTI_NAME("item.tropicalBodyGlitterMulti.name"), // %1$s-%2$s Glitter
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYBLOCKFISHMULTI_NAME("item.tropicalBodyBlockfishMulti.name"), // %1$s-%2$s Blockfish
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYBETTYMULTI_NAME("item.tropicalBodyBettyMulti.name"), // %1$s-%2$s Betty
        @PowerNukkitOnly @Since("FUTURE") TROPICALBODYCLAYFISHMULTI_NAME("item.tropicalBodyClayfishMulti.name"), // %1$s-%2$s Clayfish
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLANEMONE_NAME("item.tropicalSchoolAnemone.name"), // Anemone
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLBLACKTANG_NAME("item.tropicalSchoolBlackTang.name"), // Black Tang
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLBLUEDORY_NAME("item.tropicalSchoolBlueDory.name"), // Blue Dory
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLBUTTERFLYFISH_NAME("item.tropicalSchoolButterflyFish.name"), // Butterfly Fish
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLCICHLID_NAME("item.tropicalSchoolCichlid.name"), // Chichlid
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLCLOWNFISH_NAME("item.tropicalSchoolClownfish.name"), // Clownfish
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLCOTTONCANDYBETTA_NAME("item.tropicalSchoolCottonCandyBetta.name"), // Cotton Candy Betta
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLDOTTYBACK_NAME("item.tropicalSchoolDottyback.name"), // Dottyback
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLEMPERORREDSNAPPER_NAME("item.tropicalSchoolEmperorRedSnapper.name"), // Emperor Red Snapper
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLGOATFISH_NAME("item.tropicalSchoolGoatfish.name"), // Goatfish
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLMOORISHIDOL_NAME("item.tropicalSchoolMoorishIdol.name"), // Moorish Idol
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLORNATEBUTTERFLY_NAME("item.tropicalSchoolOrnateButterfly.name"), // Ornate Butterfly
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLPARROTFISH_NAME("item.tropicalSchoolParrotfish.name"), // Parrotfish
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLQUEENANGELFISH_NAME("item.tropicalSchoolQueenAngelFish.name"), // Queen Angel Fish
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLREDCICHLID_NAME("item.tropicalSchoolRedCichlid.name"), // Red Cichlid
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLREDLIPPEDBLENNY_NAME("item.tropicalSchoolRedLippedBlenny.name"), // Red Lipped Blenny
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLREDSNAPPER_NAME("item.tropicalSchoolRedSnapper.name"), // Red Snapper
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLTHREADFIN_NAME("item.tropicalSchoolThreadfin.name"), // Threadfin
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLTOMATOCLOWN_NAME("item.tropicalSchoolTomatoClown.name"), // Tomato Clown
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLTRIGGERFISH_NAME("item.tropicalSchoolTriggerfish.name"), // Triggerfish
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLYELLOWTANG_NAME("item.tropicalSchoolYellowTang.name"), // Yellow Tang
        @PowerNukkitOnly @Since("FUTURE") TROPICALSCHOOLYELLOWTAILPARROT_NAME("item.tropicalSchoolYellowtailParrot.name"), // Yellowtail Parrot
        @PowerNukkitOnly @Since("FUTURE") CAKE_NAME("item.cake.name"), // Cake
        @PowerNukkitOnly @Since("FUTURE") CAMERA_NAME("item.camera.name"), // Camera
        @PowerNukkitOnly @Since("FUTURE") CANBREAK("item.canBreak"), // Can break:
        @PowerNukkitOnly @Since("FUTURE") CANPLACE("item.canPlace"), // Can be placed on:
        @PowerNukkitOnly @Since("FUTURE") ITEMLOCK_CANTDROP("item.itemLock.cantDrop"), // :hollow_star: Can't Drop Items can't be:
        @PowerNukkitOnly @Since("FUTURE") ITEMLOCK_CANTMOVE("item.itemLock.cantMove"), // :solid_star: Can't Move Items can't be:
        @PowerNukkitOnly @Since("FUTURE") ITEMLOCK_HOVERTEXT_CANTBE_MOVED("item.itemLock.hoverText.cantBe.moved"), // moved
        @PowerNukkitOnly @Since("FUTURE") ITEMLOCK_HOVERTEXT_CANTBE_DROPPED("item.itemLock.hoverText.cantBe.dropped"), // dropped
        @PowerNukkitOnly @Since("FUTURE") ITEMLOCK_HOVERTEXT_CANTBE_REMOVED("item.itemLock.hoverText.cantBe.removed"), // removed
        @PowerNukkitOnly @Since("FUTURE") ITEMLOCK_HOVERTEXT_CANTBE_CRAFTEDWITH("item.itemLock.hoverText.cantBe.craftedWith"), // crafted with
        @PowerNukkitOnly @Since("FUTURE") ITEMLOCK_KEEPONDEATH("item.itemLock.keepOnDeath"), // This item is not lost on death
        @PowerNukkitOnly @Since("FUTURE") ITEMLOCK_POPUPNOTICE_CANTDROP("item.itemLock.popupNotice.cantDrop"), // :hollow_star: Can't Drop Items can't be: dropped, removed, crafted with
        @PowerNukkitOnly @Since("FUTURE") ITEMLOCK_POPUPNOTICE_CANTMOVE("item.itemLock.popupNotice.cantMove"), // :solid_star: Can't Move Items can't be: moved, dropped, removed, crafted with
        @PowerNukkitOnly @Since("FUTURE") GOLDEN_CARROT_NAME("item.golden_carrot.name"), // Golden Carrot
        @PowerNukkitOnly @Since("FUTURE") CARROTONASTICK_NAME("item.carrotOnAStick.name"), // Carrot on a Stick
        @PowerNukkitOnly @Since("FUTURE") WARPED_FUNGUS_ON_A_STICK_NAME("item.warped_fungus_on_a_stick.name"), // Warped Fungus on a Stick
        @PowerNukkitOnly @Since("FUTURE") CARROT_NAME("item.carrot.name"), // Carrot
        @PowerNukkitOnly @Since("FUTURE") CAULDRON_NAME("item.cauldron.name"), // Cauldron
        @PowerNukkitOnly @Since("FUTURE") CHARCOAL_NAME("item.charcoal.name"), // Charcoal
        @PowerNukkitOnly @Since("FUTURE") CHAINMAIL_CHESTPLATE_NAME("item.chainmail_chestplate.name"), // Chain Chestplate
        @PowerNukkitOnly @Since("FUTURE") LEATHER_CHESTPLATE_NAME("item.leather_chestplate.name"), // Leather Tunic
        @PowerNukkitOnly @Since("FUTURE") DIAMOND_CHESTPLATE_NAME("item.diamond_chestplate.name"), // Diamond Chestplate
        @PowerNukkitOnly @Since("FUTURE") GOLDEN_CHESTPLATE_NAME("item.golden_chestplate.name"), // Golden Chestplate
        @PowerNukkitOnly @Since("FUTURE") IRON_CHESTPLATE_NAME("item.iron_chestplate.name"), // Iron Chestplate
        @PowerNukkitOnly @Since("FUTURE") CHORUS_FRUIT_NAME("item.chorus_fruit.name"), // Chorus Fruit
        @PowerNukkitOnly @Since("FUTURE") CHORUS_FRUIT_POPPED_NAME("item.chorus_fruit_popped.name"), // Popped Chorus Fruit
        @PowerNukkitOnly @Since("FUTURE") COOKED_BEEF_NAME("item.cooked_beef.name"), // Cooked Beef
        @PowerNukkitOnly @Since("FUTURE") COOKED_CHICKEN_NAME("item.cooked_chicken.name"), // Cooked Chicken
        @PowerNukkitOnly @Since("FUTURE") COOKED_PORKCHOP_NAME("item.cooked_porkchop.name"), // Cooked Porkchop
        @PowerNukkitOnly @Since("FUTURE") CHICKEN_NAME("item.chicken.name"), // Raw Chicken
        @PowerNukkitOnly @Since("FUTURE") CLAY_BALL_NAME("item.clay_ball.name"), // Clay
        @PowerNukkitOnly @Since("FUTURE") CLOCK_NAME("item.clock.name"), // Clock
        @PowerNukkitOnly @Since("FUTURE") COAL_NAME("item.coal.name"), // Coal
        @PowerNukkitOnly @Since("FUTURE") COMPARATOR_NAME("item.comparator.name"), // Redstone Comparator
        @PowerNukkitOnly @Since("FUTURE") COMPASS_NAME("item.compass.name"), // Compass
        @PowerNukkitOnly @Since("FUTURE") LODESTONECOMPASS_NAME("item.lodestonecompass.name"), // Lodestone Compass
        @PowerNukkitOnly @Since("FUTURE") COOKIE_NAME("item.cookie.name"), // Cookie
        @PowerNukkitOnly @Since("FUTURE") CROSSBOW_NAME("item.crossbow.name"), // Crossbow
        @PowerNukkitOnly @Since("FUTURE") DIAMOND_NAME("item.diamond.name"), // Diamond
        @PowerNukkitOnly @Since("FUTURE") REPEATER_NAME("item.repeater.name"), // Redstone Repeater
        @PowerNukkitOnly @Since("FUTURE") ACACIA_DOOR_NAME("item.acacia_door.name"), // Acacia Door
        @PowerNukkitOnly @Since("FUTURE") BIRCH_DOOR_NAME("item.birch_door.name"), // Birch Door
        @PowerNukkitOnly @Since("FUTURE") DARK_OAK_DOOR_NAME("item.dark_oak_door.name"), // Dark Oak Door
        @PowerNukkitOnly @Since("FUTURE") IRON_DOOR_NAME("item.iron_door.name"), // Iron Door
        @PowerNukkitOnly @Since("FUTURE") JUNGLE_DOOR_NAME("item.jungle_door.name"), // Jungle Door
        @PowerNukkitOnly @Since("FUTURE") WOODEN_DOOR_NAME("item.wooden_door.name"), // Oak Door
        @PowerNukkitOnly @Since("FUTURE") SPRUCE_DOOR_NAME("item.spruce_door.name"), // Spruce Door
        @PowerNukkitOnly @Since("FUTURE") CRIMSON_DOOR_NAME("item.crimson_door.name"), // Crimson Door
        @PowerNukkitOnly @Since("FUTURE") WARPED_DOOR_NAME("item.warped_door.name"), // Warped Door
        @PowerNukkitOnly @Since("FUTURE") DRAGON_BREATH_NAME("item.dragon_breath.name"), // Dragon's Breath
        @PowerNukkitOnly @Since("FUTURE") DYED("item.dyed"), // Dyed
        @PowerNukkitOnly @Since("FUTURE") DYE_BLACK_NAME("item.dye.black.name"), // Ink Sac
        @PowerNukkitOnly @Since("FUTURE") DYE_BLACK_NEW_NAME("item.dye.black_new.name"), // Black Dye
        @PowerNukkitOnly @Since("FUTURE") DYE_BLUE_NAME("item.dye.blue.name"), // Lapis Lazuli
        @PowerNukkitOnly @Since("FUTURE") DYE_BLUE_NEW_NAME("item.dye.blue_new.name"), // Blue Dye
        @PowerNukkitOnly @Since("FUTURE") DYE_BROWN_NAME("item.dye.brown.name"), // Cocoa Beans
        @PowerNukkitOnly @Since("FUTURE") DYE_BROWN_NEW_NAME("item.dye.brown_new.name"), // Brown Dye
        @PowerNukkitOnly @Since("FUTURE") DYE_CYAN_NAME("item.dye.cyan.name"), // Cyan Dye
        @PowerNukkitOnly @Since("FUTURE") DYE_GRAY_NAME("item.dye.gray.name"), // Gray Dye
        @PowerNukkitOnly @Since("FUTURE") DYE_GREEN_NAME("item.dye.green.name"), // Green Dye
        @PowerNukkitOnly @Since("FUTURE") DYE_LIGHTBLUE_NAME("item.dye.lightBlue.name"), // Light Blue Dye
        @PowerNukkitOnly @Since("FUTURE") DYE_LIME_NAME("item.dye.lime.name"), // Lime Dye
        @PowerNukkitOnly @Since("FUTURE") DYE_MAGENTA_NAME("item.dye.magenta.name"), // Magenta Dye
        @PowerNukkitOnly @Since("FUTURE") DYE_ORANGE_NAME("item.dye.orange.name"), // Orange Dye
        @PowerNukkitOnly @Since("FUTURE") DYE_PINK_NAME("item.dye.pink.name"), // Pink Dye
        @PowerNukkitOnly @Since("FUTURE") DYE_PURPLE_NAME("item.dye.purple.name"), // Purple Dye
        @PowerNukkitOnly @Since("FUTURE") DYE_RED_NAME("item.dye.red.name"), // Red Dye
        @PowerNukkitOnly @Since("FUTURE") DYE_SILVER_NAME("item.dye.silver.name"), // Light Gray Dye
        @PowerNukkitOnly @Since("FUTURE") DYE_WHITE_NAME("item.dye.white.name"), // Bone Meal
        @PowerNukkitOnly @Since("FUTURE") DYE_WHITE_NEW_NAME("item.dye.white_new.name"), // White Dye
        @PowerNukkitOnly @Since("FUTURE") DYE_YELLOW_NAME("item.dye.yellow.name"), // Yellow Dye
        @PowerNukkitOnly @Since("FUTURE") GLOW_INK_SAC_NAME("item.glow_ink_sac.name"), // Glow Ink Sac
        @PowerNukkitOnly @Since("FUTURE") GLOW_FRAME_NAME("item.glow_frame.name"), // Glow Item Frame
        @PowerNukkitOnly @Since("FUTURE") EGG_NAME("item.egg.name"), // Egg
        @PowerNukkitOnly @Since("FUTURE") ELYTRA_NAME("item.elytra.name"), // Elytra
        @PowerNukkitOnly @Since("FUTURE") EMERALD_NAME("item.emerald.name"), // Emerald
        @PowerNukkitOnly @Since("FUTURE") EMPTYMAP_NAME("item.emptyMap.name"), // Empty Map
        @PowerNukkitOnly @Since("FUTURE") EMPTYLOCATORMAP_NAME("item.emptyLocatorMap.name"), // Empty Locator Map
        @PowerNukkitOnly @Since("FUTURE") EMPTYPOTION_NAME("item.emptyPotion.name"), // Water Bottle
        @PowerNukkitOnly @Since("FUTURE") ENCHANTED_BOOK_NAME("item.enchanted_book.name"), // Enchanted Book
        @PowerNukkitOnly @Since("FUTURE") END_CRYSTAL_NAME("item.end_crystal.name"), // End Crystal
        @PowerNukkitOnly @Since("FUTURE") ENDER_EYE_NAME("item.ender_eye.name"), // Eye of Ender
        @PowerNukkitOnly @Since("FUTURE") ENDER_PEARL_NAME("item.ender_pearl.name"), // Ender Pearl
        @PowerNukkitOnly @Since("FUTURE") EXPERIENCE_BOTTLE_NAME("item.experience_bottle.name"), // Bottle o' Enchanting
        @PowerNukkitOnly @Since("FUTURE") FEATHER_NAME("item.feather.name"), // Feather
        @PowerNukkitOnly @Since("FUTURE") FERMENTED_SPIDER_EYE_NAME("item.fermented_spider_eye.name"), // Fermented Spider Eye
        @PowerNukkitOnly @Since("FUTURE") FIREBALL_NAME("item.fireball.name"), // Fire Charge
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_FLIGHT("item.fireworks.flight"), // Flight Duration:
        @PowerNukkitOnly @Since("FUTURE") FIREWORKS_NAME("item.fireworks.name"), // Firework Rocket
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_BLACK("item.fireworksCharge.black"), // Black
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_BLUE("item.fireworksCharge.blue"), // Blue
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_BROWN("item.fireworksCharge.brown"), // Brown
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_CUSTOMCOLOR("item.fireworksCharge.customColor"), // Custom
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_CYAN("item.fireworksCharge.cyan"), // Cyan
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_FADETO("item.fireworksCharge.fadeTo"), // Fade to
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_FLICKER("item.fireworksCharge.flicker"), // Twinkle
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_GRAY("item.fireworksCharge.gray"), // Gray
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_GREEN("item.fireworksCharge.green"), // Green
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_LIGHTBLUE("item.fireworksCharge.lightBlue"), // Light Blue
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_LIME("item.fireworksCharge.lime"), // Lime
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_MAGENTA("item.fireworksCharge.magenta"), // Magenta
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_NAME("item.fireworksCharge.name"), // Firework Star
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_ORANGE("item.fireworksCharge.orange"), // Orange
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_PINK("item.fireworksCharge.pink"), // Pink
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_PURPLE("item.fireworksCharge.purple"), // Purple
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_RED("item.fireworksCharge.red"), // Red
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_SILVER("item.fireworksCharge.silver"), // Light Gray
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_TRAIL("item.fireworksCharge.trail"), // Trail
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_TYPE("item.fireworksCharge.type"), // Unknown Shape
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_TYPE_0("item.fireworksCharge.type.0"), // Small Ball
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_TYPE_1("item.fireworksCharge.type.1"), // Large Ball
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_TYPE_2("item.fireworksCharge.type.2"), // Star-shaped
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_TYPE_3("item.fireworksCharge.type.3"), // Creeper-shaped
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_TYPE_4("item.fireworksCharge.type.4"), // Burst
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_WHITE("item.fireworksCharge.white"), // White
        @PowerNukkitOnly @Since("FUTURE") FIREWORKSCHARGE_YELLOW("item.fireworksCharge.yellow"), // Yellow
        @PowerNukkitOnly @Since("FUTURE") CLOWNFISH_NAME("item.clownfish.name"), // Tropical Fish
        @PowerNukkitOnly @Since("FUTURE") COOKED_FISH_NAME("item.cooked_fish.name"), // Cooked Cod
        @PowerNukkitOnly @Since("FUTURE") FISH_NAME("item.fish.name"), // Raw Cod
        @PowerNukkitOnly @Since("FUTURE") PUFFERFISH_NAME("item.pufferfish.name"), // Pufferfish
        @PowerNukkitOnly @Since("FUTURE") COOKED_SALMON_NAME("item.cooked_salmon.name"), // Cooked Salmon
        @PowerNukkitOnly @Since("FUTURE") SALMON_NAME("item.salmon.name"), // Raw Salmon
        @PowerNukkitOnly @Since("FUTURE") FISHING_ROD_NAME("item.fishing_rod.name"), // Fishing Rod
        @PowerNukkitOnly @Since("FUTURE") FLINT_NAME("item.flint.name"), // Flint
        @PowerNukkitOnly @Since("FUTURE") FLINT_AND_STEEL_NAME("item.flint_and_steel.name"), // Flint and Steel
        @PowerNukkitOnly @Since("FUTURE") FLOWER_POT_NAME("item.flower_pot.name"), // Flower Pot
        @PowerNukkitOnly @Since("FUTURE") FRAME_NAME("item.frame.name"), // Item Frame
        @PowerNukkitOnly @Since("FUTURE") GHAST_TEAR_NAME("item.ghast_tear.name"), // Ghast Tear
        @PowerNukkitOnly @Since("FUTURE") GLASS_BOTTLE_NAME("item.glass_bottle.name"), // Glass Bottle
        @PowerNukkitOnly @Since("FUTURE") GOLD_NUGGET_NAME("item.gold_nugget.name"), // Gold Nugget
        @PowerNukkitOnly @Since("FUTURE") IRON_NUGGET_NAME("item.iron_nugget.name"), // Iron Nugget
        @PowerNukkitOnly @Since("FUTURE") DIAMOND_AXE_NAME("item.diamond_axe.name"), // Diamond Axe
        @PowerNukkitOnly @Since("FUTURE") GOLDEN_AXE_NAME("item.golden_axe.name"), // Golden Axe
        @PowerNukkitOnly @Since("FUTURE") IRON_AXE_NAME("item.iron_axe.name"), // Iron Axe
        @PowerNukkitOnly @Since("FUTURE") STONE_AXE_NAME("item.stone_axe.name"), // Stone Axe
        @PowerNukkitOnly @Since("FUTURE") WOODEN_AXE_NAME("item.wooden_axe.name"), // Wooden Axe
        @PowerNukkitOnly @Since("FUTURE") CHAINMAIL_HELMET_NAME("item.chainmail_helmet.name"), // Chain Helmet
        @PowerNukkitOnly @Since("FUTURE") LEATHER_HELMET_NAME("item.leather_helmet.name"), // Leather Cap
        @PowerNukkitOnly @Since("FUTURE") DIAMOND_HELMET_NAME("item.diamond_helmet.name"), // Diamond Helmet
        @PowerNukkitOnly @Since("FUTURE") GOLDEN_HELMET_NAME("item.golden_helmet.name"), // Golden Helmet
        @PowerNukkitOnly @Since("FUTURE") IRON_HELMET_NAME("item.iron_helmet.name"), // Iron Helmet
        @PowerNukkitOnly @Since("FUTURE") DIAMOND_HOE_NAME("item.diamond_hoe.name"), // Diamond Hoe
        @PowerNukkitOnly @Since("FUTURE") GOLDEN_HOE_NAME("item.golden_hoe.name"), // Golden Hoe
        @PowerNukkitOnly @Since("FUTURE") IRON_HOE_NAME("item.iron_hoe.name"), // Iron Hoe
        @PowerNukkitOnly @Since("FUTURE") STONE_HOE_NAME("item.stone_hoe.name"), // Stone Hoe
        @PowerNukkitOnly @Since("FUTURE") WOODEN_HOE_NAME("item.wooden_hoe.name"), // Wooden Hoe
        @PowerNukkitOnly @Since("FUTURE") HONEY_BOTTLE_NAME("item.honey_bottle.name"), // Honey Bottle
        @PowerNukkitOnly @Since("FUTURE") HONEYCOMB_NAME("item.honeycomb.name"), // Honeycomb
        @PowerNukkitOnly @Since("FUTURE") HORSEARMORDIAMOND_NAME("item.horsearmordiamond.name"), // Diamond Horse Armor
        @PowerNukkitOnly @Since("FUTURE") HORSEARMORGOLD_NAME("item.horsearmorgold.name"), // Gold Horse Armor
        @PowerNukkitOnly @Since("FUTURE") HORSEARMORIRON_NAME("item.horsearmoriron.name"), // Iron Horse Armor
        @PowerNukkitOnly @Since("FUTURE") HORSEARMORLEATHER_NAME("item.horsearmorleather.name"), // Leather Horse Armor
        @PowerNukkitOnly @Since("FUTURE") GOLD_INGOT_NAME("item.gold_ingot.name"), // Gold Ingot
        @PowerNukkitOnly @Since("FUTURE") IRON_INGOT_NAME("item.iron_ingot.name"), // Iron Ingot
        @PowerNukkitOnly @Since("FUTURE") NETHERITE_INGOT_NAME("item.netherite_ingot.name"), // Netherite Ingot
        @PowerNukkitOnly @Since("FUTURE") NETHERITE_SCRAP_NAME("item.netherite_scrap.name"), // Netherite Scrap
        @PowerNukkitOnly @Since("FUTURE") NETHERITE_SWORD_NAME("item.netherite_sword.name"), // Netherite Sword
        @PowerNukkitOnly @Since("FUTURE") NETHERITE_PICKAXE_NAME("item.netherite_pickaxe.name"), // Netherite Pickaxe
        @PowerNukkitOnly @Since("FUTURE") NETHERITE_AXE_NAME("item.netherite_axe.name"), // Netherite Axe
        @PowerNukkitOnly @Since("FUTURE") NETHERITE_SHOVEL_NAME("item.netherite_shovel.name"), // Netherite Shovel
        @PowerNukkitOnly @Since("FUTURE") NETHERITE_HOE_NAME("item.netherite_hoe.name"), // Netherite Hoe
        @PowerNukkitOnly @Since("FUTURE") NETHERITE_BOOTS_NAME("item.netherite_boots.name"), // Netherite Boots
        @PowerNukkitOnly @Since("FUTURE") NETHERITE_LEGGINGS_NAME("item.netherite_leggings.name"), // Netherite Leggings
        @PowerNukkitOnly @Since("FUTURE") NETHERITE_CHESTPLATE_NAME("item.netherite_chestplate.name"), // Netherite Chestplate
        @PowerNukkitOnly @Since("FUTURE") NETHERITE_HELMET_NAME("item.netherite_helmet.name"), // Netherite Helmet
        @PowerNukkitOnly @Since("FUTURE") LEAD_NAME("item.lead.name"), // Lead
        @PowerNukkitOnly @Since("FUTURE") LEATHER_NAME("item.leather.name"), // Leather
        @PowerNukkitOnly @Since("FUTURE") LEAVES_NAME("item.leaves.name"), // Leaves
        @PowerNukkitOnly @Since("FUTURE") CHAINMAIL_LEGGINGS_NAME("item.chainmail_leggings.name"), // Chain Leggings
        @PowerNukkitOnly @Since("FUTURE") LEATHER_LEGGINGS_NAME("item.leather_leggings.name"), // Leather Pants
        @PowerNukkitOnly @Since("FUTURE") DIAMOND_LEGGINGS_NAME("item.diamond_leggings.name"), // Diamond Leggings
        @PowerNukkitOnly @Since("FUTURE") GOLDEN_LEGGINGS_NAME("item.golden_leggings.name"), // Golden Leggings
        @PowerNukkitOnly @Since("FUTURE") IRON_LEGGINGS_NAME("item.iron_leggings.name"), // Iron Leggings
        @PowerNukkitOnly @Since("FUTURE") NAUTILUS_SHELL_NAME("item.nautilus_shell.name"), // Nautilus Shell
        @PowerNukkitOnly @Since("FUTURE") HEART_OF_THE_SEA_NAME("item.heart_of_the_sea.name"), // Heart of the Sea
        @PowerNukkitOnly @Since("FUTURE") MAGMA_CREAM_NAME("item.magma_cream.name"), // Magma Cream
        @PowerNukkitOnly @Since("FUTURE") MAP_NAME("item.map.name"), // Map
        @PowerNukkitOnly @Since("FUTURE") MAP_EXPLORATION_MANSION_NAME("item.map.exploration.mansion.name"), // Woodland Explorer Map
        @PowerNukkitOnly @Since("FUTURE") MAP_EXPLORATION_MONUMENT_NAME("item.map.exploration.monument.name"), // Ocean Explorer Map
        @PowerNukkitOnly @Since("FUTURE") MAP_EXPLORATION_TREASURE_NAME("item.map.exploration.treasure.name"), // Treasure Map
        @PowerNukkitOnly @Since("FUTURE") MELON_NAME("item.melon.name"), // Melon
        @PowerNukkitOnly @Since("FUTURE") MILK_NAME("item.milk.name"), // Milk
        @PowerNukkitOnly @Since("FUTURE") MINECART_NAME("item.minecart.name"), // Minecart
        @PowerNukkitOnly @Since("FUTURE") CHEST_MINECART_NAME("item.chest_minecart.name"), // Minecart with Chest
        @PowerNukkitOnly @Since("FUTURE") COMMAND_BLOCK_MINECART_NAME("item.command_block_minecart.name"), // Minecart with Command Block
        @PowerNukkitOnly @Since("FUTURE") MINECARTFURNACE_NAME("item.minecartFurnace.name"), // Minecart with Furnace
        @PowerNukkitOnly @Since("FUTURE") HOPPER_MINECART_NAME("item.hopper_minecart.name"), // Minecart with Hopper
        @PowerNukkitOnly @Since("FUTURE") TNT_MINECART_NAME("item.tnt_minecart.name"), // Minecart with TNT
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_AGENT_NAME("item.spawn_egg.entity.agent.name"), // Spawn Agent
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_AXOLOTL_NAME("item.spawn_egg.entity.axolotl.name"), // Spawn Axolotl
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_BEE_NAME("item.spawn_egg.entity.bee.name"), // Spawn Bee
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_HOGLIN_NAME("item.spawn_egg.entity.hoglin.name"), // Spawn Hoglin
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_CAT_NAME("item.spawn_egg.entity.cat.name"), // Spawn Cat
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_CHICKEN_NAME("item.spawn_egg.entity.chicken.name"), // Spawn Chicken
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_COW_NAME("item.spawn_egg.entity.cow.name"), // Spawn Cow
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_COD_NAME("item.spawn_egg.entity.cod.name"), // Spawn Cod
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_GOAT_NAME("item.spawn_egg.entity.goat.name"), // Spawn Goat
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_PUFFERFISH_NAME("item.spawn_egg.entity.pufferfish.name"), // Spawn Pufferfish
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_SALMON_NAME("item.spawn_egg.entity.salmon.name"), // Spawn Salmon
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_TROPICALFISH_NAME("item.spawn_egg.entity.tropicalfish.name"), // Spawn Tropical Fish
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_PIG_NAME("item.spawn_egg.entity.pig.name"), // Spawn Pig
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_SHEEP_NAME("item.spawn_egg.entity.sheep.name"), // Spawn Sheep
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_NPC_NAME("item.spawn_egg.entity.npc.name"), // Spawn NPC
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_WOLF_NAME("item.spawn_egg.entity.wolf.name"), // Spawn Wolf
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_VILLAGER_NAME("item.spawn_egg.entity.villager.name"), // Spawn Villager
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_VILLAGER_V2_NAME("item.spawn_egg.entity.villager_v2.name"), // Spawn Villager
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_VINDICATOR_NAME("item.spawn_egg.entity.vindicator.name"), // Spawn Vindicator
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_MOOSHROOM_NAME("item.spawn_egg.entity.mooshroom.name"), // Spawn Mooshroom
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_SQUID_NAME("item.spawn_egg.entity.squid.name"), // Spawn Squid
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_GLOW_SQUID_NAME("item.spawn_egg.entity.glow_squid.name"), // Spawn Glow Squid
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_RABBIT_NAME("item.spawn_egg.entity.rabbit.name"), // Spawn Rabbit
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_BAT_NAME("item.spawn_egg.entity.bat.name"), // Spawn Bat
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_RAVAGER_NAME("item.spawn_egg.entity.ravager.name"), // Spawn Ravager
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_IRON_GOLEM_NAME("item.spawn_egg.entity.iron_golem.name"), // Spawn Iron Golem
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_SNOW_GOLEM_NAME("item.spawn_egg.entity.snow_golem.name"), // Spawn Snow Golem
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_OCELOT_NAME("item.spawn_egg.entity.ocelot.name"), // Spawn Ocelot
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_PARROT_NAME("item.spawn_egg.entity.parrot.name"), // Spawn Parrot
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_HORSE_NAME("item.spawn_egg.entity.horse.name"), // Spawn Horse
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_LLAMA_NAME("item.spawn_egg.entity.llama.name"), // Spawn Llama
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_POLAR_BEAR_NAME("item.spawn_egg.entity.polar_bear.name"), // Spawn Polar Bear
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_DONKEY_NAME("item.spawn_egg.entity.donkey.name"), // Spawn Donkey
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_MULE_NAME("item.spawn_egg.entity.mule.name"), // Spawn Mule
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_SKELETON_HORSE_NAME("item.spawn_egg.entity.skeleton_horse.name"), // Spawn Skeleton Horse
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_ZOMBIE_HORSE_NAME("item.spawn_egg.entity.zombie_horse.name"), // Spawn Zombie Horse
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_ZOMBIE_NAME("item.spawn_egg.entity.zombie.name"), // Spawn Zombie
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_DROWNED_NAME("item.spawn_egg.entity.drowned.name"), // Spawn Drowned
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_CREEPER_NAME("item.spawn_egg.entity.creeper.name"), // Spawn Creeper
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_SKELETON_NAME("item.spawn_egg.entity.skeleton.name"), // Spawn Skeleton
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_SPIDER_NAME("item.spawn_egg.entity.spider.name"), // Spawn Spider
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_ZOMBIE_PIGMAN_NAME("item.spawn_egg.entity.zombie_pigman.name"), // Spawn Zombified Piglin
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_STRIDER_NAME("item.spawn_egg.entity.strider.name"), // Spawn Strider
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_SLIME_NAME("item.spawn_egg.entity.slime.name"), // Spawn Slime
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_ENDERMAN_NAME("item.spawn_egg.entity.enderman.name"), // Spawn Enderman
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_SILVERFISH_NAME("item.spawn_egg.entity.silverfish.name"), // Spawn Silverfish
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_CAVE_SPIDER_NAME("item.spawn_egg.entity.cave_spider.name"), // Spawn Cave Spider
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_GHAST_NAME("item.spawn_egg.entity.ghast.name"), // Spawn Ghast
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_MAGMA_CUBE_NAME("item.spawn_egg.entity.magma_cube.name"), // Spawn Magma Cube
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_BLAZE_NAME("item.spawn_egg.entity.blaze.name"), // Spawn Blaze
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_ZOMBIE_VILLAGER_NAME("item.spawn_egg.entity.zombie_villager.name"), // Spawn Zombie Villager
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_ZOMBIE_VILLAGER_V2_NAME("item.spawn_egg.entity.zombie_villager_v2.name"), // Spawn Zombie Villager
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_WITCH_NAME("item.spawn_egg.entity.witch.name"), // Spawn Witch
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_STRAY_NAME("item.spawn_egg.entity.stray.name"), // Spawn Stray
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_HUSK_NAME("item.spawn_egg.entity.husk.name"), // Spawn Husk
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_WITHER_SKELETON_NAME("item.spawn_egg.entity.wither_skeleton.name"), // Spawn Wither Skeleton
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_GUARDIAN_NAME("item.spawn_egg.entity.guardian.name"), // Spawn Guardian
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_ELDER_GUARDIAN_NAME("item.spawn_egg.entity.elder_guardian.name"), // Spawn Elder Guardian
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_SHULKER_NAME("item.spawn_egg.entity.shulker.name"), // Spawn Shulker
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_ENDERMITE_NAME("item.spawn_egg.entity.endermite.name"), // Spawn Endermite
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_EVOCATION_ILLAGER_NAME("item.spawn_egg.entity.evocation_illager.name"), // Spawn Evoker
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_VEX_NAME("item.spawn_egg.entity.vex.name"), // Spawn Vex
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_TURTLE_NAME("item.spawn_egg.entity.turtle.name"), // Spawn Sea Turtle
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_DOLPHIN_NAME("item.spawn_egg.entity.dolphin.name"), // Spawn Dolphin
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_PHANTOM_NAME("item.spawn_egg.entity.phantom.name"), // Spawn Phantom
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_PANDA_NAME("item.spawn_egg.entity.panda.name"), // Spawn Panda
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_PILLAGER_NAME("item.spawn_egg.entity.pillager.name"), // Spawn Pillager
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_PIGLIN_BRUTE_NAME("item.spawn_egg.entity.piglin_brute.name"), // Spawn Piglin Brute
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_PIGLIN_NAME("item.spawn_egg.entity.piglin.name"), // Spawn Piglin
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_FOX_NAME("item.spawn_egg.entity.fox.name"), // Spawn Fox
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_UNKNOWN_NAME("item.spawn_egg.entity.unknown.name"), // Spawn
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_WANDERING_TRADER_NAME("item.spawn_egg.entity.wandering_trader.name"), // Spawn Wandering Trader
        @PowerNukkitOnly @Since("FUTURE") SPAWN_EGG_ENTITY_ZOGLIN_NAME("item.spawn_egg.entity.zoglin.name"), // Spawn Zoglin
        @PowerNukkitOnly @Since("FUTURE") TRIDENT_NAME("item.trident.name"), // Trident
        @PowerNukkitOnly @Since("FUTURE") MUSHROOM_STEW_NAME("item.mushroom_stew.name"), // Mushroom Stew
        @PowerNukkitOnly @Since("FUTURE") MUTTONCOOKED_NAME("item.muttonCooked.name"), // Cooked Mutton
        @PowerNukkitOnly @Since("FUTURE") MUTTONRAW_NAME("item.muttonRaw.name"), // Raw Mutton
        @PowerNukkitOnly @Since("FUTURE") NAME_TAG_NAME("item.name_tag.name"), // Name Tag
        @PowerNukkitOnly @Since("FUTURE") NETHERBRICK_NAME("item.netherbrick.name"), // Nether Brick
        @PowerNukkitOnly @Since("FUTURE") QUARTZ_NAME("item.quartz.name"), // Nether Quartz
        @PowerNukkitOnly @Since("FUTURE") NETHER_WART_NAME("item.nether_wart.name"), // Nether Wart
        @PowerNukkitOnly @Since("FUTURE") NETHERSTAR_NAME("item.netherStar.name"), // Nether Star
        @PowerNukkitOnly @Since("FUTURE") PAINTING_NAME("item.painting.name"), // Painting
        @PowerNukkitOnly @Since("FUTURE") PAPER_NAME("item.paper.name"), // Paper
        @PowerNukkitOnly @Since("FUTURE") DIAMOND_PICKAXE_NAME("item.diamond_pickaxe.name"), // Diamond Pickaxe
        @PowerNukkitOnly @Since("FUTURE") GOLDEN_PICKAXE_NAME("item.golden_pickaxe.name"), // Golden Pickaxe
        @PowerNukkitOnly @Since("FUTURE") IRON_PICKAXE_NAME("item.iron_pickaxe.name"), // Iron Pickaxe
        @PowerNukkitOnly @Since("FUTURE") STONE_PICKAXE_NAME("item.stone_pickaxe.name"), // Stone Pickaxe
        @PowerNukkitOnly @Since("FUTURE") WOODEN_PICKAXE_NAME("item.wooden_pickaxe.name"), // Wooden Pickaxe
        @PowerNukkitOnly @Since("FUTURE") PORKCHOP_COOKED_NAME("item.porkchop_cooked.name"), // Cooked Porkchop
        @PowerNukkitOnly @Since("FUTURE") PORKCHOP_NAME("item.porkchop.name"), // Raw Porkchop
        @PowerNukkitOnly @Since("FUTURE") PORTFOLIO_NAME("item.portfolio.name"), // Portfolio
        @PowerNukkitOnly @Since("FUTURE") POTATO_NAME("item.potato.name"), // Potato
        @PowerNukkitOnly @Since("FUTURE") BAKED_POTATO_NAME("item.baked_potato.name"), // Baked Potato
        @PowerNukkitOnly @Since("FUTURE") POISONOUS_POTATO_NAME("item.poisonous_potato.name"), // Poisonous Potato
        @PowerNukkitOnly @Since("FUTURE") POTION_NAME("item.potion.name"), // Potion
        @PowerNukkitOnly @Since("FUTURE") PRISMARINE_CRYSTALS_NAME("item.prismarine_crystals.name"), // Prismarine Crystals
        @PowerNukkitOnly @Since("FUTURE") PRISMARINE_SHARD_NAME("item.prismarine_shard.name"), // Prismarine Shard
        @PowerNukkitOnly @Since("FUTURE") PUMPKIN_PIE_NAME("item.pumpkin_pie.name"), // Pumpkin Pie
        @PowerNukkitOnly @Since("FUTURE") COOKED_RABBIT_NAME("item.cooked_rabbit.name"), // Cooked Rabbit
        @PowerNukkitOnly @Since("FUTURE") RABBIT_FOOT_NAME("item.rabbit_foot.name"), // Rabbit's Foot
        @PowerNukkitOnly @Since("FUTURE") RABBIT_HIDE_NAME("item.rabbit_hide.name"), // Rabbit Hide
        @PowerNukkitOnly @Since("FUTURE") RABBIT_NAME("item.rabbit.name"), // Raw Rabbit
        @PowerNukkitOnly @Since("FUTURE") RABBIT_STEW_NAME("item.rabbit_stew.name"), // Rabbit Stew
        @PowerNukkitOnly @Since("FUTURE") RECORD_11_DESC("item.record_11.desc"), // C418 - 11
        @PowerNukkitOnly @Since("FUTURE") RECORD_13_DESC("item.record_13.desc"), // C418 - 13
        @PowerNukkitOnly @Since("FUTURE") RECORD_BLOCKS_DESC("item.record_blocks.desc"), // C418 - blocks
        @PowerNukkitOnly @Since("FUTURE") RECORD_CAT_DESC("item.record_cat.desc"), // C418 - cat
        @PowerNukkitOnly @Since("FUTURE") RECORD_CHIRP_DESC("item.record_chirp.desc"), // C418 - chirp
        @PowerNukkitOnly @Since("FUTURE") RECORD_FAR_DESC("item.record_far.desc"), // C418 - far
        @PowerNukkitOnly @Since("FUTURE") RECORD_MALL_DESC("item.record_mall.desc"), // C418 - mall
        @PowerNukkitOnly @Since("FUTURE") RECORD_MELLOHI_DESC("item.record_mellohi.desc"), // C418 - mellohi
        @PowerNukkitOnly @Since("FUTURE") RECORD_NAME("item.record.name"), // Music Disc
        @PowerNukkitOnly @Since("FUTURE") RECORD_STAL_DESC("item.record_stal.desc"), // C418 - stal
        @PowerNukkitOnly @Since("FUTURE") RECORD_STRAD_DESC("item.record_strad.desc"), // C418 - strad
        @PowerNukkitOnly @Since("FUTURE") RECORD_WAIT_DESC("item.record_wait.desc"), // C418 - wait
        @PowerNukkitOnly @Since("FUTURE") RECORD_WARD_DESC("item.record_ward.desc"), // C418 - ward
        @PowerNukkitOnly @Since("FUTURE") RECORD_PIGSTEP_DESC("item.record_pigstep.desc"), // Lena Raine - Pigstep
        @PowerNukkitOnly @Since("FUTURE") REDSTONE_NAME("item.redstone.name"), // Redstone Dust
        @PowerNukkitOnly @Since("FUTURE") REEDS_NAME("item.reeds.name"), // Sugar Canes
        @PowerNukkitOnly @Since("FUTURE") KELP_NAME("item.kelp.name"), // Kelp
        @PowerNukkitOnly @Since("FUTURE") DRIED_KELP_NAME("item.dried_kelp.name"), // Dried Kelp
        @PowerNukkitOnly @Since("FUTURE") ROTTEN_FLESH_NAME("item.rotten_flesh.name"), // Rotten Flesh
        @PowerNukkitOnly @Since("FUTURE") RUBY_NAME("item.ruby.name"), // Ruby
        @PowerNukkitOnly @Since("FUTURE") SADDLE_NAME("item.saddle.name"), // Saddle
        @PowerNukkitOnly @Since("FUTURE") WHEAT_SEEDS_NAME("item.wheat_seeds.name"), // Seeds
        @PowerNukkitOnly @Since("FUTURE") BEETROOT_SEEDS_NAME("item.beetroot_seeds.name"), // Beetroot Seeds
        @PowerNukkitOnly @Since("FUTURE") MELON_SEEDS_NAME("item.melon_seeds.name"), // Melon Seeds
        @PowerNukkitOnly @Since("FUTURE") PUMPKIN_SEEDS_NAME("item.pumpkin_seeds.name"), // Pumpkin Seeds
        @PowerNukkitOnly @Since("FUTURE") SHEARS_NAME("item.shears.name"), // Shears
        @PowerNukkitOnly @Since("FUTURE") DIAMOND_SHOVEL_NAME("item.diamond_shovel.name"), // Diamond Shovel
        @PowerNukkitOnly @Since("FUTURE") GOLDEN_SHOVEL_NAME("item.golden_shovel.name"), // Golden Shovel
        @PowerNukkitOnly @Since("FUTURE") IRON_SHOVEL_NAME("item.iron_shovel.name"), // Iron Shovel
        @PowerNukkitOnly @Since("FUTURE") STONE_SHOVEL_NAME("item.stone_shovel.name"), // Stone Shovel
        @PowerNukkitOnly @Since("FUTURE") WOODEN_SHOVEL_NAME("item.wooden_shovel.name"), // Wooden Shovel
        @PowerNukkitOnly @Since("FUTURE") SIGN_NAME("item.sign.name"), // Oak Sign
        @PowerNukkitOnly @Since("FUTURE") SPRUCE_SIGN_NAME("item.spruce_sign.name"), // Spruce Sign
        @PowerNukkitOnly @Since("FUTURE") BIRCH_SIGN_NAME("item.birch_sign.name"), // Birch Sign
        @PowerNukkitOnly @Since("FUTURE") JUNGLE_SIGN_NAME("item.jungle_sign.name"), // Jungle Sign
        @PowerNukkitOnly @Since("FUTURE") ACACIA_SIGN_NAME("item.acacia_sign.name"), // Acacia Sign
        @PowerNukkitOnly @Since("FUTURE") DARKOAK_SIGN_NAME("item.darkoak_sign.name"), // Dark Oak Sign
        @PowerNukkitOnly @Since("FUTURE") CRIMSON_SIGN_NAME("item.crimson_sign.name"), // Crimson Sign
        @PowerNukkitOnly @Since("FUTURE") WARPED_SIGN_NAME("item.warped_sign.name"), // Warped Sign
        @PowerNukkitOnly @Since("FUTURE") SKULL_CHAR_NAME("item.skull.char.name"), // Head
        @PowerNukkitOnly @Since("FUTURE") SKULL_CREEPER_NAME("item.skull.creeper.name"), // Creeper Head
        @PowerNukkitOnly @Since("FUTURE") SKULL_DRAGON_NAME("item.skull.dragon.name"), // Dragon Head
        @PowerNukkitOnly @Since("FUTURE") SKULL_PLAYER_NAME("item.skull.player.name"), // %s's Head
        @PowerNukkitOnly @Since("FUTURE") SKULL_SKELETON_NAME("item.skull.skeleton.name"), // Skeleton Skull
        @PowerNukkitOnly @Since("FUTURE") SKULL_WITHER_NAME("item.skull.wither.name"), // Wither Skeleton Skull
        @PowerNukkitOnly @Since("FUTURE") SKULL_ZOMBIE_NAME("item.skull.zombie.name"), // Zombie Head
        @PowerNukkitOnly @Since("FUTURE") SLIME_BALL_NAME("item.slime_ball.name"), // Slimeball
        @PowerNukkitOnly @Since("FUTURE") SNOWBALL_NAME("item.snowball.name"), // Snowball
        @PowerNukkitOnly @Since("FUTURE") SPECKLED_MELON_NAME("item.speckled_melon.name"), // Glistering Melon
        @PowerNukkitOnly @Since("FUTURE") SPIDER_EYE_NAME("item.spider_eye.name"), // Spider Eye
        @PowerNukkitOnly @Since("FUTURE") STICK_NAME("item.stick.name"), // Stick
        @PowerNukkitOnly @Since("FUTURE") STRING_NAME("item.string.name"), // String
        @PowerNukkitOnly @Since("FUTURE") SUGAR_NAME("item.sugar.name"), // Sugar
        @PowerNukkitOnly @Since("FUTURE") GUNPOWDER_NAME("item.gunpowder.name"), // Gunpowder
        @PowerNukkitOnly @Since("FUTURE") DIAMOND_SWORD_NAME("item.diamond_sword.name"), // Diamond Sword
        @PowerNukkitOnly @Since("FUTURE") GOLDEN_SWORD_NAME("item.golden_sword.name"), // Golden Sword
        @PowerNukkitOnly @Since("FUTURE") IRON_SWORD_NAME("item.iron_sword.name"), // Iron Sword
        @PowerNukkitOnly @Since("FUTURE") STONE_SWORD_NAME("item.stone_sword.name"), // Stone Sword
        @PowerNukkitOnly @Since("FUTURE") WOODEN_SWORD_NAME("item.wooden_sword.name"), // Wooden Sword
        @PowerNukkitOnly @Since("FUTURE") UNBREAKABLE("item.unbreakable"), // Unbreakable
        @PowerNukkitOnly @Since("FUTURE") WHEAT_NAME("item.wheat.name"), // Wheat
        @PowerNukkitOnly @Since("FUTURE") WRITABLE_BOOK_NAME("item.writable_book.name"), // Book & Quill
        @PowerNukkitOnly @Since("FUTURE") WRITTEN_BOOK_NAME("item.written_book.name"), // Written Book
        @PowerNukkitOnly @Since("FUTURE") GLOWSTONE_DUST_NAME("item.glowstone_dust.name"), // Glowstone Dust
        @PowerNukkitOnly @Since("FUTURE") SHIELD_NAME("item.shield.name"), // Shield
        @PowerNukkitOnly @Since("FUTURE") SHULKER_SHELL_NAME("item.shulker_shell.name"), // Shulker Shell
        @PowerNukkitOnly @Since("FUTURE") TOTEM_NAME("item.totem.name"), // Totem of Undying
        @PowerNukkitOnly @Since("FUTURE") TURTLE_HELMET_NAME("item.turtle_helmet.name"), // Turtle Shell
        @PowerNukkitOnly @Since("FUTURE") TURTLE_SHELL_PIECE_NAME("item.turtle_shell_piece.name"), // Scute
        @PowerNukkitOnly @Since("FUTURE") PHANTOM_MEMBRANE_NAME("item.phantom_membrane.name"), // Phantom Membrane
        @PowerNukkitOnly @Since("FUTURE") SWEET_BERRIES_NAME("item.sweet_berries.name"), // Sweet Berries
        @PowerNukkitOnly @Since("FUTURE") SUSPICIOUS_STEW_NAME("item.suspicious_stew.name"), // Suspicious Stew
        @PowerNukkitOnly @Since("FUTURE") BANNER_PATTERN_BRICKS("item.banner_pattern.bricks"), // Field Masoned
        @PowerNukkitOnly @Since("FUTURE") BANNER_PATTERN_CREEPER("item.banner_pattern.creeper"), // Creeper Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_PATTERN_FLOWER("item.banner_pattern.flower"), // Flower Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_PATTERN_NAME("item.banner_pattern.name"), // Banner Pattern
        @PowerNukkitOnly @Since("FUTURE") BANNER_PATTERN_PIGLIN("item.banner_pattern.piglin"), // Snout
        @PowerNukkitOnly @Since("FUTURE") BANNER_PATTERN_SKULL("item.banner_pattern.skull"), // Skull Charge
        @PowerNukkitOnly @Since("FUTURE") BANNER_PATTERN_THING("item.banner_pattern.thing"), // Thing
        @PowerNukkitOnly @Since("FUTURE") BANNER_PATTERN_VINES("item.banner_pattern.vines"), // Bordure Indented
        @PowerNukkitOnly @Since("FUTURE") BUCKETPOWDERSNOW_NAME("item.bucketPowderSnow.name"), // Powder Snow Bucket
        @PowerNukkitOnly @Since("FUTURE") GLOW_BERRIES_NAME("item.glow_berries.name"), // Glow Berries
        @PowerNukkitOnly @Since("FUTURE") COPPER_INGOT_NAME("item.copper_ingot.name"), // Copper Ingot
        @PowerNukkitOnly @Since("FUTURE") RAW_COPPER_NAME("item.raw_copper.name"), // Raw Copper
        @PowerNukkitOnly @Since("FUTURE") RAW_IRON_NAME("item.raw_iron.name"), // Raw Iron
        @PowerNukkitOnly @Since("FUTURE") RAW_GOLD_NAME("item.raw_gold.name"), // Raw Gold
        @PowerNukkitOnly @Since("FUTURE") SPYGLASS_NAME("item.spyglass.name"), // Spyglass
        @PowerNukkitOnly @Since("FUTURE") AMETHYST_SHARD_NAME("item.amethyst_shard.name"), // Amethyst Shard
        ;
        private final String code; Item(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Tile implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") END_ROD_NAME("tile.end_rod.name"), // End Rod
        @PowerNukkitOnly @Since("FUTURE") ACACIAFENCE_NAME("tile.acaciaFence.name"), // Acacia Fence
        @PowerNukkitOnly @Since("FUTURE") ACACIA_FENCE_GATE_NAME("tile.acacia_fence_gate.name"), // Acacia Fence Gate
        @PowerNukkitOnly @Since("FUTURE") ACTIVATOR_RAIL_NAME("tile.activator_rail.name"), // Activator Rail
        @PowerNukkitOnly @Since("FUTURE") ALLOW_NAME("tile.allow.name"), // Allow
        @PowerNukkitOnly @Since("FUTURE") AIR_NAME("tile.air.name"), // Air
        @PowerNukkitOnly @Since("FUTURE") UNKNOWN_NAME("tile.unknown.name"), // Unknown
        @PowerNukkitOnly @Since("FUTURE") DENY_NAME("tile.deny.name"), // Deny
        @PowerNukkitOnly @Since("FUTURE") BORDER_BLOCK_NAME("tile.border_block.name"), // Border
        @PowerNukkitOnly @Since("FUTURE") ANVIL_INTACT_NAME("tile.anvil.intact.name"), // Anvil
        @PowerNukkitOnly @Since("FUTURE") ANVIL_NAME("tile.anvil.name"), // Anvil
        @PowerNukkitOnly @Since("FUTURE") ANVIL_SLIGHTLYDAMAGED_NAME("tile.anvil.slightlyDamaged.name"), // Slightly Damaged Anvil
        @PowerNukkitOnly @Since("FUTURE") ANVIL_VERYDAMAGED_NAME("tile.anvil.veryDamaged.name"), // Very Damaged Anvil
        @PowerNukkitOnly @Since("FUTURE") BARRIER_NAME("tile.barrier.name"), // Barrier
        @PowerNukkitOnly @Since("FUTURE") BEACON_NAME("tile.beacon.name"), // Beacon
        @PowerNukkitOnly @Since("FUTURE") BEACON_PRIMARY("tile.beacon.primary"), // Primary Power
        @PowerNukkitOnly @Since("FUTURE") BEACON_SECONDARY("tile.beacon.secondary"), // Secondary Power
        @PowerNukkitOnly @Since("FUTURE") BEACON_PRIMARY_POCKET("tile.beacon.primary.pocket"), // Primary
        @PowerNukkitOnly @Since("FUTURE") BEACON_SECONDARY_POCKET("tile.beacon.secondary.pocket"), // Secondary
        @PowerNukkitOnly @Since("FUTURE") BEEHIVE_NAME("tile.beehive.name"), // Beehive
        @PowerNukkitOnly @Since("FUTURE") BEE_NEST_NAME("tile.bee_nest.name"), // Bee Nest
        @PowerNukkitOnly @Since("FUTURE") TARGET_NAME("tile.target.name"), // Target
        @PowerNukkitOnly @Since("FUTURE") BED_NAME("tile.bed.name"), // Bed
        @PowerNukkitOnly @Since("FUTURE") BED_NOSLEEP("tile.bed.noSleep"), // You can only sleep at night
        @PowerNukkitOnly @Since("FUTURE") BED_NOTSAFE("tile.bed.notSafe"), // You may not rest now, there are monsters nearby
        @PowerNukkitOnly @Since("FUTURE") BED_NOTVALID("tile.bed.notValid"), // Your home bed was missing or obstructed
        @PowerNukkitOnly @Since("FUTURE") BED_OCCUPIED("tile.bed.occupied"), // This bed is occupied
        @PowerNukkitOnly @Since("FUTURE") BED_RESPAWNSET("tile.bed.respawnSet"), // Respawn point set
        @PowerNukkitOnly @Since("FUTURE") BED_TOOFAR("tile.bed.tooFar"), // Bed is too far away
        @PowerNukkitOnly @Since("FUTURE") BED_OBSTRUCTED("tile.bed.obstructed"), // Bed is obstructed
        @PowerNukkitOnly @Since("FUTURE") BEDROCK_NAME("tile.bedrock.name"), // Bedrock
        @PowerNukkitOnly @Since("FUTURE") BELL_NAME("tile.bell.name"), // Bell
        @PowerNukkitOnly @Since("FUTURE") CAMERA_NAME("tile.camera.name"), // Camera
        @PowerNukkitOnly @Since("FUTURE") CONDUIT_NAME("tile.conduit.name"), // Conduit
        @PowerNukkitOnly @Since("FUTURE") INVISIBLEBEDROCK_NAME("tile.invisibleBedrock.name"), // Invisible Bedrock
        @PowerNukkitOnly @Since("FUTURE") BEETROOT_NAME("tile.beetroot.name"), // Beetroot
        @PowerNukkitOnly @Since("FUTURE") BIG_DRIPLEAF_NAME("tile.big_dripleaf.name"), // Big Dripleaf
        @PowerNukkitOnly @Since("FUTURE") SMALL_DRIPLEAF_BLOCK_NAME("tile.small_dripleaf_block.name"), // Small Dripleaf
        @PowerNukkitOnly @Since("FUTURE") HANGING_ROOTS_NAME("tile.hanging_roots.name"), // Hanging Roots
        @PowerNukkitOnly @Since("FUTURE") DIRT_WITH_ROOTS_NAME("tile.dirt_with_roots.name"), // Rooted Dirt
        @PowerNukkitOnly @Since("FUTURE") SPORE_BLOSSOM_NAME("tile.spore_blossom.name"), // Spore Blossom
        @PowerNukkitOnly @Since("FUTURE") AZALEA_LEAVES_NAME("tile.azalea_leaves.name"), // Azalea Leaves
        @PowerNukkitOnly @Since("FUTURE") AZALEA_LEAVES_FLOWERED_NAME("tile.azalea_leaves_flowered.name"), // Flowered Azalea Leaves
        @PowerNukkitOnly @Since("FUTURE") AZALEA_NAME("tile.azalea.name"), // Azalea
        @PowerNukkitOnly @Since("FUTURE") FLOWERING_AZALEA_NAME("tile.flowering_azalea.name"), // Flowering Azalea
        @PowerNukkitOnly @Since("FUTURE") CAVE_VINES_NAME("tile.cave_vines.name"), // Cave Vines
        @PowerNukkitOnly @Since("FUTURE") CAVE_VINES_BODY_WITH_BERRIES_NAME("tile.cave_vines_body_with_berries.name"), // Cave Vines
        @PowerNukkitOnly @Since("FUTURE") CAVE_VINES_HEAD_WITH_BERRIES_NAME("tile.cave_vines_head_with_berries.name"), // Cave Vines
        @PowerNukkitOnly @Since("FUTURE") MOSS_BLOCK_NAME("tile.moss_block.name"), // Moss Block
        @PowerNukkitOnly @Since("FUTURE") MOSS_CARPET_NAME("tile.moss_carpet.name"), // Moss Carpet
        @PowerNukkitOnly @Since("FUTURE") BIRCHFENCE_NAME("tile.birchFence.name"), // Birch Fence
        @PowerNukkitOnly @Since("FUTURE") BIRCH_FENCE_GATE_NAME("tile.birch_fence_gate.name"), // Birch Fence Gate
        @PowerNukkitOnly @Since("FUTURE") BLAST_FURNACE_NAME("tile.blast_furnace.name"), // Blast Furnace
        @PowerNukkitOnly @Since("FUTURE") BONE_BLOCK_NAME("tile.bone_block.name"), // Bone Block
        @PowerNukkitOnly @Since("FUTURE") COAL_BLOCK_NAME("tile.coal_block.name"), // Block of Coal
        @PowerNukkitOnly @Since("FUTURE") DIAMOND_BLOCK_NAME("tile.diamond_block.name"), // Block of Diamond
        @PowerNukkitOnly @Since("FUTURE") EMERALD_BLOCK_NAME("tile.emerald_block.name"), // Block of Emerald
        @PowerNukkitOnly @Since("FUTURE") GOLD_BLOCK_NAME("tile.gold_block.name"), // Block of Gold
        @PowerNukkitOnly @Since("FUTURE") IRON_BLOCK_NAME("tile.iron_block.name"), // Block of Iron
        @PowerNukkitOnly @Since("FUTURE") LAPIS_BLOCK_NAME("tile.lapis_block.name"), // Lapis Lazuli Block
        @PowerNukkitOnly @Since("FUTURE") REDSTONE_BLOCK_NAME("tile.redstone_block.name"), // Block of Redstone
        @PowerNukkitOnly @Since("FUTURE") BOOKSHELF_NAME("tile.bookshelf.name"), // Bookshelf
        @PowerNukkitOnly @Since("FUTURE") BRICK_BLOCK_NAME("tile.brick_block.name"), // Brick Block
        @PowerNukkitOnly @Since("FUTURE") BROWN_MUSHROOM_NAME("tile.brown_mushroom.name"), // Brown Mushroom
        @PowerNukkitOnly @Since("FUTURE") BROWN_MUSHROOM_BLOCK_MUSHROOM_NAME("tile.brown_mushroom_block.mushroom.name"), // Mushroom
        @PowerNukkitOnly @Since("FUTURE") BROWN_MUSHROOM_BLOCK_STEM_NAME("tile.brown_mushroom_block.stem.name"), // Mushroom Stem
        @PowerNukkitOnly @Since("FUTURE") BROWN_MUSHROOM_BLOCK_CAP_NAME("tile.brown_mushroom_block.cap.name"), // Brown Mushroom Block
        @PowerNukkitOnly @Since("FUTURE") WOODEN_BUTTON_NAME("tile.wooden_button.name"), // Oak Button
        @PowerNukkitOnly @Since("FUTURE") ACACIA_BUTTON_NAME("tile.acacia_button.name"), // Acacia Button
        @PowerNukkitOnly @Since("FUTURE") BIRCH_BUTTON_NAME("tile.birch_button.name"), // Birch Button
        @PowerNukkitOnly @Since("FUTURE") DARK_OAK_BUTTON_NAME("tile.dark_oak_button.name"), // Dark Oak Button
        @PowerNukkitOnly @Since("FUTURE") JUNGLE_BUTTON_NAME("tile.jungle_button.name"), // Jungle Button
        @PowerNukkitOnly @Since("FUTURE") RESPAWN_ANCHOR_RESPAWNSET("tile.respawn_anchor.respawnSet"), // Respawn point set
        @PowerNukkitOnly @Since("FUTURE") RESPAWN_ANCHOR_NOTVALID("tile.respawn_anchor.notValid"), // Your respawn anchor was out of charges, missing or obstructed
        @PowerNukkitOnly @Since("FUTURE") SPRUCE_BUTTON_NAME("tile.spruce_button.name"), // Spruce Button
        @PowerNukkitOnly @Since("FUTURE") STONE_BUTTON_NAME("tile.stone_button.name"), // Stone Button
        @PowerNukkitOnly @Since("FUTURE") CACTUS_NAME("tile.cactus.name"), // Cactus
        @PowerNukkitOnly @Since("FUTURE") CAKE_NAME("tile.cake.name"), // Cake
        @PowerNukkitOnly @Since("FUTURE") DRIED_KELP_BLOCK_NAME("tile.dried_kelp_block.name"), // Dried Kelp Block
        @PowerNukkitOnly @Since("FUTURE") CARROT_NAME("tile.carrot.name"), // Carrots
        @PowerNukkitOnly @Since("FUTURE") CARVED_PUMPKIN_NAME("tile.carved_pumpkin.name"), // Carved Pumpkin
        @PowerNukkitOnly @Since("FUTURE") CAULDRON_NAME("tile.cauldron.name"), // Cauldron
        @PowerNukkitOnly @Since("FUTURE") CHALKBOARD_ONEBYONE_NAME("tile.chalkboard.oneByOne.name"), // Slate
        @PowerNukkitOnly @Since("FUTURE") CHALKBOARD_TWOBYONE_NAME("tile.chalkboard.twoByOne.name"), // Poster
        @PowerNukkitOnly @Since("FUTURE") CHALKBOARD_THREEBYTWO_NAME("tile.chalkboard.threeByTwo.name"), // Board
        @PowerNukkitOnly @Since("FUTURE") CHEST_NAME("tile.chest.name"), // Chest
        @PowerNukkitOnly @Since("FUTURE") ENDER_CHEST_NAME("tile.ender_chest.name"), // Ender Chest
        @PowerNukkitOnly @Since("FUTURE") JIGSAW_NAME("tile.jigsaw.name"), // Jigsaw Block
        @PowerNukkitOnly @Since("FUTURE") HONEY_BLOCK_NAME("tile.honey_block.name"), // Honey Block
        @PowerNukkitOnly @Since("FUTURE") HONEYCOMB_BLOCK_NAME("tile.honeycomb_block.name"), // Honeycomb Block
        @PowerNukkitOnly @Since("FUTURE") LODESTONE_NAME("tile.lodestone.name"), // Lodestone
        @PowerNukkitOnly @Since("FUTURE") NETHER_SPROUTS_NAME("tile.nether_sprouts.name"), // Nether Sprouts
        @PowerNukkitOnly @Since("FUTURE") CRIMSON_STEM_NAME("tile.crimson_stem.name"), // Crimson Stem
        @PowerNukkitOnly @Since("FUTURE") WARPED_STEM_NAME("tile.warped_stem.name"), // Warped Stem
        @PowerNukkitOnly @Since("FUTURE") STRIPPED_CRIMSON_STEM_NAME("tile.stripped_crimson_stem.name"), // Stripped Crimson Stem
        @PowerNukkitOnly @Since("FUTURE") STRIPPED_WARPED_STEM_NAME("tile.stripped_warped_stem.name"), // Stripped Warped Stem
        @PowerNukkitOnly @Since("FUTURE") CRIMSON_HYPHAE_NAME("tile.crimson_hyphae.name"), // Crimson Hyphae
        @PowerNukkitOnly @Since("FUTURE") WARPED_HYPHAE_NAME("tile.warped_hyphae.name"), // Warped Hyphae
        @PowerNukkitOnly @Since("FUTURE") STRIPPED_CRIMSON_HYPHAE_NAME("tile.stripped_crimson_hyphae.name"), // Stripped Crimson Hyphae
        @PowerNukkitOnly @Since("FUTURE") STRIPPED_WARPED_HYPHAE_NAME("tile.stripped_warped_hyphae.name"), // Stripped Warped Hyphae
        @PowerNukkitOnly @Since("FUTURE") CRIMSON_PLANKS_NAME("tile.crimson_planks.name"), // Crimson Planks
        @PowerNukkitOnly @Since("FUTURE") WARPED_PLANKS_NAME("tile.warped_planks.name"), // Warped Planks
        @PowerNukkitOnly @Since("FUTURE") CRIMSON_DOOR_NAME("tile.crimson_door.name"), // Crimson Door
        @PowerNukkitOnly @Since("FUTURE") WARPED_DOOR_NAME("tile.warped_door.name"), // Warped Door
        @PowerNukkitOnly @Since("FUTURE") CRIMSON_TRAPDOOR_NAME("tile.crimson_trapdoor.name"), // Crimson Trapdoor
        @PowerNukkitOnly @Since("FUTURE") WARPED_TRAPDOOR_NAME("tile.warped_trapdoor.name"), // Warped Trapdoor
        @PowerNukkitOnly @Since("FUTURE") CRIMSON_STANDING_SIGN_NAME("tile.crimson_standing_sign.name"), // Crimson Sign
        @PowerNukkitOnly @Since("FUTURE") WARPED_STANDING_SIGN_NAME("tile.warped_standing_sign.name"), // Warped Sign
        @PowerNukkitOnly @Since("FUTURE") CRIMSON_WALL_SIGN_NAME("tile.crimson_wall_sign.name"), // Crimson Sign
        @PowerNukkitOnly @Since("FUTURE") WARPED_WALL_SIGN_NAME("tile.warped_wall_sign.name"), // Warped Sign
        @PowerNukkitOnly @Since("FUTURE") CRIMSON_STAIRS_NAME("tile.crimson_stairs.name"), // Crimson Stairs
        @PowerNukkitOnly @Since("FUTURE") WARPED_STAIRS_NAME("tile.warped_stairs.name"), // Warped Stairs
        @PowerNukkitOnly @Since("FUTURE") CRIMSON_FENCE_NAME("tile.crimson_fence.name"), // Crimson Fence
        @PowerNukkitOnly @Since("FUTURE") WARPED_FENCE_NAME("tile.warped_fence.name"), // Warped Fence
        @PowerNukkitOnly @Since("FUTURE") CRIMSON_FENCE_GATE_NAME("tile.crimson_fence_gate.name"), // Crimson Fence Gate
        @PowerNukkitOnly @Since("FUTURE") WARPED_FENCE_GATE_NAME("tile.warped_fence_gate.name"), // Warped Fence Gate
        @PowerNukkitOnly @Since("FUTURE") CRIMSON_BUTTON_NAME("tile.crimson_button.name"), // Crimson Button
        @PowerNukkitOnly @Since("FUTURE") WARPED_BUTTON_NAME("tile.warped_button.name"), // Warped Button
        @PowerNukkitOnly @Since("FUTURE") CRIMSON_PRESSURE_PLATE_NAME("tile.crimson_pressure_plate.name"), // Crimson Pressure Plate
        @PowerNukkitOnly @Since("FUTURE") WARPED_PRESSURE_PLATE_NAME("tile.warped_pressure_plate.name"), // Warped Pressure Plate
        @PowerNukkitOnly @Since("FUTURE") CRIMSON_SLAB_NAME("tile.crimson_slab.name"), // Crimson Slab
        @PowerNukkitOnly @Since("FUTURE") WARPED_SLAB_NAME("tile.warped_slab.name"), // Warped Slab
        @PowerNukkitOnly @Since("FUTURE") CRIMSON_DOUBLE_SLAB_NAME("tile.crimson_double_slab.name"), // Crimson Slab
        @PowerNukkitOnly @Since("FUTURE") WARPED_DOUBLE_SLAB_NAME("tile.warped_double_slab.name"), // Warped Slab
        @PowerNukkitOnly @Since("FUTURE") SHROOMLIGHT_NAME("tile.shroomlight.name"), // Shroomlight
        @PowerNukkitOnly @Since("FUTURE") CRIMSON_NYLIUM_NAME("tile.crimson_nylium.name"), // Crimson Nylium
        @PowerNukkitOnly @Since("FUTURE") WARPED_NYLIUM_NAME("tile.warped_nylium.name"), // Warped Nylium
        @PowerNukkitOnly @Since("FUTURE") BASALT_NAME("tile.basalt.name"), // Basalt
        @PowerNukkitOnly @Since("FUTURE") POLISHED_BASALT_NAME("tile.polished_basalt.name"), // Polished Basalt
        @PowerNukkitOnly @Since("FUTURE") BLACKSTONE_NAME("tile.blackstone.name"), // Blackstone
        @PowerNukkitOnly @Since("FUTURE") POLISHED_BLACKSTONE_BRICKS_NAME("tile.polished_blackstone_bricks.name"), // Polished Blackstone Bricks
        @PowerNukkitOnly @Since("FUTURE") CRACKED_POLISHED_BLACKSTONE_BRICKS_NAME("tile.cracked_polished_blackstone_bricks.name"), // Cracked Polished Blackstone Bricks
        @PowerNukkitOnly @Since("FUTURE") POLISHED_BLACKSTONE_BRICK_STAIRS_NAME("tile.polished_blackstone_brick_stairs.name"), // Polished Blackstone Brick Stairs
        @PowerNukkitOnly @Since("FUTURE") BLACKSTONE_STAIRS_NAME("tile.blackstone_stairs.name"), // Blackstone Stairs
        @PowerNukkitOnly @Since("FUTURE") BLACKSTONE_WALL_NAME("tile.blackstone_wall.name"), // Blackstone Wall
        @PowerNukkitOnly @Since("FUTURE") POLISHED_BLACKSTONE_BRICK_WALL_NAME("tile.polished_blackstone_brick_wall.name"), // Polished Blackstone Brick Wall
        @PowerNukkitOnly @Since("FUTURE") CHISELED_POLISHED_BLACKSTONE_NAME("tile.chiseled_polished_blackstone.name"), // Chiseled Polished Blackstone
        @PowerNukkitOnly @Since("FUTURE") GILDED_BLACKSTONE_NAME("tile.gilded_blackstone.name"), // Gilded Blackstone
        @PowerNukkitOnly @Since("FUTURE") BLACKSTONE_SLAB_NAME("tile.blackstone_slab.name"), // Blackstone Slab
        @PowerNukkitOnly @Since("FUTURE") POLISHED_BLACKSTONE_BRICK_SLAB_NAME("tile.polished_blackstone_brick_slab.name"), // Polished Blackstone Brick Slab
        @PowerNukkitOnly @Since("FUTURE") CHAIN_NAME("tile.chain.name"), // Chain
        @PowerNukkitOnly @Since("FUTURE") SOUL_SOIL_NAME("tile.soul_soil.name"), // Soul Soil
        @PowerNukkitOnly @Since("FUTURE") SOUL_FIRE_NAME("tile.soul_fire.name"), // Soul Fire
        @PowerNukkitOnly @Since("FUTURE") POLISHED_BLACKSTONE_NAME("tile.polished_blackstone.name"), // Polished Blackstone
        @PowerNukkitOnly @Since("FUTURE") POLISHED_BLACKSTONE_STAIRS_NAME("tile.polished_blackstone_stairs.name"), // Polished Blackstone Stairs
        @PowerNukkitOnly @Since("FUTURE") POLISHED_BLACKSTONE_SLAB_NAME("tile.polished_blackstone_slab.name"), // Polished Blackstone Slab
        @PowerNukkitOnly @Since("FUTURE") POLISHED_BLACKSTONE_PRESSURE_PLATE_NAME("tile.polished_blackstone_pressure_plate.name"), // Polished Blackstone Pressure Plate
        @PowerNukkitOnly @Since("FUTURE") POLISHED_BLACKSTONE_BUTTON_NAME("tile.polished_blackstone_button.name"), // Polished Blackstone Button
        @PowerNukkitOnly @Since("FUTURE") POLISHED_BLACKSTONE_WALL_NAME("tile.polished_blackstone_wall.name"), // Polished Blackstone Wall
        @PowerNukkitOnly @Since("FUTURE") SOUL_CAMPFIRE_NAME("tile.soul_campfire.name"), // Soul Campfire
        @PowerNukkitOnly @Since("FUTURE") CHISELED_NETHER_BRICKS_NAME("tile.chiseled_nether_bricks.name"), // Chiseled Nether Bricks
        @PowerNukkitOnly @Since("FUTURE") CRACKED_NETHER_BRICKS_NAME("tile.cracked_nether_bricks.name"), // Cracked Nether Bricks
        @PowerNukkitOnly @Since("FUTURE") QUARTZ_BRICKS_NAME("tile.quartz_bricks.name"), // Quartz Bricks
        @PowerNukkitOnly @Since("FUTURE") TRAPPED_CHEST_NAME("tile.trapped_chest.name"), // Trapped Chest
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXWHITE_NAME("tile.shulkerBoxWhite.name"), // White Shulker Box
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXORANGE_NAME("tile.shulkerBoxOrange.name"), // Orange Shulker Box
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXMAGENTA_NAME("tile.shulkerBoxMagenta.name"), // Magenta Shulker Box
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXLIGHTBLUE_NAME("tile.shulkerBoxLightBlue.name"), // Light Blue Shulker Box
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXYELLOW_NAME("tile.shulkerBoxYellow.name"), // Yellow Shulker Box
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXLIME_NAME("tile.shulkerBoxLime.name"), // Lime Shulker Box
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXPINK_NAME("tile.shulkerBoxPink.name"), // Pink Shulker Box
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXGRAY_NAME("tile.shulkerBoxGray.name"), // Gray Shulker Box
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXSILVER_NAME("tile.shulkerBoxSilver.name"), // Light Gray Shulker Box
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXCYAN_NAME("tile.shulkerBoxCyan.name"), // Cyan Shulker Box
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXPURPLE_NAME("tile.shulkerBoxPurple.name"), // Purple Shulker Box
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXBLUE_NAME("tile.shulkerBoxBlue.name"), // Blue Shulker Box
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXBROWN_NAME("tile.shulkerBoxBrown.name"), // Brown Shulker Box
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXGREEN_NAME("tile.shulkerBoxGreen.name"), // Green Shulker Box
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXRED_NAME("tile.shulkerBoxRed.name"), // Red Shulker Box
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOXBLACK_NAME("tile.shulkerBoxBlack.name"), // Black Shulker Box
        @PowerNukkitOnly @Since("FUTURE") SHULKERBOX_NAME("tile.shulkerBox.name"), // Shulker Box
        @PowerNukkitOnly @Since("FUTURE") CHORUS_FLOWER_NAME("tile.chorus_flower.name"), // Chorus Flower
        @PowerNukkitOnly @Since("FUTURE") CHORUS_PLANT_NAME("tile.chorus_plant.name"), // Chorus Plant
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_WHITE_NAME("tile.stained_glass.white.name"), // White Stained Glass
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_SILVER_NAME("tile.stained_glass.silver.name"), // Light Gray Stained Glass
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_GRAY_NAME("tile.stained_glass.gray.name"), // Gray Stained Glass
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_BLACK_NAME("tile.stained_glass.black.name"), // Black Stained Glass
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_BROWN_NAME("tile.stained_glass.brown.name"), // Brown Stained Glass
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_RED_NAME("tile.stained_glass.red.name"), // Red Stained Glass
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_ORANGE_NAME("tile.stained_glass.orange.name"), // Orange Stained Glass
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_YELLOW_NAME("tile.stained_glass.yellow.name"), // Yellow Stained Glass
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_LIME_NAME("tile.stained_glass.lime.name"), // Lime Stained Glass
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_GREEN_NAME("tile.stained_glass.green.name"), // Green Stained Glass
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_CYAN_NAME("tile.stained_glass.cyan.name"), // Cyan Stained Glass
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_LIGHT_BLUE_NAME("tile.stained_glass.light_blue.name"), // Light Blue Stained Glass
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_BLUE_NAME("tile.stained_glass.blue.name"), // Blue Stained Glass
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_PURPLE_NAME("tile.stained_glass.purple.name"), // Purple Stained Glass
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_MAGENTA_NAME("tile.stained_glass.magenta.name"), // Magenta Stained Glass
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_PINK_NAME("tile.stained_glass.pink.name"), // Pink Stained Glass
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_PANE_WHITE_NAME("tile.stained_glass_pane.white.name"), // White Stained Glass Pane
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_PANE_SILVER_NAME("tile.stained_glass_pane.silver.name"), // Light Gray Stained Glass Pane
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_PANE_GRAY_NAME("tile.stained_glass_pane.gray.name"), // Gray Stained Glass Pane
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_PANE_BLACK_NAME("tile.stained_glass_pane.black.name"), // Black Stained Glass Pane
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_PANE_BROWN_NAME("tile.stained_glass_pane.brown.name"), // Brown Stained Glass Pane
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_PANE_RED_NAME("tile.stained_glass_pane.red.name"), // Red Stained Glass Pane
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_PANE_ORANGE_NAME("tile.stained_glass_pane.orange.name"), // Orange Stained Glass Pane
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_PANE_YELLOW_NAME("tile.stained_glass_pane.yellow.name"), // Yellow Stained Glass Pane
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_PANE_LIME_NAME("tile.stained_glass_pane.lime.name"), // Lime Stained Glass Pane
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_PANE_GREEN_NAME("tile.stained_glass_pane.green.name"), // Green Stained Glass Pane
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_PANE_CYAN_NAME("tile.stained_glass_pane.cyan.name"), // Cyan Stained Glass Pane
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_PANE_LIGHT_BLUE_NAME("tile.stained_glass_pane.light_blue.name"), // Light Blue Stained Glass Pane
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_PANE_BLUE_NAME("tile.stained_glass_pane.blue.name"), // Blue Stained Glass Pane
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_PANE_PURPLE_NAME("tile.stained_glass_pane.purple.name"), // Purple Stained Glass Pane
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_PANE_MAGENTA_NAME("tile.stained_glass_pane.magenta.name"), // Magenta Stained Glass Pane
        @PowerNukkitOnly @Since("FUTURE") STAINED_GLASS_PANE_PINK_NAME("tile.stained_glass_pane.pink.name"), // Pink Stained Glass Pane
        @PowerNukkitOnly @Since("FUTURE") CLAY_NAME("tile.clay.name"), // Clay Block
        @PowerNukkitOnly @Since("FUTURE") HARDENED_CLAY_NAME("tile.hardened_clay.name"), // Terracotta
        @PowerNukkitOnly @Since("FUTURE") STAINED_HARDENED_CLAY_BLACK_NAME("tile.stained_hardened_clay.black.name"), // Black Terracotta
        @PowerNukkitOnly @Since("FUTURE") STAINED_HARDENED_CLAY_BLUE_NAME("tile.stained_hardened_clay.blue.name"), // Blue Terracotta
        @PowerNukkitOnly @Since("FUTURE") STAINED_HARDENED_CLAY_BROWN_NAME("tile.stained_hardened_clay.brown.name"), // Brown Terracotta
        @PowerNukkitOnly @Since("FUTURE") STAINED_HARDENED_CLAY_CYAN_NAME("tile.stained_hardened_clay.cyan.name"), // Cyan Terracotta
        @PowerNukkitOnly @Since("FUTURE") STAINED_HARDENED_CLAY_GRAY_NAME("tile.stained_hardened_clay.gray.name"), // Gray Terracotta
        @PowerNukkitOnly @Since("FUTURE") STAINED_HARDENED_CLAY_GREEN_NAME("tile.stained_hardened_clay.green.name"), // Green Terracotta
        @PowerNukkitOnly @Since("FUTURE") STAINED_HARDENED_CLAY_LIGHTBLUE_NAME("tile.stained_hardened_clay.lightBlue.name"), // Light Blue Terracotta
        @PowerNukkitOnly @Since("FUTURE") STAINED_HARDENED_CLAY_LIME_NAME("tile.stained_hardened_clay.lime.name"), // Lime Terracotta
        @PowerNukkitOnly @Since("FUTURE") STAINED_HARDENED_CLAY_MAGENTA_NAME("tile.stained_hardened_clay.magenta.name"), // Magenta Terracotta
        @PowerNukkitOnly @Since("FUTURE") STAINED_HARDENED_CLAY_NAME("tile.stained_hardened_clay.name"), // Terracotta
        @PowerNukkitOnly @Since("FUTURE") STAINED_HARDENED_CLAY_ORANGE_NAME("tile.stained_hardened_clay.orange.name"), // Orange Terracotta
        @PowerNukkitOnly @Since("FUTURE") STAINED_HARDENED_CLAY_PINK_NAME("tile.stained_hardened_clay.pink.name"), // Pink Terracotta
        @PowerNukkitOnly @Since("FUTURE") STAINED_HARDENED_CLAY_PURPLE_NAME("tile.stained_hardened_clay.purple.name"), // Purple Terracotta
        @PowerNukkitOnly @Since("FUTURE") STAINED_HARDENED_CLAY_RED_NAME("tile.stained_hardened_clay.red.name"), // Red Terracotta
        @PowerNukkitOnly @Since("FUTURE") STAINED_HARDENED_CLAY_SILVER_NAME("tile.stained_hardened_clay.silver.name"), // Light Gray Terracotta
        @PowerNukkitOnly @Since("FUTURE") STAINED_HARDENED_CLAY_WHITE_NAME("tile.stained_hardened_clay.white.name"), // White Terracotta
        @PowerNukkitOnly @Since("FUTURE") STAINED_HARDENED_CLAY_YELLOW_NAME("tile.stained_hardened_clay.yellow.name"), // Yellow Terracotta
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_BLOCK_NAME("tile.structure_block.name"), // Structure Block
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_VOID_NAME("tile.structure_void.name"), // Structure Void
        @PowerNukkitOnly @Since("FUTURE") WOOL_BLACK_NAME("tile.wool.black.name"), // Black Wool
        @PowerNukkitOnly @Since("FUTURE") WOOL_BLUE_NAME("tile.wool.blue.name"), // Blue Wool
        @PowerNukkitOnly @Since("FUTURE") WOOL_BROWN_NAME("tile.wool.brown.name"), // Brown Wool
        @PowerNukkitOnly @Since("FUTURE") WOOL_CYAN_NAME("tile.wool.cyan.name"), // Cyan Wool
        @PowerNukkitOnly @Since("FUTURE") WOOL_GRAY_NAME("tile.wool.gray.name"), // Gray Wool
        @PowerNukkitOnly @Since("FUTURE") WOOL_GREEN_NAME("tile.wool.green.name"), // Green Wool
        @PowerNukkitOnly @Since("FUTURE") WOOL_LIGHTBLUE_NAME("tile.wool.lightBlue.name"), // Light Blue Wool
        @PowerNukkitOnly @Since("FUTURE") WOOL_LIME_NAME("tile.wool.lime.name"), // Lime Wool
        @PowerNukkitOnly @Since("FUTURE") WOOL_MAGENTA_NAME("tile.wool.magenta.name"), // Magenta Wool
        @PowerNukkitOnly @Since("FUTURE") WOOL_NAME("tile.wool.name"), // Wool
        @PowerNukkitOnly @Since("FUTURE") WOOL_ORANGE_NAME("tile.wool.orange.name"), // Orange Wool
        @PowerNukkitOnly @Since("FUTURE") WOOL_PINK_NAME("tile.wool.pink.name"), // Pink Wool
        @PowerNukkitOnly @Since("FUTURE") WOOL_PURPLE_NAME("tile.wool.purple.name"), // Purple Wool
        @PowerNukkitOnly @Since("FUTURE") WOOL_RED_NAME("tile.wool.red.name"), // Red Wool
        @PowerNukkitOnly @Since("FUTURE") WOOL_SILVER_NAME("tile.wool.silver.name"), // Light Gray Wool
        @PowerNukkitOnly @Since("FUTURE") WOOL_WHITE_NAME("tile.wool.white.name"), // White Wool
        @PowerNukkitOnly @Since("FUTURE") WOOL_YELLOW_NAME("tile.wool.yellow.name"), // Yellow Wool
        @PowerNukkitOnly @Since("FUTURE") COBBLESTONE_WALL_MOSSY_NAME("tile.cobblestone_wall.mossy.name"), // Mossy Cobblestone Wall
        @PowerNukkitOnly @Since("FUTURE") COBBLESTONE_WALL_NORMAL_NAME("tile.cobblestone_wall.normal.name"), // Cobblestone Wall 
        @PowerNukkitOnly @Since("FUTURE") COBBLESTONE_WALL_GRANITE_NAME("tile.cobblestone_wall.granite.name"), // Granite Wall
        @PowerNukkitOnly @Since("FUTURE") COBBLESTONE_WALL_DIORITE_NAME("tile.cobblestone_wall.diorite.name"), // Diorite Wall
        @PowerNukkitOnly @Since("FUTURE") COBBLESTONE_WALL_ANDESITE_NAME("tile.cobblestone_wall.andesite.name"), // Andesite Wall
        @PowerNukkitOnly @Since("FUTURE") COBBLESTONE_WALL_SANDSTONE_NAME("tile.cobblestone_wall.sandstone.name"), // Sandstone Wall
        @PowerNukkitOnly @Since("FUTURE") COBBLESTONE_WALL_BRICK_NAME("tile.cobblestone_wall.brick.name"), // Brick Wall
        @PowerNukkitOnly @Since("FUTURE") COBBLESTONE_WALL_STONE_BRICK_NAME("tile.cobblestone_wall.stone_brick.name"), // Stone Brick Wall
        @PowerNukkitOnly @Since("FUTURE") COBBLESTONE_WALL_MOSSY_STONE_BRICK_NAME("tile.cobblestone_wall.mossy_stone_brick.name"), // Mossy Stone Brick Wall
        @PowerNukkitOnly @Since("FUTURE") COBBLESTONE_WALL_NETHER_BRICK_NAME("tile.cobblestone_wall.nether_brick.name"), // Nether Brick Wall
        @PowerNukkitOnly @Since("FUTURE") COBBLESTONE_WALL_END_BRICK_NAME("tile.cobblestone_wall.end_brick.name"), // End Stone Brick Wall
        @PowerNukkitOnly @Since("FUTURE") COBBLESTONE_WALL_PRISMARINE_NAME("tile.cobblestone_wall.prismarine.name"), // Prismarine Wall
        @PowerNukkitOnly @Since("FUTURE") COBBLESTONE_WALL_RED_SANDSTONE_NAME("tile.cobblestone_wall.red_sandstone.name"), // Red Sandstone Wall
        @PowerNukkitOnly @Since("FUTURE") COBBLESTONE_WALL_RED_NETHER_BRICK_NAME("tile.cobblestone_wall.red_nether_brick.name"), // Red Nether Brick Wall
        @PowerNukkitOnly @Since("FUTURE") COCOA_NAME("tile.cocoa.name"), // Cocoa
        @PowerNukkitOnly @Since("FUTURE") COMMAND_BLOCK_NAME("tile.command_block.name"), // Command Block
        @PowerNukkitOnly @Since("FUTURE") COMPOSTER_NAME("tile.composter.name"), // Composter
        @PowerNukkitOnly @Since("FUTURE") LIGHT_BLOCK_NAME("tile.light_block.name"), // Light Block
        @PowerNukkitOnly @Since("FUTURE") REPEATING_COMMAND_BLOCK_NAME("tile.repeating_command_block.name"), // Repeating Command Block
        @PowerNukkitOnly @Since("FUTURE") CHAIN_COMMAND_BLOCK_NAME("tile.chain_command_block.name"), // Chain Command Block
        @PowerNukkitOnly @Since("FUTURE") WHEAT_NAME("tile.wheat.name"), // Crops
        @PowerNukkitOnly @Since("FUTURE") DARKOAKFENCE_NAME("tile.darkOakFence.name"), // Dark Oak Fence
        @PowerNukkitOnly @Since("FUTURE") DARK_OAK_FENCE_GATE_NAME("tile.dark_oak_fence_gate.name"), // Dark Oak Fence Gate
        @PowerNukkitOnly @Since("FUTURE") DAYLIGHT_DETECTOR_NAME("tile.daylight_detector.name"), // Daylight Sensor
        @PowerNukkitOnly @Since("FUTURE") DEADBUSH_NAME("tile.deadbush.name"), // Dead Bush
        @PowerNukkitOnly @Since("FUTURE") DETECTOR_RAIL_NAME("tile.detector_rail.name"), // Detector Rail
        @PowerNukkitOnly @Since("FUTURE") DIRT_COARSE_NAME("tile.dirt.coarse.name"), // Coarse Dirt
        @PowerNukkitOnly @Since("FUTURE") DIRT_DEFAULT_NAME("tile.dirt.default.name"), // Dirt
        @PowerNukkitOnly @Since("FUTURE") DIRT_NAME("tile.dirt.name"), // Dirt
        @PowerNukkitOnly @Since("FUTURE") PODZOL_NAME("tile.podzol.name"), // Podzol
        @PowerNukkitOnly @Since("FUTURE") PURPUR_BLOCK_DEFAULT_NAME("tile.purpur_block.default.name"), // Purpur Block
        @PowerNukkitOnly @Since("FUTURE") PURPUR_BLOCK_LINES_NAME("tile.purpur_block.lines.name"), // Purpur Pillar
        @PowerNukkitOnly @Since("FUTURE") PURPUR_BLOCK_CHISELED_NAME("tile.purpur_block.chiseled.name"), // Chiseled Purpur
        @PowerNukkitOnly @Since("FUTURE") DISPENSER_NAME("tile.dispenser.name"), // Dispenser
        @PowerNukkitOnly @Since("FUTURE") IRON_DOOR_NAME("tile.iron_door.name"), // Iron Door
        @PowerNukkitOnly @Since("FUTURE") DOORWOOD_NAME("tile.doorWood.name"), // Wooden Door
        @PowerNukkitOnly @Since("FUTURE") DOUBLE_PLANT_FERN_NAME("tile.double_plant.fern.name"), // Large Fern
        @PowerNukkitOnly @Since("FUTURE") DOUBLE_PLANT_GRASS_NAME("tile.double_plant.grass.name"), // Double Tallgrass
        @PowerNukkitOnly @Since("FUTURE") DOUBLE_PLANT_NAME("tile.double_plant.name"), // Plant
        @PowerNukkitOnly @Since("FUTURE") DOUBLE_PLANT_PAEONIA_NAME("tile.double_plant.paeonia.name"), // Peony
        @PowerNukkitOnly @Since("FUTURE") DOUBLE_PLANT_ROSE_NAME("tile.double_plant.rose.name"), // Rose Bush
        @PowerNukkitOnly @Since("FUTURE") DOUBLE_PLANT_SUNFLOWER_NAME("tile.double_plant.sunflower.name"), // Sunflower
        @PowerNukkitOnly @Since("FUTURE") DOUBLE_PLANT_SYRINGA_NAME("tile.double_plant.syringa.name"), // Lilac
        @PowerNukkitOnly @Since("FUTURE") DRAGON_EGG_NAME("tile.dragon_egg.name"), // Dragon Egg
        @PowerNukkitOnly @Since("FUTURE") DROPPER_NAME("tile.dropper.name"), // Dropper
        @PowerNukkitOnly @Since("FUTURE") ENCHANTING_TABLE_NAME("tile.enchanting_table.name"), // Enchantment Table
        @PowerNukkitOnly @Since("FUTURE") ENDERCHEST_NAME("tile.enderChest.name"), // Ender Chest
        @PowerNukkitOnly @Since("FUTURE") END_PORTAL_FRAME_NAME("tile.end_portal_frame.name"), // End Portal
        @PowerNukkitOnly @Since("FUTURE") FARMLAND_NAME("tile.farmland.name"), // Farmland
        @PowerNukkitOnly @Since("FUTURE") FLETCHING_TABLE_NAME("tile.fletching_table.name"), // Fletching Table
        @PowerNukkitOnly @Since("FUTURE") FENCE_NAME("tile.fence.name"), // Oak Fence
        @PowerNukkitOnly @Since("FUTURE") FENCE_GATE_NAME("tile.fence_gate.name"), // Oak Fence Gate
        @PowerNukkitOnly @Since("FUTURE") IRON_BARS_NAME("tile.iron_bars.name"), // Iron Bars
        @PowerNukkitOnly @Since("FUTURE") FIRE_NAME("tile.fire.name"), // Fire
        @PowerNukkitOnly @Since("FUTURE") YELLOW_FLOWER_DANDELION_NAME("tile.yellow_flower.dandelion.name"), // Dandelion
        @PowerNukkitOnly @Since("FUTURE") YELLOW_FLOWER_NAME("tile.yellow_flower.name"), // Flower
        @PowerNukkitOnly @Since("FUTURE") CRIMSON_ROOTS_CRIMSONROOTS_NAME("tile.crimson_roots.crimsonRoots.name"), // Crimson Roots
        @PowerNukkitOnly @Since("FUTURE") WARPED_ROOTS_WARPEDROOTS_NAME("tile.warped_roots.warpedRoots.name"), // Warped Roots
        @PowerNukkitOnly @Since("FUTURE") RED_FLOWER_ALLIUM_NAME("tile.red_flower.allium.name"), // Allium
        @PowerNukkitOnly @Since("FUTURE") RED_FLOWER_BLUEORCHID_NAME("tile.red_flower.blueOrchid.name"), // Blue Orchid
        @PowerNukkitOnly @Since("FUTURE") RED_FLOWER_CORNFLOWER_NAME("tile.red_flower.cornflower.name"), // Cornflower
        @PowerNukkitOnly @Since("FUTURE") RED_FLOWER_HOUSTONIA_NAME("tile.red_flower.houstonia.name"), // Azure Bluet
        @PowerNukkitOnly @Since("FUTURE") RED_FLOWER_NAME("tile.red_flower.name"), // Flower
        @PowerNukkitOnly @Since("FUTURE") RED_FLOWER_LILYOFTHEVALLEY_NAME("tile.red_flower.lilyOfTheValley.name"), // Lily of the Valley
        @PowerNukkitOnly @Since("FUTURE") RED_FLOWER_OXEYEDAISY_NAME("tile.red_flower.oxeyeDaisy.name"), // Oxeye Daisy
        @PowerNukkitOnly @Since("FUTURE") RED_FLOWER_POPPY_NAME("tile.red_flower.poppy.name"), // Poppy
        @PowerNukkitOnly @Since("FUTURE") RED_FLOWER_TULIPORANGE_NAME("tile.red_flower.tulipOrange.name"), // Orange Tulip
        @PowerNukkitOnly @Since("FUTURE") RED_FLOWER_TULIPPINK_NAME("tile.red_flower.tulipPink.name"), // Pink Tulip
        @PowerNukkitOnly @Since("FUTURE") RED_FLOWER_TULIPRED_NAME("tile.red_flower.tulipRed.name"), // Red Tulip
        @PowerNukkitOnly @Since("FUTURE") RED_FLOWER_TULIPWHITE_NAME("tile.red_flower.tulipWhite.name"), // White Tulip
        @PowerNukkitOnly @Since("FUTURE") WITHER_ROSE_NAME("tile.wither_rose.name"), // Wither Rose
        @PowerNukkitOnly @Since("FUTURE") FURNACE_NAME("tile.furnace.name"), // Furnace
        @PowerNukkitOnly @Since("FUTURE") GLASS_NAME("tile.glass.name"), // Glass
        @PowerNukkitOnly @Since("FUTURE") GOLDEN_RAIL_NAME("tile.golden_rail.name"), // Powered Rail
        @PowerNukkitOnly @Since("FUTURE") GRASS_NAME("tile.grass.name"), // Grass Block
        @PowerNukkitOnly @Since("FUTURE") GRASS_PATH_NAME("tile.grass_path.name"), // Dirt Path
        @PowerNukkitOnly @Since("FUTURE") GRAVEL_NAME("tile.gravel.name"), // Gravel
        @PowerNukkitOnly @Since("FUTURE") HAY_BLOCK_NAME("tile.hay_block.name"), // Hay Bale
        @PowerNukkitOnly @Since("FUTURE") NETHERRACK_NAME("tile.netherrack.name"), // Netherrack
        @PowerNukkitOnly @Since("FUTURE") SOUL_SAND_NAME("tile.soul_sand.name"), // Soul Sand
        @PowerNukkitOnly @Since("FUTURE") HOPPER_NAME("tile.hopper.name"), // Hopper
        @PowerNukkitOnly @Since("FUTURE") ICE_NAME("tile.ice.name"), // Ice
        @PowerNukkitOnly @Since("FUTURE") PACKED_ICE_NAME("tile.packed_ice.name"), // Packed Ice
        @PowerNukkitOnly @Since("FUTURE") BLUE_ICE_NAME("tile.blue_ice.name"), // Blue Ice
        @PowerNukkitOnly @Since("FUTURE") IRON_TRAPDOOR_NAME("tile.iron_trapdoor.name"), // Iron Trapdoor
        @PowerNukkitOnly @Since("FUTURE") JUKEBOX_NAME("tile.jukebox.name"), // Jukebox
        @PowerNukkitOnly @Since("FUTURE") JUNGLEFENCE_NAME("tile.jungleFence.name"), // Jungle Fence
        @PowerNukkitOnly @Since("FUTURE") JUNGLE_FENCE_GATE_NAME("tile.jungle_fence_gate.name"), // Jungle Fence Gate
        @PowerNukkitOnly @Since("FUTURE") LADDER_NAME("tile.ladder.name"), // Ladder
        @PowerNukkitOnly @Since("FUTURE") FLOWING_LAVA_NAME("tile.flowing_lava.name"), // Lava
        @PowerNukkitOnly @Since("FUTURE") LEAVES_ACACIA_NAME("tile.leaves.acacia.name"), // Acacia Leaves
        @PowerNukkitOnly @Since("FUTURE") LEAVES2_ACACIA_NAME("tile.leaves2.acacia.name"), // Acacia Leaves
        @PowerNukkitOnly @Since("FUTURE") LEAVES_BIG_OAK_NAME("tile.leaves.big_oak.name"), // Dark Oak Leaves
        @PowerNukkitOnly @Since("FUTURE") LEAVES2_BIG_OAK_NAME("tile.leaves2.big_oak.name"), // Dark Oak Leaves
        @PowerNukkitOnly @Since("FUTURE") LEAVES_BIRCH_NAME("tile.leaves.birch.name"), // Birch Leaves
        @PowerNukkitOnly @Since("FUTURE") LEAVES_JUNGLE_NAME("tile.leaves.jungle.name"), // Jungle Leaves
        @PowerNukkitOnly @Since("FUTURE") LEAVES_NAME("tile.leaves.name"), // Leaves
        @PowerNukkitOnly @Since("FUTURE") LEAVES_OAK_NAME("tile.leaves.oak.name"), // Oak Leaves
        @PowerNukkitOnly @Since("FUTURE") LEAVES_SPRUCE_NAME("tile.leaves.spruce.name"), // Spruce Leaves
        @PowerNukkitOnly @Since("FUTURE") LEVER_NAME("tile.lever.name"), // Lever
        @PowerNukkitOnly @Since("FUTURE") GLOWSTONE_NAME("tile.glowstone.name"), // Glowstone
        @PowerNukkitOnly @Since("FUTURE") GLOW_LICHEN_NAME("tile.glow_lichen.name"), // Glow Lichen
        @PowerNukkitOnly @Since("FUTURE") LIGHTNING_ROD_NAME("tile.lightning_rod.name"), // Lightning Rod
        @PowerNukkitOnly @Since("FUTURE") LIT_PUMPKIN_NAME("tile.lit_pumpkin.name"), // Jack o'Lantern
        @PowerNukkitOnly @Since("FUTURE") LOCKEDCHEST_NAME("tile.lockedchest.name"), // Locked chest
        @PowerNukkitOnly @Since("FUTURE") LOG_ACACIA_NAME("tile.log.acacia.name"), // Acacia Log
        @PowerNukkitOnly @Since("FUTURE") LOG_BIG_OAK_NAME("tile.log.big_oak.name"), // Dark Oak Log
        @PowerNukkitOnly @Since("FUTURE") LOG_BIRCH_NAME("tile.log.birch.name"), // Birch Log
        @PowerNukkitOnly @Since("FUTURE") LOG_JUNGLE_NAME("tile.log.jungle.name"), // Jungle Log
        @PowerNukkitOnly @Since("FUTURE") LOG_NAME("tile.log.name"), // Log
        @PowerNukkitOnly @Since("FUTURE") LOG_OAK_NAME("tile.log.oak.name"), // Oak Log
        @PowerNukkitOnly @Since("FUTURE") LOG_SPRUCE_NAME("tile.log.spruce.name"), // Spruce Log
        @PowerNukkitOnly @Since("FUTURE") MAGMA_NAME("tile.magma.name"), // Magma Block
        @PowerNukkitOnly @Since("FUTURE") MELON_BLOCK_NAME("tile.melon_block.name"), // Melon
        @PowerNukkitOnly @Since("FUTURE") MOB_SPAWNER_NAME("tile.mob_spawner.name"), // Monster Spawner
        @PowerNukkitOnly @Since("FUTURE") MONSTER_EGG_BRICK_NAME("tile.monster_egg.brick.name"), // Infested Stone Brick
        @PowerNukkitOnly @Since("FUTURE") MONSTER_EGG_CHISELEDBRICK_NAME("tile.monster_egg.chiseledbrick.name"), // Infested Chiseled Stone Brick
        @PowerNukkitOnly @Since("FUTURE") MONSTER_EGG_COBBLE_NAME("tile.monster_egg.cobble.name"), // Infested Cobblestone
        @PowerNukkitOnly @Since("FUTURE") MONSTER_EGG_CRACKEDBRICK_NAME("tile.monster_egg.crackedbrick.name"), // Infested Cracked Stone Brick
        @PowerNukkitOnly @Since("FUTURE") MONSTER_EGG_MOSSYBRICK_NAME("tile.monster_egg.mossybrick.name"), // Infested Mossy Stone Brick
        @PowerNukkitOnly @Since("FUTURE") MONSTER_EGG_NAME("tile.monster_egg.name"), // Infested Stone
        @PowerNukkitOnly @Since("FUTURE") MONSTER_EGG_STONE_NAME("tile.monster_egg.stone.name"), // Infested Stone
        @PowerNukkitOnly @Since("FUTURE") MUSHROOM_NAME("tile.mushroom.name"), // Mushroom
        @PowerNukkitOnly @Since("FUTURE") NOTEBLOCK_NAME("tile.noteblock.name"), // Note Block
        @PowerNukkitOnly @Since("FUTURE") MYCELIUM_NAME("tile.mycelium.name"), // Mycelium
        @PowerNukkitOnly @Since("FUTURE") NETHER_BRICK_NAME("tile.nether_brick.name"), // Nether Brick Block
        @PowerNukkitOnly @Since("FUTURE") RED_NETHER_BRICK_NAME("tile.red_nether_brick.name"), // Red Nether Brick
        @PowerNukkitOnly @Since("FUTURE") NETHER_BRICK_FENCE_NAME("tile.nether_brick_fence.name"), // Nether Brick Fence
        @PowerNukkitOnly @Since("FUTURE") QUARTZ_ORE_NAME("tile.quartz_ore.name"), // Nether Quartz Ore
        @PowerNukkitOnly @Since("FUTURE") NETHERREACTOR_ACTIVE("tile.netherreactor.active"), // Active!
        @PowerNukkitOnly @Since("FUTURE") NETHERREACTOR_BUILTTOOHIGH("tile.netherreactor.builtTooHigh"), // The nether reactor needs to be built lower down.
        @PowerNukkitOnly @Since("FUTURE") NETHERREACTOR_BUILTTOOLOW("tile.netherreactor.builtTooLow"), // The nether reactor needs to be built higher up.
        @PowerNukkitOnly @Since("FUTURE") NETHERREACTOR_NAME("tile.netherreactor.name"), // Nether Reactor Core
        @PowerNukkitOnly @Since("FUTURE") NETHERREACTOR_PLAYERSTOOFAR("tile.netherreactor.playersTooFar"), // All players need to be close to the reactor.
        @PowerNukkitOnly @Since("FUTURE") NETHERREACTOR_WRONGPATTERN("tile.netherreactor.wrongPattern"), // Not the correct pattern!
        @PowerNukkitOnly @Since("FUTURE") NETHER_WART_NAME("tile.nether_wart.name"), // Nether Wart
        @PowerNukkitOnly @Since("FUTURE") NETHER_WART_BLOCK_NAME("tile.nether_wart_block.name"), // Nether Wart Block
        @PowerNukkitOnly @Since("FUTURE") WARPED_WART_BLOCK_NAME("tile.warped_wart_block.name"), // Warped Wart Block
        @PowerNukkitOnly @Since("FUTURE") UNLIT_REDSTONE_TORCH_NAME("tile.unlit_redstone_torch.name"), // Redstone Torch
        @PowerNukkitOnly @Since("FUTURE") REDSTONE_TORCH_NAME("tile.redstone_torch.name"), // Redstone Torch
        @PowerNukkitOnly @Since("FUTURE") SOUL_TORCH_NAME("tile.soul_torch.name"), // Soul Torch
        @PowerNukkitOnly @Since("FUTURE") OBSIDIAN_NAME("tile.obsidian.name"), // Obsidian
        @PowerNukkitOnly @Since("FUTURE") COAL_ORE_NAME("tile.coal_ore.name"), // Coal Ore
        @PowerNukkitOnly @Since("FUTURE") DIAMOND_ORE_NAME("tile.diamond_ore.name"), // Diamond Ore
        @PowerNukkitOnly @Since("FUTURE") EMERALD_ORE_NAME("tile.emerald_ore.name"), // Emerald Ore
        @PowerNukkitOnly @Since("FUTURE") GOLD_ORE_NAME("tile.gold_ore.name"), // Gold Ore
        @PowerNukkitOnly @Since("FUTURE") IRON_ORE_NAME("tile.iron_ore.name"), // Iron Ore
        @PowerNukkitOnly @Since("FUTURE") COPPER_ORE_NAME("tile.copper_ore.name"), // Copper Ore
        @PowerNukkitOnly @Since("FUTURE") LAPIS_ORE_NAME("tile.lapis_ore.name"), // Lapis Lazuli Ore
        @PowerNukkitOnly @Since("FUTURE") REDSTONE_ORE_NAME("tile.redstone_ore.name"), // Redstone Ore
        @PowerNukkitOnly @Since("FUTURE") ORERUBY_NAME("tile.oreRuby.name"), // Ruby Ore
        @PowerNukkitOnly @Since("FUTURE") OBSERVER_NAME("tile.observer.name"), // Observer
        @PowerNukkitOnly @Since("FUTURE") PISTON_NAME("tile.piston.name"), // Piston
        @PowerNukkitOnly @Since("FUTURE") STICKY_PISTON_NAME("tile.sticky_piston.name"), // Sticky Piston
        @PowerNukkitOnly @Since("FUTURE") PORTAL_NAME("tile.portal.name"), // Portal
        @PowerNukkitOnly @Since("FUTURE") POTATOES_NAME("tile.potatoes.name"), // Potatoes
        @PowerNukkitOnly @Since("FUTURE") STONE_PRESSURE_PLATE_NAME("tile.stone_pressure_plate.name"), // Stone Pressure Plate
        @PowerNukkitOnly @Since("FUTURE") WOODEN_PRESSURE_PLATE_NAME("tile.wooden_pressure_plate.name"), // Oak Pressure Plate
        @PowerNukkitOnly @Since("FUTURE") ACACIA_PRESSURE_PLATE_NAME("tile.acacia_pressure_plate.name"), // Acacia Pressure Plate
        @PowerNukkitOnly @Since("FUTURE") BIRCH_PRESSURE_PLATE_NAME("tile.birch_pressure_plate.name"), // Birch Pressure Plate
        @PowerNukkitOnly @Since("FUTURE") DARK_OAK_PRESSURE_PLATE_NAME("tile.dark_oak_pressure_plate.name"), // Dark Oak Pressure Plate
        @PowerNukkitOnly @Since("FUTURE") JUNGLE_PRESSURE_PLATE_NAME("tile.jungle_pressure_plate.name"), // Jungle Pressure Plate
        @PowerNukkitOnly @Since("FUTURE") SPRUCE_PRESSURE_PLATE_NAME("tile.spruce_pressure_plate.name"), // Spruce Pressure Plate
        @PowerNukkitOnly @Since("FUTURE") PRISMARINE_BRICKS_NAME("tile.prismarine.bricks.name"), // Prismarine Bricks
        @PowerNukkitOnly @Since("FUTURE") PRISMARINE_DARK_NAME("tile.prismarine.dark.name"), // Dark Prismarine
        @PowerNukkitOnly @Since("FUTURE") PRISMARINE_ROUGH_NAME("tile.prismarine.rough.name"), // Prismarine
        @PowerNukkitOnly @Since("FUTURE") PUMPKIN_NAME("tile.pumpkin.name"), // Pumpkin
        @PowerNukkitOnly @Since("FUTURE") PUMPKIN_STEM_NAME("tile.pumpkin_stem.name"), // Pumpkin Stem
        @PowerNukkitOnly @Since("FUTURE") QUARTZ_BLOCK_CHISELED_NAME("tile.quartz_block.chiseled.name"), // Chiseled Quartz Block
        @PowerNukkitOnly @Since("FUTURE") QUARTZ_BLOCK_DEFAULT_NAME("tile.quartz_block.default.name"), // Block of Quartz
        @PowerNukkitOnly @Since("FUTURE") QUARTZ_BLOCK_LINES_NAME("tile.quartz_block.lines.name"), // Pillar Quartz Block
        @PowerNukkitOnly @Since("FUTURE") QUARTZ_BLOCK_SMOOTH_NAME("tile.quartz_block.smooth.name"), // Smooth Quartz Block
        @PowerNukkitOnly @Since("FUTURE") QUARTZ_BLOCK_NAME("tile.quartz_block.name"), // Block of Quartz
        @PowerNukkitOnly @Since("FUTURE") RAIL_NAME("tile.rail.name"), // Rail
        @PowerNukkitOnly @Since("FUTURE") RED_MUSHROOM_NAME("tile.red_mushroom.name"), // Red Mushroom
        @PowerNukkitOnly @Since("FUTURE") CRIMSON_FUNGUS_NAME("tile.crimson_fungus.name"), // Crimson Fungus
        @PowerNukkitOnly @Since("FUTURE") WARPED_FUNGUS_NAME("tile.warped_fungus.name"), // Warped Fungus
        @PowerNukkitOnly @Since("FUTURE") RED_MUSHROOM_BLOCK_NAME("tile.red_mushroom_block.name"), // Red Mushroom Block
        @PowerNukkitOnly @Since("FUTURE") RED_SANDSTONE_CHISELED_NAME("tile.red_sandstone.chiseled.name"), // Chiseled Red Sandstone
        @PowerNukkitOnly @Since("FUTURE") RED_SANDSTONE_DEFAULT_NAME("tile.red_sandstone.default.name"), // Red Sandstone
        @PowerNukkitOnly @Since("FUTURE") RED_SANDSTONE_NAME("tile.red_sandstone.name"), // Red Sandstone
        @PowerNukkitOnly @Since("FUTURE") RED_SANDSTONE_SMOOTH_NAME("tile.red_sandstone.smooth.name"), // Smooth Red Sandstone
        @PowerNukkitOnly @Since("FUTURE") RED_SANDSTONE_CUT_NAME("tile.red_sandstone.cut.name"), // Cut Red Sandstone
        @PowerNukkitOnly @Since("FUTURE") REDSTONE_WIRE_NAME("tile.redstone_wire.name"), // Redstone Dust
        @PowerNukkitOnly @Since("FUTURE") REDSTONE_LAMP_NAME("tile.redstone_lamp.name"), // Redstone Lamp
        @PowerNukkitOnly @Since("FUTURE") REEDS_NAME("tile.reeds.name"), // Sugar cane
        @PowerNukkitOnly @Since("FUTURE") SAND_DEFAULT_NAME("tile.sand.default.name"), // Sand
        @PowerNukkitOnly @Since("FUTURE") SAND_NAME("tile.sand.name"), // Sand
        @PowerNukkitOnly @Since("FUTURE") SAND_RED_NAME("tile.sand.red.name"), // Red Sand
        @PowerNukkitOnly @Since("FUTURE") SANDSTONE_CHISELED_NAME("tile.sandstone.chiseled.name"), // Chiseled Sandstone
        @PowerNukkitOnly @Since("FUTURE") SANDSTONE_DEFAULT_NAME("tile.sandstone.default.name"), // Sandstone
        @PowerNukkitOnly @Since("FUTURE") SANDSTONE_NAME("tile.sandstone.name"), // Sandstone
        @PowerNukkitOnly @Since("FUTURE") SANDSTONE_SMOOTH_NAME("tile.sandstone.smooth.name"), // Smooth Sandstone
        @PowerNukkitOnly @Since("FUTURE") SANDSTONE_CUT_NAME("tile.sandstone.cut.name"), // Cut Sandstone
        @PowerNukkitOnly @Since("FUTURE") SAPLING_ACACIA_NAME("tile.sapling.acacia.name"), // Acacia Sapling
        @PowerNukkitOnly @Since("FUTURE") SAPLING_BIG_OAK_NAME("tile.sapling.big_oak.name"), // Dark Oak Sapling
        @PowerNukkitOnly @Since("FUTURE") SAPLING_BIRCH_NAME("tile.sapling.birch.name"), // Birch Sapling
        @PowerNukkitOnly @Since("FUTURE") SAPLING_JUNGLE_NAME("tile.sapling.jungle.name"), // Jungle Sapling
        @PowerNukkitOnly @Since("FUTURE") SAPLING_OAK_NAME("tile.sapling.oak.name"), // Oak Sapling
        @PowerNukkitOnly @Since("FUTURE") SAPLING_SPRUCE_NAME("tile.sapling.spruce.name"), // Spruce Sapling
        @PowerNukkitOnly @Since("FUTURE") SEALANTERN_NAME("tile.seaLantern.name"), // Sea Lantern
        @PowerNukkitOnly @Since("FUTURE") STANDING_SIGN_NAME("tile.standing_sign.name"), // Sign
        @PowerNukkitOnly @Since("FUTURE") SPRUCE_STANDING_SIGN_NAME("tile.spruce_standing_sign.name"), // Spruce Sign
        @PowerNukkitOnly @Since("FUTURE") BIRCH_STANDING_SIGN_NAME("tile.birch_standing_sign.name"), // Birch Sign
        @PowerNukkitOnly @Since("FUTURE") JUNGLE_STANDING_SIGN_NAME("tile.jungle_standing_sign.name"), // Jungle Sign
        @PowerNukkitOnly @Since("FUTURE") ACACIA_STANDING_SIGN_NAME("tile.acacia_standing_sign.name"), // Acacia Sign
        @PowerNukkitOnly @Since("FUTURE") DARKOAK_STANDING_SIGN_NAME("tile.darkoak_standing_sign.name"), // Dark Oak Sign
        @PowerNukkitOnly @Since("FUTURE") SLIME_NAME("tile.slime.name"), // Slime Block
        @PowerNukkitOnly @Since("FUTURE") SNOW_NAME("tile.snow.name"), // Snow
        @PowerNukkitOnly @Since("FUTURE") SPONGE_DRY_NAME("tile.sponge.dry.name"), // Sponge
        @PowerNukkitOnly @Since("FUTURE") SPONGE_WET_NAME("tile.sponge.wet.name"), // Wet Sponge
        @PowerNukkitOnly @Since("FUTURE") SPRUCEFENCE_NAME("tile.spruceFence.name"), // Spruce Fence
        @PowerNukkitOnly @Since("FUTURE") SPRUCE_FENCE_GATE_NAME("tile.spruce_fence_gate.name"), // Spruce Fence Gate
        @PowerNukkitOnly @Since("FUTURE") BRICK_STAIRS_NAME("tile.brick_stairs.name"), // Brick Stairs
        @PowerNukkitOnly @Since("FUTURE") NETHER_BRICK_STAIRS_NAME("tile.nether_brick_stairs.name"), // Nether Brick Stairs
        @PowerNukkitOnly @Since("FUTURE") QUARTZ_STAIRS_NAME("tile.quartz_stairs.name"), // Quartz Stairs
        @PowerNukkitOnly @Since("FUTURE") SMOOTH_QUARTZ_STAIRS_NAME("tile.smooth_quartz_stairs.name"), // Smooth Quartz Stairs
        @PowerNukkitOnly @Since("FUTURE") RED_SANDSTONE_STAIRS_NAME("tile.red_sandstone_stairs.name"), // Red Sandstone Stairs
        @PowerNukkitOnly @Since("FUTURE") SANDSTONE_STAIRS_NAME("tile.sandstone_stairs.name"), // Sandstone Stairs
        @PowerNukkitOnly @Since("FUTURE") STONE_STAIRS_NAME("tile.stone_stairs.name"), // Cobblestone Stairs
        @PowerNukkitOnly @Since("FUTURE") NORMAL_STONE_STAIRS_NAME("tile.normal_stone_stairs.name"), // Stone Stairs
        @PowerNukkitOnly @Since("FUTURE") STONE_BRICK_STAIRS_NAME("tile.stone_brick_stairs.name"), // Stone Brick Stairs
        @PowerNukkitOnly @Since("FUTURE") OAK_STAIRS_NAME("tile.oak_stairs.name"), // Oak Wood Stairs
        @PowerNukkitOnly @Since("FUTURE") ACACIA_STAIRS_NAME("tile.acacia_stairs.name"), // Acacia Wood Stairs
        @PowerNukkitOnly @Since("FUTURE") BIRCH_STAIRS_NAME("tile.birch_stairs.name"), // Birch Wood Stairs
        @PowerNukkitOnly @Since("FUTURE") DARK_OAK_STAIRS_NAME("tile.dark_oak_stairs.name"), // Dark Oak Wood Stairs
        @PowerNukkitOnly @Since("FUTURE") JUNGLE_STAIRS_NAME("tile.jungle_stairs.name"), // Jungle Wood Stairs
        @PowerNukkitOnly @Since("FUTURE") SPRUCE_STAIRS_NAME("tile.spruce_stairs.name"), // Spruce Wood Stairs
        @PowerNukkitOnly @Since("FUTURE") PURPUR_STAIRS_NAME("tile.purpur_stairs.name"), // Purpur Stairs
        @PowerNukkitOnly @Since("FUTURE") PRISMARINE_STAIRS_NAME("tile.prismarine_stairs.name"), // Prismarine Stairs
        @PowerNukkitOnly @Since("FUTURE") DARK_PRISMARINE_STAIRS_NAME("tile.dark_prismarine_stairs.name"), // Dark Prismarine Stairs
        @PowerNukkitOnly @Since("FUTURE") PRISMARINE_BRICKS_STAIRS_NAME("tile.prismarine_bricks_stairs.name"), // Prismarine Brick Stairs
        @PowerNukkitOnly @Since("FUTURE") GRANITE_STAIRS_NAME("tile.granite_stairs.name"), // Granite Stairs
        @PowerNukkitOnly @Since("FUTURE") DIORITE_STAIRS_NAME("tile.diorite_stairs.name"), // Diorite Stairs
        @PowerNukkitOnly @Since("FUTURE") ANDESITE_STAIRS_NAME("tile.andesite_stairs.name"), // Andesite Stairs
        @PowerNukkitOnly @Since("FUTURE") POLISHED_GRANITE_STAIRS_NAME("tile.polished_granite_stairs.name"), // Polished Granite Stairs
        @PowerNukkitOnly @Since("FUTURE") POLISHED_DIORITE_STAIRS_NAME("tile.polished_diorite_stairs.name"), // Polished Diorite Stairs
        @PowerNukkitOnly @Since("FUTURE") POLISHED_ANDESITE_STAIRS_NAME("tile.polished_andesite_stairs.name"), // Polished Andesite Stairs
        @PowerNukkitOnly @Since("FUTURE") MOSSY_STONE_BRICK_STAIRS_NAME("tile.mossy_stone_brick_stairs.name"), // Mossy Stone Brick Stairs
        @PowerNukkitOnly @Since("FUTURE") SMOOTH_RED_SANDSTONE_STAIRS_NAME("tile.smooth_red_sandstone_stairs.name"), // Smooth Red Sandstone Stairs
        @PowerNukkitOnly @Since("FUTURE") SMOOTH_SANDSTONE_STAIRS_NAME("tile.smooth_sandstone_stairs.name"), // Smooth Sandstone Stairs
        @PowerNukkitOnly @Since("FUTURE") END_BRICK_STAIRS_NAME("tile.end_brick_stairs.name"), // End Stone Brick Stairs
        @PowerNukkitOnly @Since("FUTURE") MOSSY_COBBLESTONE_STAIRS_NAME("tile.mossy_cobblestone_stairs.name"), // Mossy Cobblestone Stairs
        @PowerNukkitOnly @Since("FUTURE") RED_NETHER_BRICK_STAIRS_NAME("tile.red_nether_brick_stairs.name"), // Red Nether Brick Stairs
        @PowerNukkitOnly @Since("FUTURE") SMOOTH_STONE_NAME("tile.smooth_stone.name"), // Smooth Stone
        @PowerNukkitOnly @Since("FUTURE") STANDING_BANNER_BLACK_NAME("tile.standing_banner.black.name"), // Black Banner
        @PowerNukkitOnly @Since("FUTURE") STANDING_BANNER_BLUE_NAME("tile.standing_banner.blue.name"), // Blue Banner
        @PowerNukkitOnly @Since("FUTURE") STANDING_BANNER_BROWN_NAME("tile.standing_banner.brown.name"), // Brown Banner
        @PowerNukkitOnly @Since("FUTURE") STANDING_BANNER_CYAN_NAME("tile.standing_banner.cyan.name"), // Cyan Banner
        @PowerNukkitOnly @Since("FUTURE") STANDING_BANNER_GRAY_NAME("tile.standing_banner.gray.name"), // Gray Banner
        @PowerNukkitOnly @Since("FUTURE") STANDING_BANNER_GREEN_NAME("tile.standing_banner.green.name"), // Green Banner
        @PowerNukkitOnly @Since("FUTURE") STANDING_BANNER_LIGHTBLUE_NAME("tile.standing_banner.lightBlue.name"), // Light Blue Banner
        @PowerNukkitOnly @Since("FUTURE") STANDING_BANNER_LIME_NAME("tile.standing_banner.lime.name"), // Lime Banner
        @PowerNukkitOnly @Since("FUTURE") STANDING_BANNER_MAGENTA_NAME("tile.standing_banner.magenta.name"), // Magenta Banner
        @PowerNukkitOnly @Since("FUTURE") STANDING_BANNER_NAME("tile.standing_banner.name"), // Banner
        @PowerNukkitOnly @Since("FUTURE") STANDING_BANNER_ORANGE_NAME("tile.standing_banner.orange.name"), // Orange Banner
        @PowerNukkitOnly @Since("FUTURE") STANDING_BANNER_PINK_NAME("tile.standing_banner.pink.name"), // Pink Banner
        @PowerNukkitOnly @Since("FUTURE") STANDING_BANNER_PURPLE_NAME("tile.standing_banner.purple.name"), // Purple Banner
        @PowerNukkitOnly @Since("FUTURE") STANDING_BANNER_RED_NAME("tile.standing_banner.red.name"), // Red Banner
        @PowerNukkitOnly @Since("FUTURE") STANDING_BANNER_SILVER_NAME("tile.standing_banner.silver.name"), // Light Gray Banner
        @PowerNukkitOnly @Since("FUTURE") STANDING_BANNER_WHITE_NAME("tile.standing_banner.white.name"), // Banner
        @PowerNukkitOnly @Since("FUTURE") STANDING_BANNER_YELLOW_NAME("tile.standing_banner.yellow.name"), // Yellow Banner
        @PowerNukkitOnly @Since("FUTURE") STONE_ANDESITE_NAME("tile.stone.andesite.name"), // Andesite
        @PowerNukkitOnly @Since("FUTURE") STONE_ANDESITESMOOTH_NAME("tile.stone.andesiteSmooth.name"), // Polished Andesite
        @PowerNukkitOnly @Since("FUTURE") STONE_DIORITE_NAME("tile.stone.diorite.name"), // Diorite
        @PowerNukkitOnly @Since("FUTURE") STONE_DIORITESMOOTH_NAME("tile.stone.dioriteSmooth.name"), // Polished Diorite
        @PowerNukkitOnly @Since("FUTURE") STONE_GRANITE_NAME("tile.stone.granite.name"), // Granite
        @PowerNukkitOnly @Since("FUTURE") STONE_GRANITESMOOTH_NAME("tile.stone.graniteSmooth.name"), // Polished Granite
        @PowerNukkitOnly @Since("FUTURE") STONE_STONE_NAME("tile.stone.stone.name"), // Stone
        @PowerNukkitOnly @Since("FUTURE") COBBLESTONE_NAME("tile.cobblestone.name"), // Cobblestone
        @PowerNukkitOnly @Since("FUTURE") STONEBRICK_CHISELED_NAME("tile.stonebrick.chiseled.name"), // Chiseled Stone Bricks
        @PowerNukkitOnly @Since("FUTURE") STONEBRICK_CRACKED_NAME("tile.stonebrick.cracked.name"), // Cracked Stone Bricks
        @PowerNukkitOnly @Since("FUTURE") STONEBRICK_DEFAULT_NAME("tile.stonebrick.default.name"), // Stone Bricks
        @PowerNukkitOnly @Since("FUTURE") STONEBRICK_MOSSY_NAME("tile.stonebrick.mossy.name"), // Mossy Stone Bricks
        @PowerNukkitOnly @Since("FUTURE") STONEBRICK_NAME("tile.stonebrick.name"), // Stone Bricks
        @PowerNukkitOnly @Since("FUTURE") STONEBRICK_SMOOTH_NAME("tile.stonebrick.smooth.name"), // Smooth Stone Bricks
        @PowerNukkitOnly @Since("FUTURE") STONECUTTER_NAME("tile.stonecutter.name"), // Stonecutter
        @PowerNukkitOnly @Since("FUTURE") STONECUTTER_BLOCK_NAME("tile.stonecutter_block.name"), // Stonecutter
        @PowerNukkitOnly @Since("FUTURE") MOSSY_COBBLESTONE_NAME("tile.mossy_cobblestone.name"), // Mossy Cobblestone
        @PowerNukkitOnly @Since("FUTURE") DOUBLE_STONE_SLAB_BRICK_NAME("tile.double_stone_slab.brick.name"), // Bricks Slab
        @PowerNukkitOnly @Since("FUTURE") DOUBLE_STONE_SLAB_COBBLE_NAME("tile.double_stone_slab.cobble.name"), // Cobblestone Slab
        @PowerNukkitOnly @Since("FUTURE") DOUBLE_STONE_SLAB_NAME("tile.double_stone_slab.name"), // Stone Slab
        @PowerNukkitOnly @Since("FUTURE") DOUBLE_STONE_SLAB_NETHER_BRICK_NAME("tile.double_stone_slab.nether_brick.name"), // Nether Brick Slab
        @PowerNukkitOnly @Since("FUTURE") DOUBLE_STONE_SLAB_QUARTZ_NAME("tile.double_stone_slab.quartz.name"), // Quartz Slab
        @PowerNukkitOnly @Since("FUTURE") DOUBLE_STONE_SLAB_SAND_NAME("tile.double_stone_slab.sand.name"), // Sandstone Slab
        @PowerNukkitOnly @Since("FUTURE") DOUBLE_STONE_SLAB_SMOOTHSTONEBRICK_NAME("tile.double_stone_slab.smoothStoneBrick.name"), // Stone Bricks Slab
        @PowerNukkitOnly @Since("FUTURE") DOUBLE_STONE_SLAB_STONE_NAME("tile.double_stone_slab.stone.name"), // Stone Slab
        @PowerNukkitOnly @Since("FUTURE") DOUBLE_STONE_SLAB_WOOD_NAME("tile.double_stone_slab.wood.name"), // Wooden Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB_NAME("tile.stone_slab.name"), // Stone Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB_BRICK_NAME("tile.stone_slab.brick.name"), // Bricks Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB_COBBLE_NAME("tile.stone_slab.cobble.name"), // Cobblestone Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB_STONE_NAME("tile.stone_slab.stone.name"), // Smooth Stone Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB_NETHER_BRICK_NAME("tile.stone_slab.nether_brick.name"), // Nether Brick Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB_QUARTZ_NAME("tile.stone_slab.quartz.name"), // Quartz Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB_SAND_NAME("tile.stone_slab.sand.name"), // Sandstone Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB_SMOOTHSTONEBRICK_NAME("tile.stone_slab.smoothStoneBrick.name"), // Stone Bricks Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB_WOOD_NAME("tile.stone_slab.wood.name"), // Wooden Slab
        @PowerNukkitOnly @Since("FUTURE") DOUBLE_STONE_SLAB2_RED_SANDSTONE_NAME("tile.double_stone_slab2.red_sandstone.name"), // Red Sandstone Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB2_RED_SANDSTONE_NAME("tile.stone_slab2.red_sandstone.name"), // Red Sandstone Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB2_PURPUR_NAME("tile.stone_slab2.purpur.name"), // Purpur Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB2_PRISMARINE_ROUGH_NAME("tile.stone_slab2.prismarine.rough.name"), // Prismarine Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB2_PRISMARINE_DARK_NAME("tile.stone_slab2.prismarine.dark.name"), // Dark Prismarine Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB2_PRISMARINE_BRICKS_NAME("tile.stone_slab2.prismarine.bricks.name"), // Prismarine Bricks Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB2_MOSSY_COBBLESTONE_NAME("tile.stone_slab2.mossy_cobblestone.name"), // Mossy Cobblestone Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB2_RED_NETHER_BRICK_NAME("tile.stone_slab2.red_nether_brick.name"), // Red Nether Brick Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB2_SANDSTONE_SMOOTH_NAME("tile.stone_slab2.sandstone.smooth.name"), // Smooth Sandstone Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB3_END_BRICK_NAME("tile.stone_slab3.end_brick.name"), // End Stone Brick Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB3_RED_SANDSTONE_SMOOTH_NAME("tile.stone_slab3.red_sandstone.smooth.name"), // Smooth Red Sandstone Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB3_ANDESITE_SMOOTH_NAME("tile.stone_slab3.andesite.smooth.name"), // Polished Andesite Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB3_ANDESITE_NAME("tile.stone_slab3.andesite.name"), // Andesite Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB3_DIORITE_NAME("tile.stone_slab3.diorite.name"), // Diorite Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB3_DIORITE_SMOOTH_NAME("tile.stone_slab3.diorite.smooth.name"), // Polished Diorite Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB3_GRANITE_NAME("tile.stone_slab3.granite.name"), // Granite Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB3_GRANITE_SMOOTH_NAME("tile.stone_slab3.granite.smooth.name"), // Polished Granite Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB4_MOSSY_STONE_BRICK_NAME("tile.stone_slab4.mossy_stone_brick.name"), // Mossy Stone Brick Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB4_SMOOTH_QUARTZ_NAME("tile.stone_slab4.smooth_quartz.name"), // Smooth Quartz Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB4_STONE_NAME("tile.stone_slab4.stone.name"), // Stone Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB4_CUT_SANDSTONE_NAME("tile.stone_slab4.cut_sandstone.name"), // Cut Sandstone Slab
        @PowerNukkitOnly @Since("FUTURE") STONE_SLAB4_CUT_RED_SANDSTONE_NAME("tile.stone_slab4.cut_red_sandstone.name"), // Cut Red Sandstone Slab
        @PowerNukkitOnly @Since("FUTURE") CORAL_BLOCK_BLUE_NAME("tile.coral_block.blue.name"), // Tube Coral Block
        @PowerNukkitOnly @Since("FUTURE") CORAL_BLOCK_PINK_NAME("tile.coral_block.pink.name"), // Brain Coral Block
        @PowerNukkitOnly @Since("FUTURE") CORAL_BLOCK_PURPLE_NAME("tile.coral_block.purple.name"), // Bubble Coral Block
        @PowerNukkitOnly @Since("FUTURE") CORAL_BLOCK_RED_NAME("tile.coral_block.red.name"), // Fire Coral Block
        @PowerNukkitOnly @Since("FUTURE") CORAL_BLOCK_YELLOW_NAME("tile.coral_block.yellow.name"), // Horn Coral Block
        @PowerNukkitOnly @Since("FUTURE") CORAL_BLOCK_BLUE_DEAD_NAME("tile.coral_block.blue_dead.name"), // Dead Tube Coral Block
        @PowerNukkitOnly @Since("FUTURE") CORAL_BLOCK_PINK_DEAD_NAME("tile.coral_block.pink_dead.name"), // Dead Brain Coral Block
        @PowerNukkitOnly @Since("FUTURE") CORAL_BLOCK_PURPLE_DEAD_NAME("tile.coral_block.purple_dead.name"), // Dead Bubble Coral Block
        @PowerNukkitOnly @Since("FUTURE") CORAL_BLOCK_RED_DEAD_NAME("tile.coral_block.red_dead.name"), // Dead Fire Coral Block
        @PowerNukkitOnly @Since("FUTURE") CORAL_BLOCK_YELLOW_DEAD_NAME("tile.coral_block.yellow_dead.name"), // Dead Horn Coral Block
        @PowerNukkitOnly @Since("FUTURE") TALLGRASS_FERN_NAME("tile.tallgrass.fern.name"), // Fern
        @PowerNukkitOnly @Since("FUTURE") TALLGRASS_GRASS_NAME("tile.tallgrass.grass.name"), // Grass
        @PowerNukkitOnly @Since("FUTURE") TALLGRASS_NAME("tile.tallgrass.name"), // Grass
        @PowerNukkitOnly @Since("FUTURE") TALLGRASS_SHRUB_NAME("tile.tallgrass.shrub.name"), // Shrub
        @PowerNukkitOnly @Since("FUTURE") SEAGRASS_SEAGRASS_NAME("tile.seagrass.seagrass.name"), // Seagrass
        @PowerNukkitOnly @Since("FUTURE") SEA_PICKLE_NAME("tile.sea_pickle.name"), // Sea Pickle
        @PowerNukkitOnly @Since("FUTURE") TURTLE_EGG_NAME("tile.turtle_egg.name"), // Sea Turtle Egg
        @PowerNukkitOnly @Since("FUTURE") CORAL_BLUE_NAME("tile.coral.blue.name"), // Tube Coral
        @PowerNukkitOnly @Since("FUTURE") CORAL_PINK_NAME("tile.coral.pink.name"), // Brain Coral
        @PowerNukkitOnly @Since("FUTURE") CORAL_PURPLE_NAME("tile.coral.purple.name"), // Bubble Coral
        @PowerNukkitOnly @Since("FUTURE") CORAL_RED_NAME("tile.coral.red.name"), // Fire Coral
        @PowerNukkitOnly @Since("FUTURE") CORAL_YELLOW_NAME("tile.coral.yellow.name"), // Horn Coral
        @PowerNukkitOnly @Since("FUTURE") CORAL_BLUE_DEAD_NAME("tile.coral.blue_dead.name"), // Dead Tube Coral
        @PowerNukkitOnly @Since("FUTURE") CORAL_PINK_DEAD_NAME("tile.coral.pink_dead.name"), // Dead Brain Coral
        @PowerNukkitOnly @Since("FUTURE") CORAL_PURPLE_DEAD_NAME("tile.coral.purple_dead.name"), // Dead Bubble Coral
        @PowerNukkitOnly @Since("FUTURE") CORAL_RED_DEAD_NAME("tile.coral.red_dead.name"), // Dead Fire Coral
        @PowerNukkitOnly @Since("FUTURE") CORAL_YELLOW_DEAD_NAME("tile.coral.yellow_dead.name"), // Dead Horn Coral
        @PowerNukkitOnly @Since("FUTURE") CORAL_FAN_BLUE_FAN_NAME("tile.coral_fan.blue_fan.name"), // Tube Coral Fan
        @PowerNukkitOnly @Since("FUTURE") CORAL_FAN_PINK_FAN_NAME("tile.coral_fan.pink_fan.name"), // Brain Coral Fan
        @PowerNukkitOnly @Since("FUTURE") CORAL_FAN_PURPLE_FAN_NAME("tile.coral_fan.purple_fan.name"), // Bubble Coral Fan
        @PowerNukkitOnly @Since("FUTURE") CORAL_FAN_RED_FAN_NAME("tile.coral_fan.red_fan.name"), // Fire Coral Fan
        @PowerNukkitOnly @Since("FUTURE") CORAL_FAN_YELLOW_FAN_NAME("tile.coral_fan.yellow_fan.name"), // Horn Coral Fan
        @PowerNukkitOnly @Since("FUTURE") CORAL_FAN_DEAD_BLUE_FAN_NAME("tile.coral_fan_dead.blue_fan.name"), // Dead Tube Coral Fan
        @PowerNukkitOnly @Since("FUTURE") CORAL_FAN_DEAD_PINK_FAN_NAME("tile.coral_fan_dead.pink_fan.name"), // Dead Brain Coral Fan
        @PowerNukkitOnly @Since("FUTURE") CORAL_FAN_DEAD_PURPLE_FAN_NAME("tile.coral_fan_dead.purple_fan.name"), // Dead Bubble Coral Fan
        @PowerNukkitOnly @Since("FUTURE") CORAL_FAN_DEAD_RED_FAN_NAME("tile.coral_fan_dead.red_fan.name"), // Dead Fire Coral Fan
        @PowerNukkitOnly @Since("FUTURE") CORAL_FAN_DEAD_YELLOW_FAN_NAME("tile.coral_fan_dead.yellow_fan.name"), // Dead Horn Coral Fan
        @PowerNukkitOnly @Since("FUTURE") GLASS_PANE_NAME("tile.glass_pane.name"), // Glass Pane
        @PowerNukkitOnly @Since("FUTURE") TNT_NAME("tile.tnt.name"), // TNT
        @PowerNukkitOnly @Since("FUTURE") SNOW_LAYER_NAME("tile.snow_layer.name"), // Top Snow
        @PowerNukkitOnly @Since("FUTURE") TORCH_NAME("tile.torch.name"), // Torch
        @PowerNukkitOnly @Since("FUTURE") TRAPDOOR_NAME("tile.trapdoor.name"), // Oak Trapdoor
        @PowerNukkitOnly @Since("FUTURE") ACACIA_TRAPDOOR_NAME("tile.acacia_trapdoor.name"), // Acacia Trapdoor
        @PowerNukkitOnly @Since("FUTURE") BIRCH_TRAPDOOR_NAME("tile.birch_trapdoor.name"), // Birch Trapdoor
        @PowerNukkitOnly @Since("FUTURE") DARK_OAK_TRAPDOOR_NAME("tile.dark_oak_trapdoor.name"), // Dark Oak Trapdoor
        @PowerNukkitOnly @Since("FUTURE") JUNGLE_TRAPDOOR_NAME("tile.jungle_trapdoor.name"), // Jungle Trapdoor
        @PowerNukkitOnly @Since("FUTURE") SPRUCE_TRAPDOOR_NAME("tile.spruce_trapdoor.name"), // Spruce Trapdoor
        @PowerNukkitOnly @Since("FUTURE") TRIPWIRE_NAME("tile.tripWire.name"), // Tripwire
        @PowerNukkitOnly @Since("FUTURE") TRIPWIRE_HOOK_NAME("tile.tripwire_hook.name"), // Tripwire Hook
        @PowerNukkitOnly @Since("FUTURE") VINE_NAME("tile.vine.name"), // Vines
        @PowerNukkitOnly @Since("FUTURE") WEEPING_VINES_NAME("tile.weeping_vines.name"), // Weeping Vines
        @PowerNukkitOnly @Since("FUTURE") TWISTING_VINES_NAME("tile.twisting_vines.name"), // Twisting Vines
        @PowerNukkitOnly @Since("FUTURE") FLOWING_WATER_NAME("tile.flowing_water.name"), // Water
        @PowerNukkitOnly @Since("FUTURE") WATER_NAME("tile.water.name"), // Water
        @PowerNukkitOnly @Since("FUTURE") WATERLILY_NAME("tile.waterlily.name"), // Lily Pad
        @PowerNukkitOnly @Since("FUTURE") WEB_NAME("tile.web.name"), // Cobweb
        @PowerNukkitOnly @Since("FUTURE") HEAVY_WEIGHTED_PRESSURE_PLATE_NAME("tile.heavy_weighted_pressure_plate.name"), // Weighted Pressure Plate (Heavy)
        @PowerNukkitOnly @Since("FUTURE") LIGHT_WEIGHTED_PRESSURE_PLATE_NAME("tile.light_weighted_pressure_plate.name"), // Weighted Pressure Plate (Light)
        @PowerNukkitOnly @Since("FUTURE") END_STONE_NAME("tile.end_stone.name"), // End Stone
        @PowerNukkitOnly @Since("FUTURE") END_BRICKS_NAME("tile.end_bricks.name"), // End Stone Bricks
        @PowerNukkitOnly @Since("FUTURE") PLANKS_ACACIA_NAME("tile.planks.acacia.name"), // Acacia Wood Planks
        @PowerNukkitOnly @Since("FUTURE") PLANKS_BIG_OAK_NAME("tile.planks.big_oak.name"), // Dark Oak Wood Planks
        @PowerNukkitOnly @Since("FUTURE") PLANKS_BIRCH_NAME("tile.planks.birch.name"), // Birch Wood Planks
        @PowerNukkitOnly @Since("FUTURE") PLANKS_JUNGLE_NAME("tile.planks.jungle.name"), // Jungle Wood Planks
        @PowerNukkitOnly @Since("FUTURE") PLANKS_NAME("tile.planks.name"), // Wooden Planks
        @PowerNukkitOnly @Since("FUTURE") PLANKS_OAK_NAME("tile.planks.oak.name"), // Oak Wood Planks
        @PowerNukkitOnly @Since("FUTURE") PLANKS_SPRUCE_NAME("tile.planks.spruce.name"), // Spruce Wood Planks
        @PowerNukkitOnly @Since("FUTURE") WOODEN_SLAB_ACACIA_NAME("tile.wooden_slab.acacia.name"), // Acacia Wood Slab
        @PowerNukkitOnly @Since("FUTURE") WOODEN_SLAB_BIG_OAK_NAME("tile.wooden_slab.big_oak.name"), // Dark Oak Wood Slab
        @PowerNukkitOnly @Since("FUTURE") WOODEN_SLAB_BIRCH_NAME("tile.wooden_slab.birch.name"), // Birch Wood Slab
        @PowerNukkitOnly @Since("FUTURE") WOODEN_SLAB_JUNGLE_NAME("tile.wooden_slab.jungle.name"), // Jungle Wood Slab
        @PowerNukkitOnly @Since("FUTURE") WOODEN_SLAB_NAME("tile.wooden_slab.name"), // Wood Slab
        @PowerNukkitOnly @Since("FUTURE") WOODEN_SLAB_OAK_NAME("tile.wooden_slab.oak.name"), // Oak Wood Slab
        @PowerNukkitOnly @Since("FUTURE") WOODEN_SLAB_SPRUCE_NAME("tile.wooden_slab.spruce.name"), // Spruce Wood Slab
        @PowerNukkitOnly @Since("FUTURE") CARPET_BLACK_NAME("tile.carpet.black.name"), // Black Carpet
        @PowerNukkitOnly @Since("FUTURE") CARPET_BLUE_NAME("tile.carpet.blue.name"), // Blue Carpet
        @PowerNukkitOnly @Since("FUTURE") CARPET_BROWN_NAME("tile.carpet.brown.name"), // Brown Carpet
        @PowerNukkitOnly @Since("FUTURE") CARPET_CYAN_NAME("tile.carpet.cyan.name"), // Cyan Carpet
        @PowerNukkitOnly @Since("FUTURE") CARPET_GRAY_NAME("tile.carpet.gray.name"), // Gray Carpet
        @PowerNukkitOnly @Since("FUTURE") CARPET_GREEN_NAME("tile.carpet.green.name"), // Green Carpet
        @PowerNukkitOnly @Since("FUTURE") CARPET_LIGHTBLUE_NAME("tile.carpet.lightBlue.name"), // Light Blue Carpet
        @PowerNukkitOnly @Since("FUTURE") CARPET_LIME_NAME("tile.carpet.lime.name"), // Lime Carpet
        @PowerNukkitOnly @Since("FUTURE") CARPET_MAGENTA_NAME("tile.carpet.magenta.name"), // Magenta Carpet
        @PowerNukkitOnly @Since("FUTURE") CARPET_NAME("tile.carpet.name"), // Carpet
        @PowerNukkitOnly @Since("FUTURE") CARPET_ORANGE_NAME("tile.carpet.orange.name"), // Orange Carpet
        @PowerNukkitOnly @Since("FUTURE") CARPET_PINK_NAME("tile.carpet.pink.name"), // Pink Carpet
        @PowerNukkitOnly @Since("FUTURE") CARPET_PURPLE_NAME("tile.carpet.purple.name"), // Purple Carpet
        @PowerNukkitOnly @Since("FUTURE") CARPET_RED_NAME("tile.carpet.red.name"), // Red Carpet
        @PowerNukkitOnly @Since("FUTURE") CARPET_SILVER_NAME("tile.carpet.silver.name"), // Light Gray Carpet
        @PowerNukkitOnly @Since("FUTURE") CARPET_WHITE_NAME("tile.carpet.white.name"), // White Carpet
        @PowerNukkitOnly @Since("FUTURE") CARPET_YELLOW_NAME("tile.carpet.yellow.name"), // Yellow Carpet
        @PowerNukkitOnly @Since("FUTURE") CRAFTING_TABLE_NAME("tile.crafting_table.name"), // Crafting Table
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTA_WHITE_NAME("tile.glazedTerracotta.white.name"), // White Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTA_ORANGE_NAME("tile.glazedTerracotta.orange.name"), // Orange Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTA_MAGENTA_NAME("tile.glazedTerracotta.magenta.name"), // Magenta Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTA_LIGHT_BLUE_NAME("tile.glazedTerracotta.light_blue.name"), // Light Blue Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTA_YELLOW_NAME("tile.glazedTerracotta.yellow.name"), // Yellow Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTA_LIME_NAME("tile.glazedTerracotta.lime.name"), // Lime Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTA_PINK_NAME("tile.glazedTerracotta.pink.name"), // Pink Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTA_GRAY_NAME("tile.glazedTerracotta.gray.name"), // Gray Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTA_SILVER_NAME("tile.glazedTerracotta.silver.name"), // Light Gray Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTA_CYAN_NAME("tile.glazedTerracotta.cyan.name"), // Cyan Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTA_PURPLE_NAME("tile.glazedTerracotta.purple.name"), // Purple Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTA_BLUE_NAME("tile.glazedTerracotta.blue.name"), // Blue Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTA_BROWN_NAME("tile.glazedTerracotta.brown.name"), // Brown Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTA_GREEN_NAME("tile.glazedTerracotta.green.name"), // Green Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTA_RED_NAME("tile.glazedTerracotta.red.name"), // Red Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTA_BLACK_NAME("tile.glazedTerracotta.black.name"), // Black Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") CONCRETE_BLACK_NAME("tile.concrete.black.name"), // Black Concrete
        @PowerNukkitOnly @Since("FUTURE") CONCRETE_RED_NAME("tile.concrete.red.name"), // Red Concrete
        @PowerNukkitOnly @Since("FUTURE") CONCRETE_GREEN_NAME("tile.concrete.green.name"), // Green Concrete
        @PowerNukkitOnly @Since("FUTURE") CONCRETE_BROWN_NAME("tile.concrete.brown.name"), // Brown Concrete
        @PowerNukkitOnly @Since("FUTURE") CONCRETE_BLUE_NAME("tile.concrete.blue.name"), // Blue Concrete
        @PowerNukkitOnly @Since("FUTURE") CONCRETE_PURPLE_NAME("tile.concrete.purple.name"), // Purple Concrete
        @PowerNukkitOnly @Since("FUTURE") CONCRETE_CYAN_NAME("tile.concrete.cyan.name"), // Cyan Concrete
        @PowerNukkitOnly @Since("FUTURE") CONCRETE_SILVER_NAME("tile.concrete.silver.name"), // Light Gray Concrete
        @PowerNukkitOnly @Since("FUTURE") CONCRETE_GRAY_NAME("tile.concrete.gray.name"), // Gray Concrete
        @PowerNukkitOnly @Since("FUTURE") CONCRETE_PINK_NAME("tile.concrete.pink.name"), // Pink Concrete
        @PowerNukkitOnly @Since("FUTURE") CONCRETE_LIME_NAME("tile.concrete.lime.name"), // Lime Concrete
        @PowerNukkitOnly @Since("FUTURE") CONCRETE_YELLOW_NAME("tile.concrete.yellow.name"), // Yellow Concrete
        @PowerNukkitOnly @Since("FUTURE") CONCRETE_LIGHTBLUE_NAME("tile.concrete.lightBlue.name"), // Light Blue Concrete
        @PowerNukkitOnly @Since("FUTURE") CONCRETE_MAGENTA_NAME("tile.concrete.magenta.name"), // Magenta Concrete
        @PowerNukkitOnly @Since("FUTURE") CONCRETE_ORANGE_NAME("tile.concrete.orange.name"), // Orange Concrete
        @PowerNukkitOnly @Since("FUTURE") CONCRETE_WHITE_NAME("tile.concrete.white.name"), // White Concrete
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTAWHITE_NAME("tile.glazedTerracottaWhite.name"), // White Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTAORANGE_NAME("tile.glazedTerracottaOrange.name"), // Orange Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTAMAGENTA_NAME("tile.glazedTerracottaMagenta.name"), // Magenta Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTALIGHTBLUE_NAME("tile.glazedTerracottaLightBlue.name"), // Light Blue Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTAYELLOW_NAME("tile.glazedTerracottaYellow.name"), // Yellow Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTALIME_NAME("tile.glazedTerracottaLime.name"), // Lime Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTAPINK_NAME("tile.glazedTerracottaPink.name"), // Pink Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTAGRAY_NAME("tile.glazedTerracottaGray.name"), // Gray Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTASILVER_NAME("tile.glazedTerracottaSilver.name"), // Light Gray Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTACYAN_NAME("tile.glazedTerracottaCyan.name"), // Cyan Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTAPURPLE_NAME("tile.glazedTerracottaPurple.name"), // Purple Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTABLUE_NAME("tile.glazedTerracottaBlue.name"), // Blue Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTABROWN_NAME("tile.glazedTerracottaBrown.name"), // Brown Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTAGREEN_NAME("tile.glazedTerracottaGreen.name"), // Green Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTARED_NAME("tile.glazedTerracottaRed.name"), // Red Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") GLAZEDTERRACOTTABLACK_NAME("tile.glazedTerracottaBlack.name"), // Black Glazed Terracotta
        @PowerNukkitOnly @Since("FUTURE") CONCRETEPOWDER_BLACK_NAME("tile.concretePowder.black.name"), // Black Concrete Powder
        @PowerNukkitOnly @Since("FUTURE") CONCRETEPOWDER_RED_NAME("tile.concretePowder.red.name"), // Red Concrete Powder
        @PowerNukkitOnly @Since("FUTURE") CONCRETEPOWDER_GREEN_NAME("tile.concretePowder.green.name"), // Green Concrete Powder
        @PowerNukkitOnly @Since("FUTURE") CONCRETEPOWDER_BROWN_NAME("tile.concretePowder.brown.name"), // Brown Concrete Powder
        @PowerNukkitOnly @Since("FUTURE") CONCRETEPOWDER_BLUE_NAME("tile.concretePowder.blue.name"), // Blue Concrete Powder
        @PowerNukkitOnly @Since("FUTURE") CONCRETEPOWDER_PURPLE_NAME("tile.concretePowder.purple.name"), // Purple Concrete Powder
        @PowerNukkitOnly @Since("FUTURE") CONCRETEPOWDER_CYAN_NAME("tile.concretePowder.cyan.name"), // Cyan Concrete Powder
        @PowerNukkitOnly @Since("FUTURE") CONCRETEPOWDER_SILVER_NAME("tile.concretePowder.silver.name"), // Light Gray Concrete Powder
        @PowerNukkitOnly @Since("FUTURE") CONCRETEPOWDER_GRAY_NAME("tile.concretePowder.gray.name"), // Gray Concrete Powder
        @PowerNukkitOnly @Since("FUTURE") CONCRETEPOWDER_PINK_NAME("tile.concretePowder.pink.name"), // Pink Concrete Powder
        @PowerNukkitOnly @Since("FUTURE") CONCRETEPOWDER_LIME_NAME("tile.concretePowder.lime.name"), // Lime Concrete Powder
        @PowerNukkitOnly @Since("FUTURE") CONCRETEPOWDER_YELLOW_NAME("tile.concretePowder.yellow.name"), // Yellow Concrete Powder
        @PowerNukkitOnly @Since("FUTURE") CONCRETEPOWDER_LIGHTBLUE_NAME("tile.concretePowder.lightBlue.name"), // Light Blue Concrete Powder
        @PowerNukkitOnly @Since("FUTURE") CONCRETEPOWDER_MAGENTA_NAME("tile.concretePowder.magenta.name"), // Magenta Concrete Powder
        @PowerNukkitOnly @Since("FUTURE") CONCRETEPOWDER_ORANGE_NAME("tile.concretePowder.orange.name"), // Orange Concrete Powder
        @PowerNukkitOnly @Since("FUTURE") CONCRETEPOWDER_WHITE_NAME("tile.concretePowder.white.name"), // White Concrete Powder
        @PowerNukkitOnly @Since("FUTURE") STRIPPED_SPRUCE_LOG_NAME("tile.stripped_spruce_log.name"), // Stripped Spruce Log
        @PowerNukkitOnly @Since("FUTURE") STRIPPED_DARK_OAK_LOG_NAME("tile.stripped_dark_oak_log.name"), // Stripped Dark Oak Log
        @PowerNukkitOnly @Since("FUTURE") STRIPPED_BIRCH_LOG_NAME("tile.stripped_birch_log.name"), // Stripped Birch Log
        @PowerNukkitOnly @Since("FUTURE") STRIPPED_JUNGLE_LOG_NAME("tile.stripped_jungle_log.name"), // Stripped Jungle Log
        @PowerNukkitOnly @Since("FUTURE") STRIPPED_OAK_LOG_NAME("tile.stripped_oak_log.name"), // Stripped Oak Log
        @PowerNukkitOnly @Since("FUTURE") STRIPPED_ACACIA_LOG_NAME("tile.stripped_acacia_log.name"), // Stripped Acacia Log
        @PowerNukkitOnly @Since("FUTURE") BAMBOO_NAME("tile.bamboo.name"), // Bamboo
        @PowerNukkitOnly @Since("FUTURE") SCAFFOLDING_NAME("tile.scaffolding.name"), // Scaffolding
        @PowerNukkitOnly @Since("FUTURE") GRINDSTONE_NAME("tile.grindstone.name"), // Grindstone
        @PowerNukkitOnly @Since("FUTURE") CARTOGRAPHY_TABLE_NAME("tile.cartography_table.name"), // Cartography Table
        @PowerNukkitOnly @Since("FUTURE") LANTERN_NAME("tile.lantern.name"), // Lantern
        @PowerNukkitOnly @Since("FUTURE") SOUL_LANTERN_NAME("tile.soul_lantern.name"), // Soul Lantern
        @PowerNukkitOnly @Since("FUTURE") SMOKER_NAME("tile.smoker.name"), // Smoker
        @PowerNukkitOnly @Since("FUTURE") SMITHING_TABLE_NAME("tile.smithing_table.name"), // Smithing Table
        @PowerNukkitOnly @Since("FUTURE") BARREL_NAME("tile.barrel.name"), // Barrel
        @PowerNukkitOnly @Since("FUTURE") CAMPFIRE_NAME("tile.campfire.name"), // Campfire
        @PowerNukkitOnly @Since("FUTURE") LOOM_NAME("tile.loom.name"), // Loom
        @PowerNukkitOnly @Since("FUTURE") LECTERN_NAME("tile.lectern.name"), // Lectern
        @PowerNukkitOnly @Since("FUTURE") SWEET_BERRY_BUSH_NAME("tile.sweet_berry_bush.name"), // Sweet Berry Bush
        @PowerNukkitOnly @Since("FUTURE") WOOD_OAK_NAME("tile.wood.oak.name"), // Oak Wood
        @PowerNukkitOnly @Since("FUTURE") WOOD_SPRUCE_NAME("tile.wood.spruce.name"), // Spruce Wood
        @PowerNukkitOnly @Since("FUTURE") WOOD_BIRCH_NAME("tile.wood.birch.name"), // Birch Wood
        @PowerNukkitOnly @Since("FUTURE") WOOD_JUNGLE_NAME("tile.wood.jungle.name"), // Jungle Wood
        @PowerNukkitOnly @Since("FUTURE") WOOD_ACACIA_NAME("tile.wood.acacia.name"), // Acacia Wood
        @PowerNukkitOnly @Since("FUTURE") WOOD_DARK_OAK_NAME("tile.wood.dark_oak.name"), // Dark Oak Wood
        @PowerNukkitOnly @Since("FUTURE") WOOD_STRIPPED_OAK_NAME("tile.wood.stripped.oak.name"), // Stripped Oak Wood
        @PowerNukkitOnly @Since("FUTURE") WOOD_STRIPPED_SPRUCE_NAME("tile.wood.stripped.spruce.name"), // Stripped Spruce Wood
        @PowerNukkitOnly @Since("FUTURE") WOOD_STRIPPED_BIRCH_NAME("tile.wood.stripped.birch.name"), // Stripped Birch Wood
        @PowerNukkitOnly @Since("FUTURE") WOOD_STRIPPED_JUNGLE_NAME("tile.wood.stripped.jungle.name"), // Stripped Jungle Wood
        @PowerNukkitOnly @Since("FUTURE") WOOD_STRIPPED_ACACIA_NAME("tile.wood.stripped.acacia.name"), // Stripped Acacia Wood
        @PowerNukkitOnly @Since("FUTURE") WOOD_STRIPPED_DARK_OAK_NAME("tile.wood.stripped.dark_oak.name"), // Stripped Dark Oak Wood
        @PowerNukkitOnly @Since("FUTURE") NETHERITE_BLOCK_NAME("tile.netherite_block.name"), // Block of Netherite
        @PowerNukkitOnly @Since("FUTURE") ANCIENT_DEBRIS_NAME("tile.ancient_debris.name"), // Ancient Debris
        @PowerNukkitOnly @Since("FUTURE") NETHER_GOLD_ORE_NAME("tile.nether_gold_ore.name"), // Nether Gold Ore
        @PowerNukkitOnly @Since("FUTURE") RESPAWN_ANCHOR_NAME("tile.respawn_anchor.name"), // Respawn Anchor
        @PowerNukkitOnly @Since("FUTURE") CRYING_OBSIDIAN_NAME("tile.crying_obsidian.name"), // Crying Obsidian
        @PowerNukkitOnly @Since("FUTURE") POWDER_SNOW_NAME("tile.powder_snow.name"), // Powder Snow
        @PowerNukkitOnly @Since("FUTURE") DEEPSLATE_NAME("tile.deepslate.name"), // Deepslate
        @PowerNukkitOnly @Since("FUTURE") INFESTED_DEEPSLATE_NAME("tile.infested_deepslate.name"), // Infested Deepslate
        @PowerNukkitOnly @Since("FUTURE") COBBLED_DEEPSLATE_NAME("tile.cobbled_deepslate.name"), // Cobbled Deepslate
        @PowerNukkitOnly @Since("FUTURE") DRIPSTONE_BLOCK_NAME("tile.dripstone_block.name"), // Dripstone Block
        @PowerNukkitOnly @Since("FUTURE") POINTED_DRIPSTONE_NAME("tile.pointed_dripstone.name"), // Pointed Dripstone
        @PowerNukkitOnly @Since("FUTURE") COBBLED_DEEPSLATE_SLAB_NAME("tile.cobbled_deepslate_slab.name"), // Cobbled Deepslate Slab
        @PowerNukkitOnly @Since("FUTURE") COBBLED_DEEPSLATE_STAIRS_NAME("tile.cobbled_deepslate_stairs.name"), // Cobbled Deepslate Stairs
        @PowerNukkitOnly @Since("FUTURE") COBBLED_DEEPSLATE_WALL_NAME("tile.cobbled_deepslate_wall.name"), // Cobbled Deepslate Wall
        @PowerNukkitOnly @Since("FUTURE") POLISHED_DEEPSLATE_NAME("tile.polished_deepslate.name"), // Polished Deepslate
        @PowerNukkitOnly @Since("FUTURE") POLISHED_DEEPSLATE_SLAB_NAME("tile.polished_deepslate_slab.name"), // Polished Deepslate Slab
        @PowerNukkitOnly @Since("FUTURE") POLISHED_DEEPSLATE_STAIRS_NAME("tile.polished_deepslate_stairs.name"), // Polished Deepslate Stairs
        @PowerNukkitOnly @Since("FUTURE") POLISHED_DEEPSLATE_WALL_NAME("tile.polished_deepslate_wall.name"), // Polished Deepslate Wall
        @PowerNukkitOnly @Since("FUTURE") DEEPSLATE_TILES_NAME("tile.deepslate_tiles.name"), // Deepslate Tiles
        @PowerNukkitOnly @Since("FUTURE") DEEPSLATE_TILE_SLAB_NAME("tile.deepslate_tile_slab.name"), // Deepslate Tile Slab
        @PowerNukkitOnly @Since("FUTURE") DEEPSLATE_TILE_STAIRS_NAME("tile.deepslate_tile_stairs.name"), // Deepslate Tile Stairs
        @PowerNukkitOnly @Since("FUTURE") DEEPSLATE_TILE_WALL_NAME("tile.deepslate_tile_wall.name"), // Deepslate Tile Wall
        @PowerNukkitOnly @Since("FUTURE") DEEPSLATE_BRICKS_NAME("tile.deepslate_bricks.name"), // Deepslate Bricks
        @PowerNukkitOnly @Since("FUTURE") DEEPSLATE_BRICK_SLAB_NAME("tile.deepslate_brick_slab.name"), // Deepslate Brick Slab
        @PowerNukkitOnly @Since("FUTURE") DEEPSLATE_BRICK_STAIRS_NAME("tile.deepslate_brick_stairs.name"), // Deepslate Brick Stairs
        @PowerNukkitOnly @Since("FUTURE") DEEPSLATE_BRICK_WALL_NAME("tile.deepslate_brick_wall.name"), // Deepslate Brick Wall
        @PowerNukkitOnly @Since("FUTURE") CHISELED_DEEPSLATE_NAME("tile.chiseled_deepslate.name"), // Chiseled Deepslate
        @PowerNukkitOnly @Since("FUTURE") COBBLED_DEEPSLATE_DOUBLE_SLAB_NAME("tile.cobbled_deepslate_double_slab.name"), // Cobbled Deepslate Double Slab
        @PowerNukkitOnly @Since("FUTURE") POLISHED_DEEPSLATE_DOUBLE_SLAB_NAME("tile.polished_deepslate_double_slab.name"), // Polished Deepslate Double Slab
        @PowerNukkitOnly @Since("FUTURE") DEEPSLATE_TILE_DOUBLE_SLAB_NAME("tile.deepslate_tile_double_slab.name"), // Deepslate Tile Double Slab
        @PowerNukkitOnly @Since("FUTURE") DEEPSLATE_BRICK_DOUBLE_SLAB_NAME("tile.deepslate_brick_double_slab.name"), // Deepslate Brick Double Slab
        @PowerNukkitOnly @Since("FUTURE") DEEPSLATE_LAPIS_ORE_NAME("tile.deepslate_lapis_ore.name"), // Deepslate Lapis Ore
        @PowerNukkitOnly @Since("FUTURE") DEEPSLATE_IRON_ORE_NAME("tile.deepslate_iron_ore.name"), // Deepslate Iron Ore
        @PowerNukkitOnly @Since("FUTURE") DEEPSLATE_GOLD_ORE_NAME("tile.deepslate_gold_ore.name"), // Deepslate Gold Ore
        @PowerNukkitOnly @Since("FUTURE") DEEPSLATE_REDSTONE_ORE_NAME("tile.deepslate_redstone_ore.name"), // Deepslate Redstone Ore
        @PowerNukkitOnly @Since("FUTURE") DEEPSLATE_DIAMOND_ORE_NAME("tile.deepslate_diamond_ore.name"), // Deepslate Diamond Ore
        @PowerNukkitOnly @Since("FUTURE") DEEPSLATE_COAL_ORE_NAME("tile.deepslate_coal_ore.name"), // Deepslate Coal Ore
        @PowerNukkitOnly @Since("FUTURE") DEEPSLATE_EMERALD_ORE_NAME("tile.deepslate_emerald_ore.name"), // Deepslate Emerald Ore
        @PowerNukkitOnly @Since("FUTURE") DEEPSLATE_COPPER_ORE_NAME("tile.deepslate_copper_ore.name"), // Deepslate Copper Ore
        @PowerNukkitOnly @Since("FUTURE") CRACKED_DEEPSLATE_TILES_NAME("tile.cracked_deepslate_tiles.name"), // Cracked Deepslate Tiles
        @PowerNukkitOnly @Since("FUTURE") CRACKED_DEEPSLATE_BRICKS_NAME("tile.cracked_deepslate_bricks.name"), // Cracked Deepslate Bricks
        @PowerNukkitOnly @Since("FUTURE") COPPER_BLOCK_NAME("tile.copper_block.name"), // Block of Copper
        @PowerNukkitOnly @Since("FUTURE") EXPOSED_COPPER_NAME("tile.exposed_copper.name"), // Exposed Copper
        @PowerNukkitOnly @Since("FUTURE") WEATHERED_COPPER_NAME("tile.weathered_copper.name"), // Weathered Copper
        @PowerNukkitOnly @Since("FUTURE") OXIDIZED_COPPER_NAME("tile.oxidized_copper.name"), // Oxidized Copper
        @PowerNukkitOnly @Since("FUTURE") WAXED_COPPER_NAME("tile.waxed_copper.name"), // Waxed Block of Copper
        @PowerNukkitOnly @Since("FUTURE") WAXED_EXPOSED_COPPER_NAME("tile.waxed_exposed_copper.name"), // Waxed Exposed Copper
        @PowerNukkitOnly @Since("FUTURE") WAXED_WEATHERED_COPPER_NAME("tile.waxed_weathered_copper.name"), // Waxed Weathered Copper
        @PowerNukkitOnly @Since("FUTURE") WAXED_OXIDIZED_COPPER_NAME("tile.waxed_oxidized_copper.name"), // Waxed Oxidized Copper
        @PowerNukkitOnly @Since("FUTURE") CUT_COPPER_NAME("tile.cut_copper.name"), // Cut Copper
        @PowerNukkitOnly @Since("FUTURE") EXPOSED_CUT_COPPER_NAME("tile.exposed_cut_copper.name"), // Exposed Cut Copper
        @PowerNukkitOnly @Since("FUTURE") WEATHERED_CUT_COPPER_NAME("tile.weathered_cut_copper.name"), // Weathered Cut Copper
        @PowerNukkitOnly @Since("FUTURE") OXIDIZED_CUT_COPPER_NAME("tile.oxidized_cut_copper.name"), // Oxidized Cut Copper
        @PowerNukkitOnly @Since("FUTURE") WAXED_CUT_COPPER_NAME("tile.waxed_cut_copper.name"), // Waxed Cut Copper
        @PowerNukkitOnly @Since("FUTURE") WAXED_EXPOSED_CUT_COPPER_NAME("tile.waxed_exposed_cut_copper.name"), // Waxed Exposed Cut Copper
        @PowerNukkitOnly @Since("FUTURE") WAXED_WEATHERED_CUT_COPPER_NAME("tile.waxed_weathered_cut_copper.name"), // Waxed Weathered Cut Copper
        @PowerNukkitOnly @Since("FUTURE") WAXED_OXIDIZED_CUT_COPPER_NAME("tile.waxed_oxidized_cut_copper.name"), // Waxed Oxidized Cut Copper
        @PowerNukkitOnly @Since("FUTURE") CUT_COPPER_STAIRS_NAME("tile.cut_copper_stairs.name"), // Cut Copper Stairs
        @PowerNukkitOnly @Since("FUTURE") EXPOSED_CUT_COPPER_STAIRS_NAME("tile.exposed_cut_copper_stairs.name"), // Exposed Cut Copper Stairs
        @PowerNukkitOnly @Since("FUTURE") WEATHERED_CUT_COPPER_STAIRS_NAME("tile.weathered_cut_copper_stairs.name"), // Weathered Cut Copper Stairs
        @PowerNukkitOnly @Since("FUTURE") OXIDIZED_CUT_COPPER_STAIRS_NAME("tile.oxidized_cut_copper_stairs.name"), // Oxidized Cut Copper Stairs
        @PowerNukkitOnly @Since("FUTURE") WAXED_CUT_COPPER_STAIRS_NAME("tile.waxed_cut_copper_stairs.name"), // Waxed Cut Copper Stairs
        @PowerNukkitOnly @Since("FUTURE") WAXED_EXPOSED_CUT_COPPER_STAIRS_NAME("tile.waxed_exposed_cut_copper_stairs.name"), // Waxed Exposed Cut Copper Stairs
        @PowerNukkitOnly @Since("FUTURE") WAXED_WEATHERED_CUT_COPPER_STAIRS_NAME("tile.waxed_weathered_cut_copper_stairs.name"), // Waxed Weathered Cut Copper Stairs
        @PowerNukkitOnly @Since("FUTURE") WAXED_OXIDIZED_CUT_COPPER_STAIRS_NAME("tile.waxed_oxidized_cut_copper_stairs.name"), // Waxed Oxidized Cut Copper Stairs
        @PowerNukkitOnly @Since("FUTURE") CUT_COPPER_SLAB_NAME("tile.cut_copper_slab.name"), // Cut Copper Slab
        @PowerNukkitOnly @Since("FUTURE") EXPOSED_CUT_COPPER_SLAB_NAME("tile.exposed_cut_copper_slab.name"), // Exposed Cut Copper Slab
        @PowerNukkitOnly @Since("FUTURE") WEATHERED_CUT_COPPER_SLAB_NAME("tile.weathered_cut_copper_slab.name"), // Weathered Cut Copper Slab
        @PowerNukkitOnly @Since("FUTURE") OXIDIZED_CUT_COPPER_SLAB_NAME("tile.oxidized_cut_copper_slab.name"), // Oxidized Cut Copper Slab
        @PowerNukkitOnly @Since("FUTURE") WAXED_CUT_COPPER_SLAB_NAME("tile.waxed_cut_copper_slab.name"), // Waxed Cut Copper Slab
        @PowerNukkitOnly @Since("FUTURE") WAXED_EXPOSED_CUT_COPPER_SLAB_NAME("tile.waxed_exposed_cut_copper_slab.name"), // Waxed Exposed Cut Copper Slab
        @PowerNukkitOnly @Since("FUTURE") WAXED_WEATHERED_CUT_COPPER_SLAB_NAME("tile.waxed_weathered_cut_copper_slab.name"), // Waxed Weathered Cut Copper Slab
        @PowerNukkitOnly @Since("FUTURE") WAXED_OXIDIZED_CUT_COPPER_SLAB_NAME("tile.waxed_oxidized_cut_copper_slab.name"), // Waxed Oxidized Cut Copper Slab
        @PowerNukkitOnly @Since("FUTURE") RAW_COPPER_BLOCK_NAME("tile.raw_copper_block.name"), // Block of Raw Copper
        @PowerNukkitOnly @Since("FUTURE") RAW_IRON_BLOCK_NAME("tile.raw_iron_block.name"), // Block of Raw Iron
        @PowerNukkitOnly @Since("FUTURE") RAW_GOLD_BLOCK_NAME("tile.raw_gold_block.name"), // Block of Raw Gold
        @PowerNukkitOnly @Since("FUTURE") AMETHYST_BLOCK_NAME("tile.amethyst_block.name"), // Amethyst Block
        @PowerNukkitOnly @Since("FUTURE") BUDDING_AMETHYST_NAME("tile.budding_amethyst.name"), // Budding Amethyst
        @PowerNukkitOnly @Since("FUTURE") AMETHYST_CLUSTER_NAME("tile.amethyst_cluster.name"), // Amethyst Cluster
        @PowerNukkitOnly @Since("FUTURE") LARGE_AMETHYST_BUD_NAME("tile.large_amethyst_bud.name"), // Large Amethyst Bud
        @PowerNukkitOnly @Since("FUTURE") MEDIUM_AMETHYST_BUD_NAME("tile.medium_amethyst_bud.name"), // Medium Amethyst Bud
        @PowerNukkitOnly @Since("FUTURE") SMALL_AMETHYST_BUD_NAME("tile.small_amethyst_bud.name"), // Small Amethyst Bud
        @PowerNukkitOnly @Since("FUTURE") TUFF_NAME("tile.tuff.name"), // Tuff
        @PowerNukkitOnly @Since("FUTURE") CALCITE_NAME("tile.calcite.name"), // Calcite
        @PowerNukkitOnly @Since("FUTURE") TINTED_GLASS_NAME("tile.tinted_glass.name"), // Tinted Glass
        @PowerNukkitOnly @Since("FUTURE") SMOOTH_BASALT_NAME("tile.smooth_basalt.name"), // Smooth Basalt
        ;
        private final String code; Tile(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum ItemGroup implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") SEARCH("itemGroup.search"), // Search Items
        @PowerNukkitOnly @Since("FUTURE") NAME_PLANKS("itemGroup.name.planks"), // Planks
        @PowerNukkitOnly @Since("FUTURE") NAME_WALLS("itemGroup.name.walls"), // Walls
        @PowerNukkitOnly @Since("FUTURE") NAME_FENCE("itemGroup.name.fence"), // Fences
        @PowerNukkitOnly @Since("FUTURE") NAME_FENCEGATE("itemGroup.name.fenceGate"), // Fence Gates
        @PowerNukkitOnly @Since("FUTURE") NAME_STAIRS("itemGroup.name.stairs"), // Stairs
        @PowerNukkitOnly @Since("FUTURE") NAME_DOOR("itemGroup.name.door"), // Doors
        @PowerNukkitOnly @Since("FUTURE") NAME_GLASS("itemGroup.name.glass"), // Glass
        @PowerNukkitOnly @Since("FUTURE") NAME_GLASSPANE("itemGroup.name.glassPane"), // Glass Panes
        @PowerNukkitOnly @Since("FUTURE") NAME_PERMISSION("itemGroup.name.permission"), // Permission Blocks
        @PowerNukkitOnly @Since("FUTURE") NAME_SLAB("itemGroup.name.slab"), // Slabs
        @PowerNukkitOnly @Since("FUTURE") NAME_STONEBRICK("itemGroup.name.stoneBrick"), // Decorative Stone
        @PowerNukkitOnly @Since("FUTURE") NAME_SANDSTONE("itemGroup.name.sandstone"), // Sandstone
        @PowerNukkitOnly @Since("FUTURE") NAME_WOOL("itemGroup.name.wool"), // Wool
        @PowerNukkitOnly @Since("FUTURE") NAME_WOOLCARPET("itemGroup.name.woolCarpet"), // Wool Carpet
        @PowerNukkitOnly @Since("FUTURE") NAME_CONCRETEPOWDER("itemGroup.name.concretePowder"), // Concrete Powder
        @PowerNukkitOnly @Since("FUTURE") NAME_CONCRETE("itemGroup.name.concrete"), // Concrete
        @PowerNukkitOnly @Since("FUTURE") NAME_STAINEDCLAY("itemGroup.name.stainedClay"), // Terracotta
        @PowerNukkitOnly @Since("FUTURE") NAME_GLAZEDTERRACOTTA("itemGroup.name.glazedTerracotta"), // Glazed Terracottas
        @PowerNukkitOnly @Since("FUTURE") NAME_DYE("itemGroup.name.dye"), // Dyes
        @PowerNukkitOnly @Since("FUTURE") NAME_ORE("itemGroup.name.ore"), // Ores
        @PowerNukkitOnly @Since("FUTURE") NAME_STONE("itemGroup.name.stone"), // Stone
        @PowerNukkitOnly @Since("FUTURE") NAME_LOG("itemGroup.name.log"), // Logs
        @PowerNukkitOnly @Since("FUTURE") NAME_LEAVES("itemGroup.name.leaves"), // Leaves
        @PowerNukkitOnly @Since("FUTURE") NAME_SAPLING("itemGroup.name.sapling"), // Saplings
        @PowerNukkitOnly @Since("FUTURE") NAME_SEED("itemGroup.name.seed"), // Seeds
        @PowerNukkitOnly @Since("FUTURE") NAME_CROP("itemGroup.name.crop"), // Crops
        @PowerNukkitOnly @Since("FUTURE") NAME_GRASS("itemGroup.name.grass"), // Ground Cover
        @PowerNukkitOnly @Since("FUTURE") NAME_FLOWER("itemGroup.name.flower"), // Flowers
        @PowerNukkitOnly @Since("FUTURE") NAME_RAWFOOD("itemGroup.name.rawFood"), // Raw Food
        @PowerNukkitOnly @Since("FUTURE") NAME_COOKEDFOOD("itemGroup.name.cookedFood"), // Cooked Food
        @PowerNukkitOnly @Since("FUTURE") NAME_MISCFOOD("itemGroup.name.miscFood"), // Miscellaneous Foods
        @PowerNukkitOnly @Since("FUTURE") NAME_MUSHROOM("itemGroup.name.mushroom"), // Mushrooms
        @PowerNukkitOnly @Since("FUTURE") NAME_MONSTERSTONEEGG("itemGroup.name.monsterStoneEgg"), // Infested Stone
        @PowerNukkitOnly @Since("FUTURE") NAME_MOBEGG("itemGroup.name.mobEgg"), // Mob Eggs
        @PowerNukkitOnly @Since("FUTURE") NAME_HELMET("itemGroup.name.helmet"), // Helmets
        @PowerNukkitOnly @Since("FUTURE") NAME_CHESTPLATE("itemGroup.name.chestplate"), // Chestplates
        @PowerNukkitOnly @Since("FUTURE") NAME_LEGGINGS("itemGroup.name.leggings"), // Leggings
        @PowerNukkitOnly @Since("FUTURE") NAME_BOOTS("itemGroup.name.boots"), // Boots
        @PowerNukkitOnly @Since("FUTURE") NAME_HORSEARMOR("itemGroup.name.horseArmor"), // Horse Armor
        @PowerNukkitOnly @Since("FUTURE") NAME_SWORD("itemGroup.name.sword"), // Swords
        @PowerNukkitOnly @Since("FUTURE") NAME_AXE("itemGroup.name.axe"), // Axes
        @PowerNukkitOnly @Since("FUTURE") NAME_PICKAXE("itemGroup.name.pickaxe"), // Pickaxes
        @PowerNukkitOnly @Since("FUTURE") NAME_SHOVEL("itemGroup.name.shovel"), // Shovels
        @PowerNukkitOnly @Since("FUTURE") NAME_HOE("itemGroup.name.hoe"), // Hoes
        @PowerNukkitOnly @Since("FUTURE") NAME_ARROW("itemGroup.name.arrow"), // Arrows
        @PowerNukkitOnly @Since("FUTURE") NAME_POTION("itemGroup.name.potion"), // Potions
        @PowerNukkitOnly @Since("FUTURE") NAME_SPLASHPOTION("itemGroup.name.splashPotion"), // Splash Potions
        @PowerNukkitOnly @Since("FUTURE") NAME_LINGERINGPOTION("itemGroup.name.lingeringPotion"), // Lingering Potions
        @PowerNukkitOnly @Since("FUTURE") NAME_BED("itemGroup.name.bed"), // Beds
        @PowerNukkitOnly @Since("FUTURE") NAME_CHALKBOARD("itemGroup.name.chalkboard"), // Chalkboards
        @PowerNukkitOnly @Since("FUTURE") NAME_ANVIL("itemGroup.name.anvil"), // Anvils
        @PowerNukkitOnly @Since("FUTURE") NAME_CHEST("itemGroup.name.chest"), // Chests
        @PowerNukkitOnly @Since("FUTURE") NAME_SHULKERBOX("itemGroup.name.shulkerBox"), // Shulker Boxes
        @PowerNukkitOnly @Since("FUTURE") NAME_RECORD("itemGroup.name.record"), // Records
        @PowerNukkitOnly @Since("FUTURE") NAME_SKULL("itemGroup.name.skull"), // Mob Skulls
        @PowerNukkitOnly @Since("FUTURE") NAME_BOAT("itemGroup.name.boat"), // Boats
        @PowerNukkitOnly @Since("FUTURE") NAME_RAIL("itemGroup.name.rail"), // Rails
        @PowerNukkitOnly @Since("FUTURE") NAME_MINECART("itemGroup.name.minecart"), // Minecarts
        @PowerNukkitOnly @Since("FUTURE") NAME_PRESSUREPLATE("itemGroup.name.pressurePlate"), // Pressure Plates
        @PowerNukkitOnly @Since("FUTURE") NAME_TRAPDOOR("itemGroup.name.trapdoor"), // Trapdoors
        @PowerNukkitOnly @Since("FUTURE") NAME_ENCHANTEDBOOK("itemGroup.name.enchantedBook"), // Enchanted Books
        @PowerNukkitOnly @Since("FUTURE") NAME_BANNER("itemGroup.name.banner"), // Banners
        @PowerNukkitOnly @Since("FUTURE") NAME_FIREWORK("itemGroup.name.firework"), // Fireworks
        @PowerNukkitOnly @Since("FUTURE") NAME_FIREWORKSTARS("itemGroup.name.fireworkStars"), // Firework Charges
        @PowerNukkitOnly @Since("FUTURE") NAME_CORAL("itemGroup.name.coral"), // Coral Blocks
        @PowerNukkitOnly @Since("FUTURE") NAME_CORAL_DECORATIONS("itemGroup.name.coral_decorations"), // Coral Decorations
        @PowerNukkitOnly @Since("FUTURE") NAME_BUTTONS("itemGroup.name.buttons"), // Buttons
        @PowerNukkitOnly @Since("FUTURE") NAME_SIGN("itemGroup.name.sign"), // Signs
        @PowerNukkitOnly @Since("FUTURE") NAME_WOOD("itemGroup.name.wood"), // Woods
        @PowerNukkitOnly @Since("FUTURE") NAME_BANNER_PATTERN("itemGroup.name.banner_pattern"), // Banner Patterns
        @PowerNukkitOnly @Since("FUTURE") NAME_NETHERWARTBLOCK("itemGroup.name.netherWartBlock"), // Nether Warts
        @PowerNukkitOnly @Since("FUTURE") NAME_COPPER("itemGroup.name.copper"), // Copper
        ;
        private final String code; ItemGroup(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Jigsaw implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TITLE_TARGET_POOL("jigsaw.title.target_pool"), // Target pool:
        @PowerNukkitOnly @Since("FUTURE") TITLE_NAME("jigsaw.title.name"), // Name:
        @PowerNukkitOnly @Since("FUTURE") TITLE_TARGET("jigsaw.title.target"), // Target name:
        @PowerNukkitOnly @Since("FUTURE") TITLE_FINAL_BLOCK("jigsaw.title.final_block"), // Turns into:
        @PowerNukkitOnly @Since("FUTURE") TITLE_JOINT_TYPE("jigsaw.title.joint_type"), // Joint type:
        @PowerNukkitOnly @Since("FUTURE") TITLE_JOINT_TYPE_ALIGNED("jigsaw.title.joint_type.aligned"), // Aligned
        @PowerNukkitOnly @Since("FUTURE") JOINT_TYPE_ALIGNED("jigsaw.joint_type.aligned"), // Aligned
        @PowerNukkitOnly @Since("FUTURE") JOINT_TYPE_ROLLABLE("jigsaw.joint_type.rollable"), // Rollable
        @PowerNukkitOnly @Since("FUTURE") EXIT_DONE("jigsaw.exit.done"), // Done
        @PowerNukkitOnly @Since("FUTURE") EXIT_CANCEL("jigsaw.exit.cancel"), // Cancel
        ;
        private final String code; Jigsaw(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Joincode implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ENTRY_POPUP_ICON_BUTTON("joincode.entry_popup.icon_button"), // %1 join code button		# Example: Apple join code button
        @PowerNukkitOnly @Since("FUTURE") ENTRY_POPUP_ICON_ENTRY("joincode.entry_popup.icon_entry"), // %3 join code entry %1 of %2	# Example: Apple join code entry 2 of 5
        @PowerNukkitOnly @Since("FUTURE") ENTRY_POPUP_TITLE("joincode.entry_popup.title"), // Enter Join Code
        @PowerNukkitOnly @Since("FUTURE") CONNECTING_TITLE("joincode.connecting.title"), // Join World
        @PowerNukkitOnly @Since("FUTURE") CONNECTING_LOWER_TEXT("joincode.connecting.lower_text"), // Searching for world...
        @PowerNukkitOnly @Since("FUTURE") ERROR_TITLE("joincode.error.title"), // Join Error
        @PowerNukkitOnly @Since("FUTURE") ERROR_MESSAGE_NO_MATCH("joincode.error.message.no_match"), // The join code you entered does not match any worlds that are currently available.
        @PowerNukkitOnly @Since("FUTURE") ERROR_MESSAGE_NO_RESPONSE("joincode.error.message.no_response"), // There was a problem connecting to the join code service. Please try again.
        @PowerNukkitOnly @Since("FUTURE") ERROR_MESSAGE_NOT_AVAILABLE("joincode.error.message.not_available"), // Join codes are not available right now. Ask your host for their IP Address to join their game.
        @PowerNukkitOnly @Since("FUTURE") ERROR_MESSAGE_SERVICE_ERROR("joincode.error.message.service_error"), // Something went wrong. Please try again.
        @PowerNukkitOnly @Since("FUTURE") FOUND_TITLE("joincode.found.title"), // Join World
        @PowerNukkitOnly @Since("FUTURE") FOUND_MESSAGE("joincode.found.message"), // Is this the world you were trying to join?
        @PowerNukkitOnly @Since("FUTURE") FOUND_HOST_NAME("joincode.found.host_name"), // Hosted By: %1
        @PowerNukkitOnly @Since("FUTURE") ICON_TEXT_NULL("joincode.icon_text.null"), // Empty
        @PowerNukkitOnly @Since("FUTURE") ICON_TEXT_1("joincode.icon_text.1"), // Book & Quill
        @PowerNukkitOnly @Since("FUTURE") ICON_TEXT_2("joincode.icon_text.2"), // Balloon
        @PowerNukkitOnly @Since("FUTURE") ICON_TEXT_3("joincode.icon_text.3"), // Rail
        @PowerNukkitOnly @Since("FUTURE") ICON_TEXT_4("joincode.icon_text.4"), // Alex
        @PowerNukkitOnly @Since("FUTURE") ICON_TEXT_5("joincode.icon_text.5"), // Cookie
        @PowerNukkitOnly @Since("FUTURE") ICON_TEXT_6("joincode.icon_text.6"), // Fish
        @PowerNukkitOnly @Since("FUTURE") ICON_TEXT_7("joincode.icon_text.7"), // Agent
        @PowerNukkitOnly @Since("FUTURE") ICON_TEXT_8("joincode.icon_text.8"), // Cake
        @PowerNukkitOnly @Since("FUTURE") ICON_TEXT_9("joincode.icon_text.9"), // Pickaxe
        @PowerNukkitOnly @Since("FUTURE") ICON_TEXT_10("joincode.icon_text.10"), // Water Bucket
        @PowerNukkitOnly @Since("FUTURE") ICON_TEXT_11("joincode.icon_text.11"), // Steve
        @PowerNukkitOnly @Since("FUTURE") ICON_TEXT_12("joincode.icon_text.12"), // Apple
        @PowerNukkitOnly @Since("FUTURE") ICON_TEXT_13("joincode.icon_text.13"), // Carrot
        @PowerNukkitOnly @Since("FUTURE") ICON_TEXT_14("joincode.icon_text.14"), // Panda
        @PowerNukkitOnly @Since("FUTURE") ICON_TEXT_15("joincode.icon_text.15"), // Sign
        @PowerNukkitOnly @Since("FUTURE") ICON_TEXT_16("joincode.icon_text.16"), // Potion
        @PowerNukkitOnly @Since("FUTURE") ICON_TEXT_17("joincode.icon_text.17"), // Map
        @PowerNukkitOnly @Since("FUTURE") ICON_TEXT_18("joincode.icon_text.18"), // Llama
        @PowerNukkitOnly @Since("FUTURE") IP_ENTRY_BUTTON_TTS("joincode.ip_entry.button_tts"), // More Options
        @PowerNukkitOnly @Since("FUTURE") IP_ENTRY_ADDRESS_TOOLTIP("joincode.ip_entry.address.tooltip"), // To find the IP Address, ask the host to pause their game. The IP Address and Port number can be found on the multiplayer tab of the pause screen.
        @PowerNukkitOnly @Since("FUTURE") IP_ENTRY_PORT_TOOLTIP("joincode.ip_entry.port.tooltip"), // To find the Port number, ask the host to pause their game. The IP Address and Port number can be found on the multiplayer tab of the pause screen.
        @PowerNukkitOnly @Since("FUTURE") GENERATE_NEW_BUTTON_TEXT("joincode.generate_new.button.text"), // Generate New Join Code
        @PowerNukkitOnly @Since("FUTURE") GENERATE_NEW_TOOLTIP_TEXT("joincode.generate_new.tooltip.text"), // Generating a new code will not interrupt your multiplayer session.
        @PowerNukkitOnly @Since("FUTURE") BUTTON_SHARE_LINK_TEXT("joincode.button.share_link.text"), // Share a Link
        @PowerNukkitOnly @Since("FUTURE") GENERATING_NEW("joincode.generating_new"), // Loading...
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_ERRORTEXT("joincode.tooltip.errortext"), // There was an error generating your join code.
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_ACCOUNT_ERROR("joincode.tooltip.account.error"), // There was a problem verifying your account. Please restart Minecraft: Education Edition and try again.
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_INFOTEXT("joincode.tooltip.infotext"), // Give the join code to your classmate so they can join your world.
        @PowerNukkitOnly @Since("FUTURE") BUTTON_STOP_HOSTING_TEXT("joincode.button.stop_hosting.text"), // STOP HOSTING
        @PowerNukkitOnly @Since("FUTURE") CONFIRMATION_STOP_HOSTING_MESSAGE("joincode.confirmation.stop_hosting.message"), // If you stop hosting the world, the multiplayer session will end for all players. Are you sure you want to do this?
        @PowerNukkitOnly @Since("FUTURE") BUTTON_START_HOSTING_TEXT("joincode.button.start_hosting.text"), // START HOSTING
        @PowerNukkitOnly @Since("FUTURE") CONFIRMATION_START_HOSTING_MESSAGE("joincode.confirmation.start_hosting.message"), // If you start hosting, we will create a code for you to give to other players so they can join your world. Would you like to start hosting?
        @PowerNukkitOnly @Since("FUTURE") SERVICE_UNREACHABLE("joincode.service.unreachable"), // The discovery service can not be reached
        @PowerNukkitOnly @Since("FUTURE") BUTTON_GENERATE_CODE_TEXT("joincode.button.generate_code.text"), // Generate New Join Code
        @PowerNukkitOnly @Since("FUTURE") CONFIRMATION_GENERATE_CODE_MESSAGE("joincode.confirmation.generate_code.message"), // Making a new join code will not stop your multiplayer game. The new code will be used to invite additional players.
        @PowerNukkitOnly @Since("FUTURE") SERVICE_UNAVAILABLE("joincode.service.unavailable"), // Join codes are not available right now. Try refreshing or use your IP address instead.
        ;
        private final String code; Joincode(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Key implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ATTACK("key.attack"), // Attack/Destroy
        @PowerNukkitOnly @Since("FUTURE") BACK("key.back"), // Walk Backwards
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_GAMEPLAY("key.categories.gameplay"), // Gameplay
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_INVENTORY("key.categories.inventory"), // Inventory
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_MISC("key.categories.misc"), // Miscellaneous
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_MOVEMENT("key.categories.movement"), // Movement
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_MULTIPLAYER("key.categories.multiplayer"), // Multiplayer
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_STREAM("key.categories.stream"), // Streaming
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_UI("key.categories.ui"), // Game Interface
        @PowerNukkitOnly @Since("FUTURE") CODEBUILDER("key.codeBuilder"), // Code Builder
        @PowerNukkitOnly @Since("FUTURE") CHAT("key.chat"), // Open Chat
        @PowerNukkitOnly @Since("FUTURE") COMMAND("key.command"), // Open Command
        @PowerNukkitOnly @Since("FUTURE") CYCLEITEMLEFT("key.cycleItemLeft"), // Cycle Item Left
        @PowerNukkitOnly @Since("FUTURE") CYCLEITEMRIGHT("key.cycleItemRight"), // Cycle Item Right
        @PowerNukkitOnly @Since("FUTURE") SCOREBOARD("key.scoreboard"), // Show Scoreboard
        @PowerNukkitOnly @Since("FUTURE") DROP("key.drop"), // Drop Item
        @PowerNukkitOnly @Since("FUTURE") FORWARD("key.forward"), // Walk Forwards
        @PowerNukkitOnly @Since("FUTURE") FULLSCREEN("key.fullscreen"), // Toggle Fullscreen
        @PowerNukkitOnly @Since("FUTURE") HOTBAR_1("key.hotbar.1"), // Hotbar Slot 1
        @PowerNukkitOnly @Since("FUTURE") HOTBAR_2("key.hotbar.2"), // Hotbar Slot 2
        @PowerNukkitOnly @Since("FUTURE") HOTBAR_3("key.hotbar.3"), // Hotbar Slot 3
        @PowerNukkitOnly @Since("FUTURE") HOTBAR_4("key.hotbar.4"), // Hotbar Slot 4
        @PowerNukkitOnly @Since("FUTURE") HOTBAR_5("key.hotbar.5"), // Hotbar Slot 5
        @PowerNukkitOnly @Since("FUTURE") HOTBAR_6("key.hotbar.6"), // Hotbar Slot 6
        @PowerNukkitOnly @Since("FUTURE") HOTBAR_7("key.hotbar.7"), // Hotbar Slot 7
        @PowerNukkitOnly @Since("FUTURE") HOTBAR_8("key.hotbar.8"), // Hotbar Slot 8
        @PowerNukkitOnly @Since("FUTURE") HOTBAR_9("key.hotbar.9"), // Hotbar Slot 9
        @PowerNukkitOnly @Since("FUTURE") CYCLEFIXEDINVENTORY("key.cyclefixedinventory"), // Cycle Fixed Inventory
        @PowerNukkitOnly @Since("FUTURE") IMMERSIVEREADER("key.immersivereader"), // Immersive Reader
        @PowerNukkitOnly @Since("FUTURE") INTERACTWITHTOAST("key.interactwithtoast"), // Open Notification
        @PowerNukkitOnly @Since("FUTURE") MOBEFFECTSANDINTERACTWITHTOAST("key.mobeffectsandinteractwithtoast"), // Open Notification/Mob Effects
        @PowerNukkitOnly @Since("FUTURE") INVENTORY("key.inventory"), // Inventory
        @PowerNukkitOnly @Since("FUTURE") JUMP("key.jump"), // Jump/Fly Up
        @PowerNukkitOnly @Since("FUTURE") LEFT("key.left"), // Strafe Left
        @PowerNukkitOnly @Since("FUTURE") LOOKCENTER("key.lookCenter"), // Look Center
        @PowerNukkitOnly @Since("FUTURE") LOOKDOWN("key.lookDown"), // Look Down
        @PowerNukkitOnly @Since("FUTURE") LOOKDOWNLEFT("key.lookDownLeft"), // Look Down Left
        @PowerNukkitOnly @Since("FUTURE") LOOKDOWNRIGHT("key.lookDownRight"), // Look Down Right
        @PowerNukkitOnly @Since("FUTURE") LOOKDOWNSLIGHT("key.lookDownSlight"), // Look Down Slight
        @PowerNukkitOnly @Since("FUTURE") LOOKDOWNSMOOTH("key.lookDownSmooth"), // Look Down Smooth
        @PowerNukkitOnly @Since("FUTURE") LOOKLEFT("key.lookLeft"), // Look Left
        @PowerNukkitOnly @Since("FUTURE") LOOKLEFTSMOOTH("key.lookLeftSmooth"), // Look Left Smooth
        @PowerNukkitOnly @Since("FUTURE") LOOKRIGHT("key.lookRight"), // Look Right
        @PowerNukkitOnly @Since("FUTURE") LOOKRIGHTSMOOTH("key.lookRightSmooth"), // Look Right Smooth
        @PowerNukkitOnly @Since("FUTURE") LOOKUP("key.lookUp"), // Look Up
        @PowerNukkitOnly @Since("FUTURE") LOOKUPLEFT("key.lookUpLeft"), // Look Up Left
        @PowerNukkitOnly @Since("FUTURE") LOOKUPRIGHT("key.lookUpRight"), // Look Up Right
        @PowerNukkitOnly @Since("FUTURE") LOOKUPSLIGHT("key.lookUpSlight"), // Look Up Slight
        @PowerNukkitOnly @Since("FUTURE") LOOKUPSMOOTH("key.lookUpSmooth"), // Look Up Smooth
        @PowerNukkitOnly @Since("FUTURE") MENUTABLEFT("key.menuTabLeft"), // Menu Tab Left
        @PowerNukkitOnly @Since("FUTURE") MENUTABRIGHT("key.menuTabRight"), // Menu Tab Right
        @PowerNukkitOnly @Since("FUTURE") MOUSEBUTTON("key.mouseButton"), // Button %1$s
        @PowerNukkitOnly @Since("FUTURE") PICKITEM("key.pickItem"), // Pick Block
        @PowerNukkitOnly @Since("FUTURE") PLAYERLIST("key.playerlist"), // List Players
        @PowerNukkitOnly @Since("FUTURE") RIGHT("key.right"), // Strafe Right
        @PowerNukkitOnly @Since("FUTURE") SCREENSHOT("key.screenshot"), // Take Screenshot
        @PowerNukkitOnly @Since("FUTURE") SMOOTHCAMERA("key.smoothCamera"), // Toggle Cinematic Camera
        @PowerNukkitOnly @Since("FUTURE") SNEAK("key.sneak"), // Sneak/Fly Down
        @PowerNukkitOnly @Since("FUTURE") SPECTATOROUTLINES("key.spectatorOutlines"), // Highlight Players (Spectators)
        @PowerNukkitOnly @Since("FUTURE") SPRINT("key.sprint"), // Sprint
        @PowerNukkitOnly @Since("FUTURE") STREAMCOMMERCIAL("key.streamCommercial"), // Show Stream Commercials
        @PowerNukkitOnly @Since("FUTURE") STREAMPAUSEUNPAUSE("key.streamPauseUnpause"), // Pause/Unpause Stream
        @PowerNukkitOnly @Since("FUTURE") STREAMSTARTSTOP("key.streamStartStop"), // Start/Stop Stream
        @PowerNukkitOnly @Since("FUTURE") STREAMTOGGLEMIC("key.streamToggleMic"), // Push To Talk/Mute
        @PowerNukkitOnly @Since("FUTURE") TOGGLEPERSPECTIVE("key.togglePerspective"), // Toggle Perspective
        @PowerNukkitOnly @Since("FUTURE") USE("key.use"), // Use Item/Place Block
        @PowerNukkitOnly @Since("FUTURE") FLYDOWNSLOW("key.flyDownSlow"), // Fly Down Slow
        @PowerNukkitOnly @Since("FUTURE") FLYUPSLOW("key.flyUpSlow"), // Fly Up Slow
        @PowerNukkitOnly @Since("FUTURE") MOBEFFECTS("key.mobEffects"), // Mob Effects
        @PowerNukkitOnly @Since("FUTURE") MOVEBACK("key.moveBack"), // Move Back
        @PowerNukkitOnly @Since("FUTURE") MOVEFORWARD("key.moveForward"), // Move Forward
        @PowerNukkitOnly @Since("FUTURE") MOVELEFT("key.moveLeft"), // Move Left
        @PowerNukkitOnly @Since("FUTURE") MOVERIGHT("key.moveRight"), // Move Right
        @PowerNukkitOnly @Since("FUTURE") PAUSE("key.pause"), // Pause
        @PowerNukkitOnly @Since("FUTURE") TOGGLELIVINGROOM("key.toggleLivingroom"), // Toggle Immersion
        @PowerNukkitOnly @Since("FUTURE") EMOTE("key.emote"), // Emote
        ;
        private final String code; Key(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Keyboard implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_BACKSPACE("keyboard.keyName.backspace"), // BACK
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_TAB("keyboard.keyName.tab"), // TAB
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_RETURN("keyboard.keyName.return"), // RETURN
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_PAUSE("keyboard.keyName.pause"), // PAUSE
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_LSHIFT("keyboard.keyName.lshift"), // SHIFT
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_CONTROL("keyboard.keyName.control"), // CONTROL
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_CAPSLOCK("keyboard.keyName.capsLock"), // CAPITAL
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_ESCAPE("keyboard.keyName.escape"), // ESCAPE
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_SPACE("keyboard.keyName.space"), // SPACE
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_PGDOWN("keyboard.keyName.pgDown"), // PAGE DOWN
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_PGUP("keyboard.keyName.pgUp"), // PAGE UP
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_END("keyboard.keyName.end"), // END
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_HOME("keyboard.keyName.home"), // HOME
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_LEFT("keyboard.keyName.left"), // LEFT
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_UP("keyboard.keyName.up"), // UP
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_RIGHT("keyboard.keyName.right"), // RIGHT
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_DOWN("keyboard.keyName.down"), // DOWN
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_INSERT("keyboard.keyName.insert"), // INSERT
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_DELETE("keyboard.keyName.delete"), // DELETE
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_0("keyboard.keyName.0"), // 0
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_1("keyboard.keyName.1"), // 1
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_2("keyboard.keyName.2"), // 2
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_3("keyboard.keyName.3"), // 3
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_4("keyboard.keyName.4"), // 4
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_5("keyboard.keyName.5"), // 5
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_6("keyboard.keyName.6"), // 6
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_7("keyboard.keyName.7"), // 7
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_8("keyboard.keyName.8"), // 8
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_9("keyboard.keyName.9"), // 9
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_A("keyboard.keyName.a"), // A
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_B("keyboard.keyName.b"), // B
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_C("keyboard.keyName.c"), // C
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_D("keyboard.keyName.d"), // D
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_E("keyboard.keyName.e"), // E
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_F("keyboard.keyName.f"), // F
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_G("keyboard.keyName.g"), // G
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_H("keyboard.keyName.h"), // H
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_I("keyboard.keyName.i"), // I
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_J("keyboard.keyName.j"), // J
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_K("keyboard.keyName.k"), // K
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_L("keyboard.keyName.l"), // L
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_M("keyboard.keyName.m"), // M
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_N("keyboard.keyName.n"), // N
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_O("keyboard.keyName.o"), // O
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_P("keyboard.keyName.p"), // P
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_Q("keyboard.keyName.q"), // Q
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_R("keyboard.keyName.r"), // R
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_S("keyboard.keyName.s"), // S
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_T("keyboard.keyName.t"), // T
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_U("keyboard.keyName.u"), // U
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_V("keyboard.keyName.v"), // V
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_W("keyboard.keyName.w"), // W
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_X("keyboard.keyName.x"), // X
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_Y("keyboard.keyName.y"), // Y
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_Z("keyboard.keyName.z"), // Z
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_F1("keyboard.keyName.f1"), // F1
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_F2("keyboard.keyName.f2"), // F2
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_F3("keyboard.keyName.f3"), // F3
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_F4("keyboard.keyName.f4"), // F4
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_F5("keyboard.keyName.f5"), // F5
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_F6("keyboard.keyName.f6"), // F6
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_F7("keyboard.keyName.f7"), // F7
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_F8("keyboard.keyName.f8"), // F8
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_F9("keyboard.keyName.f9"), // F9
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_F10("keyboard.keyName.f10"), // F10
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_F11("keyboard.keyName.f11"), // F11
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_F12("keyboard.keyName.f12"), // F12
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_F13("keyboard.keyName.f13"), // F13
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD0("keyboard.keyName.numpad0"), // NUMPAD0
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD1("keyboard.keyName.numpad1"), // NUMPAD1
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD2("keyboard.keyName.numpad2"), // NUMPAD2
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD3("keyboard.keyName.numpad3"), // NUMPAD3
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD4("keyboard.keyName.numpad4"), // NUMPAD4
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD5("keyboard.keyName.numpad5"), // NUMPAD5
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD6("keyboard.keyName.numpad6"), // NUMPAD6
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD7("keyboard.keyName.numpad7"), // NUMPAD7
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD8("keyboard.keyName.numpad8"), // NUMPAD8
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD9("keyboard.keyName.numpad9"), // NUMPAD9
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_SCROLL("keyboard.keyName.scroll"), // SCROLL
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_EQUALS("keyboard.keyName.equals"), // EQUALS
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_ADD("keyboard.keyName.add"), // ADD
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_MINUS("keyboard.keyName.minus"), // MINUS
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_SUBTRACT("keyboard.keyName.subtract"), // SUBTRACT
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_MULTIPLY("keyboard.keyName.multiply"), // MULTIPLY
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_DIVIDE("keyboard.keyName.divide"), // DIVIDE
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_DECIMAL("keyboard.keyName.decimal"), // DECIMAL
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_GRAVE("keyboard.keyName.grave"), // GRAVE
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMLOCK("keyboard.keyName.numLock"), // NUMLOCK
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_SLASH("keyboard.keyName.slash"), // SLASH
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_SEMICOLON("keyboard.keyName.semicolon"), // SEMICOLON
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_APOSTROPHE("keyboard.keyName.apostrophe"), // APOSTROPHE
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_COMMA("keyboard.keyName.comma"), // COMMA
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_PERIOD("keyboard.keyName.period"), // PERIOD
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_BACKSLASH("keyboard.keyName.backslash"), // BACKSLASH
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_LBRACKET("keyboard.keyName.lbracket"), // LBRACKET
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_RBRACKET("keyboard.keyName.rbracket"), // RBRACKET
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_BACKSPACE_SHORT("keyboard.keyName.backspace.short"), // BACK
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_TAB_SHORT("keyboard.keyName.tab.short"), // TAB
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_RETURN_SHORT("keyboard.keyName.return.short"), // RETURN
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_PAUSE_SHORT("keyboard.keyName.pause.short"), // PAUSE
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_LSHIFT_SHORT("keyboard.keyName.lshift.short"), // SHIFT
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_CONTROL_SHORT("keyboard.keyName.control.short"), // CTRL
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_CAPSLOCK_SHORT("keyboard.keyName.capsLock.short"), // CAPS
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_ESCAPE_SHORT("keyboard.keyName.escape.short"), // ESC
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_SPACE_SHORT("keyboard.keyName.space.short"), // SPACE
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_PGDOWN_SHORT("keyboard.keyName.pgDown.short"), // PgDn
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_PGUP_SHORT("keyboard.keyName.pgUp.short"), // PgUp
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_END_SHORT("keyboard.keyName.end.short"), // END
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_HOME_SHORT("keyboard.keyName.home.short"), // HOME
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_LEFT_SHORT("keyboard.keyName.left.short"), // LEFT
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_UP_SHORT("keyboard.keyName.up.short"), // UP
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_RIGHT_SHORT("keyboard.keyName.right.short"), // RIGHT
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_DOWN_SHORT("keyboard.keyName.down.short"), // DOWN
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_INSERT_SHORT("keyboard.keyName.insert.short"), // INS
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_DELETE_SHORT("keyboard.keyName.delete.short"), // DEL
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD0_SHORT("keyboard.keyName.numpad0.short"), // N0
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD1_SHORT("keyboard.keyName.numpad1.short"), // N1
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD2_SHORT("keyboard.keyName.numpad2.short"), // N2
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD3_SHORT("keyboard.keyName.numpad3.short"), // N3
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD4_SHORT("keyboard.keyName.numpad4.short"), // N4
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD5_SHORT("keyboard.keyName.numpad5.short"), // N5
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD6_SHORT("keyboard.keyName.numpad6.short"), // N6
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD7_SHORT("keyboard.keyName.numpad7.short"), // N7
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD8_SHORT("keyboard.keyName.numpad8.short"), // N8
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMPAD9_SHORT("keyboard.keyName.numpad9.short"), // N9
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_SCROLL_SHORT("keyboard.keyName.scroll.short"), // SCROLL
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_EQUALS_SHORT("keyboard.keyName.equals.short"), // =
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_ADD_SHORT("keyboard.keyName.add.short"), // N+
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_MINUS_SHORT("keyboard.keyName.minus.short"), // -
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_SUBTRACT_SHORT("keyboard.keyName.subtract.short"), // N-
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_MULTIPLY_SHORT("keyboard.keyName.multiply.short"), // N*
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_DIVIDE_SHORT("keyboard.keyName.divide.short"), // N/
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_DECIMAL_SHORT("keyboard.keyName.decimal.short"), // N.
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_GRAVE_SHORT("keyboard.keyName.grave.short"), // `
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_NUMLOCK_SHORT("keyboard.keyName.numLock.short"), // NUMLOCK
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_SLASH_SHORT("keyboard.keyName.slash.short"), // /
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_SEMICOLON_SHORT("keyboard.keyName.semicolon.short"), // ;
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_APOSTROPHE_SHORT("keyboard.keyName.apostrophe.short"), // '
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_COMMA_SHORT("keyboard.keyName.comma.short"), // ,
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_PERIOD_SHORT("keyboard.keyName.period.short"), // .
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_BACKSLASH_SHORT("keyboard.keyName.backslash.short"), // \
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_LBRACKET_SHORT("keyboard.keyName.lbracket.short"), // [
        @PowerNukkitOnly @Since("FUTURE") KEYNAME_RBRACKET_SHORT("keyboard.keyName.rbracket.short"), // ]
        ;
        private final String code; Keyboard(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum LanServer implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") OTHERPLAYERS("lanServer.otherPlayers"), // Settings for Other Players
        @PowerNukkitOnly @Since("FUTURE") SCANNING("lanServer.scanning"), // Scanning for games on your local network
        @PowerNukkitOnly @Since("FUTURE") START("lanServer.start"), // Start LAN World
        @PowerNukkitOnly @Since("FUTURE") TITLE("lanServer.title"), // LAN World
        @PowerNukkitOnly @Since("FUTURE") RESTART("lanServer.restart"), // This server has restarted!
        ;
        private final String code; LanServer(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Library implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") PROMPT_INGAMELINK("library.prompt.inGameLink"), // This will save and quit your current game and any multiplayer connections, are you sure you want to quit?
        @PowerNukkitOnly @Since("FUTURE") FETCHINGITEM("library.fetchingItem"), // Connecting to library...
        @PowerNukkitOnly @Since("FUTURE") FETCHINGITEM_FAILED("library.fetchingItem.failed"), // Sorry, we weren't able to find that item in the Library.
        @PowerNukkitOnly @Since("FUTURE") WELCOME_1("library.welcome.1"), // Welcome to the Minecraft: Education Edition Library!
        @PowerNukkitOnly @Since("FUTURE") WELCOME_2("library.welcome.2"), // The Library is a new feature we've created to make it easy for teachers and students to find and import educational content directly in the game. In this release, you'll find a list of some of our most popular worlds to import and use, along with a link to the full world library on our website.
        @PowerNukkitOnly @Since("FUTURE") WELCOME_3("library.welcome.3"), // We're working on adding support for more types of content and functionality in the coming months. Please let us know what you think by clicking the feedback button.
        @PowerNukkitOnly @Since("FUTURE") ITEM_SHAREPOPUP_TITLE("library.item.sharepopup.title"), // Share
        @PowerNukkitOnly @Since("FUTURE") ITEM_SHAREPOPUP_SHARELINK("library.item.sharepopup.shareLink"), // Share a Link
        @PowerNukkitOnly @Since("FUTURE") ITEM_SHAREPOPUP_BODY("library.item.sharepopup.body"), // Share a link to this world.
        @PowerNukkitOnly @Since("FUTURE") ITEM_SHAREPOPUP_COPY("library.item.sharepopup.copy"), // COPY
        @PowerNukkitOnly @Since("FUTURE") ITEM_SHAREPOPUP_COPYBUTTON("library.item.sharepopup.copyButton"), // Copy Link
        @PowerNukkitOnly @Since("FUTURE") ITEM_SHAREPOPUP_SHAREBUTTON("library.item.sharepopup.shareButton"), // Share to Teams
        @PowerNukkitOnly @Since("FUTURE") ITEM_SHARE_TOAST_TITLE("library.item.share.toast.title"), // Link copied to your clipboard.
        @PowerNukkitOnly @Since("FUTURE") ITEM_TEAMS_MSGTXT("library.item.teams.msgTxt"), // Check out this world, %1, in Minecraft: Education Edition.
        ;
        private final String code; Library(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum LicensedContent implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") GOBACK("licensed_content.goBack"), // Go Back
        @PowerNukkitOnly @Since("FUTURE") VIEWLICENSEDCONTENT("licensed_content.viewLicensedContent"), // To view licensed content, please visit https://minecraft.net/licensed-content/ in any web browser.
        ;
        private final String code; LicensedContent(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Livingroom implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") HINT_TAP_TOUCHPAD_FOR_IMMERSIVE("livingroom.hint.tap_touchpad_for_immersive"), // Tap the touchpad to toggle Immersion
        @PowerNukkitOnly @Since("FUTURE") HINT_TAP_VIEW_FOR_IMMERSIVE("livingroom.hint.tap_view_for_immersive"), // Press the F5 key to toggle Immersion
        @PowerNukkitOnly @Since("FUTURE") HINT_TAP_VIEW_FOR_IMMERSIVE_GAMEPAD("livingroom.hint.tap_view_for_immersive_gamepad"), // Press D-Pad Up to toggle Immersion
        @PowerNukkitOnly @Since("FUTURE") HINT_TAP_VIEW_FOR_IMMERSIVE_OCULUSTOUCH("livingroom.hint.tap_view_for_immersive_oculustouch"), // Press Y to toggle Immersion
        @PowerNukkitOnly @Since("FUTURE") HINT_TAP_VIEW_FOR_IMMERSIVE_WINDOWSMR("livingroom.hint.tap_view_for_immersive_windowsmr"), // Press Right Menu to toggle Immersion
        ;
        private final String code; Livingroom(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Map implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_DISPLAYMARKERS("map.toolTip.displayMarkers"), // Display Markers
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_SCALING("map.toolTip.scaling"), // Scaling at 1:%s
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_LEVEL("map.toolTip.level"), // Level %s/%s
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_UNKOWN("map.toolTip.unkown"), // Unknown Map
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_LOCKED("map.toolTip.locked"), // Locked
        @PowerNukkitOnly @Since("FUTURE") POSITION_AGENT("map.position.agent"), // Agent Pos: %s, %s, %s
        @PowerNukkitOnly @Since("FUTURE") POSITION("map.position"), // Position: %s, %s, %s
        @PowerNukkitOnly @Since("FUTURE") RENAME("map.rename"), // Rename Map
        @PowerNukkitOnly @Since("FUTURE") BASICMAP("map.basicMap"), // Basic Map
        @PowerNukkitOnly @Since("FUTURE") LOCATORMAP("map.locatorMap"), // Map that Shows Players
        @PowerNukkitOnly @Since("FUTURE") EXTENDANDCLEAR("map.extendAndClear"), // Zoom Out & Clear
        @PowerNukkitOnly @Since("FUTURE") CLONE("map.clone"), // Copy Map
        @PowerNukkitOnly @Since("FUTURE") NAME("map.name"), // Map Name
        @PowerNukkitOnly @Since("FUTURE") LOCK("map.lock"), // Lock Map
        ;
        private final String code; Map(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum McoServer implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TITLE("mcoServer.title"), // Minecraft Online World
        ;
        private final String code; McoServer(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Menu implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTS("menu.achievements"), // Achievements
        @PowerNukkitOnly @Since("FUTURE") CONVERTINGLEVEL("menu.convertingLevel"), // Expanding world
        @PowerNukkitOnly @Since("FUTURE") COPYRIGHT("menu.copyright"), // ©Mojang AB
        @PowerNukkitOnly @Since("FUTURE") DISCONNECT("menu.disconnect"), // Disconnect
        @PowerNukkitOnly @Since("FUTURE") EDUCATORRESOURCES("menu.educatorResources"), // Educator Resources
        @PowerNukkitOnly @Since("FUTURE") EDITIONS("menu.editions"), // Editions
        @PowerNukkitOnly @Since("FUTURE") BETA("menu.beta"), // Beta!!!
        @PowerNukkitOnly @Since("FUTURE") GAME("menu.game"), // Game menu
        @PowerNukkitOnly @Since("FUTURE") GENERATINGLEVEL("menu.generatingLevel"), // Generating world
        @PowerNukkitOnly @Since("FUTURE") GENERATINGTERRAIN("menu.generatingTerrain"), // Building terrain
        @PowerNukkitOnly @Since("FUTURE") HOWTOPLAY("menu.howToPlay"), // How to Play
        @PowerNukkitOnly @Since("FUTURE") HOWTOPLAY_CAPS("menu.howToPlay.caps"), // HOW TO PLAY
        @PowerNukkitOnly @Since("FUTURE") HOST("menu.host"), // Host
        @PowerNukkitOnly @Since("FUTURE") HOWTOPLAY_GENERALMESSAGE("menu.howToPlay.generalMessage"), // Minecraft encyclopedia for new and experienced players.
        @PowerNukkitOnly @Since("FUTURE") HOWTOPLAY_ACCESS("menu.howToPlay.access"), // Press :_gamepad_face_button_down: to open How to Play!
        @PowerNukkitOnly @Since("FUTURE") HOWTOPLAY_ACCESS_NOICON("menu.howToPlay.access.noicon"), // Press [A] to open How to Play!
        @PowerNukkitOnly @Since("FUTURE") LOADINGLEVEL("menu.loadingLevel"), // Loading world
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYER("menu.multiplayer"), // Multiplayer
        @PowerNukkitOnly @Since("FUTURE") ONLINE("menu.online"), // Minecraft Realms
        @PowerNukkitOnly @Since("FUTURE") OPTIONS("menu.options"), // Options
        @PowerNukkitOnly @Since("FUTURE") SETTINGS("menu.settings"), // Settings
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_CAPS("menu.settings.caps"), // SETTINGS
        @PowerNukkitOnly @Since("FUTURE") SERVERSTORE("menu.serverStore"), // %s Store
        @PowerNukkitOnly @Since("FUTURE") SERVERGENERICNAME("menu.serverGenericName"), // Server
        @PowerNukkitOnly @Since("FUTURE") PLAY("menu.play"), // Play
        @PowerNukkitOnly @Since("FUTURE") PLAYDEMO("menu.playdemo"), // Play Demo World
        @PowerNukkitOnly @Since("FUTURE") PLAYONREALMS("menu.playOnRealms"), // Play on Realm
        @PowerNukkitOnly @Since("FUTURE") QUICKPLAY("menu.quickplay"), // Quick Play
        @PowerNukkitOnly @Since("FUTURE") QUIT("menu.quit"), // Save & Quit
        @PowerNukkitOnly @Since("FUTURE") QUIT_EDU("menu.quit.edu"), // SAVE & EXIT
        @PowerNukkitOnly @Since("FUTURE") QUIZ("menu.quiz"), // Take Quiz
        @PowerNukkitOnly @Since("FUTURE") RESETDEMO("menu.resetdemo"), // Reset Demo World
        @PowerNukkitOnly @Since("FUTURE") RESOURCEPACKS("menu.resourcepacks"), // Resource Packs
        @PowerNukkitOnly @Since("FUTURE") GLOBALPACKS("menu.globalpacks"), // Global Resources
        @PowerNukkitOnly @Since("FUTURE") STORAGEMANAGEMENT("menu.storageManagement"), // Storage
        @PowerNukkitOnly @Since("FUTURE") BEHAVIORS("menu.behaviors"), // Behavior Packs
        @PowerNukkitOnly @Since("FUTURE") WORLDTEMPLATES("menu.worldtemplates"), // World Templates
        @PowerNukkitOnly @Since("FUTURE") RESPAWNING("menu.respawning"), // Respawning
        @PowerNukkitOnly @Since("FUTURE") RETURNTOGAME("menu.returnToGame"), // Resume Game
        @PowerNukkitOnly @Since("FUTURE") RETURNTOMENU("menu.returnToMenu"), // Save and Quit to Title
        @PowerNukkitOnly @Since("FUTURE") SHARETOLAN("menu.shareToLan"), // Open to LAN
        @PowerNukkitOnly @Since("FUTURE") SIMULATING("menu.simulating"), // Simulating the world for a bit
        @PowerNukkitOnly @Since("FUTURE") SINGLEPLAYER("menu.singleplayer"), // Singleplayer
        @PowerNukkitOnly @Since("FUTURE") STORE("menu.store"), // Marketplace
        @PowerNukkitOnly @Since("FUTURE") SKINS("menu.skins"), // Skins
        @PowerNukkitOnly @Since("FUTURE") START("menu.start"), // Start
        @PowerNukkitOnly @Since("FUTURE") SWITCHINGLEVEL("menu.switchingLevel"), // Switching worlds
        @PowerNukkitOnly @Since("FUTURE") MAKINGBACKUP("menu.makingBackup"), // Making backup...
        @PowerNukkitOnly @Since("FUTURE") SAVING("menu.saving"), // Saving...
        @PowerNukkitOnly @Since("FUTURE") TOOLBOXMODE("menu.toolboxMode"), // Toolbox Mode
        ;
        private final String code; Menu(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Merchant implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") DEPRECATED("merchant.deprecated"), // Trade something else to unlock!
        ;
        private final String code; Merchant(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Mount implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ONBOARD("mount.onboard"), // Press %1$s to dismount
        ;
        private final String code; Mount(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Multiplayer implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") CONNECT("multiplayer.connect"), // Connect
        @PowerNukkitOnly @Since("FUTURE") DOWNLOADINGSTATS("multiplayer.downloadingStats"), // Downloading statistics & achievements...
        @PowerNukkitOnly @Since("FUTURE") DOWNLOADINGTERRAIN("multiplayer.downloadingTerrain"), // Downloading terrain
        @PowerNukkitOnly @Since("FUTURE") INFO1("multiplayer.info1"), // Minecraft Multiplayer is currently not finished, but there
        @PowerNukkitOnly @Since("FUTURE") INFO2("multiplayer.info2"), // is some buggy early testing going on.
        @PowerNukkitOnly @Since("FUTURE") IPINFO("multiplayer.ipinfo"), // Enter the IP of a server to connect to it:
        @PowerNukkitOnly @Since("FUTURE") PACKERRORS("multiplayer.packErrors"), // At least one of your resource or behavior packs failed to load.
        @PowerNukkitOnly @Since("FUTURE") PACKERRORS_REALMS("multiplayer.packErrors.realms"), // At least one of your resource or behavior packs failed to load.  Try downloading this world from your Realm settings to see more details on the error.
        @PowerNukkitOnly @Since("FUTURE") PLAYER_INVENTORY_RECOVERED("multiplayer.player.inventory.recovered"), // Inventory recovered and placed in chests near you.
        @PowerNukkitOnly @Since("FUTURE") PLAYER_INVENTORY_FAILED("multiplayer.player.inventory.failed"), // Inventory recovered.  Find a safe place, and we'll place a chest near you the next time you join the world.
        @PowerNukkitOnly @Since("FUTURE") PLAYER_JOINED("multiplayer.player.joined"), // %s joined the game
        @PowerNukkitOnly @Since("FUTURE") PLAYER_JOINED_RENAMED("multiplayer.player.joined.renamed"), // %s (formerly known as %s) joined the game
        @PowerNukkitOnly @Since("FUTURE") PLAYER_JOINED_REALMS("multiplayer.player.joined.realms"), // %s joined the Realm
        @PowerNukkitOnly @Since("FUTURE") PLAYER_JOINED_REALMS_RENAMED("multiplayer.player.joined.realms.renamed"), // %s (formerly known as %s) joined the Realm
        @PowerNukkitOnly @Since("FUTURE") PLAYER_LEFT("multiplayer.player.left"), // %s left the game
        @PowerNukkitOnly @Since("FUTURE") PLAYER_LEFT_REALMS("multiplayer.player.left.realms"), // %s left the Realm
        @PowerNukkitOnly @Since("FUTURE") PLAYER_CHANGETOPERSONA("multiplayer.player.changeToPersona"), // %s edited the character appearance.
        @PowerNukkitOnly @Since("FUTURE") PLAYER_CHANGETOSKIN("multiplayer.player.changeToSkin"), // %s has changed to %s skin.
        @PowerNukkitOnly @Since("FUTURE") STOPSLEEPING("multiplayer.stopSleeping"), // Leave Bed
        @PowerNukkitOnly @Since("FUTURE") TEXTUREPROMPT_LINE1("multiplayer.texturePrompt.line1"), // This server recommends the use of a custom resource pack.
        @PowerNukkitOnly @Since("FUTURE") TEXTUREPROMPT_LINE2("multiplayer.texturePrompt.line2"), // Would you like to download and install it automagically?
        @PowerNukkitOnly @Since("FUTURE") TITLE("multiplayer.title"), // Play Multiplayer
        @PowerNukkitOnly @Since("FUTURE") INBEDOPENCHAT("multiplayer.inBedOpenChat"), // Open Chat
        @PowerNukkitOnly @Since("FUTURE") JOINCODE_REFRESHED("multiplayer.joincode.refreshed"), // The game's join code has been updated.
        ;
        private final String code; Multiplayer(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Notification implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") LOCK_NOCRAFT("notification.lock.noCraft"), // This item is locked and can't be crafted with
        @PowerNukkitOnly @Since("FUTURE") LOCK_NODROP("notification.lock.noDrop"), // This item is locked and can't be dropped
        @PowerNukkitOnly @Since("FUTURE") LOCK_NOREMOVE("notification.lock.noRemove"), // This item is locked and can't be removed from the inventory
        ;
        private final String code; Notification(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Npcscreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ACTION_BUTTONMODE("npcscreen.action.buttonmode"), // Button Mode
        @PowerNukkitOnly @Since("FUTURE") ACTION_BUTTONNAME("npcscreen.action.buttonname"), // Button Name
        @PowerNukkitOnly @Since("FUTURE") ACTION_COMMAND_PLACEHOLDER("npcscreen.action.command.placeholder"), // Type Command Here...
        @PowerNukkitOnly @Since("FUTURE") ACTION_COMMAND_TITLE("npcscreen.action.command.title"), // Command
        @PowerNukkitOnly @Since("FUTURE") ACTION_URL_PLACEHOLDER("npcscreen.action.url.placeholder"), // Type URL Here...
        @PowerNukkitOnly @Since("FUTURE") ACTION_URL_TITLE("npcscreen.action.url.title"), // URL
        @PowerNukkitOnly @Since("FUTURE") ADDCOMMAND("npcscreen.addcommand"), // Add Command
        @PowerNukkitOnly @Since("FUTURE") ADDTEXT("npcscreen.addtext"), // Type Dialog Here...
        @PowerNukkitOnly @Since("FUTURE") ADDURL("npcscreen.addurl"), // Add URL
        @PowerNukkitOnly @Since("FUTURE") ADVANCEDSETTINGS("npcscreen.advancedsettings"), // Advanced Settings
        @PowerNukkitOnly @Since("FUTURE") ADVANCEDTITLE("npcscreen.advancedtitle"), // Advanced NPC Settings
        @PowerNukkitOnly @Since("FUTURE") APPEARANCE("npcscreen.appearance"), // Appearance
        @PowerNukkitOnly @Since("FUTURE") BASICTITLE("npcscreen.basictitle"), // Non Player Character
        @PowerNukkitOnly @Since("FUTURE") DIALOG("npcscreen.dialog"), // Dialog
        @PowerNukkitOnly @Since("FUTURE") EDITDIALOG("npcscreen.editdialog"), // Edit Dialog
        @PowerNukkitOnly @Since("FUTURE") HELP_COMMAND_A("npcscreen.help.command.a"), // Click this button to add a command in the NPC dialog box.
        @PowerNukkitOnly @Since("FUTURE") HELP_COMMAND_B("npcscreen.help.command.b"), // Multiple commands can be added at once.
        @PowerNukkitOnly @Since("FUTURE") HELP_URL_A("npcscreen.help.url.a"), // Click this button to add a URL hyperlink in the NPC dialog box.
        @PowerNukkitOnly @Since("FUTURE") HELP_URL_B("npcscreen.help.url.b"), // Link opens in the player's default browser.
        @PowerNukkitOnly @Since("FUTURE") LEARNMORE("npcscreen.learnmore"), // Learn More
        @PowerNukkitOnly @Since("FUTURE") NAME("npcscreen.name"), // Name
        @PowerNukkitOnly @Since("FUTURE") NPC("npcscreen.npc"), // NPC
        @PowerNukkitOnly @Since("FUTURE") REQUIRESOP("npcscreen.requiresop"), // OP Required
        ;
        private final String code; Npcscreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Offer implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_SKINPACK("offer.category.skinpack"), // Skin Packs
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_RESOURCEPACK("offer.category.resourcepack"), // Texture Packs
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_MASHUP("offer.category.mashup"), // Mash-up Packs
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_WORLDTEMPLATE("offer.category.worldtemplate"), // Worlds
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_EDITORSCHOICE("offer.category.editorschoice"), // Editor's Choice
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_ALLBYCREATOR("offer.category.allByCreator"), // All by %s
        @PowerNukkitOnly @Since("FUTURE") NAVIGATIONTAB_SKINS("offer.navigationTab.skins"), // Skins
        @PowerNukkitOnly @Since("FUTURE") NAVIGATIONTAB_TEXTURES("offer.navigationTab.textures"), // Textures
        @PowerNukkitOnly @Since("FUTURE") NAVIGATIONTAB_WORLDS("offer.navigationTab.worlds"), // Worlds
        @PowerNukkitOnly @Since("FUTURE") NAVIGATIONTAB_MASHUPS("offer.navigationTab.mashups"), // Mash-ups
        ;
        private final String code; Offer(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Options implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ADJUSTBRIGHTNESS("options.adjustBrightness"), // Adjust your brightness until you can only see two creeper faces.
        @PowerNukkitOnly @Since("FUTURE") BRIGHTNESS_NOTVISIBLE("options.brightness.notVisible"), // Not Visible
        @PowerNukkitOnly @Since("FUTURE") BRIGHTNESS_BARELYVISIBLE("options.brightness.barelyVisible"), // Barely Visible
        @PowerNukkitOnly @Since("FUTURE") BRIGHTNESS_EASILYVISIBLE("options.brightness.easilyVisible"), // Easily Visible
        @PowerNukkitOnly @Since("FUTURE") ADUSESINGLESIGNON("options.adUseSingleSignOn"), // Enable Single Sign On
        @PowerNukkitOnly @Since("FUTURE") ADVANCEDBUTTON("options.advancedButton"), // Advanced Video Settings...
        @PowerNukkitOnly @Since("FUTURE") SHOWADVANCEDVIDEOSETTINGS("options.showAdvancedVideoSettings"), // Show Advanced Video Settings
        @PowerNukkitOnly @Since("FUTURE") ADVANCEDOPENGL("options.advancedOpengl"), // Advanced OpenGL
        @PowerNukkitOnly @Since("FUTURE") ADVANCEDVIDEOTITLE("options.advancedVideoTitle"), // Advanced Video Settings
        @PowerNukkitOnly @Since("FUTURE") ANAGLYPH("options.anaglyph"), // 3D Anaglyph
        @PowerNukkitOnly @Since("FUTURE") TERMSANDCONDITIONS("options.termsAndConditions"), // Terms and Conditions
        @PowerNukkitOnly @Since("FUTURE") ATTRIBUTION("options.attribution"), // Attribution
        @PowerNukkitOnly @Since("FUTURE") THREE_DRENDERING("options.3DRendering"), // 3D Rendering
        @PowerNukkitOnly @Since("FUTURE") ANIMATETEXTURES("options.animatetextures"), // Animated water
        @PowerNukkitOnly @Since("FUTURE") AO("options.ao"), // Smooth Lighting
        @PowerNukkitOnly @Since("FUTURE") AO_MAX("options.ao.max"), // Maximum
        @PowerNukkitOnly @Since("FUTURE") AO_MIN("options.ao.min"), // Minimum
        @PowerNukkitOnly @Since("FUTURE") AO_OFF("options.ao.off"), // OFF
        @PowerNukkitOnly @Since("FUTURE") AUTOJUMP("options.autojump"), // Auto Jump
        @PowerNukkitOnly @Since("FUTURE") BLOCKALTERNATIVES("options.blockAlternatives"), // Alternate Blocks
        @PowerNukkitOnly @Since("FUTURE") BUILDID_FORMAT("options.buildid.format"), // Build: %1$s
        @PowerNukkitOnly @Since("FUTURE") PROTOCOLVERSION_FORMAT("options.protocolversion.format"), // Protocol Version: %1%s
        @PowerNukkitOnly @Since("FUTURE") WORLDCONVERSION_VERSION("options.worldconversion.version"), // World Converter: %s
        @PowerNukkitOnly @Since("FUTURE") BUILDDATE_FORMAT("options.builddate.format"), // Build Date: %s
        @PowerNukkitOnly @Since("FUTURE") BUTTONSIZE("options.buttonSize"), // Button Size
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_ADDONS("options.category.addons"), // Add-Ons
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_AUDIO("options.category.audio"), // Sound
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_GAME("options.category.game"), // Game
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_GRAPHICS("options.category.graphics"), // Graphics
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_INPUT("options.category.input"), // Controls
        @PowerNukkitOnly @Since("FUTURE") CATEGORY_SERVER("options.category.server"), // Server
        @PowerNukkitOnly @Since("FUTURE") CHANGE("options.change"), // Change
        @PowerNukkitOnly @Since("FUTURE") CHANGEGAMERTAG("options.changeGamertag"), // Change Gamertag
        @PowerNukkitOnly @Since("FUTURE") CHAT_COLOR("options.chat.color"), // Colors
        @PowerNukkitOnly @Since("FUTURE") CHAT_HEIGHT_FOCUSED("options.chat.height.focused"), // Focused Height
        @PowerNukkitOnly @Since("FUTURE") CHAT_HEIGHT_UNFOCUSED("options.chat.height.unfocused"), // Unfocused Height
        @PowerNukkitOnly @Since("FUTURE") CHAT_LINKS("options.chat.links"), // Web Links
        @PowerNukkitOnly @Since("FUTURE") CHAT_LINKS_PROMPT("options.chat.links.prompt"), // Prompt on Links
        @PowerNukkitOnly @Since("FUTURE") CHAT_OPACITY("options.chat.opacity"), // Opacity
        @PowerNukkitOnly @Since("FUTURE") CHAT_SCALE("options.chat.scale"), // Scale
        @PowerNukkitOnly @Since("FUTURE") CHAT_TITLE("options.chat.title"), // Chat Settings...
        @PowerNukkitOnly @Since("FUTURE") CHAT_VISIBILITY("options.chat.visibility"), // Chat
        @PowerNukkitOnly @Since("FUTURE") CHAT_VISIBILITY_FULL("options.chat.visibility.full"), // Shown
        @PowerNukkitOnly @Since("FUTURE") CHAT_VISIBILITY_HIDDEN("options.chat.visibility.hidden"), // Hidden
        @PowerNukkitOnly @Since("FUTURE") CHAT_VISIBILITY_SYSTEM("options.chat.visibility.system"), // Commands Only
        @PowerNukkitOnly @Since("FUTURE") CHAT_WIDTH("options.chat.width"), // Width
        @PowerNukkitOnly @Since("FUTURE") CODEBUILDER("options.codeBuilder"), // Code Builder
        @PowerNukkitOnly @Since("FUTURE") CONTENT_LOG_FILE("options.content_log_file"), // Enable Content Log File
        @PowerNukkitOnly @Since("FUTURE") CONTENT_LOG_GUI("options.content_log_gui"), // Enable Content Log GUI
        @PowerNukkitOnly @Since("FUTURE") CONTROLLER("options.controller"), // Controller
        @PowerNukkitOnly @Since("FUTURE") CONTROLLERLAYOUT("options.controllerLayout"), // Controller Layout
        @PowerNukkitOnly @Since("FUTURE") CONTROLLERSETTINGS("options.controllerSettings"), // Controller Settings
        @PowerNukkitOnly @Since("FUTURE") CONTROLS("options.controls"), // Controls...
        @PowerNukkitOnly @Since("FUTURE") CREDITS("options.credits"), // Credits
        @PowerNukkitOnly @Since("FUTURE") CROUCH("options.crouch"), // Crouch
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZETITLE("options.customizeTitle"), // Customize World Settings
        @PowerNukkitOnly @Since("FUTURE") DESTROYVIBRATION("options.destroyvibration"), // Destroy Block (vibrate)
        @PowerNukkitOnly @Since("FUTURE") DEBUG("options.debug"), // Debug
        @PowerNukkitOnly @Since("FUTURE") FLIGHTING_DEBUG("options.flighting_debug"), // Flighting Debug
        @PowerNukkitOnly @Since("FUTURE") DEBUGTITLE("options.debugTitle"), // Developer Options
        @PowerNukkitOnly @Since("FUTURE") DEV_GAME_TIP("options.dev_game_tip"), // Gameplay Tips
        @PowerNukkitOnly @Since("FUTURE") DEV_AD_SHOW_DEBUG_PANEL("options.dev_ad_show_debug_panel"), // Show EDU Sign In Debug Panel
        @PowerNukkitOnly @Since("FUTURE") DEV_AD_TOKEN_REFRESH_THRESHOLD("options.dev_ad_token_refresh_threshold"), // EDU Sign In Token Refresh Threshold Seconds
        @PowerNukkitOnly @Since("FUTURE") DEV_ASSERTIONS_DEBUG_BREAK("options.dev_assertions_debug_break"), // Assertions break in the debugger
        @PowerNukkitOnly @Since("FUTURE") DEV_ASSERTIONS_SHOW_DIALOG("options.dev_assertions_show_dialog"), // Assertions show a modal dialog
        @PowerNukkitOnly @Since("FUTURE") DEV_EDUDEMO("options.dev_eduDemo"), // Edu Demo (Requires re-sign-in)
        @PowerNukkitOnly @Since("FUTURE") REMOTE_IMGUI_TOGGLE("options.remote_imgui_toggle"), // Remote Imgui Enabled
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGUI("options.dev_enableDebugUI"), // Enable Debug UI
        @PowerNukkitOnly @Since("FUTURE") DEV_CREATEREALMWITHOUTPURCHASE("options.dev_createRealmWithoutPurchase"), // Create realm without purchase
        @PowerNukkitOnly @Since("FUTURE") DEV_FLUSHORPHANEDREALMSPURCHASES("options.dev_flushOrphanedRealmsPurchases"), // Flush orphaned Realms purchases
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEMIXERINTERACTIVE("options.dev_enableMixerInteractive"), // Enable Mixer interactive commands
        @PowerNukkitOnly @Since("FUTURE") DEV_STOREOFFERQUERYREQUIRESXBL("options.dev_storeOfferQueryRequiresXbl"), // Require XBL for Store Offers
        @PowerNukkitOnly @Since("FUTURE") DEV_RENDERBOUNDINGBOX("options.dev_renderBoundingBox"), // Render bounding box
        @PowerNukkitOnly @Since("FUTURE") DEV_RENDERPATHS("options.dev_renderPaths"), // Render paths
        @PowerNukkitOnly @Since("FUTURE") DEV_RENDERGOALSTATE("options.dev_renderGoalState"), // Render goal state
        @PowerNukkitOnly @Since("FUTURE") DEV_RENDERMOBINFOSTATE("options.dev_renderMobInfoState"), // Render mob info state
        @PowerNukkitOnly @Since("FUTURE") DEV_RESETCLIENTID("options.dev_resetClientId"), // Reset client ID
        @PowerNukkitOnly @Since("FUTURE") DEV_SHOWCHUNKMAP("options.dev_showChunkMap"), // Show chunk map
        @PowerNukkitOnly @Since("FUTURE") DEV_SHOWSERVERCHUNKMAP("options.dev_showServerChunkMap"), // Chunk map shows server chunks
        @PowerNukkitOnly @Since("FUTURE") DEV_DISABLERENDERTERRAIN("options.dev_disableRenderTerrain"), // Disable Terrain Drawing
        @PowerNukkitOnly @Since("FUTURE") DEV_DISABLERENDERENTITIES("options.dev_disableRenderEntities"), // Disable Entities Drawing
        @PowerNukkitOnly @Since("FUTURE") DEV_DISABLERENDERBLOCKENTITIES("options.dev_disableRenderBlockEntities"), // Disable Block Entities Drawing
        @PowerNukkitOnly @Since("FUTURE") DEV_DISABLERENDERPARTICLES("options.dev_disableRenderParticles"), // Disable Particles Drawing
        @PowerNukkitOnly @Since("FUTURE") DEV_DISABLERENDERSKY("options.dev_disableRenderSky"), // Disable Sky Drawing
        @PowerNukkitOnly @Since("FUTURE") DEV_DISABLERENDERWEATHER("options.dev_disableRenderWeather"), // Disable Weather Drawing
        @PowerNukkitOnly @Since("FUTURE") DEV_DISABLERENDERHUD("options.dev_disableRenderHud"), // Disable Hud Drawing
        @PowerNukkitOnly @Since("FUTURE") DEV_DISABLERENDERITEMINHAND("options.dev_disableRenderItemInHand"), // Disable Item-in-Hand Drawing
        @PowerNukkitOnly @Since("FUTURE") DEV_SERVERINSTANCETHREAD("options.dev_serverInstanceThread"), // Server Instance Thread
        @PowerNukkitOnly @Since("FUTURE") DEV_NEWCULLER("options.dev_newCuller"), // Use new culler
        @PowerNukkitOnly @Since("FUTURE") DEV_SHOWBUILDINFO("options.dev_showBuildInfo"), // Show build info
        @PowerNukkitOnly @Since("FUTURE") DEV_SHOWDEVCONSOLEBUTTON("options.dev_showDevConsoleButton"), // Show dev console button
        @PowerNukkitOnly @Since("FUTURE") DEV_REALMSPERMISSIONSENABLEDBUTTON("options.dev_realmsPermissionsEnabledButton"), // Show realms permissions
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEPROFILER("options.dev_enableProfiler"), // Enable profiler
        @PowerNukkitOnly @Since("FUTURE") DEV_NEWPARTICLESYSTEM("options.dev_newParticleSystem"), // Enable New Particle System
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGHUDOVERLAY("options.dev_enableDebugHudOverlay"), // Enable debug HUD
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGHUDOVERLAY_OFF("options.dev_enableDebugHudOverlay.off"), // Off
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGHUDOVERLAY_BASIC("options.dev_enableDebugHudOverlay.basic"), // Basic
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGHUDOVERLAY_IMGUI("options.dev_enableDebugHudOverlay.imgui"), // ImGui
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGHUDOVERLAY_RENDERCHUNKS("options.dev_enableDebugHudOverlay.renderchunks"), // Render chunks
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGHUDOVERLAY_WORKERTHREADS("options.dev_enableDebugHudOverlay.workerthreads"), // Worker threads
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGHUDOVERLAY_DEBUGTEXTURES("options.dev_enableDebugHudOverlay.debugtextures"), // Debug textures
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGHUDOVERLAY_PROFILER("options.dev_enableDebugHudOverlay.profiler"), // Profiler
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGHUDOVERLAY_IMAGEMEMORY("options.dev_enableDebugHudOverlay.imagememory"), // Image Memory
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGHUDOVERLAY_TEXTUREMEMORY("options.dev_enableDebugHudOverlay.texturememory"), // Texture Memory
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGHUDOVERLAY_PERIMAGEMEMORY("options.dev_enableDebugHudOverlay.perimagememory"), // Per Image Memory
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGHUDOVERLAY_BUFFERMEMORY("options.dev_enableDebugHudOverlay.buffermemory"), // Buffer Memory
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGHUDOVERLAY_CAMERA("options.dev_enableDebugHudOverlay.camera"), // Camera
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGHUDOVERLAY_AUDIO("options.dev_enableDebugHudOverlay.audio"), // Audio
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGHUDOVERLAY_CLIENT_NETWORK("options.dev_enableDebugHudOverlay.client_network"), // Client Network
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGHUDOVERLAY_SERVER_NETWORK("options.dev_enableDebugHudOverlay.server_network"), // Server Network
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGHUDOVERLAY_SPATIAL_PACKET_OPTIMIZATIONS("options.dev_enableDebugHudOverlay.spatial_packet_optimizations"), // Spatial Packet Optimizations
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGHUDOVERLAY_LOCK_CONTENTION("options.dev_enableDebugHudOverlay.lock_contention"), // Lock Contention
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLEDEBUGHUDOVERLAY_HBUI("options.dev_enableDebugHudOverlay.hbui"), // Gameface 				# This is a proper name, do not translate
        @PowerNukkitOnly @Since("FUTURE") DEV_MULTITHREADEDRENDERING("options.dev_multithreadedRendering"), // Enable multithreaded rendering
        @PowerNukkitOnly @Since("FUTURE") DEV_FILE_WATCHER("options.dev_file_watcher"), // Enable File Watcher
        @PowerNukkitOnly @Since("FUTURE") DEV_ENABLE_TEXTURE_HOT_RELOADER("options.dev_enable_texture_hot_reloader"), // Enable Texture Hot Reloader
        @PowerNukkitOnly @Since("FUTURE") DEV_ACHIEVEMENTSALWAYSENABLED("options.dev_achievementsAlwaysEnabled"), // Achievements always enabled
        @PowerNukkitOnly @Since("FUTURE") DEV_USELOCALSERVER("options.dev_useLocalServer"), // Use local server
        @PowerNukkitOnly @Since("FUTURE") DEV_USEIPV6ONLY("options.dev_useIPv6Only"), // Use IPv6 Only
        @PowerNukkitOnly @Since("FUTURE") DEV_ATTACHPOSRENDERLEVEL("options.dev_attachPosRenderLevel"), // Render Attach Positions
        @PowerNukkitOnly @Since("FUTURE") DEV_RENDER_ATTACH_POS_NONE("options.dev_render_attach_pos.none"), // Off
        @PowerNukkitOnly @Since("FUTURE") DEV_RENDER_ATTACH_POS_HEAD_POS("options.dev_render_attach_pos.head_pos"), // Head Position
        @PowerNukkitOnly @Since("FUTURE") DEV_RENDER_ATTACH_POS_EYES_POS("options.dev_render_attach_pos.eyes_pos"), // Eyes Position
        @PowerNukkitOnly @Since("FUTURE") DEV_RENDER_ATTACH_POS_BREATH_POS("options.dev_render_attach_pos.breath_pos"), // Breathing Position
        @PowerNukkitOnly @Since("FUTURE") DEV_RENDER_ATTACH_POS_BODY_POS("options.dev_render_attach_pos.body_pos"), // Body Position
        @PowerNukkitOnly @Since("FUTURE") DEV_RENDER_ATTACH_POS_FEET_POS("options.dev_render_attach_pos.feet_pos"), // Feet Position
        @PowerNukkitOnly @Since("FUTURE") DEV_RENDER_ATTACH_POS_ALL("options.dev_render_attach_pos.all"), // All
        @PowerNukkitOnly @Since("FUTURE") DEV_DISABLE_CLIENT_BLOB_CACHE("options.dev_disable_client_blob_cache"), // Disable Client Blob Cache
        @PowerNukkitOnly @Since("FUTURE") DEV_FORCE_CLIENT_BLOB_CACHE("options.dev_force_client_blob_cache"), // Force Client Blob Cache On For Local Games
        @PowerNukkitOnly @Since("FUTURE") DEV_CONNECTIONQUALITY("options.dev_connectionQuality"), // Connection Quality
        @PowerNukkitOnly @Since("FUTURE") DEV_CONNECTION_QUALITY_NO_LIMIT("options.dev_connection_quality.no_limit"), // Unlimited
        @PowerNukkitOnly @Since("FUTURE") DEV_CONNECTION_QUALITY_PHONE_4G("options.dev_connection_quality.phone_4g"), // 4G
        @PowerNukkitOnly @Since("FUTURE") DEV_CONNECTION_QUALITY_PHONE_3G("options.dev_connection_quality.phone_3g"), // 3G
        @PowerNukkitOnly @Since("FUTURE") DEV_CONNECTION_QUALITY_SLOW("options.dev_connection_quality.slow"), // Slow
        @PowerNukkitOnly @Since("FUTURE") DEV_CONNECTION_QUALITY_VERY_SLOW("options.dev_connection_quality.very_slow"), // Very Slow
        @PowerNukkitOnly @Since("FUTURE") DEV_USE_FPS_INDEPENDENT_TURNING("options.dev_use_fps_independent_turning"), // Use FPS-independent Turning
        @PowerNukkitOnly @Since("FUTURE") DEV_USE_FAST_CHUNK_CULLING("options.dev_use_fast_chunk_culling"), // Use Fast Chunk Culling
        @PowerNukkitOnly @Since("FUTURE") DEV_DISPLAYMARKETPLACEDOCUMENTID("options.dev_displayMarketplaceDocumentId"), // Show Marketplace Document Id
        @PowerNukkitOnly @Since("FUTURE") DEV_ADDCOINS("options.dev_addCoins"), // Add 500 Coins
        @PowerNukkitOnly @Since("FUTURE") DISCOVERYENVIRONMENT("options.discoveryEnvironment"), // Discovery Environment (Requires Restart)
        @PowerNukkitOnly @Since("FUTURE") DISCOVERYENVIRONMENT_PRODUCTION("options.discoveryEnvironment.production"), // Production
        @PowerNukkitOnly @Since("FUTURE") DISCOVERYENVIRONMENT_STAGING("options.discoveryEnvironment.staging"), // Staging
        @PowerNukkitOnly @Since("FUTURE") DISCOVERYENVIRONMENT_LOCAL("options.discoveryEnvironment.local"), // Local
        @PowerNukkitOnly @Since("FUTURE") DISCOVERYENVIRONMENT_DEV("options.discoveryEnvironment.dev"), // Dev
        @PowerNukkitOnly @Since("FUTURE") DEV_REALMSENVIRONMENT("options.dev_realmsEnvironment"), // Realms Environment
        @PowerNukkitOnly @Since("FUTURE") DEV_REALMS_ENVIRONMENT_PRODUCTION("options.dev_realms_environment.production"), // Production
        @PowerNukkitOnly @Since("FUTURE") DEV_REALMS_ENVIRONMENT_STAGING("options.dev_realms_environment.staging"), // Staging
        @PowerNukkitOnly @Since("FUTURE") DEV_REALMS_ENVIRONMENT_LOCAL("options.dev_realms_environment.local"), // Local
        @PowerNukkitOnly @Since("FUTURE") DEV_REALMS_ENVIRONMENT_DEV("options.dev_realms_environment.dev"), // Dev
        @PowerNukkitOnly @Since("FUTURE") DEV_REALMSENDPOINT("options.dev_realmsEndpoint"), // Realms Endpoint
        @PowerNukkitOnly @Since("FUTURE") DEV_REALMSENDPOINTPAYMENT("options.dev_realmsEndpointPayment"), // Realms Endpoint Payment
        @PowerNukkitOnly @Since("FUTURE") DEV_REALMSRELYINGPARTY("options.dev_realmsRelyingParty"), // Realms Relying Party
        @PowerNukkitOnly @Since("FUTURE") DEV_REALMSRELYINGPARTYPAYMENT("options.dev_realmsRelyingPartyPayment"), // Realms Relying Party Payment
        @PowerNukkitOnly @Since("FUTURE") DEV_OVERRIDEXBOXENVIRONMENTWINDOWS("options.dev_overrideXboxEnvironmentWindows"), // Override Xbox Sandbox (OS controlled on Windows)
        @PowerNukkitOnly @Since("FUTURE") DEV_OVERRIDEXBOXENVIRONMENT("options.dev_overrideXboxEnvironment"), // Override Xbox Sandbox (requires restart)
        @PowerNukkitOnly @Since("FUTURE") DEV_XBOXENVIRONMENT("options.dev_xboxEnvironment"), // Xbox Sandbox Environment (requires restart)
        @PowerNukkitOnly @Since("FUTURE") DEV_XBOX_ENVIRONMENT_RETAIL("options.dev_xbox_environment.retail"), // Retail
        @PowerNukkitOnly @Since("FUTURE") DEV_XBOX_ENVIRONMENT_DEV("options.dev_xbox_environment.dev"), // Dev
        @PowerNukkitOnly @Since("FUTURE") DEV_XBOX_ENVIRONMENT_DEV_ACHIEVEMENT("options.dev_xbox_environment.dev_achievement"), // Dev Achievement
        @PowerNukkitOnly @Since("FUTURE") DEV_EXPERIMENTALTREATMENT("options.dev_experimentalTreatment"), // Override Experimental Treatments
        @PowerNukkitOnly @Since("FUTURE") DEV_SANDBOXRETAIL("options.dev_sandboxRetail"), // Xforge Sandbox: Retail
        @PowerNukkitOnly @Since("FUTURE") DEV_SANDBOXDEV("options.dev_sandboxDev"), // Xforge Sandbox: Dev
        @PowerNukkitOnly @Since("FUTURE") DEV_SANDBOXDEVACHIEVEMENT("options.dev_sandboxDevAchievement"), // Xforge Sandbox: Dev Achievement
        @PowerNukkitOnly @Since("FUTURE") DEV_DISPLAYTREATMENTSPANEL("options.dev_displayTreatmentsPanel"), // Display Treatments
        @PowerNukkitOnly @Since("FUTURE") DEV_CURRENTTREATMENTSTITLE("options.dev_currentTreatmentsTitle"), // Current Treatments
        @PowerNukkitOnly @Since("FUTURE") DEV_UNUSEDTREATMENTSTITLE("options.dev_unusedTreatmentsTitle"), // Unused Treatments
        @PowerNukkitOnly @Since("FUTURE") DEV_ADDTREATMENTID("options.dev_addTreatmentId"), // Add Treatment Id
        @PowerNukkitOnly @Since("FUTURE") DEV_ADDLABEL("options.dev_addLabel"), // Add
        @PowerNukkitOnly @Since("FUTURE") DEV_RESETTODEFAULT("options.dev_resetToDefault"), // Reset To Default
        @PowerNukkitOnly @Since("FUTURE") DEV_CLEARFLIGHTS("options.dev_clearFlights"), // Clear
        @PowerNukkitOnly @Since("FUTURE") DEV_EXPERIMENTALPROGRESSIONS("options.dev_experimentalProgressions"), // Override Progressions
        @PowerNukkitOnly @Since("FUTURE") DEV_DISPLAYPROGRESSIONSPANEL("options.dev_displayProgressionsPanel"), // Display Progressions
        @PowerNukkitOnly @Since("FUTURE") DEV_ADDPROGRESSIONID("options.dev_addProgressionId"), // Add Progression Id
        @PowerNukkitOnly @Since("FUTURE") DEV_RESET_DAY_ONE_EXPERIENCE("options.dev_reset_day_one_experience"), // Reset Day One Experience
        @PowerNukkitOnly @Since("FUTURE") DEV_USEZIPPEDINPACKAGEPACKS("options.dev_useZippedInPackagePacks"), // Use Zipped In-package Packs
        @PowerNukkitOnly @Since("FUTURE") DEV_IMPORTPACKSASZIP("options.dev_importPacksAsZip"), // Import Packs as Zip
        @PowerNukkitOnly @Since("FUTURE") DEV_FOLDERS_PORTSETTINGSFOLDER("options.dev_folders_portSettingsFolder"), // Export Settings Folder
        @PowerNukkitOnly @Since("FUTURE") DEV_USEOVERRIDEDATE("options.dev_useOverrideDate"), // Use Override Date
        @PowerNukkitOnly @Since("FUTURE") DEV_DISPLAYOVERRIDEDATETIME("options.dev_displayOverrideDatetime"), // Display Datetime
        @PowerNukkitOnly @Since("FUTURE") DEV_LOADOVERRIDEDATE("options.dev_loadOverrideDate"), // Load Override Date At Launch
        @PowerNukkitOnly @Since("FUTURE") DEV_TIMEZONETYPE("options.dev.timeZoneType"), // Override Editor Timezone Type
        @PowerNukkitOnly @Since("FUTURE") DEV_TIMEZONETYPE_LOCAL("options.dev.timeZoneType.local"), // Edit in Local Time
        @PowerNukkitOnly @Since("FUTURE") DEV_TIMEZONETYPE_UTC("options.dev.timeZoneType.utc"), // Edit in UTC
        @PowerNukkitOnly @Since("FUTURE") DEV_OVERRIDEDATEYEAR("options.dev_overrideDateYear"), // Year
        @PowerNukkitOnly @Since("FUTURE") DEV_OVERRIDEDATEMONTH("options.dev_overrideDateMonth"), // Month
        @PowerNukkitOnly @Since("FUTURE") DEV_OVERRIDEDATEDAY("options.dev_overrideDateDay"), // Day
        @PowerNukkitOnly @Since("FUTURE") DEV_OVERRIDEDATEHOUR("options.dev_overrideDateHour"), // Hour
        @PowerNukkitOnly @Since("FUTURE") DEV_OVERRIDEDATEMINUTE("options.dev_overrideDateMinute"), // Minute
        @PowerNukkitOnly @Since("FUTURE") DEV_OVERRIDEDAYLENGTH("options.dev_overrideDayLength"), // Override Day Length In Minutes (Min: 1)
        @PowerNukkitOnly @Since("FUTURE") DEV_OVERRIDETIMESCALE("options.dev_overrideTimeScale"), // Scale Speed That Time Passes (Min: 1, Default: 1)
        @PowerNukkitOnly @Since("FUTURE") DEV_UPDATEOVERRIDEDATE("options.dev_updateOverrideDate"), // Update Override Date
        @PowerNukkitOnly @Since("FUTURE") DEV_OVERRIDEVERSIONMAJOR("options.dev_overrideVersionMajor"), // Major
        @PowerNukkitOnly @Since("FUTURE") DEV_OVERRIDEVERSIONMINOR("options.dev_overrideVersionMinor"), // Minor
        @PowerNukkitOnly @Since("FUTURE") DEV_OVERRIDEVERSIONPATCH("options.dev_overrideVersionPatch"), // Patch
        @PowerNukkitOnly @Since("FUTURE") DEV_UPDATEVERSIONOVERRIDE("options.dev_updateVersionOverride"), // Update Client Version Override
        @PowerNukkitOnly @Since("FUTURE") DEV_RESETOVERRIDEDATE("options.dev_resetOverrideDate"), // Reset Override Date
        @PowerNukkitOnly @Since("FUTURE") DEV_CLEARSTORECACHE("options.dev_clearStoreCache"), // Clear Marketplace Cache
        @PowerNukkitOnly @Since("FUTURE") DEV_CLEARALLCACHE("options.dev_clearAllCache"), // Clear All Cache
        @PowerNukkitOnly @Since("FUTURE") DEV_CONNECTION_QUALITY("options.dev_connection_quality"), // Network conditioner (simulate bad connections)
        @PowerNukkitOnly @Since("FUTURE") DEV_CONNECTION_OFF("options.dev_connection_off"), // Off - In-memory connection enabled for local play
        @PowerNukkitOnly @Since("FUTURE") DEV_CONNECTION_NOLIMIT("options.dev_connection_nolimit"), // Full network stack enabled - No limits
        @PowerNukkitOnly @Since("FUTURE") DEV_CONNECTION_4G("options.dev_connection_4g"), // 4G - 15Mbps, 100ms latency, 1% packet loss
        @PowerNukkitOnly @Since("FUTURE") DEV_CONNECTION_3G("options.dev_connection_3g"), // 3G - 1.5Mbps, 200ms latency, 2% packet loss
        @PowerNukkitOnly @Since("FUTURE") DEV_CONNECTION_SLOW("options.dev_connection_slow"), // Slow - 400Kbps, 300ms latency, 3% packet loss
        @PowerNukkitOnly @Since("FUTURE") DEV_CONNECTION_VERYSLOW("options.dev_connection_veryslow"), // Very slow - 200Kbps, 400ms latency, 4% packet loss
        @PowerNukkitOnly @Since("FUTURE") DEV_DELETEALLPERSONAS("options.dev_deleteAllPersonas"), // Delete All Personas
        @PowerNukkitOnly @Since("FUTURE") DEV_DELETELEGACYPERSONA("options.dev_deleteLegacyPersona"), // Delete Legacy Persona Slot
        @PowerNukkitOnly @Since("FUTURE") DEV_IDENTITY_ENVIRONMENT("options.dev_identity_environment"), // New Identity and Online Infrastructure Environment (requires restart)
        @PowerNukkitOnly @Since("FUTURE") DEV_IDENTITY_ENVIRONMENT_DEV("options.dev_identity_environment.dev"), // Development
        @PowerNukkitOnly @Since("FUTURE") DEV_IDENTITY_ENVIRONMENT_TEST("options.dev_identity_environment.test"), // Test
        @PowerNukkitOnly @Since("FUTURE") DEV_IDENTITY_ENVIRONMENT_PROD("options.dev_identity_environment.prod"), // Production
        @PowerNukkitOnly @Since("FUTURE") DEV_WINDOWSSTORE("options.dev.windowsStore"), // Select Windows Store (Restart Required)
        @PowerNukkitOnly @Since("FUTURE") DEV_WINDOWSSTORE_AUTO("options.dev.windowsStore.auto"), // Automatic
        @PowerNukkitOnly @Since("FUTURE") DEV_WINDOWSSTORE_V6("options.dev.windowsStore.v6"), // Legacy Windows Store - V6
        @PowerNukkitOnly @Since("FUTURE") DEV_WINDOWSSTORE_V8("options.dev.windowsStore.v8"), // OneStore - V8
        @PowerNukkitOnly @Since("FUTURE") DEV_STORES("options.dev.stores"), // Currently Active Stores:
        @PowerNukkitOnly @Since("FUTURE") DEV_SUNSET_OVERRIDES("options.dev_sunset_overrides"), // Enable sunset overrides
        @PowerNukkitOnly @Since("FUTURE") DEV_SUNSET_STATUS("options.dev_sunset_status"), // Treat device as fully sunset
        @PowerNukkitOnly @Since("FUTURE") DEV_SUNSETTING_TIER("options.dev_sunsetting_tier"), // Sunsetting Tier
        @PowerNukkitOnly @Since("FUTURE") DEV_SUNSETTING_TIER_ONE("options.dev_sunsetting_tier.one"), // Tier 1 - Initial
        @PowerNukkitOnly @Since("FUTURE") DEV_SUNSETTING_TIER_TWO("options.dev_sunsetting_tier.two"), // Tier 2 - KitKat
        @PowerNukkitOnly @Since("FUTURE") DEV_SUNSETTING_TIER_THREE("options.dev_sunsetting_tier.three"), // Tier 3 - FireTV
        @PowerNukkitOnly @Since("FUTURE") DEV_SUNSETTING_TIER_FOUR("options.dev_sunsetting_tier.four"), // Tier 4 - TBD
        @PowerNukkitOnly @Since("FUTURE") DEV_SUNSETTING_TIER_NOT_PENDING("options.dev_sunsetting_tier.not_pending"), // Not Pending
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY("options.difficulty"), // Difficulty
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY_EASY("options.difficulty.easy"), // Easy
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY_HARD("options.difficulty.hard"), // Hard
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY_HARDCORE("options.difficulty.hardcore"), // Hardcore
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY_NORMAL("options.difficulty.normal"), // Normal
        @PowerNukkitOnly @Since("FUTURE") DIFFICULTY_PEACEFUL("options.difficulty.peaceful"), // Peaceful
        @PowerNukkitOnly @Since("FUTURE") DPADSCALE("options.dpadscale"), // D-Pad Size
        @PowerNukkitOnly @Since("FUTURE") ENABLECHATTEXTTOSPEECH("options.enableChatTextToSpeech"), // Text To Speech For Chat
        @PowerNukkitOnly @Since("FUTURE") ENABLEAUTOPLATFORMTEXTTOSPEECH("options.enableAutoPlatformTextToSpeech"), // Text To Speech with Device Settings
        @PowerNukkitOnly @Since("FUTURE") ENABLEUITEXTTOSPEECH("options.enableUITextToSpeech"), // Text To Speech For UI
        @PowerNukkitOnly @Since("FUTURE") ENABLEOPENCHATMESSAGE("options.enableOpenChatMessage"), // Enable Open Chat Message
        @PowerNukkitOnly @Since("FUTURE") ENTITYSHADOWS("options.entityShadows"), // Entity Shadows
        @PowerNukkitOnly @Since("FUTURE") EDITSETTINGS("options.editSettings"), // Edit Settings
        @PowerNukkitOnly @Since("FUTURE") FANCYSKIES("options.fancyskies"), // Beautiful Skies
        @PowerNukkitOnly @Since("FUTURE") FARWARNING1("options.farWarning1"), // A 64 bit Java installation is recommended
        @PowerNukkitOnly @Since("FUTURE") FARWARNING2("options.farWarning2"), // for 'Far' render distance (you have 32 bit)
        @PowerNukkitOnly @Since("FUTURE") FBOENABLE("options.fboEnable"), // Enable FBOs
        @PowerNukkitOnly @Since("FUTURE") FORCEUNICODEFONT("options.forceUnicodeFont"), // Force Unicode Font
        @PowerNukkitOnly @Since("FUTURE") FOV("options.fov"), // FOV
        @PowerNukkitOnly @Since("FUTURE") FOV_TOGGLE("options.fov.toggle"), // FOV Can Be Altered By Gameplay
        @PowerNukkitOnly @Since("FUTURE") LICENSES("options.licenses"), // Licenses
        @PowerNukkitOnly @Since("FUTURE") LICENSED_CONTENT("options.licensed_content"), // Licensed Content
        @PowerNukkitOnly @Since("FUTURE") FONT_LICENSE("options.font_license"), // Font License
        @PowerNukkitOnly @Since("FUTURE") FONT_LICENSE_BODY("options.font_license_body"), // %1
        @PowerNukkitOnly @Since("FUTURE") LIVINGROOMFOV("options.livingRoomFOV"), // Living Room FOV
        @PowerNukkitOnly @Since("FUTURE") DEFAULT_FORMAT("options.default.format"), // %s
        @PowerNukkitOnly @Since("FUTURE") PERCENT_FORMAT("options.percent.format"), // %s%%
        @PowerNukkitOnly @Since("FUTURE") FOV_FORMAT("options.fov.format"), // %s°
        @PowerNukkitOnly @Since("FUTURE") FOV_MAX("options.fov.max"), // Quake Pro
        @PowerNukkitOnly @Since("FUTURE") FOV_MIN("options.fov.min"), // Normal
        @PowerNukkitOnly @Since("FUTURE") HUDOPACITY("options.hudOpacity"), // HUD Opacity
        @PowerNukkitOnly @Since("FUTURE") HUDOPACITY_MAX("options.hudOpacity.max"), // Normal
        @PowerNukkitOnly @Since("FUTURE") HUDOPACITY_MIN("options.hudOpacity.min"), // Hidden
        @PowerNukkitOnly @Since("FUTURE") FRAMERATELIMIT("options.framerateLimit"), // Max Framerate
        @PowerNukkitOnly @Since("FUTURE") FRAMERATELIMIT_MAX("options.framerateLimit.max"), // Unlimited
        @PowerNukkitOnly @Since("FUTURE") FULLKEYBOARDGAMEPLAY("options.fullKeyboardGameplay"), // Full Keyboard Gameplay
        @PowerNukkitOnly @Since("FUTURE") FULLKEYBOARDLAYOUT("options.fullKeyboardLayout"), // Full Keyboard Layout
        @PowerNukkitOnly @Since("FUTURE") FULLSCREEN("options.fullscreen"), // Fullscreen
        @PowerNukkitOnly @Since("FUTURE") GAMEPADCURSORSENSITIVITY("options.gamepadcursorsensitivity"), // Controller Cursor Sensitivity
        @PowerNukkitOnly @Since("FUTURE") GAMERTAG("options.gamertag"), // Gamertag:
        @PowerNukkitOnly @Since("FUTURE") GAMMA("options.gamma"), // Brightness
        @PowerNukkitOnly @Since("FUTURE") GAMMA_MAX("options.gamma.max"), // Bright
        @PowerNukkitOnly @Since("FUTURE") GAMMA_MIN("options.gamma.min"), // Moody
        @PowerNukkitOnly @Since("FUTURE") WORLDLIGHTBRIGHTNESS("options.worldLightBrightness"), // World Light Brightness
        @PowerNukkitOnly @Since("FUTURE") GOTOFEEDBACKWEBSITE("options.goToFeedbackWebsite"), // Go to Feedback Website
        @PowerNukkitOnly @Since("FUTURE") GRAPHICS("options.graphics"), // Fancy Graphics
        @PowerNukkitOnly @Since("FUTURE") TRANSPARENTLEAVES("options.transparentleaves"), // Fancy Leaves
        @PowerNukkitOnly @Since("FUTURE") BUBBLEPARTICLES("options.bubbleparticles"), // Fancy Bubbles
        @PowerNukkitOnly @Since("FUTURE") SMOOTH_LIGHTING("options.smooth_lighting"), // Smooth Lighting
        @PowerNukkitOnly @Since("FUTURE") UPSCALING("options.upscaling"), // Upscaling
        @PowerNukkitOnly @Since("FUTURE") RAYTRACING("options.raytracing"), // Ray Tracing
        @PowerNukkitOnly @Since("FUTURE") RAYTRACING_DISABLED_UPSELL_SUPPORTED_PLATFORM("options.raytracing.disabled.upsell.supported_platform"), // This option can only be edited while playing in a ray tracing capable world. Find one in the Marketplace, or create your own ray tracing capable resource pack.
        @PowerNukkitOnly @Since("FUTURE") RAYTRACING_DISABLED_UPSELL_UNSUPPORTED_PLATFORM("options.raytracing.disabled.upsell.unsupported_platform"), // You need a specific device to use this feature, for more information see: http://aka.ms/ray-tracing-FAQ
        @PowerNukkitOnly @Since("FUTURE") GRAPHICS_FANCY("options.graphics.fancy"), // Fancy
        @PowerNukkitOnly @Since("FUTURE") GRAPHICS_FAST("options.graphics.fast"), // Fast
        @PowerNukkitOnly @Since("FUTURE") RENDERINGPROFILE("options.renderingProfile"), // Graphics
        @PowerNukkitOnly @Since("FUTURE") RENDERINGPROFILE_SAD("options.renderingProfile.sad"), // Basic
        @PowerNukkitOnly @Since("FUTURE") RENDERINGPROFILE_FANCY("options.renderingProfile.fancy"), // Fancy
        @PowerNukkitOnly @Since("FUTURE") RENDERINGPROFILE_SUPERFANCY("options.renderingProfile.superfancy"), // Super Fancy
        @PowerNukkitOnly @Since("FUTURE") GROUP_AUDIO("options.group.audio"), // Sound
        @PowerNukkitOnly @Since("FUTURE") GROUP_FEEDBACK("options.group.feedback"), // Feedback
        @PowerNukkitOnly @Since("FUTURE") GROUP_GAME("options.group.game"), // Game
        @PowerNukkitOnly @Since("FUTURE") GROUP_GRAPHICS("options.group.graphics"), // Graphics
        @PowerNukkitOnly @Since("FUTURE") GROUP_GRAPHICS_EXPERIMENTAL("options.group.graphics.experimental"), // Experimental
        @PowerNukkitOnly @Since("FUTURE") GROUP_INPUT("options.group.input"), // Controls
        @PowerNukkitOnly @Since("FUTURE") GROUP_MULTIPLAYER("options.group.multiplayer"), // Multiplayer
        @PowerNukkitOnly @Since("FUTURE") GROUP_REALMS("options.group.realms"), // Invited to Realms Alpha?
        @PowerNukkitOnly @Since("FUTURE") GUISCALE("options.guiScale"), // D-pad size
        @PowerNukkitOnly @Since("FUTURE") GUISCALE_AUTO("options.guiScale.auto"), // Auto
        @PowerNukkitOnly @Since("FUTURE") GUISCALE_LARGE("options.guiScale.large"), // Large
        @PowerNukkitOnly @Since("FUTURE") GUISCALE_MAXIMUM("options.guiScale.maximum"), // Maximum
        @PowerNukkitOnly @Since("FUTURE") GUISCALE_MEDIUM("options.guiScale.medium"), // Medium
        @PowerNukkitOnly @Since("FUTURE") GUISCALE_MINIMUM("options.guiScale.minimum"), // Minimum
        @PowerNukkitOnly @Since("FUTURE") GUISCALE_NORMAL("options.guiScale.normal"), // Normal
        @PowerNukkitOnly @Since("FUTURE") GUISCALE_OPTIONNAME("options.guiScale.optionName"), // GUI Scale Modifier
        @PowerNukkitOnly @Since("FUTURE") GUISCALE_SMALL("options.guiScale.small"), // Small
        @PowerNukkitOnly @Since("FUTURE") HIDDEN("options.hidden"), // Hidden
        @PowerNukkitOnly @Since("FUTURE") HIDEHUD("options.hidehud"), // Hide HUD
        @PowerNukkitOnly @Since("FUTURE") HIDEHAND("options.hidehand"), // Hide Hand
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_BOX_SELECTION("options.classic_box_selection"), // Outline Selection
        @PowerNukkitOnly @Since("FUTURE") CREATOR("options.creator"), // Creator
        @PowerNukkitOnly @Since("FUTURE") CREATORTITLE("options.creatorTitle"), // Creator Settings
        @PowerNukkitOnly @Since("FUTURE") VR_CLASSIC_BOX_SELECTION("options.vr_classic_box_selection"), // Outline Selection
        @PowerNukkitOnly @Since("FUTURE") HIDEGAMEPADCURSOR("options.hidegamepadcursor"), // Hide Controller Cursor
        @PowerNukkitOnly @Since("FUTURE") HIDEGUI("options.hidegui"), // Hide GUI
        @PowerNukkitOnly @Since("FUTURE") HIDEKEYBOARDTOOLTIPS("options.hideKeyboardTooltips"), // Hide Keyboard and Mouse Hints
        @PowerNukkitOnly @Since("FUTURE") HIDETOOLTIPS("options.hidetooltips"), // Hide Controller Hints
        @PowerNukkitOnly @Since("FUTURE") SPLITSCREENHUDSIZE("options.splitscreenHUDsize"), // Splitscreen HUD Size
        @PowerNukkitOnly @Since("FUTURE") INGAMEPLAYERNAMES("options.ingamePlayerNames"), // In-game Player Names
        @PowerNukkitOnly @Since("FUTURE") SPLITSCREENINGAMEPLAYERNAMES("options.splitscreenIngamePlayerNames"), // Splitscreen In-game Player Names
        @PowerNukkitOnly @Since("FUTURE") INTERFACEOPACITY("options.interfaceOpacity"), // HUD Opacity
        @PowerNukkitOnly @Since("FUTURE") SPLITSCREENINTERFACEOPACITY("options.splitscreenInterfaceOpacity"), // Splitscreen HUD Opacity
        @PowerNukkitOnly @Since("FUTURE") TEXTBACKGROUNDOPACITY("options.textBackgroundOpacity"), // Text Background Opacity
        @PowerNukkitOnly @Since("FUTURE") HIDEPAPERDOLL("options.hidepaperdoll"), // Hide Paper Doll
        @PowerNukkitOnly @Since("FUTURE") SHOWAUTOSAVEICON("options.showautosaveicon"), // Show Autosave Icon
        @PowerNukkitOnly @Since("FUTURE") HOLD("options.hold"), // Hold
        @PowerNukkitOnly @Since("FUTURE") INVERTMOUSE("options.invertMouse"), // Invert Mouse
        @PowerNukkitOnly @Since("FUTURE") INVERTYAXIS("options.invertYAxis"), // Invert Y-Axis
        @PowerNukkitOnly @Since("FUTURE") KEYBOARDLAYOUT("options.keyboardLayout"), // Keyboard Layout
        @PowerNukkitOnly @Since("FUTURE") KEYBOARDANDMOUSE("options.keyboardAndMouse"), // Keyboard & Mouse
        @PowerNukkitOnly @Since("FUTURE") KEYBOARDANDMOUSESETTINGS("options.keyboardAndMouseSettings"), // Keyboard and Mouse Settings
        @PowerNukkitOnly @Since("FUTURE") LANGUAGE("options.language"), // Language
        @PowerNukkitOnly @Since("FUTURE") LANGUAGEGUISCALECOMPATIBILITY_TITLE("options.languageGuiScaleCompatibility.title"), // Incompatible Language and GUI Scale
        @PowerNukkitOnly @Since("FUTURE") LANGUAGEGUISCALECOMPATIBILITY_MESSAGE_SHORT("options.languageGuiScaleCompatibility.message.short"), // Our font for the language you have selected is not readable at a GUI scale that small.
        @PowerNukkitOnly @Since("FUTURE") LANGUAGEGUISCALECOMPATIBILITY_MESSAGE_LONG("options.languageGuiScaleCompatibility.message.long"), // Our font for the language you have selected is not readable at a GUI scale that small.  Do you want to increase your GUI scale?
        @PowerNukkitOnly @Since("FUTURE") LANGUAGEGUISCALECOMPATIBILITY_OK("options.languageGuiScaleCompatibility.ok"), // Increase GUI Scale
        @PowerNukkitOnly @Since("FUTURE") LANGUAGEGUISCALECOMPATIBILITY_CANCEL("options.languageGuiScaleCompatibility.cancel"), // Go Back
        @PowerNukkitOnly @Since("FUTURE") LANGUAGEWARNING("options.languageWarning"), // Language translations may not be 100% accurate
        @PowerNukkitOnly @Since("FUTURE") LEFTHANDED("options.lefthanded"), // Lefty
        @PowerNukkitOnly @Since("FUTURE") HOTBARONLYTOUCH("options.hotbarOnlyTouch"), // Touch only affects hotbar
        @PowerNukkitOnly @Since("FUTURE") MANAGE("options.manage"), // Manage
        @PowerNukkitOnly @Since("FUTURE") MANAGEACCOUNT("options.manageAccount"), // Manage Account
        @PowerNukkitOnly @Since("FUTURE") MIPMAPLEVELS("options.mipmapLevels"), // Mipmap Levels
        @PowerNukkitOnly @Since("FUTURE") MODELPART_CAPE("options.modelPart.cape"), // Cape
        @PowerNukkitOnly @Since("FUTURE") MODELPART_HAT("options.modelPart.hat"), // Hat
        @PowerNukkitOnly @Since("FUTURE") MODELPART_JACKET("options.modelPart.jacket"), // Jacket
        @PowerNukkitOnly @Since("FUTURE") MODELPART_LEFT_PANTS_LEG("options.modelPart.left_pants_leg"), // Left Pants Leg
        @PowerNukkitOnly @Since("FUTURE") MODELPART_LEFT_SLEEVE("options.modelPart.left_sleeve"), // Left Sleeve
        @PowerNukkitOnly @Since("FUTURE") MODELPART_RIGHT_PANTS_LEG("options.modelPart.right_pants_leg"), // Right Pants Leg
        @PowerNukkitOnly @Since("FUTURE") MODELPART_RIGHT_SLEEVE("options.modelPart.right_sleeve"), // Right Sleeve
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYER_TITLE("options.multiplayer.title"), // Multiplayer Settings...
        @PowerNukkitOnly @Since("FUTURE") MUSIC("options.music"), // Music
        @PowerNukkitOnly @Since("FUTURE") NAME("options.name"), // Name
        @PowerNukkitOnly @Since("FUTURE") DEFAULTNAME("options.defaultName"), // Steve
        @PowerNukkitOnly @Since("FUTURE") OFF("options.off"), // OFF
        @PowerNukkitOnly @Since("FUTURE") ON("options.on"), // ON
        @PowerNukkitOnly @Since("FUTURE") PARTICLES("options.particles"), // Particles
        @PowerNukkitOnly @Since("FUTURE") PARTICLES_ALL("options.particles.all"), // All
        @PowerNukkitOnly @Since("FUTURE") PARTICLES_DECREASED("options.particles.decreased"), // Decreased
        @PowerNukkitOnly @Since("FUTURE") PARTICLES_MINIMAL("options.particles.minimal"), // Minimal
        @PowerNukkitOnly @Since("FUTURE") PATCHNOTES("options.patchNotes"), // Patch Notes
        @PowerNukkitOnly @Since("FUTURE") PERFORMANCEBUTTON("options.performanceButton"), // Video Performance Settings...
        @PowerNukkitOnly @Since("FUTURE") PERFORMANCEVIDEOTITLE("options.performanceVideoTitle"), // Video Performance Settings
        @PowerNukkitOnly @Since("FUTURE") POSTBUTTON("options.postButton"), // Post-Processing Settings...
        @PowerNukkitOnly @Since("FUTURE") POSTPROCESSENABLE("options.postProcessEnable"), // Enable Post-Processing
        @PowerNukkitOnly @Since("FUTURE") POSTVIDEOTITLE("options.postVideoTitle"), // Post-Processing Settings
        @PowerNukkitOnly @Since("FUTURE") PROFILE("options.profile"), // Profile
        @PowerNukkitOnly @Since("FUTURE") PROFILETITLE("options.profileTitle"), // User Profile and Settings
        @PowerNukkitOnly @Since("FUTURE") ACCOUNTERROR("options.accountError"), // Account Error
        @PowerNukkitOnly @Since("FUTURE") ACCOUNTERRORBUTTON("options.accountErrorButton"), // View Errors
        @PowerNukkitOnly @Since("FUTURE") QUALITYBUTTON("options.qualityButton"), // Video Quality Settings...
        @PowerNukkitOnly @Since("FUTURE") QUALITYVIDEOTITLE("options.qualityVideoTitle"), // Video Quality Settings
        @PowerNukkitOnly @Since("FUTURE") REDUCEDDEBUGINFO("options.reducedDebugInfo"), // Reduced Debug Info
        @PowerNukkitOnly @Since("FUTURE") RENDERCLOUDS("options.renderClouds"), // Clouds
        @PowerNukkitOnly @Since("FUTURE") RENDERDISTANCE("options.renderDistance"), // Render Distance
        @PowerNukkitOnly @Since("FUTURE") RAYTRACING_RENDERDISTANCE("options.raytracing.renderDistance"), // Ray Tracing Render Distance
        @PowerNukkitOnly @Since("FUTURE") RAYTRACING_RENDERDISTANCEFORMAT("options.raytracing.renderDistanceFormat"), // %s chunks
        @PowerNukkitOnly @Since("FUTURE") RENDERDISTANCEFORMAT("options.renderDistanceFormat"), // %s chunks
        @PowerNukkitOnly @Since("FUTURE") RAYTRACING_RENDERDISTANCE_WARNING("options.raytracing.renderdistance.warning"), // This setting may cause performance issues while playing the game.
        @PowerNukkitOnly @Since("FUTURE") RESETSETTINGS("options.resetSettings"), // Reset to Default
        @PowerNukkitOnly @Since("FUTURE") RESETSETTINGS_POPUP("options.resetSettings.popUp"), // Do you really want to reset the settings?
        @PowerNukkitOnly @Since("FUTURE") MAXFRAMERATE("options.maxFramerate"), // Max Framerate (Experimental)
        @PowerNukkitOnly @Since("FUTURE") MAXFRAMERATEFORMAT("options.maxFramerateFormat"), // %s FPS
        @PowerNukkitOnly @Since("FUTURE") PERF_TURTLE("options.perf_turtle"), // Performance Turtle
        @PowerNukkitOnly @Since("FUTURE") MSAA("options.msaa"), // Anti-Aliasing
        @PowerNukkitOnly @Since("FUTURE") TEXELAA("options.texelAA"), // Texel Anti-Aliasing
        @PowerNukkitOnly @Since("FUTURE") RENDERDISTANCE_FAR("options.renderDistance.far"), // Far
        @PowerNukkitOnly @Since("FUTURE") RENDERDISTANCE_NORMAL("options.renderDistance.normal"), // Normal
        @PowerNukkitOnly @Since("FUTURE") RENDERDISTANCE_SHORT("options.renderDistance.short"), // Short
        @PowerNukkitOnly @Since("FUTURE") RENDERDISTANCE_TINY("options.renderDistance.tiny"), // Tiny
        @PowerNukkitOnly @Since("FUTURE") RESOURCEPACKS("options.resourcepacks"), // Resource Packs
        @PowerNukkitOnly @Since("FUTURE") SAFEZONE("options.safeZone"), // Safe Area
        @PowerNukkitOnly @Since("FUTURE") SAFEZONEX("options.safeZoneX"), // Horizontal Safe Area
        @PowerNukkitOnly @Since("FUTURE") SAFEZONEY("options.safeZoneY"), // Vertical Safe Area
        @PowerNukkitOnly @Since("FUTURE") SAFEZONE_TITLE("options.safeZone.title"), // Change Screen Safe Area
        @PowerNukkitOnly @Since("FUTURE") SAFEZONE_DESCRIPTION("options.safeZone.description"), // Adjust the sliders until the four corners fit the edge of your screen.
        @PowerNukkitOnly @Since("FUTURE") SATURATION("options.saturation"), // Saturation
        @PowerNukkitOnly @Since("FUTURE") SCREENANIMATIONS("options.screenAnimations"), // Screen Animations
        @PowerNukkitOnly @Since("FUTURE") SCREENPOSITIONX("options.screenPositionX"), // Horizontal Screen Position
        @PowerNukkitOnly @Since("FUTURE") SCREENPOSITIONY("options.screenPositionY"), // Vertical Screen Position
        @PowerNukkitOnly @Since("FUTURE") SENSITIVITY("options.sensitivity"), // Sensitivity
        @PowerNukkitOnly @Since("FUTURE") SENSITIVITY_MAX("options.sensitivity.max"), // HYPERSPEED!!!
        @PowerNukkitOnly @Since("FUTURE") SENSITIVITY_MIN("options.sensitivity.min"), // *yawn*
        @PowerNukkitOnly @Since("FUTURE") SPYGLASSDAMPEN("options.spyglassdampen"), // Spyglass Damping
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYERGAME("options.multiplayergame"), // Multiplayer Game
        @PowerNukkitOnly @Since("FUTURE") SERVERVISIBLE("options.servervisible"), // Visible to LAN Players
        @PowerNukkitOnly @Since("FUTURE") SHOWCOMFORTSELECTSCREEN("options.ShowComfortSelectScreen"), // Show Comfort Select Screen
        @PowerNukkitOnly @Since("FUTURE") SLIDERLABELFORMAT("options.sliderLabelFormat"), // %s: %s
        @PowerNukkitOnly @Since("FUTURE") SMOOTHROTATIONSPEED("options.smoothRotationSpeed"), // Smooth Rotation Speed
        @PowerNukkitOnly @Since("FUTURE") XBOXLIVEBROADCAST_INVITEONLY("options.xboxliveBroadcast.inviteOnly"), // Invite Only
        @PowerNukkitOnly @Since("FUTURE") XBOXLIVEBROADCAST_FRIENDSONLY("options.xboxliveBroadcast.friendsOnly"), // Friends Only
        @PowerNukkitOnly @Since("FUTURE") XBOXLIVEBROADCAST_FRIENDSOFFRIENDS("options.xboxliveBroadcast.friendsOfFriends"), // Friends of Friends
        @PowerNukkitOnly @Since("FUTURE") XBOXLIVEBROADCASTSETTINGS("options.xboxliveBroadcastSettings"), // Microsoft Account Settings
        @PowerNukkitOnly @Since("FUTURE") XBOXLIVEVISIBLE("options.xboxlivevisible"), // Visible to Xbox Live Players
        @PowerNukkitOnly @Since("FUTURE") XBOXLIVEACCOUNTSETTINGS("options.xboxLiveAccountSettings"), // Microsoft Account Settings
        @PowerNukkitOnly @Since("FUTURE") XBOXLIVESIGNEDIN("options.xboxLiveSignedIn"), // Signed In with Microsoft Account
        @PowerNukkitOnly @Since("FUTURE") XBOXLIVESIGNEDOUT("options.xboxLiveSignedOut"), // Signed Out of Microsoft Account
        @PowerNukkitOnly @Since("FUTURE") XBOXLIVE_PRIVACYCONTROL("options.xboxLive.privacyControl"), // Privacy & online safety
        @PowerNukkitOnly @Since("FUTURE") REALMS_CHECKINVITES("options.realms.checkInvites"), // Manage Realms membership invites
        @PowerNukkitOnly @Since("FUTURE") SKINCUSTOMISATION("options.skinCustomisation"), // Skin Customization...
        @PowerNukkitOnly @Since("FUTURE") SKINCUSTOMISATION_TITLE("options.skinCustomisation.title"), // Skin Customization
        @PowerNukkitOnly @Since("FUTURE") SKIN_CHANGE("options.skin.change"), // Change Skin
        @PowerNukkitOnly @Since("FUTURE") SNOOPER("options.snooper"), // Allow Snooper
        @PowerNukkitOnly @Since("FUTURE") SNOOPER_DESC("options.snooper.desc"), // We want to collect information about your machine to help improve Minecraft by knowing what we can support and where the biggest problems are. All of this information is completely anonymous and viewable below. We promise we won't do anything bad with this data, but if you want to opt out then feel free to toggle it off!
        @PowerNukkitOnly @Since("FUTURE") SNOOPER_TITLE("options.snooper.title"), // Machine Specs Collection
        @PowerNukkitOnly @Since("FUTURE") SNOOPER_VIEW("options.snooper.view"), // Snooper Settings...
        @PowerNukkitOnly @Since("FUTURE") SOUND("options.sound"), // Sound Volume
        @PowerNukkitOnly @Since("FUTURE") SOUNDS("options.sounds"), // Audio
        @PowerNukkitOnly @Since("FUTURE") SOUNDS_TITLE("options.sounds.title"), // Audio Settings
        @PowerNukkitOnly @Since("FUTURE") ACCESSIBILITY("options.accessibility"), // Accessibility
        @PowerNukkitOnly @Since("FUTURE") ACCESSIBILITY_TITLE("options.accessibility.title"), // Accessibility Settings
        @PowerNukkitOnly @Since("FUTURE") SCREENSHAKE("options.screenShake"), // Camera Shake
        @PowerNukkitOnly @Since("FUTURE") SPLITSCREEN("options.splitscreen"), // Split Screen
        @PowerNukkitOnly @Since("FUTURE") SPLITSCREEN_HORIZONTAL("options.splitscreen.horizontal"), // Horizontal Split Screen
        @PowerNukkitOnly @Since("FUTURE") SPLITSCREEN_VERTICAL("options.splitscreen.vertical"), // Vertical Split Screen
        @PowerNukkitOnly @Since("FUTURE") STICKYMINING("options.stickyMining"), // Sticky Mining
        @PowerNukkitOnly @Since("FUTURE") STREAM("options.stream"), // Broadcast Settings...
        @PowerNukkitOnly @Since("FUTURE") STREAM_BYTESPERPIXEL("options.stream.bytesPerPixel"), // Quality
        @PowerNukkitOnly @Since("FUTURE") STREAM_CHANGES("options.stream.changes"), // You may need to restart your stream for these changes to take place.
        @PowerNukkitOnly @Since("FUTURE") STREAM_CHAT_ENABLED("options.stream.chat.enabled"), // Enable
        @PowerNukkitOnly @Since("FUTURE") STREAM_CHAT_ENABLED_ALWAYS("options.stream.chat.enabled.always"), // Always
        @PowerNukkitOnly @Since("FUTURE") STREAM_CHAT_ENABLED_NEVER("options.stream.chat.enabled.never"), // Never
        @PowerNukkitOnly @Since("FUTURE") STREAM_CHAT_ENABLED_STREAMING("options.stream.chat.enabled.streaming"), // Whilst Streaming
        @PowerNukkitOnly @Since("FUTURE") STREAM_CHAT_TITLE("options.stream.chat.title"), // Twitch Chat Settings
        @PowerNukkitOnly @Since("FUTURE") STREAM_CHAT_USERFILTER("options.stream.chat.userFilter"), // User Filter
        @PowerNukkitOnly @Since("FUTURE") STREAM_CHAT_USERFILTER_ALL("options.stream.chat.userFilter.all"), // All Viewers
        @PowerNukkitOnly @Since("FUTURE") STREAM_CHAT_USERFILTER_MODS("options.stream.chat.userFilter.mods"), // Moderators
        @PowerNukkitOnly @Since("FUTURE") STREAM_CHAT_USERFILTER_SUBS("options.stream.chat.userFilter.subs"), // Subscribers
        @PowerNukkitOnly @Since("FUTURE") STREAM_COMPRESSION("options.stream.compression"), // Compression
        @PowerNukkitOnly @Since("FUTURE") STREAM_COMPRESSION_HIGH("options.stream.compression.high"), // High
        @PowerNukkitOnly @Since("FUTURE") STREAM_COMPRESSION_LOW("options.stream.compression.low"), // Low
        @PowerNukkitOnly @Since("FUTURE") STREAM_COMPRESSION_MEDIUM("options.stream.compression.medium"), // Medium
        @PowerNukkitOnly @Since("FUTURE") STREAM_ESTIMATION("options.stream.estimation"), // Estimated resolution: %dx%d
        @PowerNukkitOnly @Since("FUTURE") STREAM_FPS("options.stream.fps"), // Framerate
        @PowerNukkitOnly @Since("FUTURE") STREAM_INGEST_RESET("options.stream.ingest.reset"), // Reset Preference
        @PowerNukkitOnly @Since("FUTURE") STREAM_INGEST_TITLE("options.stream.ingest.title"), // Twitch Broadcast Servers
        @PowerNukkitOnly @Since("FUTURE") STREAM_INGESTSELECTION("options.stream.ingestSelection"), // Broadcast Server List
        @PowerNukkitOnly @Since("FUTURE") STREAM_KBPS("options.stream.kbps"), // Bandwidth
        @PowerNukkitOnly @Since("FUTURE") STREAM_MIC_TOGGLE_MUTE("options.stream.mic_toggle.mute"), // Mute
        @PowerNukkitOnly @Since("FUTURE") STREAM_MIC_TOGGLE_TALK("options.stream.mic_toggle.talk"), // Talk
        @PowerNukkitOnly @Since("FUTURE") STREAM_MICTOGGLEBEHAVIOR("options.stream.micToggleBehavior"), // Push To
        @PowerNukkitOnly @Since("FUTURE") STREAM_MICVOLUMNE("options.stream.micVolumne"), // Mic Volume
        @PowerNukkitOnly @Since("FUTURE") STREAM_SENDMETADATA("options.stream.sendMetadata"), // Send Metadata
        @PowerNukkitOnly @Since("FUTURE") STREAM_SYSTEMVOLUME("options.stream.systemVolume"), // System Volume
        @PowerNukkitOnly @Since("FUTURE") STREAM_TITLE("options.stream.title"), // Twitch Broadcast Settings
        @PowerNukkitOnly @Since("FUTURE") THIRDPERSON("options.thirdperson"), // Camera Perspective
        @PowerNukkitOnly @Since("FUTURE") THIRDPERSON_FIRSTPERSON("options.thirdperson.firstperson"), // First Person
        @PowerNukkitOnly @Since("FUTURE") THIRDPERSON_THIRDPERSONBACK("options.thirdperson.thirdpersonback"), // Third Person Back
        @PowerNukkitOnly @Since("FUTURE") THIRDPERSON_THIRDPERSONFRONT("options.thirdperson.thirdpersonfront"), // Third Person Front
        @PowerNukkitOnly @Since("FUTURE") TITLE("options.title"), // Options
        @PowerNukkitOnly @Since("FUTURE") TOGGLE("options.toggle"), // Toggle
        @PowerNukkitOnly @Since("FUTURE") RENDERCLOUDS_LOWER_CASED("options.renderclouds"), // Render Clouds
        @PowerNukkitOnly @Since("FUTURE") TOOLBOXMODE("options.toolboxMode"), // Toolbox Mode
        @PowerNukkitOnly @Since("FUTURE") TOGGLECROUCH("options.toggleCrouch"), // Toggle Crouch
        @PowerNukkitOnly @Since("FUTURE") TOUCH("options.touch"), // Touch
        @PowerNukkitOnly @Since("FUTURE") TOUCHSETTINGS("options.touchSettings"), // Touch Settings
        @PowerNukkitOnly @Since("FUTURE") TOUCHSCREEN("options.touchscreen"), // Touchscreen Mode
        @PowerNukkitOnly @Since("FUTURE") UIPROFILE("options.uiprofile"), // UI Profile
        @PowerNukkitOnly @Since("FUTURE") UIPROFILE_CLASSIC("options.uiprofile.classic"), // Classic
        @PowerNukkitOnly @Since("FUTURE") UIPROFILE_POCKET("options.uiprofile.pocket"), // Pocket
        @PowerNukkitOnly @Since("FUTURE") USETOUCHPAD("options.usetouchpad"), // Split Controls
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS("options.viewSubscriptions"), // Subscriptions
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_BUTTON_INFO("options.viewSubscriptions.button.info"), // Info
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_BUTTON_PRICE("options.viewSubscriptions.button.price"), // %s
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_BUTTON_PRICEPERMONTH("options.viewSubscriptions.button.pricePerMonth"), // %s/month
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_BUTTON_MANAGE("options.viewSubscriptions.button.manage"), // Manage
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_RENEW("options.viewSubscriptions.renew"), // Renews every 30 days
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_DAYSREMAINING("options.viewSubscriptions.daysRemaining"), // %d days remaining
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_REALMSPLUS_HEADER("options.viewSubscriptions.realmsPlus.header"), // Available Subscriptions
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_REALMSPLUS_HEADERADDITIONAL("options.viewSubscriptions.realmsPlus.headerAdditional"), // Additional Subscriptions
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_REALMSPLUS_DETAIL("options.viewSubscriptions.realmsPlus.detail"), // Over 150+ Marketplace packs and your own 10 player Realm server
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_REALMS_HEADER("options.viewSubscriptions.realms.header"), // Additional Subscriptions
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_REALMS_DETAIL("options.viewSubscriptions.realms.detail"), // Access to your own Realm server with up to %d concurrent players
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_LOADINGSUBSCRIPTIONS("options.viewSubscriptions.loadingSubscriptions"), // Loading your subscriptions..
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_LOADINGSUBSCRIPTIONSFAILED("options.viewSubscriptions.loadingSubscriptionsFailed"), // Failed loading subscriptions
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_PURCHASEDPLATFORMDIFFERS("options.viewSubscriptions.purchasedPlatformDiffers"), // This was bought in the %s you must use that device to manage it.
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_MYSUBSCRIPTIONS("options.viewSubscriptions.mySubscriptions"), // My Subscriptions
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_NOACTIVESUBSCRIPTIONS("options.viewSubscriptions.noActiveSubscriptions"), // You Have No Active Subscriptions
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_SIGNIN("options.viewSubscriptions.signIn"), // Sign in
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_BUYANADDITIONALREALM("options.viewSubscriptions.buyAnAdditionalRealm"), // Buy An Additional Realm
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_REALMSPLUSSUBSCRIPTIONFORREALM("options.viewSubscriptions.realmsPlusSubscriptionForRealm"), // Realms plus subscription for realm %s.
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_ADDITIONALSUBSCRIPTIONFORREALM("options.viewSubscriptions.additionalSubscriptionForRealm"), // Additional subscription for realm %s.
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_PERSONALREALMSERVER("options.viewSubscriptions.personalRealmServer"), // Your own Realm server to add infinite members and play online with up to 2 friends
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_TENPLAYERS("options.viewSubscriptions.tenPlayers"), // 10 Player Realm Server
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_TWOPLAYERS("options.viewSubscriptions.twoPlayers"), // 2 Player Realm Server
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_STARTEDINSTORE("options.viewSubscriptions.startedInStore"), // It was started in store: %s
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_BOUGHTONANOTHERDEVICE("options.viewSubscriptions.boughtOnAnotherDevice"), // Bought on another device
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_DEVICESUNSETTING("options.viewSubscriptions.deviceSunsetting"), // Your version may soon not access Realms 
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_DEVICESUNSET("options.viewSubscriptions.deviceSunset"), // Your version cannot access Realms 
        @PowerNukkitOnly @Since("FUTURE") VIEWSUBSCRIPTIONS_CONSUMABLETOSUBSCRIPTIONTRANSITIONINFO("options.viewSubscriptions.consumableToSubscriptionTransitionInfo"), // You can't extend your Realm right now. We have now introduced subscriptions for Realms and you can buy a new subscription as soon as your Realm has expired. But don't worry! We will give you 14 extra days for free and your Realm will be kept online, so you will have plenty of time to extend it by then.
        @PowerNukkitOnly @Since("FUTURE") SWAPJUMPANDSNEAK("options.swapJumpAndSneak"), // Swap Jump and Sneak
        @PowerNukkitOnly @Since("FUTURE") SWAPGAMEPADAB("options.swapGamepadAB"), // A/B Button Swap
        @PowerNukkitOnly @Since("FUTURE") SWAPGAMEPADXY("options.swapGamepadXY"), // X/Y Button Swap
        @PowerNukkitOnly @Since("FUTURE") USETOUCHSCREEN("options.usetouchscreen"), // Play with Touch
        @PowerNukkitOnly @Since("FUTURE") VBO("options.vbo"), // Use VBOs
        @PowerNukkitOnly @Since("FUTURE") VIDEO("options.video"), // Video
        @PowerNukkitOnly @Since("FUTURE") VIDEOTITLE("options.videoTitle"), // Video Settings
        @PowerNukkitOnly @Since("FUTURE") VIEWBOBBING("options.viewBobbing"), // View Bobbing
        @PowerNukkitOnly @Since("FUTURE") VISIBLE("options.visible"), // Shown
        @PowerNukkitOnly @Since("FUTURE") VSYNC("options.vsync"), // Use VSync
        @PowerNukkitOnly @Since("FUTURE") VSYNC_OFF("options.vsync.off"), // No Vertical Sync
        @PowerNukkitOnly @Since("FUTURE") VSYNC_ON("options.vsync.on"), // Vertical Sync
        @PowerNukkitOnly @Since("FUTURE") VSYNC_ADAPTIVE("options.vsync.adaptive"), // Adaptive Vertical Sync
        @PowerNukkitOnly @Since("FUTURE") WEBSOCKETENCRYPTION("options.websocketEncryption"), // Require Encrypted Websockets
        @PowerNukkitOnly @Since("FUTURE") WEBSOCKETENCRYPTIONWARNINGLABEL("options.websocketEncryptionWarningLabel"), // Only disable this option if you are actively connecting to a known and safe application.
        @PowerNukkitOnly @Since("FUTURE") FILELOCATION_TITLE("options.filelocation.title"), // File Storage Location
        @PowerNukkitOnly @Since("FUTURE") FILELOCATION_EXTERNAL("options.filelocation.external"), // External
        @PowerNukkitOnly @Since("FUTURE") FILELOCATION_APPDATA("options.filelocation.appdata"), // Application
        @PowerNukkitOnly @Since("FUTURE") ATMOSPHERICSENABLE("options.atmosphericsEnable"), // Atmospherics
        @PowerNukkitOnly @Since("FUTURE") EDGEHIGHLIGHTENABLE("options.edgeHighlightEnable"), // Edge Highlight
        @PowerNukkitOnly @Since("FUTURE") BLOOMENABLE("options.bloomEnable"), // Bloom
        @PowerNukkitOnly @Since("FUTURE") TERRAINSHADOWSENABLE("options.terrainShadowsEnable"), // Terrain Shadows
        @PowerNukkitOnly @Since("FUTURE") SUPERFANCYWATERENABLE("options.superFancyWaterEnable"), // Super Fancy Water
        @PowerNukkitOnly @Since("FUTURE") ONLYTRUSTEDSKINSALLOWED("options.onlyTrustedSkinsAllowed"), // Only Allow Trusted Skins
        @PowerNukkitOnly @Since("FUTURE") AUTOUPDATEENABLED("options.autoUpdateEnabled"), // Auto Update Unlocked Packs
        @PowerNukkitOnly @Since("FUTURE") AUTOUPDATEMODE("options.autoUpdateMode"), // Auto Update Unlocked Packs
        @PowerNukkitOnly @Since("FUTURE") AUTOUPDATEMODE_OFF("options.autoUpdateMode.off"), // Off
        @PowerNukkitOnly @Since("FUTURE") AUTOUPDATEMODE_ON_WITHWIFIONLY("options.autoUpdateMode.on.withWifiOnly"), // On with Wi-Fi Only
        @PowerNukkitOnly @Since("FUTURE") AUTOUPDATEMODE_ON_WITHCELLULAR("options.autoUpdateMode.on.withCellular"), // On with Wi-Fi or Cellular Data
        @PowerNukkitOnly @Since("FUTURE") ALLOWCELLULARDATA("options.allowCellularData"), // Use Cellular Data
        @PowerNukkitOnly @Since("FUTURE") CELLULARDATAWARNINGLABEL("options.cellularDataWarningLabel"), // Playing over cellular networks may incur additional charges with your carrier.
        @PowerNukkitOnly @Since("FUTURE") TURNOFFACHIEVEMENTS("options.turnOffAchievements"), // Turn Off Achievements?
        @PowerNukkitOnly @Since("FUTURE") TURNOFFACHIEVEMENTS_MESSAGE("options.turnOffAchievements.message"), // Achievements are only available in worlds set to survival mode with cheats off.  If you continue, no one will earn achievements while playing in this world ever again even if you switch back before playing.
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSDISABLED("options.achievementsDisabled"), // Achievements cannot be earned in this world.
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSDISABLED_ONLOAD("options.achievementsDisabled.onLoad"), // If you start playing with these settings, achievements will no longer be earnable in this world.
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSDISABLED_NOTSIGNEDIN("options.achievementsDisabled.notSignedIn"), // Achievements can be earned in this world, but you must sign in to a Microsoft Account to earn them.
        @PowerNukkitOnly @Since("FUTURE") TURNOFFCROSSPLATFORMMULTIPLAYER("options.turnOffCrossPlatformMultiplayer"), // Turn Off Cross-Platform Multiplayer?
        @PowerNukkitOnly @Since("FUTURE") TURNOFFCROSSPLATFORMMULTIPLAYER_MESSAGE("options.turnOffCrossPlatformMultiplayer.message"), // The content that you are trying to use is not allowed in cross-platform multiplayer games.  If you continue you will not be able to play cross-platform multiplayer games.
        @PowerNukkitOnly @Since("FUTURE") CONFLICTINGPACKS("options.conflictingPacks"), // Conflicting Packs
        @PowerNukkitOnly @Since("FUTURE") CONFLICTINGPACKS_MESSAGE_ONSTACK("options.conflictingPacks.message.onStack"), // A pack already on the stack can't be applied with other packs. %s
        @PowerNukkitOnly @Since("FUTURE") CONFLICTINGPACKS_MESSAGE_OFFSTACK("options.conflictingPacks.message.offStack"), // The pack you are trying to apply can't be applied with other packs. %s
        @PowerNukkitOnly @Since("FUTURE") CONFLICTINGPACKS_MESSAGE_OFFSTACKWITHBEHAVIOR("options.conflictingPacks.message.offStackWithBehavior"), // Continuing will remove all current packs and then add the pack you are trying to apply. This will remove all behavior packs from the world which can break the world and cause you to lose what you created.
        @PowerNukkitOnly @Since("FUTURE") CONFLICTINGPACKS_CONTINUE("options.conflictingPacks.continue"), // Continuing will remove all current packs and then add the pack you are trying to apply.
        @PowerNukkitOnly @Since("FUTURE") CROSSPLATFORMMULTIPLAYERDISABLED("options.crossPlatformMultiplayerDisabled"), // Content active in this world cannot be used in cross-platform multiplayer.
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYERDISABLED("options.multiplayerDisabled"), // Content active in this world cannot be used in multiplayer.
        @PowerNukkitOnly @Since("FUTURE") SKINSCROSSPLATFORMMULTIPLAYERDISABLED("options.skinsCrossPlatformMultiplayerDisabled"), // The skin you're using cannot be used in cross-platform multiplayer.
        @PowerNukkitOnly @Since("FUTURE") SKINSMULTIPLAYERDISABLED("options.skinsMultiplayerDisabled"), // The skin you're using cannot be used in multiplayer.
        @PowerNukkitOnly @Since("FUTURE") CONTENT_NOREALMS("options.content.noRealms"), // Edit World?
        @PowerNukkitOnly @Since("FUTURE") CONTENT_NOREALMS_MESSAGE("options.content.noRealms.message"), // This world uses a resource pack or template that cannot be used in cross-platform multiplayer.
        @PowerNukkitOnly @Since("FUTURE") ACTIVATEEXPERIMENTALGAMEPLAY("options.activateExperimentalGameplay"), // Activate Experimental Gameplay?
        @PowerNukkitOnly @Since("FUTURE") ACTIVATEEXPERIMENTALGAMEPLAY_MESSAGE("options.activateExperimentalGameplay.message"), // Be careful! You're activating features that are still under development. You might experience crashes and your world might break. This world may not work with future updates. Press Continue to create a copy of your world named [EX] $worldname with experimental features turned on.
        @PowerNukkitOnly @Since("FUTURE") ACTIVATEEXPERIMENTALGAMEPLAYCREATE_MESSAGE("options.activateExperimentalGameplayCreate.message"), // Be careful! You're activating features that are still under development. You might experience crashes and your world might break. This world may not work with future updates. Press Continue to create world with experimental features turned on.
        @PowerNukkitOnly @Since("FUTURE") ACTIVATEFANCYBUBBLES("options.activateFancyBubbles"), // Activate Fancy Bubble Columns?
        @PowerNukkitOnly @Since("FUTURE") ACTIVATEFANCYBUBBLESCREATE_MESSAGE("options.activateFancyBubblesCreate.message"), // Enables Fancy Bubble Columns. Fancy Bubble Columns may lower performance on some devices.
        @PowerNukkitOnly @Since("FUTURE") ACTIVATETOOLBOXMODECREATE_MESSAGE("options.activateToolboxModeCreate.message"), // Adds powerful tools for editing worlds. Intended for experienced creators on devices with a Mouse & Keyboard.
        @PowerNukkitOnly @Since("FUTURE") ACTIVATETOOLBOXMODECREATE_MESSAGEWITHMOUSE("options.activateToolboxModeCreate.messageWithMouse"), // Adds powerful tools for editing worlds. Intended for experienced creators.
        @PowerNukkitOnly @Since("FUTURE") UNLOCKTEMPLATEWORLDOPTIONS("options.unlockTemplateWorldOptions"), // Discard the Creator's Settings?
        @PowerNukkitOnly @Since("FUTURE") UNLOCKTEMPLATEWORLDOPTIONS_MESSAGE("options.unlockTemplateWorldOptions.message"), // The experience that the creator of this template wants you to have might be broken if you unlock these settings.  You might not be able to return to that intended experience if you continue.
        @PowerNukkitOnly @Since("FUTURE") UNLOCKTEMPLATEWORLDOPTIONS_INITIATE("options.unlockTemplateWorldOptions.initiate"), // Unlock Template World Options
        @PowerNukkitOnly @Since("FUTURE") UNLOCKTEMPLATEWORLDOPTIONS_OK("options.unlockTemplateWorldOptions.ok"), // Unlock All Settings
        @PowerNukkitOnly @Since("FUTURE") UNLOCKTEMPLATEWORLDOPTIONS_CANCEL("options.unlockTemplateWorldOptions.cancel"), // Keep Creator Settings
        @PowerNukkitOnly @Since("FUTURE") UNLOCKTEMPLATEWORLDOPTIONS_WARNING("options.unlockTemplateWorldOptions.warning"), // Template World Options are locked to the values set by this template's Creator. Unlock to change them.
        @PowerNukkitOnly @Since("FUTURE") UNLOCKTEMPLATEWORLDOPTIONS_PACKWARNING("options.unlockTemplateWorldOptions.packWarning"), // Unlock Template World Options from Game Settings to change the packs for this world.
        @PowerNukkitOnly @Since("FUTURE") UNLOCKTEMPLATEWORLDOPTIONS_PERMISSIONSWARNING("options.unlockTemplateWorldOptions.permissionsWarning"), // Unlock Template World Options from Game Settings to be able to change permissions.
        @PowerNukkitOnly @Since("FUTURE") CONTINUE("options.continue"), // Continue
        @PowerNukkitOnly @Since("FUTURE") EDIT("options.edit"), // Edit
        @PowerNukkitOnly @Since("FUTURE") ENABLEEDUCATION("options.enableEducation"), // Enable Education Edition?
        @PowerNukkitOnly @Since("FUTURE") ENABLEEDUCATION_MESSAGE("options.enableEducation.message"), // Enables Education Edition chemistry features. Education gameplay may break your world. If you continue we will make a copy of your world starting with [EDU].
        @PowerNukkitOnly @Since("FUTURE") ENABLEEDUCATIONCREATE_MESSAGE("options.enableEducationCreate.message"), // Enables Education Edition chemistry features. This cannot be disabled after your world is created. Please note these features are best experienced on desktop devices with moderate to high memory.
        @PowerNukkitOnly @Since("FUTURE") GOBACK("options.goBack"), // Go Back
        @PowerNukkitOnly @Since("FUTURE") MANAGEPRIVACY("options.managePrivacy"), // To manage privacy settings, please visit https://account.xbox.com/Settings in any web browser.
        @PowerNukkitOnly @Since("FUTURE") UNLINK_MSA_BUTTON("options.unlink_msa.button"), // Unlink Microsoft Account
        @PowerNukkitOnly @Since("FUTURE") UNLINK_MSA_CONFIRM_TITLE("options.unlink_msa.confirm.title"), // Unlink Microsoft Account?
        @PowerNukkitOnly @Since("FUTURE") UNLINK_MSA_CONFIRM_WARNING("options.unlink_msa.confirm.warning"), // WARNING: You will no longer be able to store progression or purchases made on your "PlayStation 4" System on your account %s after unlinking.
        @PowerNukkitOnly @Since("FUTURE") UNLINK_MSA_CONFIRM_WARNING_2("options.unlink_msa.confirm.warning.2"), // Unlinking your Microsoft Account from within this game will affect all Minecraft games on this platform that have used this Microsoft Account.
        @PowerNukkitOnly @Since("FUTURE") UNLINK_MSA_CONFIRM_CHECKBOX1("options.unlink_msa.confirm.checkbox1"), // I will no longer be able to access any in-game Store content when I play on other platforms.
        @PowerNukkitOnly @Since("FUTURE") UNLINK_MSA_CONFIRM_CHECKBOX2("options.unlink_msa.confirm.checkbox2"), // I will no longer be able to play cross-platform games with my friends on other platforms.
        @PowerNukkitOnly @Since("FUTURE") UNLINK_MSA_CONFIRM_CHECKBOX3("options.unlink_msa.confirm.checkbox3"), // I will no longer be able to access Realms, including Realms subscriptions that are currently active.
        @PowerNukkitOnly @Since("FUTURE") UNLINK_MSA_CONFIRM_CHECKBOX4("options.unlink_msa.confirm.checkbox4"), // I understand the above, and I would like to continue with unlinking.
        @PowerNukkitOnly @Since("FUTURE") UNLINK_MSA_CONFIRM_BUTTON("options.unlink_msa.confirm.button"), // Unlink
        @PowerNukkitOnly @Since("FUTURE") UNLINK_MSA_PROGRESS_TITLE("options.unlink_msa.progress.title"), // Unlinking
        @PowerNukkitOnly @Since("FUTURE") UNLINK_MSA_PROGRESS_BODY("options.unlink_msa.progress.body"), // Unlinking your accounts...
        @PowerNukkitOnly @Since("FUTURE") UNLINK_MSA_SUCCESS_TITLE("options.unlink_msa.success.title"), // Unlink Successful
        @PowerNukkitOnly @Since("FUTURE") UNLINK_MSA_SUCCESS_BODY("options.unlink_msa.success.body"), // Your accounts have been unlinked.
        @PowerNukkitOnly @Since("FUTURE") UNLINK_MSA_FAILURE_TITLE("options.unlink_msa.failure.title"), // Something Went Wrong
        @PowerNukkitOnly @Since("FUTURE") UNLINK_MSA_FAILURE_BODY("options.unlink_msa.failure.body"), // Your accounts were not able to be unlinked. Maybe check your internet connection?
        ;
        private final String code; Options(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum PatchNotes implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") LOADING("patchNotes.loading"), // Loading Patch Notes
        @PowerNukkitOnly @Since("FUTURE") CONTINUE("patchNotes.continue"), // Continue
        @PowerNukkitOnly @Since("FUTURE") UNLOCK("patchNotes.unlock"), // Unlock
        @PowerNukkitOnly @Since("FUTURE") ERROR_NOINTERNET_TITLE("patchNotes.error.noInternet.title"), // Disconnected from the Internet
        @PowerNukkitOnly @Since("FUTURE") ERROR_NOINTERNET_MSG("patchNotes.error.noInternet.msg"), // Oops! Something went wrong.  Maybe check your internet connection?
        @PowerNukkitOnly @Since("FUTURE") ERROR_NOTFOUND_TITLE("patchNotes.error.notFound.title"), // Patch Notes %1
        @PowerNukkitOnly @Since("FUTURE") ERROR_NOTFOUND_MSG("patchNotes.error.notFound.msg"), // We fixed a few bugs in this release.  We'll send you new patch notes when we have more to report.
        ;
        private final String code; PatchNotes(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Sunsetting implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") POPUP_TITLE("sunsetting.popup.title"), // This device is no longer supported.
        @PowerNukkitOnly @Since("FUTURE") POPUP_MOREINFO("sunsetting.popup.moreInfo"), // More Info
        @PowerNukkitOnly @Since("FUTURE") POPUP_DONTSHOW("sunsetting.popup.dontshow"), // Don't show this again
        @PowerNukkitOnly @Since("FUTURE") POPUP_MOREINFO_GEARVR("sunsetting.popup.moreInfo.gearVR"), // For more information, please visit https://aka.ms/MinecraftSunsetting in any web browser.
        @PowerNukkitOnly @Since("FUTURE") POPUP_PENDINGSUNSET_IOS_ANDROID("sunsetting.popup.pendingSunset.ios_android"), // Our ability to support this device is coming to an end. You will continue to receive updates until June of 2021, whereupon you will receive your final update for this device. We deeply apologize for the inconvenience. %sAfter you receive the final update, you will still be able to play on your worlds, and access Marketplace purchases (including Minecoins). Realms managed from this device will continue to work unless they are updated by the Realm owner on a different device. You will no longer receive the latest updates and will be unable to play multiplayer with devices or Realms which are continuing to receive updates. You will also not be able to connect to certain servers. %sClick on the button for more information, including ways to move your worlds to a new device. 
        @PowerNukkitOnly @Since("FUTURE") POPUP_SUNSET_IOS_ANDROID("sunsetting.popup.sunset.ios_android"), // This device is no longer supported. You have received the final update for this device. From this point on you can keep building in your worlds, and your Marketplace purchases (including Minecoins) will continue to be available. Your Realms will continue to work unless they are updated by the Realm owner on a different device. You will no longer receive the latest updates, and will be unable to play multiplayer with devices or Realms which are continuing to receive updates. You will also not be able to connect to certain servers. %sClick on the button for more information, including ways to move your worlds to a new device. We know this is an inconvenience - we deeply appreciate the time you spent with our game, and hope to see you again on an updated device. 
        @PowerNukkitOnly @Since("FUTURE") POPUP_PENDINGSUNSET_GEARVR_WIN10("sunsetting.popup.pendingSunset.gearvr_win10"), // Our ability to support this device is coming to an end. You will continue to receive updates until our next major release, whereupon you will receive your final update for this device. We deeply apologize for the inconvenience. %sAfter you receive the final update, you will still be able to play on your worlds and access Marketplace purchases (including Minecoins). However you will no longer have access to multiplayer or Realms from this device. You will no longer receive the latest updates, and will be unable to play with devices or Realms which are continuing to receive updates. You will also not be able to connect to certain servers. %sClick on the button for more information, including ways to move your worlds to a new device. 
        @PowerNukkitOnly @Since("FUTURE") POPUP_SUNSET_GEARVR_WIN10("sunsetting.popup.sunset.gearvr_win10"), // This device is no longer supported. You have received the final update for this device. From this point on you can keep building in your worlds, and your Marketplace purchases (including Minecoins) will continue to be available.  However, you will no longer have access to multiplayer or Realms from this device. You will no longer receive the latest updates, and will be unable to play with devices which are continuing to receive updates. You will also not be able to connect to certain servers. 
        @PowerNukkitOnly @Since("FUTURE") POPUP_PENDINGSUNSET_DX10("sunsetting.popup.pendingSunset.dx10"), // Our ability to support this graphics device is coming to an end. You will continue to receive updates until our next major release, whereupon you will receive your final update for this device. We deeply apologize for the inconvenience. %sAfter you receive the final update, you will still be able to play on your worlds and access Marketplace purchases (including Minecoins). Realms managed from this device will continue to work unless they are updated by the Realm owner on a different device. You will no longer receive the latest updates, and will be unable to play multiplayer with devices or Realms which are continuing to receive updates. You will also not be able to connect to certain servers. %sClick on the button for more information, including ways to move your worlds to a new device. 
        @PowerNukkitOnly @Since("FUTURE") POPUP_SUNSET_DX10("sunsetting.popup.sunset.dx10"), // This graphics device is no longer supported. You have received the final update for this device. From this point on you can keep building in your worlds, and your Marketplace purchases (including Minecoins) will continue to be available. Your Realms will continue to work unless they are updated by the Realm owner on a different device. You will no longer receive the latest updates, and will be unable to play multiplayer with devices or Realms which are continuing to receive updates. You will also not be able to connect to certain servers. %sClick on the button for more information, including ways to move your worlds to a new device. We know this is an inconvenience, and deeply appreciate the time you spent with our game, and your support. 
        @PowerNukkitOnly @Since("FUTURE") BANNER_PLAY_WORLDTAB_PENDING("sunsetting.banner.play.worldTab.pending"), // Your version may soon not connect to multiplayer
        @PowerNukkitOnly @Since("FUTURE") BANNER_PLAY_FRIENDSTAB_PENDING("sunsetting.banner.play.friendsTab.pending"), // Your version may soon not connect to multiplayer
        @PowerNukkitOnly @Since("FUTURE") BANNER_PLAY_SERVERTAB_PENDING("sunsetting.banner.play.serverTab.pending"), // Your version may soon not connect to multiplayer
        @PowerNukkitOnly @Since("FUTURE") BANNER_PLAY_WORLDTAB("sunsetting.banner.play.worldTab"), // Your version may not connect to multiplayer
        @PowerNukkitOnly @Since("FUTURE") BANNER_PLAY_FRIENDSTAB("sunsetting.banner.play.friendsTab"), // Your version may not connect to multiplayer
        @PowerNukkitOnly @Since("FUTURE") BANNER_PLAY_SERVERTAB("sunsetting.banner.play.serverTab"), // Your version may not connect to multiplayer
        @PowerNukkitOnly @Since("FUTURE") STORE_INCOMPATIBLE("sunsetting.store.incompatible"), // Incompatible
        @PowerNukkitOnly @Since("FUTURE") STORE_INCOMPATIBLEPOPUP("sunsetting.store.incompatiblePopup"), // This content is not compatible with your device. Check https://aka.ms/MinecraftSunsetting
        ;
        private final String code; Sunsetting(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum PauseScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") BACK("pauseScreen.back"), // Back to Game
        @PowerNukkitOnly @Since("FUTURE") CURRENTWORLD("pauseScreen.currentWorld"), // Current World
        @PowerNukkitOnly @Since("FUTURE") HEADER("pauseScreen.header"), // Game Menu
        @PowerNukkitOnly @Since("FUTURE") OPTIONS("pauseScreen.options"), // Options
        @PowerNukkitOnly @Since("FUTURE") QUIT("pauseScreen.quit"), // Save & Quit
        @PowerNukkitOnly @Since("FUTURE") SECONDARYCLIENTLEAVE("pauseScreen.secondaryClientLeave"), // Save & Leave
        @PowerNukkitOnly @Since("FUTURE") FEED("pauseScreen.feed"), // Feed
        @PowerNukkitOnly @Since("FUTURE") INVITE("pauseScreen.invite"), // Invite to Game
        @PowerNukkitOnly @Since("FUTURE") IPADDRESS("pauseScreen.ipAddress"), // IP: %1
        @PowerNukkitOnly @Since("FUTURE") ERROR_NOIPADDRESS("pauseScreen.error.noIpAddress"), // No IP found
        @PowerNukkitOnly @Since("FUTURE") ERROR_NOPORT("pauseScreen.error.noPort"), // No Port found
        @PowerNukkitOnly @Since("FUTURE") TITLE("pauseScreen.title"), // Game Paused
        @PowerNukkitOnly @Since("FUTURE") BETAFEEDBACK("pauseScreen.betaFeedback"), // Beta Feedback
        @PowerNukkitOnly @Since("FUTURE") XBOXLIVEDISCONNECT("pauseScreen.xboxLiveDisconnect"), // Oops! Your Microsoft Account was disconnected. To invite more players, sign in on the Main Menu and restart your world.
        @PowerNukkitOnly @Since("FUTURE") JOINCODE_LABEL("pauseScreen.joinCode.Label"), // JOIN CODE
        @PowerNukkitOnly @Since("FUTURE") JOINCODE_ICON("pauseScreen.joinCode.Icon"), // %3 join code icon, %1 of %2	# Example: Apple join code icon, 2 of 5
        ;
        private final String code; PauseScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum PermissionsScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") KICK("permissionsScreen.kick"), // Kick Player
        @PowerNukkitOnly @Since("FUTURE") BAN("permissionsScreen.ban"), // Ban Player
        ;
        private final String code; PermissionsScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum FeedbackScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") BUTTON("feedbackScreen.button"), // Feedback
        @PowerNukkitOnly @Since("FUTURE") TITLE("feedbackScreen.title"), // Have Feedback?
        @PowerNukkitOnly @Since("FUTURE") SUGGESTION("feedbackScreen.suggestion"), // Make a suggestion!
        @PowerNukkitOnly @Since("FUTURE") BUG("feedbackScreen.bug"), // Report a bug!
        @PowerNukkitOnly @Since("FUTURE") HELP("feedbackScreen.help"), // Need help?
        @PowerNukkitOnly @Since("FUTURE") BODY("feedbackScreen.body"), // Have an idea to improve Minecraft? Find a bug that you want fixed? Or encounter an issue you need help with?  Let us know!
        @PowerNukkitOnly @Since("FUTURE") CONSOLEMESSAGE("feedbackScreen.consoleMessage"), // Visit this website on another device. %s
        @PowerNukkitOnly @Since("FUTURE") SUGGESTION_URL_TTS("feedbackScreen.suggestion.url.tts"), // h t t p s colon slash slash a k a dot m s slash minecraft f b			## Text To Speech helper for a URL: https://aka.ms/minecraftfb - URL must remain the same for all LOCs!
        @PowerNukkitOnly @Since("FUTURE") BUGS_URL_TTS("feedbackScreen.bugs.url.tts"), // h t t p s colon slash slash a k a dot m s slash m c bugs					## Text To Speech helper for a URL: https://aka.ms/mcbugs - URL must remain the same for all LOCs!
        @PowerNukkitOnly @Since("FUTURE") HELP_URL_TTS("feedbackScreen.help.url.tts"), // h t t p s colon slash slash a k a dot m s slash help M C					## Text To Speech helper for a URL: https://aka.ms/helpMC - URL must remain the same for all LOCs!
        @PowerNukkitOnly @Since("FUTURE") HELPXBOX_URL_TTS("feedbackScreen.helpxbox.url.tts"), // h t t p s colon slash slash a k a dot m s slash help xbox				## Text To Speech helper for a URL: https://aka.ms/helpxbox - URL must remain the same for all LOCs!
        ;
        private final String code; FeedbackScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum HudScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_BASIC_BACK("hudScreen.tooltip.basic.back"), // Back
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_BASIC_FLYDOWN("hudScreen.tooltip.basic.flyDown"), // Fly Down
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_BASIC_FLYUP("hudScreen.tooltip.basic.flyUp"), // Fly Up
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_BASIC_FORWARD("hudScreen.tooltip.basic.forward"), // Forward
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_BASIC_JUMP("hudScreen.tooltip.basic.jump"), // Jump
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_BASIC_LEFT("hudScreen.tooltip.basic.left"), // Left
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_BASIC_RIGHT("hudScreen.tooltip.basic.right"), // Right
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_BASIC_SNEAK("hudScreen.tooltip.basic.sneak"), // Sneak
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_BASIC_STARTFLYING("hudScreen.tooltip.basic.startFlying"), // Start Flying
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_BASIC_STOPFLYING("hudScreen.tooltip.basic.stopFlying"), // Stop Flying
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_BASIC_SWIMDOWN("hudScreen.tooltip.basic.swimDown"), // Swim Down
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_BASIC_SWIMUP("hudScreen.tooltip.basic.swimUp"), // Swim Up
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_CRAFTING("hudScreen.tooltip.crafting"), // Crafting
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_INVENTORY("hudScreen.tooltip.inventory"), // Inventory
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_DROPITEM("hudScreen.tooltip.dropItem"), // Drop
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_EJECT("hudScreen.tooltip.eject"), // Eject
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_POTION("hudScreen.tooltip.potion"), // Drink
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_MILK("hudScreen.tooltip.milk"), // Drink
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_DRAW("hudScreen.tooltip.draw"), // Draw
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_RELEASE("hudScreen.tooltip.release"), // Release
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_THROW("hudScreen.tooltip.throw"), // Throw
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_OPEN("hudScreen.tooltip.open"), // Open
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_USE("hudScreen.tooltip.use"), // Use
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_SLEEP("hudScreen.tooltip.sleep"), // Sleep
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_EMPTY("hudScreen.tooltip.empty"), // Empty
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_HANG("hudScreen.tooltip.hang"), // Hang
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_IGNITE("hudScreen.tooltip.ignite"), // Ignite
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_PLACE("hudScreen.tooltip.place"), // Place
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_MINE("hudScreen.tooltip.mine"), // Mine
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_ATTACH("hudScreen.tooltip.attach"), // Attach
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_TILL("hudScreen.tooltip.till"), // Till
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_DIG("hudScreen.tooltip.dig"), // Dig Path
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_HIT("hudScreen.tooltip.hit"), // Hit
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_EAT("hudScreen.tooltip.eat"), // Eat
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_ROTATE("hudScreen.tooltip.rotate"), // Rotate
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_PLANT("hudScreen.tooltip.plant"), // Plant
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_DISMOUNT("hudScreen.tooltip.dismount"), // Dismount
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_COLLECT("hudScreen.tooltip.collect"), // Collect
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_PEEL("hudScreen.tooltip.peel"), // Peel Bark
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_SCAFFOLDINGDESCEND("hudScreen.tooltip.scaffoldingDescend"), // Hold to Descend
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_PICK("hudScreen.tooltip.pick"), // Pick
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_PLACEBOOK("hudScreen.tooltip.placeBook"), // Place Book
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_READBOOK("hudScreen.tooltip.readBook"), // Read Book
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_REMOVEBOOK("hudScreen.tooltip.removeBook"), // Remove Book
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_SHEAR("hudScreen.tooltip.shear"), // Shear
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_CARVE("hudScreen.tooltip.carve"), // Carve
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_GROW("hudScreen.tooltip.grow"), // Grow
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_BOATEXIT("hudScreen.tooltip.boatExit"), // Leave Boat
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_WAXON("hudScreen.tooltip.waxOn"), // Wax On
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_WAXOFF("hudScreen.tooltip.waxOff"), // Wax Off
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_SCRAPE("hudScreen.tooltip.scrape"), // Scrape
        ;
        private final String code; HudScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Playscreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") FILESIZE_MB("playscreen.fileSize.MB"), // MB
        @PowerNukkitOnly @Since("FUTURE") FILESIZE_GB("playscreen.fileSize.GB"), // GB
        @PowerNukkitOnly @Since("FUTURE") JOINABLEREALMS("playscreen.joinableRealms"), // Joinable Realms
        @PowerNukkitOnly @Since("FUTURE") NOFRIENDSREALMS("playscreen.noFriendsRealms"), // You have not become a member of any Realms yet.
        @PowerNukkitOnly @Since("FUTURE") HEADER_LOCAL("playscreen.header.local"), // Play
        @PowerNukkitOnly @Since("FUTURE") HEADER_REALMS("playscreen.header.realms"), // Realms
        @PowerNukkitOnly @Since("FUTURE") LASTPLAYED_DAYSAGO("playscreen.lastPlayed.daysAgo"), // %1 days ago
        @PowerNukkitOnly @Since("FUTURE") LASTPLAYED_LONGAGO("playscreen.lastPlayed.longAgo"), // Long ago
        @PowerNukkitOnly @Since("FUTURE") LASTPLAYED_TODAY("playscreen.lastPlayed.today"), // Today
        @PowerNukkitOnly @Since("FUTURE") LASTPLAYED_WEEKSAGO("playscreen.lastPlayed.weeksAgo"), // %1 weeks ago
        @PowerNukkitOnly @Since("FUTURE") LASTPLAYED_YESTERDAY("playscreen.lastPlayed.yesterday"), // Yesterday
        @PowerNukkitOnly @Since("FUTURE") NEW("playscreen.new"), // New
        @PowerNukkitOnly @Since("FUTURE") REMOTEWORLD("playscreen.remoteWorld"), // Remote world at:
        @PowerNukkitOnly @Since("FUTURE") REALMSTRIALWORLD("playscreen.realmsTrialWorld"), // Try Realms Plus free for 30 days
        @PowerNukkitOnly @Since("FUTURE") REALMSCREATEFIRSTWORLD("playscreen.realmsCreateFirstWorld"), // Create your first realm
        @PowerNukkitOnly @Since("FUTURE") CHECKINGREALMSCOMPATIBILITY("playscreen.checkingRealmsCompatibility"), // Checking Realms compatibility...
        @PowerNukkitOnly @Since("FUTURE") FETCHINGREALMS("playscreen.fetchingRealms"), // Fetching Realms...
        @PowerNukkitOnly @Since("FUTURE") CONFIRMLEAVEMESSAGE("playscreen.confirmLeaveMessage"), // Are you sure you want to leave Realm %1$s?
        @PowerNukkitOnly @Since("FUTURE") CONFIRMLEAVETITLE("playscreen.confirmLeaveTitle"), // Confirm Leave
        @PowerNukkitOnly @Since("FUTURE") REALMEXPIRED("playscreen.realmExpired"), // Expired
        @PowerNukkitOnly @Since("FUTURE") REALMFULL("playscreen.realmFull"), // Full
        @PowerNukkitOnly @Since("FUTURE") REALMCLIENTOUTDATED("playscreen.realmClientOutdated"), // All Realms have been updated. You need to update your game to continue playing Realms.
        @PowerNukkitOnly @Since("FUTURE") REALMS("playscreen.realms"), // Realms
        @PowerNukkitOnly @Since("FUTURE") REALMSWARNING_MOREINFO("playscreen.realmsWarning.moreinfo"), // More info
        @PowerNukkitOnly @Since("FUTURE") REALMSCOMPATIBILITYFAILURE("playscreen.realmsCompatibilityFailure"), // We could not connect to Realms right now. We will try again soon.
        @PowerNukkitOnly @Since("FUTURE") WORLDS("playscreen.worlds"), // Worlds
        @PowerNukkitOnly @Since("FUTURE") DONTSEELEGACYWORLDS("playscreen.dontSeeLegacyWorlds"), // Don't see your worlds?
        @PowerNukkitOnly @Since("FUTURE") SYNCLEGACYWORLDS("playscreen.syncLegacyWorlds"), // Sync Old Worlds
        @PowerNukkitOnly @Since("FUTURE") FETCHINGLEGACYWORLDS("playscreen.fetchingLegacyWorlds"), // Fetching Old Worlds...
        @PowerNukkitOnly @Since("FUTURE") UPGRADELEGACYWORLDS("playscreen.upgradeLegacyWorlds"), // Old Worlds
        @PowerNukkitOnly @Since("FUTURE") NOLEGACYWORLDSFOUND_TITLE("playscreen.noLegacyWorldsFound.title"), // No Worlds Found
        @PowerNukkitOnly @Since("FUTURE") NOLEGACYWORLDSFOUND_BODY("playscreen.noLegacyWorldsFound.body"), // No worlds from other versions of Minecraft detected.
        @PowerNukkitOnly @Since("FUTURE") FAILEDTOAUTOSYNCLEGACYWORLDS("playscreen.failedToAutoSyncLegacyWorlds"), // Unable to fetch Old Worlds. Clear up additional storage space in order to manage Old Worlds.
        @PowerNukkitOnly @Since("FUTURE") LOCKEDSKIN("playscreen.lockedSkin"), // The skin that you have equipped is from a content pack that is not allowed in cross-platform multiplayer. Continuing will disable cross-platform multiplayer for this world.
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYERLOCKEDSKIN("playscreen.multiplayerLockedSkin"), // The skin that you have equipped is from a content pack that is not allowed in multiplayer. Continuing will disable multiplayer for this world.
        @PowerNukkitOnly @Since("FUTURE") WORLDSSTORAGE("playscreen.worldsStorage"), // Storage
        @PowerNukkitOnly @Since("FUTURE") DELETE_LEGACY_CONTENT("playscreen.delete.legacy.content"), // Are you sure you want to delete the selected old world? This world will be lost forever! (A long time!)
        @PowerNukkitOnly @Since("FUTURE") DELETE_LEGACY_TITLE("playscreen.delete.legacy.title"), // Delete %s permanently?
        @PowerNukkitOnly @Since("FUTURE") DELETE_LEGACY_CONFIRM("playscreen.delete.legacy.confirm"), // Delete
        @PowerNukkitOnly @Since("FUTURE") DELETE_LEGACY_DELETING("playscreen.delete.legacy.deleting"), // Deleting world...
        @PowerNukkitOnly @Since("FUTURE") BETA_WORLDS("playscreen.beta_worlds"), // Beta Worlds
        @PowerNukkitOnly @Since("FUTURE") BETA_LEGACY_WORLDS("playscreen.beta_legacy_worlds"), // Old Beta Worlds
        ;
        private final String code; Playscreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Permissions implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ABILITY_BUILD("permissions.ability.build"), // Build
        @PowerNukkitOnly @Since("FUTURE") ABILITY_MINE("permissions.ability.mine"), // Mine
        @PowerNukkitOnly @Since("FUTURE") ABILITY_DOORSANDSWITCHES("permissions.ability.doorsandswitches"), // Use doors and switches
        @PowerNukkitOnly @Since("FUTURE") ABILITY_OPENCONTAINERS("permissions.ability.opencontainers"), // Open containers
        @PowerNukkitOnly @Since("FUTURE") ABILITY_ATTACKPLAYERS("permissions.ability.attackplayers"), // Attack players
        @PowerNukkitOnly @Since("FUTURE") ABILITY_ATTACKMOBS("permissions.ability.attackmobs"), // Attack mobs
        @PowerNukkitOnly @Since("FUTURE") ABILITY_OP("permissions.ability.op"), // Operator Commands
        @PowerNukkitOnly @Since("FUTURE") ABILITY_INVISIBLE("permissions.ability.invisible"), // Become invisible
        @PowerNukkitOnly @Since("FUTURE") ABILITY_TELEPORT("permissions.ability.teleport"), // Use Teleport
        @PowerNukkitOnly @Since("FUTURE") NEEDPERMISSION("permissions.NeedPermission"), // You Need Permission
        @PowerNukkitOnly @Since("FUTURE") ADDFRIENDS("permissions.AddFriends"), // You cannot add friends because of how your Microsoft Account is set up. Please ensure your online safety settings allow adding friends. See instructions for changing these settings at aka.ms/MCMultiplayerHelp.
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYERSESSIONS("permissions.MultiplayerSessions"), // You cannot play on Realms because of how your Microsoft Account is set up. Please ensure your online safety settings allow Multiplayer and Clubs. See instructions for changing these settings at aka.ms/MCMultiplayerHelp.
        @PowerNukkitOnly @Since("FUTURE") COMMUNICATIONS("permissions.Communications"), // You cannot chat with other players because of how your Microsoft Account is set up. Please ensure your privacy settings allow communicating with others. See instructions for changing these settings at aka.ms/MCMultiplayerHelp.
        @PowerNukkitOnly @Since("FUTURE") REALMSADDFRIENDS("permissions.RealmsAddFriends"), // You will not be able to add new friends to play on your realm with you because of how your Xbox Live account is set up.  This can be changed in your privacy & online safety settings on Xbox.com.  Do you want to continue?
        @PowerNukkitOnly @Since("FUTURE") CLOUDSAVE("permissions.CloudSave"), // You cannot save your worlds to Xbox Live because of how your account is set up.  This can be changed in your privacy & online safety settings on Xbox.com.
        @PowerNukkitOnly @Since("FUTURE") MULTIPLAYERSESSIONSONCONSOLE("permissions.MultiplayerSessionsOnConsole"), // You cannot play on Realms because of how your Microsoft Account is set up. Please ensure your online safety settings allow Multiplayer and Clubs and you have an active Xbox Live Gold subscription. See instructions for changing these settings at aka.ms/MCMultiplayerHelp.
        @PowerNukkitOnly @Since("FUTURE") OPEN_ACCOUNT_HELP_BUTTON("permissions.open.account.help.button"), // Get Help Fixing This
        @PowerNukkitOnly @Since("FUTURE") OPEN_ACCOUNT_SETTING_BUTTON("permissions.open.account.setting.button"), // See terms of service
        @PowerNukkitOnly @Since("FUTURE") GOBACK("permissions.GoBack"), // Go Back
        @PowerNukkitOnly @Since("FUTURE") CONTINUE("permissions.Continue"), // Continue
        @PowerNukkitOnly @Since("FUTURE") CHATMUTE("permissions.chatmute"), // Chat is currently disabled
        @PowerNukkitOnly @Since("FUTURE") DEOPINGOTHER_MESSAGE("permissions.deopingother.message"), // They will no longer have Operator level permissions by lowering their permission level.
        @PowerNukkitOnly @Since("FUTURE") DESCRIPTION_VISITORS("permissions.description.visitors"), // Visitors can freely explore your world, but cannot interact with blocks, items, or entities. Trust Players Off.
        @PowerNukkitOnly @Since("FUTURE") DESCRIPTION_MEMBERS("permissions.description.members"), // Members are active players in your world who can break and create blocks, and attack mobs and other players.
        @PowerNukkitOnly @Since("FUTURE") DESCRIPTION_OPERATORS("permissions.description.operators"), // Operators are members who can set player permissions and use commands to have more control over your world.
        @PowerNukkitOnly @Since("FUTURE") LEVEL("permissions.level"), // Permission Level
        @PowerNukkitOnly @Since("FUTURE") LEVEL_CUSTOM("permissions.level.custom"), // Custom...
        @PowerNukkitOnly @Since("FUTURE") LEVEL_MEMBER("permissions.level.member"), // Member
        @PowerNukkitOnly @Since("FUTURE") LEVEL_OPERATOR("permissions.level.operator"), // Operator
        @PowerNukkitOnly @Since("FUTURE") LEVEL_VISITOR("permissions.level.visitor"), // Visitor
        @PowerNukkitOnly @Since("FUTURE") NOCHEATS("permissions.nocheats"), // Cheats Are Off
        @PowerNukkitOnly @Since("FUTURE") NOCHEATS_MESSAGE("permissions.nocheats.message"), // Certain commands like teleport are only available with cheats ON.  Cheats can also be turned on through the pause menu under Game Settings.  If you choose to turn cheats on, achievements will be disabled in this world.
        @PowerNukkitOnly @Since("FUTURE") NOCHEATS_MESSAGE_NOACHIEVEMENTS("permissions.nocheats.message.noachievements"), // Certain commands like teleport are only available with cheats ON.  Cheats can also be turned on through the pause menu under Game Settings.
        @PowerNukkitOnly @Since("FUTURE") NOCHEATS_TURNON("permissions.nocheats.turnon"), // Set OP with cheats ON
        @PowerNukkitOnly @Since("FUTURE") NOCHEATS_TURNOFF("permissions.nocheats.turnoff"), // Set OP with cheats OFF
        @PowerNukkitOnly @Since("FUTURE") NOCHEATS_CANCEL("permissions.nocheats.cancel"), // Cancel
        @PowerNukkitOnly @Since("FUTURE") DEOPINGSELF("permissions.deopingself"), // Remove Operator Permissions?
        @PowerNukkitOnly @Since("FUTURE") DEOPINGSELF_MESSAGE("permissions.deopingself.message"), // You will no longer have Operator level permissions by lowering your permission level.
        @PowerNukkitOnly @Since("FUTURE") TITLE("permissions.title"), // Player Permissions
        @PowerNukkitOnly @Since("FUTURE") TITLE_SETTINGS("permissions.title.settings"), // Player permission when joining from invite
        @PowerNukkitOnly @Since("FUTURE") TITLE_SETTINGS_EDU("permissions.title.settings.edu"), // Permission level for students who join your world
        @PowerNukkitOnly @Since("FUTURE") TOAST_PLAYERLEFT("permissions.toast.playerLeft"), // A player left the game.
        @PowerNukkitOnly @Since("FUTURE") TOAST_PLAYERJOINED("permissions.toast.playerJoined"), // A player joined the game.
        @PowerNukkitOnly @Since("FUTURE") KICKPLAYER("permissions.kickplayer"), // Kick Player
        @PowerNukkitOnly @Since("FUTURE") KICKPLAYER_REASON("permissions.kickplayer.reason"), // You have been kicked from the session by the host.
        @PowerNukkitOnly @Since("FUTURE") KICKPLAYER_MESSAGE("permissions.kickplayer.message"), // Are you sure you want to kick %s from the world? They will not be able to rejoin this session.
        @PowerNukkitOnly @Since("FUTURE") KICKPLAYER_MESSAGE_DEDICATEDSERVER("permissions.kickplayer.message.dedicatedserver"), // Are you sure you want to kick %s from the world?
        @PowerNukkitOnly @Since("FUTURE") KICKPLAYER_TITLE("permissions.kickplayer.title"), // Kick Player?
        @PowerNukkitOnly @Since("FUTURE") BANPLAYER("permissions.banplayer"), // Ban Player
        @PowerNukkitOnly @Since("FUTURE") BANPLAYER_REASON("permissions.banplayer.reason"), // You have been banned from the session by the host.
        @PowerNukkitOnly @Since("FUTURE") BANPLAYER_MESSAGE("permissions.banplayer.message"), // Are you sure you want to ban %s from the world? They will not be able to rejoin.
        @PowerNukkitOnly @Since("FUTURE") BANPLAYER_TITLE("permissions.banplayer.title"), // Ban Player?
        @PowerNukkitOnly @Since("FUTURE") BUTTON_KICKPLAYER("permissions.button.kickplayer"), // Remove player from game
        @PowerNukkitOnly @Since("FUTURE") POPUP_TITLE("permissions.popup.title"), // Permission Options
        @PowerNukkitOnly @Since("FUTURE") DROPDOWN_TITLE("permissions.dropdown.title"), // Permissions Level for %s
        @PowerNukkitOnly @Since("FUTURE") OPERATOR("permissions.operator"), // Operator
        @PowerNukkitOnly @Since("FUTURE") MEMBER("permissions.member"), // Member
        @PowerNukkitOnly @Since("FUTURE") VISITOR("permissions.visitor"), // Visitor
        @PowerNukkitOnly @Since("FUTURE") REMOVEPLAYER("permissions.removeplayer"), // Remove Player
        @PowerNukkitOnly @Since("FUTURE") REMOVEPLAYER_REASON("permissions.removeplayer.reason"), // You have been removed from the session by the host.
        @PowerNukkitOnly @Since("FUTURE") REMOVEPLAYER_MESSAGE("permissions.removeplayer.message"), // Are you sure you want to remove this player from the world? When you remove this player a new join code will be generated so that they will not be able to rejoin.
        @PowerNukkitOnly @Since("FUTURE") REMOVEPLAYER_TITLE("permissions.removeplayer.title"), // Remove Player Confirmation
        ;
        private final String code; Permissions(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum PortfolioScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") PAGE("portfolioScreen.page"), // Page %s
        @PowerNukkitOnly @Since("FUTURE") EXPORT("portfolioScreen.export"), // Export Portfolio
        @PowerNukkitOnly @Since("FUTURE") CAPTION("portfolioScreen.caption"), // [ caption ]
        @PowerNukkitOnly @Since("FUTURE") NOPICS0("portfolioScreen.nopics0"), // Currently there are no photos to display.
        @PowerNukkitOnly @Since("FUTURE") NOPICS1("portfolioScreen.nopics1"), // Photos you take with the camera will show up here.
        ;
        private final String code; PortfolioScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Potion implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ABSORPTION("potion.absorption"), // Absorption
        @PowerNukkitOnly @Since("FUTURE") ABSORPTION_POSTFIX("potion.absorption.postfix"), // Potion of Absorption
        @PowerNukkitOnly @Since("FUTURE") BLINDNESS("potion.blindness"), // Blindness
        @PowerNukkitOnly @Since("FUTURE") BLINDNESS_POSTFIX("potion.blindness.postfix"), // Potion of Blindness
        @PowerNukkitOnly @Since("FUTURE") CONDUITPOWER("potion.conduitPower"), // Conduit Power
        @PowerNukkitOnly @Since("FUTURE") CONFUSION("potion.confusion"), // Nausea
        @PowerNukkitOnly @Since("FUTURE") CONFUSION_POSTFIX("potion.confusion.postfix"), // Potion of Nausea
        @PowerNukkitOnly @Since("FUTURE") DAMAGEBOOST("potion.damageBoost"), // Strength
        @PowerNukkitOnly @Since("FUTURE") DAMAGEBOOST_POSTFIX("potion.damageBoost.postfix"), // Potion of Strength
        @PowerNukkitOnly @Since("FUTURE") DIGSLOWDOWN("potion.digSlowDown"), // Mining Fatigue
        @PowerNukkitOnly @Since("FUTURE") DIGSLOWDOWN_POSTFIX("potion.digSlowDown.postfix"), // Potion of Dullness
        @PowerNukkitOnly @Since("FUTURE") DIGSPEED("potion.digSpeed"), // Haste
        @PowerNukkitOnly @Since("FUTURE") DIGSPEED_POSTFIX("potion.digSpeed.postfix"), // Potion of Haste
        @PowerNukkitOnly @Since("FUTURE") EFFECTS_WHENDRANK("potion.effects.whenDrank"), // When Applied:
        @PowerNukkitOnly @Since("FUTURE") EMPTY("potion.empty"), // No Effects
        @PowerNukkitOnly @Since("FUTURE") FIRERESISTANCE("potion.fireResistance"), // Fire Resistance
        @PowerNukkitOnly @Since("FUTURE") FIRERESISTANCE_POSTFIX("potion.fireResistance.postfix"), // Potion of Fire Resistance
        @PowerNukkitOnly @Since("FUTURE") HARM("potion.harm"), // Instant Damage
        @PowerNukkitOnly @Since("FUTURE") HARM_POSTFIX("potion.harm.postfix"), // Potion of Harming
        @PowerNukkitOnly @Since("FUTURE") HEAL("potion.heal"), // Instant Health
        @PowerNukkitOnly @Since("FUTURE") HEAL_POSTFIX("potion.heal.postfix"), // Potion of Healing
        @PowerNukkitOnly @Since("FUTURE") HEALTHBOOST("potion.healthBoost"), // Health Boost
        @PowerNukkitOnly @Since("FUTURE") HEALTHBOOST_POSTFIX("potion.healthBoost.postfix"), // Potion of Health Boost
        @PowerNukkitOnly @Since("FUTURE") HUNGER("potion.hunger"), // Hunger
        @PowerNukkitOnly @Since("FUTURE") HUNGER_POSTFIX("potion.hunger.postfix"), // Potion of Hunger
        @PowerNukkitOnly @Since("FUTURE") INVISIBILITY("potion.invisibility"), // Invisibility
        @PowerNukkitOnly @Since("FUTURE") INVISIBILITY_POSTFIX("potion.invisibility.postfix"), // Potion of Invisibility
        @PowerNukkitOnly @Since("FUTURE") JUMP("potion.jump"), // Jump Boost
        @PowerNukkitOnly @Since("FUTURE") JUMP_POSTFIX("potion.jump.postfix"), // Potion of Leaping
        @PowerNukkitOnly @Since("FUTURE") LEVITATION("potion.levitation"), // Levitation
        @PowerNukkitOnly @Since("FUTURE") LEVITATION_POSTFIX("potion.levitation.postfix"), // Potion of Levitation
        @PowerNukkitOnly @Since("FUTURE") MOVESLOWDOWN("potion.moveSlowdown"), // Slowness
        @PowerNukkitOnly @Since("FUTURE") MOVESLOWDOWN_POSTFIX("potion.moveSlowdown.postfix"), // Potion of Slowness
        @PowerNukkitOnly @Since("FUTURE") SLOWFALLING("potion.slowFalling"), // Slow Falling
        @PowerNukkitOnly @Since("FUTURE") SLOWFALLING_POSTFIX("potion.slowFalling.postfix"), // Potion of Slow Falling
        @PowerNukkitOnly @Since("FUTURE") MOVESPEED("potion.moveSpeed"), // Speed
        @PowerNukkitOnly @Since("FUTURE") MOVESPEED_POSTFIX("potion.moveSpeed.postfix"), // Potion of Swiftness
        @PowerNukkitOnly @Since("FUTURE") NIGHTVISION("potion.nightVision"), // Night Vision
        @PowerNukkitOnly @Since("FUTURE") NIGHTVISION_POSTFIX("potion.nightVision.postfix"), // Potion of Night Vision
        @PowerNukkitOnly @Since("FUTURE") POISON("potion.poison"), // Poison
        @PowerNukkitOnly @Since("FUTURE") POISON_POSTFIX("potion.poison.postfix"), // Potion of Poison
        @PowerNukkitOnly @Since("FUTURE") POTENCY_1("potion.potency.1"), // II
        @PowerNukkitOnly @Since("FUTURE") POTENCY_2("potion.potency.2"), // III
        @PowerNukkitOnly @Since("FUTURE") POTENCY_3("potion.potency.3"), // IV
        @PowerNukkitOnly @Since("FUTURE") POTENCY_4("potion.potency.4"), // V
        @PowerNukkitOnly @Since("FUTURE") POTENCY_5("potion.potency.5"), // VI
        @PowerNukkitOnly @Since("FUTURE") PREFIX_ACRID("potion.prefix.acrid"), // Acrid
        @PowerNukkitOnly @Since("FUTURE") PREFIX_ARTLESS("potion.prefix.artless"), // Artless
        @PowerNukkitOnly @Since("FUTURE") PREFIX_AWKWARD("potion.prefix.awkward"), // Awkward
        @PowerNukkitOnly @Since("FUTURE") PREFIX_BLAND("potion.prefix.bland"), // Bland
        @PowerNukkitOnly @Since("FUTURE") PREFIX_BULKY("potion.prefix.bulky"), // Bulky
        @PowerNukkitOnly @Since("FUTURE") PREFIX_BUNGLING("potion.prefix.bungling"), // Bungling
        @PowerNukkitOnly @Since("FUTURE") PREFIX_BUTTERED("potion.prefix.buttered"), // Buttered
        @PowerNukkitOnly @Since("FUTURE") PREFIX_CHARMING("potion.prefix.charming"), // Charming
        @PowerNukkitOnly @Since("FUTURE") PREFIX_CLEAR("potion.prefix.clear"), // Clear
        @PowerNukkitOnly @Since("FUTURE") PREFIX_CORDIAL("potion.prefix.cordial"), // Cordial
        @PowerNukkitOnly @Since("FUTURE") PREFIX_DASHING("potion.prefix.dashing"), // Dashing
        @PowerNukkitOnly @Since("FUTURE") PREFIX_DEBONAIR("potion.prefix.debonair"), // Debonair
        @PowerNukkitOnly @Since("FUTURE") PREFIX_DIFFUSE("potion.prefix.diffuse"), // Diffuse
        @PowerNukkitOnly @Since("FUTURE") PREFIX_ELEGANT("potion.prefix.elegant"), // Elegant
        @PowerNukkitOnly @Since("FUTURE") PREFIX_FANCY("potion.prefix.fancy"), // Fancy
        @PowerNukkitOnly @Since("FUTURE") PREFIX_FLAT("potion.prefix.flat"), // Flat
        @PowerNukkitOnly @Since("FUTURE") PREFIX_FOUL("potion.prefix.foul"), // Foul
        @PowerNukkitOnly @Since("FUTURE") PREFIX_GRENADE("potion.prefix.grenade"), // Splash
        @PowerNukkitOnly @Since("FUTURE") PREFIX_GROSS("potion.prefix.gross"), // Gross
        @PowerNukkitOnly @Since("FUTURE") PREFIX_HARSH("potion.prefix.harsh"), // Harsh
        @PowerNukkitOnly @Since("FUTURE") PREFIX_LINGER("potion.prefix.linger"), // Lingering
        @PowerNukkitOnly @Since("FUTURE") PREFIX_MILKY("potion.prefix.milky"), // Milky
        @PowerNukkitOnly @Since("FUTURE") PREFIX_MUNDANE("potion.prefix.mundane"), // Mundane
        @PowerNukkitOnly @Since("FUTURE") PREFIX_MUNDANE_EXTENDED("potion.prefix.mundane.extended"), // Long Mundane
        @PowerNukkitOnly @Since("FUTURE") PREFIX_ODORLESS("potion.prefix.odorless"), // Odorless
        @PowerNukkitOnly @Since("FUTURE") PREFIX_POTENT("potion.prefix.potent"), // Potent
        @PowerNukkitOnly @Since("FUTURE") PREFIX_RANK("potion.prefix.rank"), // Rank
        @PowerNukkitOnly @Since("FUTURE") PREFIX_REFINED("potion.prefix.refined"), // Refined
        @PowerNukkitOnly @Since("FUTURE") PREFIX_SMOOTH("potion.prefix.smooth"), // Smooth
        @PowerNukkitOnly @Since("FUTURE") PREFIX_SPARKLING("potion.prefix.sparkling"), // Sparkling
        @PowerNukkitOnly @Since("FUTURE") PREFIX_STINKY("potion.prefix.stinky"), // Stinky
        @PowerNukkitOnly @Since("FUTURE") PREFIX_SUAVE("potion.prefix.suave"), // Suave
        @PowerNukkitOnly @Since("FUTURE") PREFIX_THICK("potion.prefix.thick"), // Thick
        @PowerNukkitOnly @Since("FUTURE") PREFIX_THIN("potion.prefix.thin"), // Thin
        @PowerNukkitOnly @Since("FUTURE") PREFIX_UNINTERESTING("potion.prefix.uninteresting"), // Uninteresting
        @PowerNukkitOnly @Since("FUTURE") REGENERATION("potion.regeneration"), // Regeneration
        @PowerNukkitOnly @Since("FUTURE") REGENERATION_POSTFIX("potion.regeneration.postfix"), // Potion of Regeneration
        @PowerNukkitOnly @Since("FUTURE") RESISTANCE("potion.resistance"), // Resistance
        @PowerNukkitOnly @Since("FUTURE") RESISTANCE_POSTFIX("potion.resistance.postfix"), // Potion of Resistance
        @PowerNukkitOnly @Since("FUTURE") SATURATION("potion.saturation"), // Saturation
        @PowerNukkitOnly @Since("FUTURE") SATURATION_POSTFIX("potion.saturation.postfix"), // Potion of Saturation
        @PowerNukkitOnly @Since("FUTURE") TURTLEMASTER("potion.turtleMaster"), // Slowness
        @PowerNukkitOnly @Since("FUTURE") TURTLEMASTER2("potion.turtleMaster2"), // Resistance
        @PowerNukkitOnly @Since("FUTURE") TURTLEMASTER_POSTFIX("potion.turtleMaster.postfix"), // Potion of the Turtle Master
        @PowerNukkitOnly @Since("FUTURE") WATERBREATHING("potion.waterBreathing"), // Water Breathing
        @PowerNukkitOnly @Since("FUTURE") WATERBREATHING_POSTFIX("potion.waterBreathing.postfix"), // Potion of Water Breathing
        @PowerNukkitOnly @Since("FUTURE") WEAKNESS("potion.weakness"), // Weakness
        @PowerNukkitOnly @Since("FUTURE") WEAKNESS_POSTFIX("potion.weakness.postfix"), // Potion of Weakness
        @PowerNukkitOnly @Since("FUTURE") WITHER("potion.wither"), // Wither
        @PowerNukkitOnly @Since("FUTURE") WITHER_POSTFIX("potion.wither.postfix"), // Potion of Decay
        ;
        private final String code; Potion(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum ProfileScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") HEADER("profileScreen.header"), // Profile
        @PowerNukkitOnly @Since("FUTURE") RELOAD("profileScreen.reload"), // Reload
        @PowerNukkitOnly @Since("FUTURE") MANAGE_BUTTON_TEXT("profileScreen.manage_button_text"), // Edit Character
        @PowerNukkitOnly @Since("FUTURE") MANAGE_BUTTON_CREATE_TEXT("profileScreen.manage_button_create_text"), // Create Character
        @PowerNukkitOnly @Since("FUTURE") DELETE_BUTTON("profileScreen.delete_button"), // Delete Character
        @PowerNukkitOnly @Since("FUTURE") SETTINGS_BUTTON("profileScreen.settings_button"), // Game Settings
        ;
        private final String code; ProfileScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum ProgressScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") CANTCONNECT("progressScreen.cantConnect"), // Unable to connect to the world.  Please check your connection to the internet and try again.
        @PowerNukkitOnly @Since("FUTURE") GENERATING("progressScreen.generating"), // Generating world
        @PowerNukkitOnly @Since("FUTURE") SAVING("progressScreen.saving"), // Saving world
        @PowerNukkitOnly @Since("FUTURE") LOADING("progressScreen.loading"), // Loading...
        @PowerNukkitOnly @Since("FUTURE") TITLE_DOWNLOADING("progressScreen.title.downloading"), // Downloading packs %1
        @PowerNukkitOnly @Since("FUTURE") TITLE_APPLYINGPACKS("progressScreen.title.applyingPacks"), // Loading resource packs
        @PowerNukkitOnly @Since("FUTURE") TITLE_SEARCHINGFORSESSION("progressScreen.title.searchingForSession"), // Searching for Game Session...
        @PowerNukkitOnly @Since("FUTURE") TITLE_WAITINGFORSTORAGEPROVIDER("progressScreen.title.waitingForStorageProvider"), // Syncing user data
        @PowerNukkitOnly @Since("FUTURE") TITLE_CONNECTINGLOCAL("progressScreen.title.connectingLocal"), // Starting World
        @PowerNukkitOnly @Since("FUTURE") TITLE_CONNECTINGLAN("progressScreen.title.connectingLAN"), // Connecting to multiplayer game
        @PowerNukkitOnly @Since("FUTURE") TITLE_CONNECTINGEXTERNAL("progressScreen.title.connectingExternal"), // Connecting to external server
        @PowerNukkitOnly @Since("FUTURE") TITLE_CONNECTINGREALMS("progressScreen.title.connectingRealms"), // Connecting to Realm
        @PowerNukkitOnly @Since("FUTURE") TITLE_COPYINGWORLD("progressScreen.title.copyingWorld"), // World Copy
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_COPYINGWORLD("progressScreen.message.copyingWorld"), // Copying World... %d%%
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_TTS_COPYINGWORLD("progressScreen.message.tts.copyingWorld"), // Copying World
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_BUILDING("progressScreen.message.building"), // Building terrain
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_DONE("progressScreen.message.done"), // Done!
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_EXPORTING("progressScreen.message.exporting"), // Export in Progress
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_EXPORTING_WARNING("progressScreen.message.exporting.warning"), // Please do not exit the game. Exiting might corrupt the export.
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_IMPORTING("progressScreen.message.importing"), // Importing world
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_IMPORTINGCONTENT("progressScreen.message.importingContent"), // Step 2 of 2 - Importing Content
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_UPDATINGCONTENT("progressScreen.message.updatingContent"), // Updating %1 of %2 Packs
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_LOCATING("progressScreen.message.locating"), // Locating server
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_WAITINGFORREALMS("progressScreen.message.waitingForRealms"), // This may take a few moments
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_WAITINGFORSTORAGEPROVIDER("progressScreen.message.waitingForStorageProvider"), // This may take a few moments...
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_STORAGEPROVIDERSYNCERROR("progressScreen.message.storageProviderSyncError"), // Failed to sync user data.
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_WAITINGFORSTOREPRODUCTS("progressScreen.message.waitingForStoreProducts"), // This may take a few moments
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_ALLDONE("progressScreen.message.allDone"), // All Done!
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_LETSGO("progressScreen.message.letsGo"), // Let's Go!
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_FAILED("progressScreen.message.failed"), // Failed
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_FAILEDNONETWORK("progressScreen.message.failedNoNetwork"), // Failed: No Network Connection
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_DOWNLOADINGWORLD("progressScreen.message.downloadingWorld"), // Downloading World
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_DOWNLOADINGCONTENT("progressScreen.message.downloadingContent"), // Step 1 of 2 - Downloading Content
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_UPLOADINGWORLD("progressScreen.message.uploadingWorld"), // Uploading World
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_COPYINGPACKS("progressScreen.message.copyingPacks"), // Saving World Resource Packs
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_INITIATINGTEMPLATE("progressScreen.message.initiatingTemplate"), // Initiating World Template
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_FILESIZE("progressScreen.message.fileSize"), // File Size
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_INITIALIZINGUPLOAD("progressScreen.message.initializingUpload"), // Initializing Upload
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_INITIALIZINGDOWNLOAD("progressScreen.message.initializingDownload"), // Initializing Download
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_INVALIDWORLDFILE("progressScreen.message.invalidWorldFile"), // Invalid world file. Please reopen your world, save, then try again.
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_RESOURCELOADING("progressScreen.message.resourceLoading"), // Loading Resources
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_LEAVELEVEL("progressScreen.message.leaveLevel"), // Your game is being saved. Please do not turn off your device.
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_GENERICMAYTAKEAMOMENT("progressScreen.message.genericMayTakeAMoment"), // This may take a few moments
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_NOUPLOADRESPONSE("progressScreen.message.noUploadResponse"), // We couldn't confirm if your world uploaded properly. Please join your Realm to check, then try again if it hasn't been updated to the new world.
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_NOUPLOADENDPOINT("progressScreen.message.noUploadEndpoint"), // Failed to find a place to upload your world. Maybe check your internet connection?
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_UNOWNEDTEMPLATE("progressScreen.message.unownedTemplate"), // It looks like you do not own the Marketplace template this world is based on. You can purchase it from Minecraft Marketplace.
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_CREATEARCHIVEFILEFAILED("progressScreen.message.createArchiveFileFailed"), // We couldn't pack your world file for upload. Maybe your hard drive is full?
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_CREATELEVELSTORAGEFAILED("progressScreen.message.createLevelStorageFailed"), // Something went wrong while preparing to upload your world. If this keeps happening, restarting your device may help.
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_UNKNOWNERROR("progressScreen.message.unknownError"), // An error occurred
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_FORBIDDENCONTENT("progressScreen.message.forbiddenContent"), // You do not own one or more of the applied packs
        @PowerNukkitOnly @Since("FUTURE") DIALOG_TITLE_RESOURCEPACK("progressScreen.dialog.title.resourcePack"), // Download World Resource Packs?
        @PowerNukkitOnly @Since("FUTURE") DIALOG_TITLE_BEHAVIORANDRESOURCEPACK("progressScreen.dialog.title.behaviorAndResourcePack"), // Download World Behavior & Resource Packs?
        @PowerNukkitOnly @Since("FUTURE") DIALOG_TITLE_ONLYBEHAVIOR("progressScreen.dialog.title.onlyBehavior"), // Download World Behavior Packs?
        @PowerNukkitOnly @Since("FUTURE") DIALOG_TITLE_SCRIPTCONFIRM("progressScreen.dialog.title.scriptConfirm"), // Enable Scripts?
        @PowerNukkitOnly @Since("FUTURE") DIALOG_TITLE_STORAGEPROVIDERERROR("progressScreen.dialog.title.storageProviderError"), // Failed To Sync World Data
        @PowerNukkitOnly @Since("FUTURE") DIALOG_TITLE_STORAGEPROVIDERLONGWAIT("progressScreen.dialog.title.storageProviderLongWait"), // Syncing World Data
        @PowerNukkitOnly @Since("FUTURE") DIALOG_MESSAGE_ONLYBEHAVIOR("progressScreen.dialog.message.onlyBehavior"), // This world has Behavior Packs applied to it that you must download to join. Would you like to download them and join?
        @PowerNukkitOnly @Since("FUTURE") DIALOG_MESSAGE_BEHAVIORANDOPTIONALRESOURCEPACK("progressScreen.dialog.message.behaviorAndOptionalResourcePack"), // This world has Behavior Packs applied to it that you must download to join and Resource Packs that you may optionally download before joining. What would you like to download before joining?
        @PowerNukkitOnly @Since("FUTURE") DIALOG_MESSAGE_BEHAVIORANDRESOURCEPACK("progressScreen.dialog.message.behaviorAndResourcePack"), // This world has Behavior and Resource Packs applied to it that you must download to join. Would you like to download them and join?
        @PowerNukkitOnly @Since("FUTURE") DIALOG_MESSAGE_RESOURCEPACKOPTIONAL("progressScreen.dialog.message.resourcePackOptional"), // This world has Resource Packs applied to it. Would you like to download them before you join?
        @PowerNukkitOnly @Since("FUTURE") DIALOG_MESSAGE_RESOURCEPACKREQUIRED("progressScreen.dialog.message.resourcePackRequired"), // This world has Resource Packs applied to it that you must download to join. Would you like to download them and join?
        @PowerNukkitOnly @Since("FUTURE") DIALOG_MESSAGE_RESOURCEPACKOPTIONAL_RAYTRACING_LINE1("progressScreen.dialog.message.resourcePackOptional.rayTracing.line1"), // This world has ray tracing enabled Resource Packs applied to it.	
        @PowerNukkitOnly @Since("FUTURE") DIALOG_MESSAGE_RESOURCEPACKOPTIONAL_RAYTRACING_LINE2("progressScreen.dialog.message.resourcePackOptional.rayTracing.line2"), // Your device is not compatible with advanced lighting and texture features so you will see the world without these advanced effects. Would you like to download them before you join?	
        @PowerNukkitOnly @Since("FUTURE") DIALOG_MESSAGE_RESOURCEPACKREQUIRED_RAYTRACING_LINE1("progressScreen.dialog.message.resourcePackRequired.rayTracing.line1"), // This world has ray tracing enabled Resource Packs applied to it.	
        @PowerNukkitOnly @Since("FUTURE") DIALOG_MESSAGE_RESOURCEPACKREQUIRED_RAYTRACING_LINE2("progressScreen.dialog.message.resourcePackRequired.rayTracing.line2"), // Your device is not compatible with advanced lighting and texture features so you will see the world without these advanced effects. Would you like to download them before you join?
        @PowerNukkitOnly @Since("FUTURE") DIALOG_MESSAGE_SCRIPTCONFIRM("progressScreen.dialog.message.scriptConfirm"), // The world you are about to enter contains scripts that run on your device. Would you like to join this world?
        @PowerNukkitOnly @Since("FUTURE") DIALOG_MESSAGE_STORAGEPROVIDERERROR("progressScreen.dialog.message.storageProviderError"), // Could not sync your world data.  Would you like to try again?
        @PowerNukkitOnly @Since("FUTURE") DIALOG_MESSAGE_STORAGEPROVIDERUNUSABLEERROR("progressScreen.dialog.message.storageProviderUnusableError"), // The world is not fully synced or has been corrupted. Try playing the world on a console where it's in a good state and try migrating it again.
        @PowerNukkitOnly @Since("FUTURE") DIALOG_MESSAGE_WORLDCORRUPTED("progressScreen.dialog.message.worldCorrupted"), // The world has been corrupted. Please report this at bugs.mojang.com
        @PowerNukkitOnly @Since("FUTURE") DIALOG_MESSAGE_STORAGEPROVIDERLONGWAIT("progressScreen.dialog.message.storageProviderLongWait"), // Syncing this world is taking a long time.  Would you like to continue waiting?
        @PowerNukkitOnly @Since("FUTURE") DIALOG_BUTTON_ENTER("progressScreen.dialog.button.enter"), // Enter World
        @PowerNukkitOnly @Since("FUTURE") DIALOG_BUTTON_JOINANDDOWNLOAD("progressScreen.dialog.button.joinAndDownload"), // Download & Join - %1
        @PowerNukkitOnly @Since("FUTURE") DIALOG_BUTTON_JOINANDDOWNLOAD_EVERYTHING("progressScreen.dialog.button.joinAndDownload.everything"), // Download Everything & Join - %1
        @PowerNukkitOnly @Since("FUTURE") DIALOG_BUTTON_JOINANDDOWNLOAD_ONLYBEHAVIORPACKS("progressScreen.dialog.button.joinAndDownload.onlyBehaviorPacks"), // Only Download Behaviors & Join - %1
        @PowerNukkitOnly @Since("FUTURE") DIALOG_BUTTON_JOIN("progressScreen.dialog.button.join"), // Join
        @PowerNukkitOnly @Since("FUTURE") DIALOG_BUTTON_LEAVE("progressScreen.dialog.button.leave"), // Leave
        @PowerNukkitOnly @Since("FUTURE") DIALOG_BUTTON_RETRY("progressScreen.dialog.button.retry"), // Retry
        @PowerNukkitOnly @Since("FUTURE") DIALOG_BUTTON_WAIT("progressScreen.dialog.button.wait"), // Wait
        ;
        private final String code; ProgressScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Quiz implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") POPUP_OK("quiz.popup.ok"), // Take the Quiz
        @PowerNukkitOnly @Since("FUTURE") POPUP_TEXT("quiz.popup.text"), // The quiz will open in a new window. You may return to Minecraft after you have completed the quiz.
        @PowerNukkitOnly @Since("FUTURE") POPUP_TITLE("quiz.popup.title"), // Quiz
        ;
        private final String code; Quiz(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Raid implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") NAME("raid.name"), // Raid
        @PowerNukkitOnly @Since("FUTURE") PROGRESS("raid.progress"), // Mobs remaining:
        @PowerNukkitOnly @Since("FUTURE") EXPIRY("raid.expiry"), // A raid has expired
        ;
        private final String code; Raid(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum RecipeBook implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") SETTING_FULL("recipeBook.setting.full"), // Full
        @PowerNukkitOnly @Since("FUTURE") SETTING_DISCOVER("recipeBook.setting.discover"), // Discover
        @PowerNukkitOnly @Since("FUTURE") SETTING_OFF("recipeBook.setting.off"), // Off
        ;
        private final String code; RecipeBook(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Record implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") NOWPLAYING("record.nowPlaying"), // Now playing: %s
        ;
        private final String code; Record(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum ResourcePack implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") AVAILABLE_TITLE("resourcePack.available.title"), // Available Resource Packs
        @PowerNukkitOnly @Since("FUTURE") AVAILABLE_TITLE_BEHAVIORPACKS("resourcePack.available.title.behaviorPacks"), // Available Behavior Packs
        @PowerNukkitOnly @Since("FUTURE") AVAILABLE_TITLE_PACKS("resourcePack.available.title.packs"), // My Packs
        @PowerNukkitOnly @Since("FUTURE") AVAILABLE_ADD("resourcePack.available.add"), // Activate
        @PowerNukkitOnly @Since("FUTURE") AVAILABLE_NONE_TEXT("resourcePack.available.none.text"), // You have no resource packs
        @PowerNukkitOnly @Since("FUTURE") AVAILABLE_NONE_BEHAVIOR("resourcePack.available.none.behavior"), // You have no behavior packs
        @PowerNukkitOnly @Since("FUTURE") AVAILABLE_NONE_STORE("resourcePack.available.none.store"), // View Marketplace
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_NONEFOUND_PACKS("resourcePack.message.noneFound.packs"), // There are no available packs on this device.
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_ALLINUSE_PACKS("resourcePack.message.allInUse.packs"), // Your packs are currently in use.
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_ERROR("resourcePack.message.error"), // A pack has errors that will make it not function
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_WARNING("resourcePack.message.warning"), // A pack has warnings that might cause odd behavior
        @PowerNukkitOnly @Since("FUTURE") SUGGESTEDCONTENT_TITLE("resourcePack.suggestedContent.title"), // Get More Packs
        @PowerNukkitOnly @Since("FUTURE") SUGGESTEDCONTENT_BUTTON_VIEWMORE("resourcePack.suggestedContent.button.viewMore"), // View More Packs
        @PowerNukkitOnly @Since("FUTURE") CACHED_TITLE("resourcePack.cached.title"), // Cached Packs
        @PowerNukkitOnly @Since("FUTURE") FOLDERINFO("resourcePack.folderInfo"), // (Place resource pack files here)
        @PowerNukkitOnly @Since("FUTURE") OPENFOLDER("resourcePack.openFolder"), // Open resource pack folder
        @PowerNukkitOnly @Since("FUTURE") SELECTED_TITLE("resourcePack.selected.title"), // Selected Resource Packs
        @PowerNukkitOnly @Since("FUTURE") SELECTED_TITLE_BEHAVIORPACKS("resourcePack.selected.title.behaviorPacks"), // Active Behavior Packs
        @PowerNukkitOnly @Since("FUTURE") SELECTED_TITLE_PACKS("resourcePack.selected.title.packs"), // Active
        @PowerNukkitOnly @Since("FUTURE") SELECTED_REMOVE("resourcePack.selected.remove"), // Deactivate
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_TITLE_PACKS("resourcePack.realmsPlus.title.packs"), // Realms Plus Packs
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS_EXPIRED("resourcePack.realmsPlus.expired"), // Expired
        @PowerNukkitOnly @Since("FUTURE") ERRORS("resourcePack.errors"), // Errors: 
        @PowerNukkitOnly @Since("FUTURE") ERROR_INGAME_PACKS("resourcePack.error.ingame.packs"), // You cannot change Resource Packs while playing in a world.
        @PowerNukkitOnly @Since("FUTURE") ERROR_INGAME_BEHAVIORPACKS("resourcePack.error.ingame.behaviorPacks"), // You cannot change Behavior Packs while playing in a world.
        @PowerNukkitOnly @Since("FUTURE") ERROR_ENTERINGGAME_TITLE("resourcePack.error.enteringgame.title"), // Expired Packs on Realm
        @PowerNukkitOnly @Since("FUTURE") ERROR_ENTERINGGAME_MESSAGE("resourcePack.error.enteringgame.message"), // This Realm contains resource or behavior packs that have expired from Realms Plus. You will need to either deactivate these packs or purchase them from the marketplace in order to play on the Realm.
        @PowerNukkitOnly @Since("FUTURE") ERROR_ENTERINGGAME_BUTTON("resourcePack.error.enteringgame.button"), // View Active Packs
        @PowerNukkitOnly @Since("FUTURE") TITLE("resourcePack.title"), // Select Resource Packs
        @PowerNukkitOnly @Since("FUTURE") TOAST_ATLASFALLBACK_MESSAGE("resourcePack.toast.atlasFallback.message"), // Low memory. Textures will have reduced level of detail.
        @PowerNukkitOnly @Since("FUTURE") TOAST_ATLASFALLBACK_TITLE("resourcePack.toast.atlasFallback.title"), // Resource Pack Fallback
        @PowerNukkitOnly @Since("FUTURE") COPYGLOBAL("resourcePack.copyGlobal"), // Copy from Global
        @PowerNukkitOnly @Since("FUTURE") DESCRIPTION("resourcePack.description"), // Resource packs are applied bottom to top. This means any asset that is in two packs will be overridden by the higher pack.
        @PowerNukkitOnly @Since("FUTURE") DESCRIPTION_DEFAULT_LEVEL("resourcePack.description.default.level"), // You can edit these in Settings.
        @PowerNukkitOnly @Since("FUTURE") DESCRIPTION_DEFAULT_BEHAVIORPACKS("resourcePack.description.default.behaviorPacks"), // The default gameplay of Minecraft.
        @PowerNukkitOnly @Since("FUTURE") DESCRIPTION_BOTTOM_GLOBAL("resourcePack.description.bottom.global"), // Resource packs are applied bottom to top. This means any asset that is in two packs will be overridden by the higher pack. Packs in your worlds will apply on top of these global packs. These resources are just for you. No one else will see the resources you set here. Resource Packs in your worlds or worlds you join will apply on top of these global resources.
        @PowerNukkitOnly @Since("FUTURE") DESCRIPTION_BOTTOM_BEHAVIORPACKS("resourcePack.description.bottom.behaviorPacks"), // Behavior Packs are applied bottom to top. That means anything that is in two Behavior Packs will be overridden by the higher one.
        @PowerNukkitOnly @Since("FUTURE") DESCRIPTION_BOTTOM_LEVEL("resourcePack.description.bottom.level"), // Resource packs are applied bottom to top. This means any asset that is in two packs will be overridden by the higher pack. These packs in your world apply on top of your global pack(s).
        @PowerNukkitOnly @Since("FUTURE") DESCRIPTION_STORE("resourcePack.description.store"), // View in Store
        @PowerNukkitOnly @Since("FUTURE") HEADER_BEHAVIOR("resourcePack.header.behavior"), // Active Behavior Packs apply to all players.
        @PowerNukkitOnly @Since("FUTURE") HEADER_LEVEL("resourcePack.header.level"), // Require players to accept resource packs to join
        @PowerNukkitOnly @Since("FUTURE") CRASHRECOVERY_TITLE("resourcePack.crashRecovery.title"), // Global Resources Reset
        @PowerNukkitOnly @Since("FUTURE") CRASHRECOVERY_MESSAGE("resourcePack.crashRecovery.message"), // Resources failed to load previously.
        @PowerNukkitOnly @Since("FUTURE") WARNINGS("resourcePack.warnings"), // Warnings: 
        @PowerNukkitOnly @Since("FUTURE") WARNING_TITLE("resourcePack.warning.title"), // This Is Dangerous!
        @PowerNukkitOnly @Since("FUTURE") WARNING_BODY("resourcePack.warning.body"), // Adding or removing Behavior Packs after playing a world might break the world and cause you to lose what you created. Press "OK" to deactivate the pack, or "Cancel" to keep it active.
        @PowerNukkitOnly @Since("FUTURE") ERROR_PLUGIN_REMOVAL_TITLE("resourcePack.error.plugin_removal.title"), // Action not allowed.
        @PowerNukkitOnly @Since("FUTURE") ERROR_PLUGIN_REMOVAL_BODY("resourcePack.error.plugin_removal.body"), // Removing Behavior Packs with a plugin might break the world and cause you to lose what you created.
        @PowerNukkitOnly @Since("FUTURE") REQUIREDDEPENDENCY_TITLE("resourcePack.requiredDependency.title"), // Required Dependency
        @PowerNukkitOnly @Since("FUTURE") REQUIREDDEPENDENCY_BODY("resourcePack.requiredDependency.body"), // This pack is a required dependency of another pack that is currently applied.
        @PowerNukkitOnly @Since("FUTURE") MISSINGDEPENDENCY_TITLE("resourcePack.missingDependency.title"), // Missing Dependencies
        @PowerNukkitOnly @Since("FUTURE") MISSINGDEPENDENCY_BODY("resourcePack.missingDependency.body"), // This pack is missing one or more dependencies.  Would you like to apply it anyway?
        @PowerNukkitOnly @Since("FUTURE") DELETE("resourcePack.delete"), // You are about to delete %s forever. Are you sure?
        @PowerNukkitOnly @Since("FUTURE") DELETE_CONFIRM("resourcePack.delete.confirm"), // Delete pack?
        @PowerNukkitOnly @Since("FUTURE") DELETESELECTED("resourcePack.deleteSelected"), // This pack is currently selected! You are about to delete %s forever. Are you sure?
        @PowerNukkitOnly @Since("FUTURE") DELETEMULTIPLE("resourcePack.deleteMultiple"), // You are going to delete the following packs forever:%sAre you sure?
        @PowerNukkitOnly @Since("FUTURE") EDITPACK("resourcePack.editPack"), // Delete Packs...
        @PowerNukkitOnly @Since("FUTURE") EDITPACKDONE("resourcePack.editPackDone"), // Done
        @PowerNukkitOnly @Since("FUTURE") TOAST_UNOWNEDCONTENT_TITLE("resourcePack.toast.unownedContent.title"), // %s Deactivated
        @PowerNukkitOnly @Since("FUTURE") TOAST_UNOWNEDCONTENT_SUBTITLE("resourcePack.toast.unownedContent.subtitle"), // This account does not own this resource pack.
        @PowerNukkitOnly @Since("FUTURE") INCOMPATIBLEDEPENDENCY("resourcePack.incompatibleDependency"), // This pack has a dependency (%s) that is incompatible with your device
        @PowerNukkitOnly @Since("FUTURE") INCOMPATIBLEDEPENDENCY_MEMORY("resourcePack.incompatibleDependency.memory"), // This pack has a dependency (%s) that is incompatible with your device because your device doesn't have enough memory.  
        @PowerNukkitOnly @Since("FUTURE") INCOMPATIBLEDEPENDENCY_GRAPHICS_RAYTRACING("resourcePack.incompatibleDependency.graphics.raytracing"), // This pack has a dependency (%s) that is incompatible with your device because your device doesn't have compatible hardware to support ray tracing
        @PowerNukkitOnly @Since("FUTURE") SUBPACKRESOLUTION("resourcePack.subpackResolution"), // Resolution: %s
        @PowerNukkitOnly @Since("FUTURE") INCOMPATIBLE("resourcePack.incompatible"), // This pack is incompatible with your device.
        @PowerNukkitOnly @Since("FUTURE") INCOMPATIBLE_MEMORY("resourcePack.incompatible.memory"), // This resolution is incompatible with your device because your device doesn't have enough memory.
        @PowerNukkitOnly @Since("FUTURE") INCOMPATIBLE_GRAPHICS_RAYTRACING("resourcePack.incompatible.graphics.raytracing"), // This pack contains information to allow ray tracing, but your device does not support this option.
        @PowerNukkitOnly @Since("FUTURE") PACKSETTINGSTITLE("resourcePack.packSettingsTitle"), // %s Settings
        @PowerNukkitOnly @Since("FUTURE") MISSINGPACKDESCRIPTION("resourcePack.missingPackDescription"), // This pack is missing!
        @PowerNukkitOnly @Since("FUTURE") LEGACYPACKNAME("resourcePack.legacyPackName"), // Legacy Resource Pack
        @PowerNukkitOnly @Since("FUTURE") VANILLA_NAME("resourcePack.vanilla.name"), // Minecraft Texture Pack
        @PowerNukkitOnly @Since("FUTURE") VANILLA_DESCRIPTION("resourcePack.vanilla.description"), // The default Minecraft graphics, now updated with stylish new textures!
        @PowerNukkitOnly @Since("FUTURE") CITY_NAME("resourcePack.city.name"), // City
        @PowerNukkitOnly @Since("FUTURE") CITY_DESCRIPTION("resourcePack.city.description"), // Ideal for building structures.
        @PowerNukkitOnly @Since("FUTURE") PLASTIC_NAME("resourcePack.plastic.name"), // Plastic
        @PowerNukkitOnly @Since("FUTURE") PLASTIC_DESCRIPTION("resourcePack.plastic.description"), // Simple, colorful, and vibrant.
        @PowerNukkitOnly @Since("FUTURE") NATURAL_NAME("resourcePack.natural.name"), // Natural
        @PowerNukkitOnly @Since("FUTURE") NATURAL_DESCRIPTION("resourcePack.natural.description"), // Designed to give your worlds a more natural look.
        @PowerNukkitOnly @Since("FUTURE") FANTASY_NAME("resourcePack.fantasy.name"), // Fantasy
        @PowerNukkitOnly @Since("FUTURE") FANTASY_DESCRIPTION("resourcePack.fantasy.description"), // Transport yourselves to a time when knights were heroes.
        @PowerNukkitOnly @Since("FUTURE") CARTOON_NAME("resourcePack.cartoon.name"), // Cartoon
        @PowerNukkitOnly @Since("FUTURE") CARTOON_DESCRIPTION("resourcePack.cartoon.description"), // Googly eyes! Goofy grins! Turn your world into a toon with this pack.
        @PowerNukkitOnly @Since("FUTURE") CANDY_NAME("resourcePack.candy.name"), // Candy
        @PowerNukkitOnly @Since("FUTURE") CANDY_DESCRIPTION("resourcePack.candy.description"), // Sugarcoat your world and turn every texture into a syrupy snack.
        @PowerNukkitOnly @Since("FUTURE") FESTIVEMASHUP2016_NAME("resourcePack.festivemashup2016.name"), // Festive Mash-up 2016
        @PowerNukkitOnly @Since("FUTURE") FESTIVEMASHUP2016_DESCRIPTION("resourcePack.festivemashup2016.description"), // Create a winter wonderland with this snowy seasonal pack.
        @PowerNukkitOnly @Since("FUTURE") CHINESEMYTHOLOGY_NAME("resourcePack.chinesemythology.name"), // Chinese Mythology Mash-up
        @PowerNukkitOnly @Since("FUTURE") CHINESEMYTHOLOGY_DESCRIPTION("resourcePack.chinesemythology.description"), // Textures inspired by the myths and legends of China.
        @PowerNukkitOnly @Since("FUTURE") FALLOUT_NAME("resourcePack.Fallout.name"), // Fallout Mash-up
        @PowerNukkitOnly @Since("FUTURE") FALLOUT_DESCRIPTION("resourcePack.Fallout.description"), // Welcome to the Wasteland!
        @PowerNukkitOnly @Since("FUTURE") GREEKMYTHOLOGY("resourcePack.GreekMythology"), // Greek Mythology Mash-up
        @PowerNukkitOnly @Since("FUTURE") GREEKMYTHOLOGY_NAME("resourcePack.GreekMythology.name"), // Greek Mythology Mash-up
        @PowerNukkitOnly @Since("FUTURE") GREEKMYTHOLOGY_DESCRIPTION("resourcePack.GreekMythology.description"), // It's mythical Greece at your fingertips. 
        @PowerNukkitOnly @Since("FUTURE") SKYRIM_NAME("resourcePack.Skyrim.name"), // Skyrim Mash-up
        @PowerNukkitOnly @Since("FUTURE") SKYRIM_DESCRIPTION("resourcePack.Skyrim.description"), // Build your own worlds in the land of Skyrim.
        @PowerNukkitOnly @Since("FUTURE") MASHUPADVENTURETIME_NAME("resourcePack.MashupAdventureTime.name"), // Adventure Time
        @PowerNukkitOnly @Since("FUTURE") SKIN_NAME("resourcePack.skin.name"), // Skins
        @PowerNukkitOnly @Since("FUTURE") SKIN_DESCRIPTION("resourcePack.skin.description"), // Skin, Skin, Skin!!!
        @PowerNukkitOnly @Since("FUTURE") INVALID_DESCRIPTION("resourcePack.invalid.description"), // Couldn't parse pack successfully. Click to display errors.
        @PowerNukkitOnly @Since("FUTURE") LOADING_DESCRIPTION("resourcePack.loading.description"), // Pack is still being loaded.
        ;
        private final String code; ResourcePack(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum StorageManager implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") CONTENTTYPE_WORLD("storageManager.contentType.world"), // World
        @PowerNukkitOnly @Since("FUTURE") CONTENTTYPE_WORLDTEMPLATE("storageManager.contentType.worldTemplate"), // World Template
        @PowerNukkitOnly @Since("FUTURE") CONTENTTYPE_RESOURCEPACK("storageManager.contentType.resourcePack"), // Resource
        @PowerNukkitOnly @Since("FUTURE") CONTENTTYPE_BEHAVIORPACK("storageManager.contentType.behaviorPack"), // Behavior Pack
        @PowerNukkitOnly @Since("FUTURE") CONTENTTYPE_SKINPACK("storageManager.contentType.skinPack"), // Skin Pack
        @PowerNukkitOnly @Since("FUTURE") CONTENTTYPE_INVALID("storageManager.contentType.invalid"), // Invalid
        @PowerNukkitOnly @Since("FUTURE") CONTENTTYPE_CACHEDDATA("storageManager.contentType.cachedData"), // Cached Data
        @PowerNukkitOnly @Since("FUTURE") CONTENTTYPE_WORLDS("storageManager.contentType.worlds"), // Worlds
        @PowerNukkitOnly @Since("FUTURE") CONTENTTYPE_WORLDTEMPLATES("storageManager.contentType.worldTemplates"), // World Templates
        @PowerNukkitOnly @Since("FUTURE") CONTENTTYPE_RESOURCEPACKS("storageManager.contentType.resourcePacks"), // Resource Packs
        @PowerNukkitOnly @Since("FUTURE") CONTENTTYPE_BEHAVIORPACKS("storageManager.contentType.behaviorPacks"), // Behavior Packs
        @PowerNukkitOnly @Since("FUTURE") CONTENTTYPE_SKINPACKS("storageManager.contentType.skinPacks"), // Skin Packs
        @PowerNukkitOnly @Since("FUTURE") BASEWORLD("storageManager.baseWorld"), // Base World
        @PowerNukkitOnly @Since("FUTURE") MAINSIZELABEL("storageManager.mainSizeLabel"), // %s - 1 Item
        @PowerNukkitOnly @Since("FUTURE") MAINSIZELABELPLURAL("storageManager.mainSizeLabelPlural"), // %s - %s Items
        @PowerNukkitOnly @Since("FUTURE") DELETE_TITLE("storageManager.delete.title"), // Delete %s permanently?
        @PowerNukkitOnly @Since("FUTURE") TITLE_ITEM_SINGLE("storageManager.title.item.single"), // item
        @PowerNukkitOnly @Since("FUTURE") TITLE_ITEM_PLURAL("storageManager.title.item.plural"), // items
        @PowerNukkitOnly @Since("FUTURE") DELETE_CONTENT("storageManager.delete.content"), // Are you sure you want to delete the selected items? These items will be lost forever! (A long time!) %s%s%s
        @PowerNukkitOnly @Since("FUTURE") DELETE_CONTENT_REDOWNLOAD("storageManager.delete.content.redownload"), // You can redownload content you've bought from the Marketplace.
        @PowerNukkitOnly @Since("FUTURE") DELETE_CONTENT_WORLDTEMPLATE("storageManager.delete.content.worldtemplate"), // Deleting templates may cause worlds that are using them to no longer work as intended.
        @PowerNukkitOnly @Since("FUTURE") DELETE_CONTENT_AFFECTEDWORLDS("storageManager.delete.content.affectedWorlds"), // The following worlds may stop working as as intended:
        @PowerNukkitOnly @Since("FUTURE") DELETE_CONFIRM("storageManager.delete.confirm"), // Delete
        @PowerNukkitOnly @Since("FUTURE") DELETE_CANCEL("storageManager.delete.cancel"), // Cancel
        @PowerNukkitOnly @Since("FUTURE") DELETE_DEPENDENCY("storageManager.delete.dependency"), // The following content is dependent on this %s and may not continue to work correctly if you delete "%s":%s Do you still want to delete "%s"? This %s will be lost forever! (A long time!)
        @PowerNukkitOnly @Since("FUTURE") DELETE_PREMIUM("storageManager.delete.premium"), // You are about to delete "%s". You will still own %s and if you wish to use %s again in the future, you can re-download it from the Marketplace.
        @PowerNukkitOnly @Since("FUTURE") DELETE_PREMIUM_END("storageManager.delete.premium.end"), // Are you sure you want to delete "%s"? 
        @PowerNukkitOnly @Since("FUTURE") DELETING_CONTENT("storageManager.deleting.content"), // Deleting Content
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_PREMIUM("storageManager.download.premium"), // %s is not currently installed.
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_PREMIUM_END("storageManager.download.premium.end"), // Would you like to download %s ( %s )?
        @PowerNukkitOnly @Since("FUTURE") DEPENDENCY_TITLETEXT("storageManager.dependency.titleText"), // Did you want to break these?
        @PowerNukkitOnly @Since("FUTURE") DEPENDENCY_WARNINGTEXT("storageManager.dependency.warningText"), // Some other items need content you are deleting to work properly. Do you want to risk breaking these items?
        @PowerNukkitOnly @Since("FUTURE") DEPENDENCY_DONETEXT("storageManager.dependency.doneText"), // The other %s can be deleted without breaking other resources.
        @PowerNukkitOnly @Since("FUTURE") DEPENDENCY_NOITEMS("storageManager.dependency.noItems"), // There are no other items left to delete.
        @PowerNukkitOnly @Since("FUTURE") DEPENDENCY_BREAKITEM("storageManager.dependency.breakItem"), // Required content you are deleting:
        @PowerNukkitOnly @Since("FUTURE") DEPENDENCY_REMOVEDEPENDENCIES("storageManager.dependency.removeDependencies"), // Keep the items this pack needs
        @PowerNukkitOnly @Since("FUTURE") DEPENDENCY_BREAKPACK("storageManager.dependency.breakPack"), // Are you sure you want to break this pack?
        @PowerNukkitOnly @Since("FUTURE") SHARE_COMPRESS("storageManager.share.compress"), // Compressing the selected resources...
        @PowerNukkitOnly @Since("FUTURE") SHARE_TOTALPERCENT("storageManager.share.totalPercent"), // 100%
        @PowerNukkitOnly @Since("FUTURE") DEPENDENCY_CONTINUE("storageManager.dependency.continue"), // Continue
        @PowerNukkitOnly @Since("FUTURE") DEPENDENCY_CONTINUE_SCROLL("storageManager.dependency.continue.scroll"), // Scroll to Continue
        @PowerNukkitOnly @Since("FUTURE") SORTLARGEST("storageManager.sortLargest"), // Size - Largest First
        @PowerNukkitOnly @Since("FUTURE") SORTDATERECENT("storageManager.sortDateRecent"), // Date Used - Recent First
        @PowerNukkitOnly @Since("FUTURE") SORTDATEOLDEST("storageManager.sortDateOldest"), // Date Used - Oldest First
        @PowerNukkitOnly @Since("FUTURE") VERSION("storageManager.version"), // Version 
        @PowerNukkitOnly @Since("FUTURE") MULTISELECTDELETE("storageManager.multiselectDelete"), // Delete
        @PowerNukkitOnly @Since("FUTURE") MULTISELECTSHARE("storageManager.multiselectShare"), // Share
        @PowerNukkitOnly @Since("FUTURE") MULTISELECT("storageManager.multiselect"), // Multiselect
        @PowerNukkitOnly @Since("FUTURE") MISCELLANEOUS("storageManager.miscellaneous"), // Miscellaneous
        @PowerNukkitOnly @Since("FUTURE") GROUPTYPE("storageManager.groupType"), // Type
        @PowerNukkitOnly @Since("FUTURE") GROUPPACK("storageManager.groupPack"), // Add-on
        @PowerNukkitOnly @Since("FUTURE") SHARETITLE("storageManager.shareTitle"), // Export Resources
        @PowerNukkitOnly @Since("FUTURE") MCPACK("storageManager.mcpack"), // Minecraft Pack
        @PowerNukkitOnly @Since("FUTURE") MCADDON("storageManager.mcaddon"), // Minecraft Addon
        @PowerNukkitOnly @Since("FUTURE") MCWORLD("storageManager.mcworld"), // Minecraft World
        ;
        private final String code; StorageManager(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Raycasting implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") PURCHASE_ERROR("raycasting.purchase.error"), // We have detected that your device does not meet the system requirements to run this pack so you are unable to download this pack. You can review the minimum system requirements below: %s+ GPU: Hardware ray tracing capable GPU such as NVIDIA GeForce RTX 2060 or better. See our FAQ on minecraft.net for more details. %s+ RAM: 8GB or better %s+ CPU: Intel Core i5 or equivalent ##the %s will be turned into linebreaks. Don't reorder.
        @PowerNukkitOnly @Since("FUTURE") PURCHASE_ERROR_TITLE("raycasting.purchase.error.title"), // System Requirements Warning
        ;
        private final String code; Raycasting(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Resourcepack implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") CITY("resourcepack.City"), // City Texture Pack
        @PowerNukkitOnly @Since("FUTURE") PLASTIC("resourcepack.Plastic"), // Plastic Texture Pack
        @PowerNukkitOnly @Since("FUTURE") NATURAL("resourcepack.Natural"), // Natural Texture Pack
        @PowerNukkitOnly @Since("FUTURE") FANTASY("resourcepack.Fantasy"), // Fantasy Texture Pack
        @PowerNukkitOnly @Since("FUTURE") CARTOON("resourcepack.Cartoon"), // Cartoon Texture Pack
        @PowerNukkitOnly @Since("FUTURE") CANDY("resourcepack.Candy"), // Candy Texture Pack
        @PowerNukkitOnly @Since("FUTURE") FESTIVEMASHUP2016("resourcepack.FestiveMashup2016"), // Festive Mash-up 2016
        @PowerNukkitOnly @Since("FUTURE") CHINESEMYTHOLOGY("resourcepack.ChineseMythology"), // Chinese Mythology Mash-up
        @PowerNukkitOnly @Since("FUTURE") FALLOUT("resourcepack.Fallout"), // Fallout Mash-up
        @PowerNukkitOnly @Since("FUTURE") MAGICTHEGATHERING_NAME("resourcepack.MagicTheGathering.name"), // Magic: The Gathering
        ;
        private final String code; Resourcepack(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Review implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ITEM_POST_RATING_DROPDOWN_LABEL("review.item.post.rating.dropdown.label"), // Choose a star rating
        @PowerNukkitOnly @Since("FUTURE") ITEM_POST_RATING_FOOTER("review.item.post.rating.footer"), // You will be able to change your rating.
        @PowerNukkitOnly @Since("FUTURE") ITEM_POST_RATING_SUBMIT_BUTTON("review.item.post.rating.submit.button"), // Rate this pack
        @PowerNukkitOnly @Since("FUTURE") ITEM_POST_RATING_1STAR("review.item.post.rating.1star"), // Oh no! We're sad you didn't enjoy your pack at all! Send us some feedback at https://aka.ms/marketplacefeedback
        @PowerNukkitOnly @Since("FUTURE") ITEM_POST_RATING_2STAR("review.item.post.rating.2star"), // Oh! That's no good. Send us some feedback at https://aka.ms/marketplacefeedback
        @PowerNukkitOnly @Since("FUTURE") ITEM_POST_RATING_3STAR("review.item.post.rating.3star"), // There's always room for improvement, but we're glad you're still having fun.
        @PowerNukkitOnly @Since("FUTURE") ITEM_POST_RATING_4STAR("review.item.post.rating.4star"), // Woohoo! We're glad you're having a good time!
        @PowerNukkitOnly @Since("FUTURE") ITEM_POST_RATING_5STAR("review.item.post.rating.5star"), // We're glad you're having a great time!
        @PowerNukkitOnly @Since("FUTURE") ITEM_POST_RATING_SUBMIT_TOAST_LINE1("review.item.post.rating.submit.toast.line1"), // Thanks for rating this pack!
        @PowerNukkitOnly @Since("FUTURE") ITEM_POST_RATING_SUBMIT_TOAST_LINE2("review.item.post.rating.submit.toast.line2"), // It may take some time for us to show your rating.
        ;
        private final String code; Review(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Roaming implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") STATUS_BRIEF_LIMITED_USAGE("roaming.status_brief.limited_usage"), // Limited usage
        @PowerNukkitOnly @Since("FUTURE") STATUS_BRIEF_NO_RESTRICTIONS("roaming.status_brief.no_restrictions"), // Usable cross-platform
        @PowerNukkitOnly @Since("FUTURE") STATUS_HOVER_LIMITED_USAGE("roaming.status_hover.limited_usage"), // Only available on specific platforms.
        @PowerNukkitOnly @Since("FUTURE") STATUS_HOVER_NO_RESTRICTIONS("roaming.status_hover.no_restrictions"), // Available on any Bedrock platform!
        ;
        private final String code; Roaming(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Screenshot implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") FAILURE("screenshot.failure"), // Couldn't save screenshot: %s
        @PowerNukkitOnly @Since("FUTURE") SUCCESS("screenshot.success"), // Saved screenshot as %s
        @PowerNukkitOnly @Since("FUTURE") TITLE("screenshot.title"), // Screenshot Captured!
        @PowerNukkitOnly @Since("FUTURE") CAPTION("screenshot.caption"), // Add a caption and share?
        @PowerNukkitOnly @Since("FUTURE") POST("screenshot.post"), // Share
        ;
        private final String code; Screenshot(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum SeedPicker implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") SEARCH("seedPicker.search"), // Search
        @PowerNukkitOnly @Since("FUTURE") TITLE("seedPicker.title"), // Seed Picker
        ;
        private final String code; SeedPicker(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum SelectServer implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ADD("selectServer.add"), // Add server
        @PowerNukkitOnly @Since("FUTURE") DEFAULTNAME("selectServer.defaultName"), // Minecraft Server
        @PowerNukkitOnly @Since("FUTURE") DELETE("selectServer.delete"), // Delete
        @PowerNukkitOnly @Since("FUTURE") DELETEBUTTON("selectServer.deleteButton"), // Delete
        @PowerNukkitOnly @Since("FUTURE") DELETEQUESTION("selectServer.deleteQuestion"), // Are you sure you want to remove this server?
        @PowerNukkitOnly @Since("FUTURE") DELETEWARNING("selectServer.deleteWarning"), // will be lost forever! (A long time!)
        @PowerNukkitOnly @Since("FUTURE") DIRECT("selectServer.direct"), // Direct Connect
        @PowerNukkitOnly @Since("FUTURE") EDIT("selectServer.edit"), // Edit
        @PowerNukkitOnly @Since("FUTURE") EMPTY("selectServer.empty"), // empty
        @PowerNukkitOnly @Since("FUTURE") HIDDENADDRESS("selectServer.hiddenAddress"), // (Hidden)
        @PowerNukkitOnly @Since("FUTURE") REFRESH("selectServer.refresh"), // Refresh
        @PowerNukkitOnly @Since("FUTURE") SELECT("selectServer.select"), // Join Server
        @PowerNukkitOnly @Since("FUTURE") TITLE("selectServer.title"), // Select Server
        ;
        private final String code; SelectServer(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum SelectWorld implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ALLOWCOMMANDS("selectWorld.allowCommands"), // Allow Cheats:
        @PowerNukkitOnly @Since("FUTURE") ALLOWCOMMANDS_INFO("selectWorld.allowCommands.info"), // Commands like /gamemode, /xp
        @PowerNukkitOnly @Since("FUTURE") BONUSITEMS("selectWorld.bonusItems"), // Bonus Chest:
        @PowerNukkitOnly @Since("FUTURE") TRUSTPLAYERS("selectWorld.trustPlayers"), // Trust Players:
        @PowerNukkitOnly @Since("FUTURE") CHEATS("selectWorld.cheats"), // Activate Cheats
        @PowerNukkitOnly @Since("FUTURE") CONVERSION("selectWorld.conversion"), // Must be converted!
        @PowerNukkitOnly @Since("FUTURE") CONVERTINPROGRESS_TITLE("selectWorld.convertInProgress.title"), // World Conversion
        @PowerNukkitOnly @Since("FUTURE") CONVERTINPROGRESS_MSG("selectWorld.convertInProgress.msg"), // Converting World... %d%%
        @PowerNukkitOnly @Since("FUTURE") CONVERTINPROGRESS_TTS_MSG("selectWorld.convertInProgress.tts.msg"), // Converting World
        @PowerNukkitOnly @Since("FUTURE") CONVERTINPROGRESS_DOWNLOAD_MSG("selectWorld.convertInProgress.download_msg"), // Downloading Resource Packs... %d%%
        @PowerNukkitOnly @Since("FUTURE") CONVERTINPROGRESS_IMPORT_MSG("selectWorld.convertInProgress.import_msg"), // Importing Resource Packs... %d%%
        @PowerNukkitOnly @Since("FUTURE") UPLOADINPROGRESS_TITLE("selectWorld.uploadInProgress.title"), // Sending Old World
        @PowerNukkitOnly @Since("FUTURE") UPLOADINPROGRESS_MSG("selectWorld.uploadInProgress.msg"), // Sending Old World to Minecraft... %d%%
        @PowerNukkitOnly @Since("FUTURE") CONVERTFAILED_MSG("selectWorld.convertFailed.msg"), // Oops. Something went wrong.
        @PowerNukkitOnly @Since("FUTURE") CREATE("selectWorld.create"), // Create New World
        @PowerNukkitOnly @Since("FUTURE") CREATENEW("selectWorld.createNew"), // Create New
        @PowerNukkitOnly @Since("FUTURE") CREATETEMPLATE("selectWorld.createTemplate"), // Create From Template
        @PowerNukkitOnly @Since("FUTURE") CREATEDEMO("selectWorld.createDemo"), // Play New Demo World
        @PowerNukkitOnly @Since("FUTURE") CUSTOMIZETYPE("selectWorld.customizeType"), // Customize
        @PowerNukkitOnly @Since("FUTURE") DELETE("selectWorld.delete"), // Delete
        @PowerNukkitOnly @Since("FUTURE") DELETEBUTTON("selectWorld.deleteButton"), // Delete
        @PowerNukkitOnly @Since("FUTURE") DELETEQUESTION("selectWorld.deleteQuestion"), // Are you sure you want to delete this world?
        @PowerNukkitOnly @Since("FUTURE") DELETEWARNING("selectWorld.deleteWarning"), // will be lost forever! (A long time!)
        @PowerNukkitOnly @Since("FUTURE") EMPTY("selectWorld.empty"), // empty
        @PowerNukkitOnly @Since("FUTURE") ENTERNAME("selectWorld.enterName"), // World Name
        @PowerNukkitOnly @Since("FUTURE") ENTERSEED("selectWorld.enterSeed"), // Seed for the World Generator
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE("selectWorld.gameMode"), // Game Mode
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_ADVENTURE("selectWorld.gameMode.adventure"), // Adventure
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_ADVENTURE_LINE1("selectWorld.gameMode.adventure.line1"), // Same as survival mode, but blocks can't
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_ADVENTURE_LINE2("selectWorld.gameMode.adventure.line2"), // be added or removed
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_CREATIVE("selectWorld.gameMode.creative"), // Creative
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_CREATIVE_LINE1("selectWorld.gameMode.creative.line1"), // Unlimited resources, free flying and
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_CREATIVE_LINE2("selectWorld.gameMode.creative.line2"), // destroy blocks instantly
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_HARDCORE("selectWorld.gameMode.hardcore"), // Hardcore
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_HARDCORE_LINE1("selectWorld.gameMode.hardcore.line1"), // Same as survival mode, locked at hardest
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_HARDCORE_LINE2("selectWorld.gameMode.hardcore.line2"), // difficulty, and one life only
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_SPECTATOR("selectWorld.gameMode.spectator"), // Spectator
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_SPECTATOR_LINE1("selectWorld.gameMode.spectator.line1"), // You can look but don't touch
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_SURVIVAL("selectWorld.gameMode.survival"), // Survival
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_SURVIVAL_LINE1("selectWorld.gameMode.survival.line1"), // Search for resources, crafting, gain
        @PowerNukkitOnly @Since("FUTURE") GAMEMODE_SURVIVAL_LINE2("selectWorld.gameMode.survival.line2"), // levels, health and hunger
        @PowerNukkitOnly @Since("FUTURE") HARDCOREMODE("selectWorld.hardcoreMode"), // Hardcore:
        @PowerNukkitOnly @Since("FUTURE") HARDCOREMODE_INFO("selectWorld.hardcoreMode.info"), // World is deleted upon death
        @PowerNukkitOnly @Since("FUTURE") MAPFEATURES("selectWorld.mapFeatures"), // Generate Structures:
        @PowerNukkitOnly @Since("FUTURE") MAPFEATURES_INFO("selectWorld.mapFeatures.info"), // Villages, dungeons etc
        @PowerNukkitOnly @Since("FUTURE") MAPTYPE("selectWorld.mapType"), // World Type:
        @PowerNukkitOnly @Since("FUTURE") MAPTYPE_NORMAL("selectWorld.mapType.normal"), // Normal
        @PowerNukkitOnly @Since("FUTURE") MOREWORLDOPTIONS("selectWorld.moreWorldOptions"), // More World Options...
        @PowerNukkitOnly @Since("FUTURE") NEWWORLD("selectWorld.newWorld"), // New World
        @PowerNukkitOnly @Since("FUTURE") NEWWORLD_COPYOF("selectWorld.newWorld.copyOf"), // Copy of %s
        @PowerNukkitOnly @Since("FUTURE") NEWWORLD_EDUCATIONCOPYOF("selectWorld.newWorld.educationCopyOf"), // [EDU] %s
        @PowerNukkitOnly @Since("FUTURE") NEWWORLD_EXPERIMENTALCOPYOF("selectWorld.newWorld.experimentalCopyOf"), // [EX] %s
        @PowerNukkitOnly @Since("FUTURE") REALMSCOMINGSOON("selectWorld.realmsComingSoon"), // Realms Coming Soon!
        @PowerNukkitOnly @Since("FUTURE") REALMSBETA("selectWorld.realmsBeta"), // Realms Beta
        @PowerNukkitOnly @Since("FUTURE") LEARNMORE("selectWorld.learnMore"), // Learn More
        @PowerNukkitOnly @Since("FUTURE") RECREATE("selectWorld.recreate"), // Re-Create
        @PowerNukkitOnly @Since("FUTURE") RENAME("selectWorld.rename"), // Rename
        @PowerNukkitOnly @Since("FUTURE") RENAMEBUTTON("selectWorld.renameButton"), // Rename
        @PowerNukkitOnly @Since("FUTURE") RENAMETITLE("selectWorld.renameTitle"), // Rename World
        @PowerNukkitOnly @Since("FUTURE") RESULTFOLDER("selectWorld.resultFolder"), // Will be saved in:
        @PowerNukkitOnly @Since("FUTURE") SEEDINFO("selectWorld.seedInfo"), // Leave blank for a random seed
        @PowerNukkitOnly @Since("FUTURE") SELECT("selectWorld.select"), // Play Selected World
        @PowerNukkitOnly @Since("FUTURE") TAB_WORLDS("selectWorld.tab.worlds"), // Worlds
        @PowerNukkitOnly @Since("FUTURE") TAB_REALMS("selectWorld.tab.realms"), // Realms
        @PowerNukkitOnly @Since("FUTURE") TAB_FRIENDS("selectWorld.tab.friends"), // Friends
        @PowerNukkitOnly @Since("FUTURE") TAB_CLASSMATES("selectWorld.tab.classmates"), // Friends
        @PowerNukkitOnly @Since("FUTURE") TAB_THIRDPARTY("selectWorld.tab.thirdParty"), // Servers
        @PowerNukkitOnly @Since("FUTURE") TITLE("selectWorld.title"), // Select World
        @PowerNukkitOnly @Since("FUTURE") WORLD("selectWorld.world"), // World
        ;
        private final String code; SelectWorld(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum SelectTemplate implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TEMPLATESTART("selectTemplate.templateStart"), // Where do you want to begin?
        @PowerNukkitOnly @Since("FUTURE") GENERATERANDOM("selectTemplate.generateRandom"), // Create New World
        @PowerNukkitOnly @Since("FUTURE") CREATEREALM("selectTemplate.createRealm"), // Create New Realm
        @PowerNukkitOnly @Since("FUTURE") CREATE("selectTemplate.create"), // Create ...
        @PowerNukkitOnly @Since("FUTURE") REALM("selectTemplate.realm"), // New Realm
        @PowerNukkitOnly @Since("FUTURE") REALMINFO("selectTemplate.realmInfo"), // You can upload worlds to your Realm after you create it!
        @PowerNukkitOnly @Since("FUTURE") SIGNIN("selectTemplate.signIn"), // Create Realm with Microsoft Account
        @PowerNukkitOnly @Since("FUTURE") UNABLETOSIGNIN("selectTemplate.unableToSignIn"), // Microsoft services are unavailable on this device
        @PowerNukkitOnly @Since("FUTURE") WORLD("selectTemplate.world"), // New World
        @PowerNukkitOnly @Since("FUTURE") HELP("selectTemplate.help"), // ?
        @PowerNukkitOnly @Since("FUTURE") TEMPLATEDESCRIPTION("selectTemplate.templateDescription"), // Template
        @PowerNukkitOnly @Since("FUTURE") DELETETEMPLATE("selectTemplate.deleteTemplate"), // Delete World Templates...
        @PowerNukkitOnly @Since("FUTURE") DELETETEMPLATEDONE("selectTemplate.deleteTemplateDone"), // Done
        @PowerNukkitOnly @Since("FUTURE") DELETEMESSAGE("selectTemplate.deleteMessage"), // You are about to delete %s forever. Are you sure?
        @PowerNukkitOnly @Since("FUTURE") DELETE_CONFIRM("selectTemplate.delete.confirm"), // Delete World Template?
        @PowerNukkitOnly @Since("FUTURE") DELETE("selectTemplate.delete"), // Delete
        @PowerNukkitOnly @Since("FUTURE") MYTEMPLATES("selectTemplate.myTemplates"), // My World Templates
        @PowerNukkitOnly @Since("FUTURE") REALMSPLUS("selectTemplate.realmsPlus"), // Featured Realms Plus Templates
        @PowerNukkitOnly @Since("FUTURE") IMPORTEDTEMPLATES("selectTemplate.importedTemplates"), // Imported Templates
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD("selectTemplate.download"), // Download
        @PowerNukkitOnly @Since("FUTURE") NOTEMPLATES("selectTemplate.noTemplates"), // There are no world templates on this device.
        @PowerNukkitOnly @Since("FUTURE") SUGGESTEDCONTENT_TITLE("selectTemplate.suggestedContent.title"), // Featured Marketplace Templates
        @PowerNukkitOnly @Since("FUTURE") SUGGESTEDCONTENT_BUTTON("selectTemplate.suggestedContent.button"), // See More Templates
        @PowerNukkitOnly @Since("FUTURE") CREATEDBY("selectTemplate.createdBy"), // Created by %s
        @PowerNukkitOnly @Since("FUTURE") INVENTORY("selectTemplate.inventory"), // My Marketplace Packs
        @PowerNukkitOnly @Since("FUTURE") SEEMORE("selectTemplate.seeMore"), // See More
        ;
        private final String code; SelectTemplate(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Sign implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") EDIT("sign.edit"), // Edit sign message
        ;
        private final String code; Sign(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Skin implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") NEW("skin.New"), // New
        @PowerNukkitOnly @Since("FUTURE") STANDARD_ALEX("skin.Standard.Alex"), // Alex
        @PowerNukkitOnly @Since("FUTURE") STANDARD_STEVE("skin.Standard.Steve"), // Steve
        @PowerNukkitOnly @Since("FUTURE") STANDARD_CUSTOM("skin.Standard.Custom"), // Custom
        @PowerNukkitOnly @Since("FUTURE") STANDARD_CUSTOMSLIM("skin.Standard.CustomSlim"), // Custom
        @PowerNukkitOnly @Since("FUTURE") STANDARD_DUMMY("skin.Standard.Dummy"), // Custom
        ;
        private final String code; Skin(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Skinpack implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") EDUCATION("skinpack.Education"), // Education Edition Skins
        ;
        private final String code; Skinpack(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Skins implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") BROWSE("skins.browse"), // Browse
        @PowerNukkitOnly @Since("FUTURE") BUY_BUYBUTTON("skins.buy.buyButton"), // Buy
        @PowerNukkitOnly @Since("FUTURE") BUY_CANCELBUTTON("skins.buy.cancelButton"), // Cancel
        @PowerNukkitOnly @Since("FUTURE") BUY_NOCONNECTION("skins.buy.noConnection"), // We're unable to connect to the Marketplace. Maybe check your internet connection?
        @PowerNukkitOnly @Since("FUTURE") INFORMATION_INGAME("skins.information.ingame"), // Sorry, you can't change your skin in-game. Access Options from the main menu.
        @PowerNukkitOnly @Since("FUTURE") INFORMATION_INVALIDCUSTOMSKIN("skins.information.invalidCustomSkin"), // That's not a Minecraft skin, silly.
        @PowerNukkitOnly @Since("FUTURE") INFORMATION_UPSELLWITHOUTSTORE("skins.information.upsellWithoutStore"), // You must purchase the skin pack to use that skin, and we can't connect to the Marketplace.
        @PowerNukkitOnly @Since("FUTURE") INFORMATION_SELECTSKIN("skins.information.selectSkin"), // Choose the correct model type for your skin
        @PowerNukkitOnly @Since("FUTURE") RESTORE_BUTTON("skins.restore.button"), // Restore
        @PowerNukkitOnly @Since("FUTURE") SHOW_RESTOREPURCHASEBUTTON("skins.show.restorePurchaseButton"), // Restore
        @PowerNukkitOnly @Since("FUTURE") SKINPACKHEADER_PACKS("skins.skinpackHeader.packs"), // Skin packs
        @PowerNukkitOnly @Since("FUTURE") SKINPACKHEADER_STANDARD("skins.skinpackHeader.standard"), // Standard
        @PowerNukkitOnly @Since("FUTURE") TITLE("skins.title"), // Skins
        @PowerNukkitOnly @Since("FUTURE") PICKER_TITLE("skins.picker.title"), // Choose Skin
        @PowerNukkitOnly @Since("FUTURE") PICKER_ACCEPT_BUTTON("skins.picker.accept.button"), // Confirm
        @PowerNukkitOnly @Since("FUTURE") PICKER_UNLOCK_BUTTON("skins.picker.unlock.button"), // Unlock
        @PowerNukkitOnly @Since("FUTURE") PICKER_CUSTOM_BUTTON("skins.picker.custom.button"), // Choose New Skin
        @PowerNukkitOnly @Since("FUTURE") PICKER_DEFAULT("skins.picker.default"), // Default
        @PowerNukkitOnly @Since("FUTURE") PICKER_RECENT("skins.picker.recent"), // Recent
        @PowerNukkitOnly @Since("FUTURE") PICKER_NO_CROSS_PLATFORM("skins.picker.no.cross.platform"), // Platform Restricted Skin Pack
        @PowerNukkitOnly @Since("FUTURE") PICKER_NO_MULTIPLAYER("skins.picker.no.multiplayer"), // Multiplayer Restricted Skin Pack
        @PowerNukkitOnly @Since("FUTURE") PICKER_EXPANDED_BACK("skins.picker.expanded.back"), // Skins in '%s'
        @PowerNukkitOnly @Since("FUTURE") STORE_UPSELL_EQUIP_BUTTON("skins.store.upsell.equip.button"), // Equip this Skin
        @PowerNukkitOnly @Since("FUTURE") STORE_UPSELL_INFO("skins.store.upsell.info"), // You need to unlock this pack to equip the skin you selected.
        @PowerNukkitOnly @Since("FUTURE") STORE_UPSELL_SEEPACK("skins.store.upsell.seePack"), // See Pack in the Marketplace
        @PowerNukkitOnly @Since("FUTURE") STORE_UPSELL_UNLOCKPACK("skins.store.upsell.unlockPack"), // Unlock this pack to equip the skin you selected.
        @PowerNukkitOnly @Since("FUTURE") STORE_EQUIPPED("skins.store.equipped"), // You have equipped the %s skin.
        ;
        private final String code; Skins(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum SoundCategory implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") AMBIENT("soundCategory.ambient"), // Ambient/Environment
        @PowerNukkitOnly @Since("FUTURE") BLOCK("soundCategory.block"), // Blocks
        @PowerNukkitOnly @Since("FUTURE") HOSTILE("soundCategory.hostile"), // Hostile Creatures
        @PowerNukkitOnly @Since("FUTURE") MASTER("soundCategory.master"), // Main
        @PowerNukkitOnly @Since("FUTURE") MUSIC("soundCategory.music"), // Music
        @PowerNukkitOnly @Since("FUTURE") NEUTRAL("soundCategory.neutral"), // Friendly Creatures
        @PowerNukkitOnly @Since("FUTURE") PLAYER("soundCategory.player"), // Players
        @PowerNukkitOnly @Since("FUTURE") RECORD("soundCategory.record"), // Jukebox/Note Blocks
        @PowerNukkitOnly @Since("FUTURE") WEATHER("soundCategory.weather"), // Weather
        @PowerNukkitOnly @Since("FUTURE") TEXTTOSPEECH("soundCategory.texttospeech"), // Text to Speech
        ;
        private final String code; SoundCategory(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Stat implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ANIMALSBRED("stat.animalsBred"), // Animals Bred
        @PowerNukkitOnly @Since("FUTURE") ARMORCLEANED("stat.armorCleaned"), // Armor Pieces Cleaned
        @PowerNukkitOnly @Since("FUTURE") BANNERCLEANED("stat.bannerCleaned"), // Banners Cleaned
        @PowerNukkitOnly @Since("FUTURE") BEACONINTERACTION("stat.beaconInteraction"), // Interactions with Beacon
        @PowerNukkitOnly @Since("FUTURE") BLOCKSBUTTON("stat.blocksButton"), // Blocks
        @PowerNukkitOnly @Since("FUTURE") BOATONECM("stat.boatOneCm"), // Distance by Boat
        @PowerNukkitOnly @Since("FUTURE") BREAKITEM("stat.breakItem"), // %1$s Depleted
        @PowerNukkitOnly @Since("FUTURE") BREWINGSTANDINTERACTION("stat.brewingstandInteraction"), // Interactions with Brewing Stand
        @PowerNukkitOnly @Since("FUTURE") CAKESLICESEATEN("stat.cakeSlicesEaten"), // Cake Slices Eaten
        @PowerNukkitOnly @Since("FUTURE") CAULDRONFILLED("stat.cauldronFilled"), // Cauldrons Filled
        @PowerNukkitOnly @Since("FUTURE") CAULDRONUSED("stat.cauldronUsed"), // Water Taken from Cauldron
        @PowerNukkitOnly @Since("FUTURE") CHESTOPENED("stat.chestOpened"), // Chests Opened
        @PowerNukkitOnly @Since("FUTURE") CLIMBONECM("stat.climbOneCm"), // Distance Climbed
        @PowerNukkitOnly @Since("FUTURE") CRAFTED("stat.crafted"), // Times Crafted
        @PowerNukkitOnly @Since("FUTURE") CRAFTITEM("stat.craftItem"), // %1$s Crafted
        @PowerNukkitOnly @Since("FUTURE") CREATEWORLD("stat.createWorld"), // Worlds created
        @PowerNukkitOnly @Since("FUTURE") CROUCHONECM("stat.crouchOneCm"), // Distance Crouched
        @PowerNukkitOnly @Since("FUTURE") DAMAGEDEALT("stat.damageDealt"), // Damage Dealt
        @PowerNukkitOnly @Since("FUTURE") DAMAGETAKEN("stat.damageTaken"), // Damage Taken
        @PowerNukkitOnly @Since("FUTURE") DEATHS("stat.deaths"), // Number of Deaths
        @PowerNukkitOnly @Since("FUTURE") DEPLETED("stat.depleted"), // Times Depleted
        @PowerNukkitOnly @Since("FUTURE") DISPENSERINSPECTED("stat.dispenserInspected"), // Dispensers Searched
        @PowerNukkitOnly @Since("FUTURE") DIVEONECM("stat.diveOneCm"), // Distance Dove
        @PowerNukkitOnly @Since("FUTURE") DROP("stat.drop"), // Items Dropped
        @PowerNukkitOnly @Since("FUTURE") DROPPERINSPECTED("stat.dropperInspected"), // Droppers Searched
        @PowerNukkitOnly @Since("FUTURE") ENDERCHESTOPENED("stat.enderchestOpened"), // Ender Chests Opened
        @PowerNukkitOnly @Since("FUTURE") ENTITYKILLEDBY("stat.entityKilledBy"), // %s killed you %d time(s)
        @PowerNukkitOnly @Since("FUTURE") ENTITYKILLEDBY_NONE("stat.entityKilledBy.none"), // You have never been killed by %s
        @PowerNukkitOnly @Since("FUTURE") ENTITYKILLS("stat.entityKills"), // You killed %d %s
        @PowerNukkitOnly @Since("FUTURE") ENTITYKILLS_NONE("stat.entityKills.none"), // You have never killed %s
        @PowerNukkitOnly @Since("FUTURE") FALLONECM("stat.fallOneCm"), // Distance Fallen
        @PowerNukkitOnly @Since("FUTURE") FISHCAUGHT("stat.fishCaught"), // Fish Caught
        @PowerNukkitOnly @Since("FUTURE") FLOWERPOTTED("stat.flowerPotted"), // Plants potted
        @PowerNukkitOnly @Since("FUTURE") FLYONECM("stat.flyOneCm"), // Distance Flown
        @PowerNukkitOnly @Since("FUTURE") FURNACEINTERACTION("stat.furnaceInteraction"), // Interactions with Furnace
        @PowerNukkitOnly @Since("FUTURE") GENERALBUTTON("stat.generalButton"), // General
        @PowerNukkitOnly @Since("FUTURE") HOPPERINSPECTED("stat.hopperInspected"), // Hoppers Searched
        @PowerNukkitOnly @Since("FUTURE") HORSEONECM("stat.horseOneCm"), // Distance by Horse
        @PowerNukkitOnly @Since("FUTURE") ITEMENCHANTED("stat.itemEnchanted"), // Items Enchanted
        @PowerNukkitOnly @Since("FUTURE") ITEMSBUTTON("stat.itemsButton"), // Items
        @PowerNukkitOnly @Since("FUTURE") JOINMULTIPLAYER("stat.joinMultiplayer"), // Multiplayer joins
        @PowerNukkitOnly @Since("FUTURE") JUMP("stat.jump"), // Jumps
        @PowerNukkitOnly @Since("FUTURE") JUNKFISHED("stat.junkFished"), // Junk Fished
        @PowerNukkitOnly @Since("FUTURE") LEAVEGAME("stat.leaveGame"), // Games quit
        @PowerNukkitOnly @Since("FUTURE") LOADWORLD("stat.loadWorld"), // Saves loaded
        @PowerNukkitOnly @Since("FUTURE") MINEBLOCK("stat.mineBlock"), // %1$s Mined
        @PowerNukkitOnly @Since("FUTURE") MINECARTONECM("stat.minecartOneCm"), // Distance by Minecart
        @PowerNukkitOnly @Since("FUTURE") MINED("stat.mined"), // Times Mined
        @PowerNukkitOnly @Since("FUTURE") MOBKILLS("stat.mobKills"), // Mob Kills
        @PowerNukkitOnly @Since("FUTURE") MOBSBUTTON("stat.mobsButton"), // Mobs
        @PowerNukkitOnly @Since("FUTURE") NOTEBLOCKPLAYED("stat.noteblockPlayed"), // Noteblocks played
        @PowerNukkitOnly @Since("FUTURE") NOTEBLOCKTUNED("stat.noteblockTuned"), // Noteblocks tuned
        @PowerNukkitOnly @Since("FUTURE") PIGONECM("stat.pigOneCm"), // Distance by Pig
        @PowerNukkitOnly @Since("FUTURE") PLAYERKILLS("stat.playerKills"), // Player Kills
        @PowerNukkitOnly @Since("FUTURE") PLAYONEMINUTE("stat.playOneMinute"), // Minutes Played
        @PowerNukkitOnly @Since("FUTURE") RECORDPLAYED("stat.recordPlayed"), // Records Played
        @PowerNukkitOnly @Since("FUTURE") SPRINTONECM("stat.sprintOneCm"), // Distance Sprinted
        @PowerNukkitOnly @Since("FUTURE") STARTGAME("stat.startGame"), // Times played
        @PowerNukkitOnly @Since("FUTURE") SWIMONECM("stat.swimOneCm"), // Distance Swum
        @PowerNukkitOnly @Since("FUTURE") TALKEDTOVILLAGER("stat.talkedToVillager"), // Talked to Villagers
        @PowerNukkitOnly @Since("FUTURE") TIMESINCEDEATH("stat.timeSinceDeath"), // Since Last Death
        @PowerNukkitOnly @Since("FUTURE") TRADEDWITHVILLAGER("stat.tradedWithVillager"), // Traded with Villagers
        @PowerNukkitOnly @Since("FUTURE") TRAPPEDCHESTTRIGGERED("stat.trappedChestTriggered"), // Trapped Chests Triggered
        @PowerNukkitOnly @Since("FUTURE") TREASUREFISHED("stat.treasureFished"), // Treasure Fished
        @PowerNukkitOnly @Since("FUTURE") USED("stat.used"), // Times Used
        @PowerNukkitOnly @Since("FUTURE") USEITEM("stat.useItem"), // %1$s Used
        @PowerNukkitOnly @Since("FUTURE") WALKONECM("stat.walkOneCm"), // Distance Walked
        @PowerNukkitOnly @Since("FUTURE") WORKBENCHINTERACTION("stat.workbenchInteraction"), // Interactions with Crafting Table
        ;
        private final String code; Stat(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Stats implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_TYPE_ACHIEVEMENT("stats.tooltip.type.achievement"), // Achievement
        @PowerNukkitOnly @Since("FUTURE") TOOLTIP_TYPE_STATISTIC("stats.tooltip.type.statistic"), // Statistic
        ;
        private final String code; Stats(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Start implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") BETA_ICON("start.beta.icon"), // Beta
        ;
        private final String code; Start(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Stream implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") CONFIRM_START("stream.confirm_start"), // Are you sure you want to start broadcasting?
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_ACCOUNT_NOT_BOUND("stream.unavailable.account_not_bound"), // Before you can broadcast Minecraft through Twitch, you will need to link your Twitch account on mojang.com. Would you like to do that now?
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_ACCOUNT_NOT_BOUND_OKAY("stream.unavailable.account_not_bound.okay"), // Link Accounts
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_ACCOUNT_NOT_MIGRATED("stream.unavailable.account_not_migrated"), // Before you can broadcast Minecraft through Twitch, you will need to migrate your Minecraft account to a Mojang account. Would you like to do that now?
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_ACCOUNT_NOT_MIGRATED_OKAY("stream.unavailable.account_not_migrated.okay"), // Migrate Account
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_FAILED_AUTH("stream.unavailable.failed_auth"), // Authentication to Twitch failed. Please go to mojang.com and rebind your Twitch account.
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_FAILED_AUTH_OKAY("stream.unavailable.failed_auth.okay"), // Rebind Accounts
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_FAILED_AUTH_ERROR("stream.unavailable.failed_auth_error"), // Unable to authenticate to Twitch. Please try again later.
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_INITIALIZATION_FAILURE("stream.unavailable.initialization_failure"), // Unable to initialize the Twitch SDK.
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_INITIALIZATION_FAILURE_EXTRA("stream.unavailable.initialization_failure.extra"), // (Reason: %s)
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_LIBRARY_ARCH_MISMATCH("stream.unavailable.library_arch_mismatch"), // The custom java version used to launch Minecraft has a different architecture than the one used to run the launcher. Please make sure these are the same, either 32-bit or 64-bit for both.
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_LIBRARY_FAILURE("stream.unavailable.library_failure"), // Unable to load the libraries needed for the integrated Twitch broadcasting service.
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_NO_FBO("stream.unavailable.no_fbo"), // Your video card needs to support at least OpenGL version 3.0 or support Framebuffer Objects via an extension to use the integrated Twitch broadcasting.
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_NO_FBO_ARB("stream.unavailable.no_fbo.arb"), // Framebuffer object support via ARB is: %s
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_NO_FBO_BLEND("stream.unavailable.no_fbo.blend"), // Separate blending support via EXT is: %s
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_NO_FBO_EXT("stream.unavailable.no_fbo.ext"), // Framebuffer object support via EXT is: %s
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_NO_FBO_VERSION("stream.unavailable.no_fbo.version"), // You are currently using: %s
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_NOT_SUPPORTED_MAC("stream.unavailable.not_supported.mac"), // Unfortunately the integrated Twitch broadcasting on Mac requires a version of OSX newer than the one you are on. You must use 10.7 (Mac OS X Lion) or newer to be able to use this service. Would you like to visit apple.com to learn about upgrading?
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_NOT_SUPPORTED_MAC_OKAY("stream.unavailable.not_supported.mac.okay"), // Upgrade
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_NOT_SUPPORTED_OTHER("stream.unavailable.not_supported.other"), // Unfortunately the integrated Twitch broadcasting service requires Windows (Vista or newer) or Mac OS X (10.7/Lion or newer)
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_NOT_SUPPORTED_WINDOWS("stream.unavailable.not_supported.windows"), // Unfortunately the integrated Twitch broadcasting requires a newer version of Windows than you are on. You must have at least Windows Vista or newer.
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_REPORT_TO_MOJANG("stream.unavailable.report_to_mojang"), // Report to Mojang
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_SOUNDFLOWER_CHAT("stream.unavailable.soundflower.chat"), // Soundflower is required to be able to stream on Mac. %s
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_SOUNDFLOWER_CHAT_LINK("stream.unavailable.soundflower.chat.link"), // Please click here to install it.
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_TITLE("stream.unavailable.title"), // Twitch Broadcasting Unavailable
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_UNKNOWN("stream.unavailable.unknown"), // Unfortunately you cannot broadcast to Twitch at this time. And we don't know why :'(
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_UNKNOWN_CHAT("stream.unavailable.unknown.chat"), // Could not start stream: %s
        @PowerNukkitOnly @Since("FUTURE") USER_MODE_ADMINISTRATOR("stream.user.mode.administrator"), // Twitch Administrator
        @PowerNukkitOnly @Since("FUTURE") USER_MODE_BANNED("stream.user.mode.banned"), // Banned
        @PowerNukkitOnly @Since("FUTURE") USER_MODE_BANNED_OTHER("stream.user.mode.banned.other"), // Banned on %s's channel
        @PowerNukkitOnly @Since("FUTURE") USER_MODE_BANNED_SELF("stream.user.mode.banned.self"), // Banned on your channel
        @PowerNukkitOnly @Since("FUTURE") USER_MODE_BROADCASTER("stream.user.mode.broadcaster"), // Broadcaster
        @PowerNukkitOnly @Since("FUTURE") USER_MODE_BROADCASTER_OTHER("stream.user.mode.broadcaster.other"), // Broadcaster
        @PowerNukkitOnly @Since("FUTURE") USER_MODE_BROADCASTER_SELF("stream.user.mode.broadcaster.self"), // Broadcaster (You!)
        @PowerNukkitOnly @Since("FUTURE") USER_MODE_MODERATOR("stream.user.mode.moderator"), // Moderator
        @PowerNukkitOnly @Since("FUTURE") USER_MODE_MODERATOR_OTHER("stream.user.mode.moderator.other"), // Moderator on %s's channel
        @PowerNukkitOnly @Since("FUTURE") USER_MODE_MODERATOR_SELF("stream.user.mode.moderator.self"), // Moderator on your channel
        @PowerNukkitOnly @Since("FUTURE") USER_MODE_STAFF("stream.user.mode.staff"), // Twitch Staff
        @PowerNukkitOnly @Since("FUTURE") USER_SUBSCRIPTION_SUBSCRIBER("stream.user.subscription.subscriber"), // Subscriber
        @PowerNukkitOnly @Since("FUTURE") USER_SUBSCRIPTION_SUBSCRIBER_OTHER("stream.user.subscription.subscriber.other"), // Subscriber to %s's channel
        @PowerNukkitOnly @Since("FUTURE") USER_SUBSCRIPTION_SUBSCRIBER_SELF("stream.user.subscription.subscriber.self"), // Subscriber to your channel
        @PowerNukkitOnly @Since("FUTURE") USER_SUBSCRIPTION_TURBO("stream.user.subscription.turbo"), // Twitch Turbo
        @PowerNukkitOnly @Since("FUTURE") USERINFO_BAN("stream.userinfo.ban"), // Ban
        @PowerNukkitOnly @Since("FUTURE") USERINFO_CHATTOOLTIP("stream.userinfo.chatTooltip"), // Click to manage user
        @PowerNukkitOnly @Since("FUTURE") USERINFO_MOD("stream.userinfo.mod"), // Promote to Moderator
        @PowerNukkitOnly @Since("FUTURE") USERINFO_TIMEOUT("stream.userinfo.timeout"), // Timeout
        @PowerNukkitOnly @Since("FUTURE") USERINFO_UNBAN("stream.userinfo.unban"), // Unban
        @PowerNukkitOnly @Since("FUTURE") USERINFO_UNMOD("stream.userinfo.unmod"), // Demote from Moderator
        ;
        private final String code; Stream(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum ProfanityFilter implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TITLE("profanity_filter.title"), // Profanity Filter
        @PowerNukkitOnly @Since("FUTURE") MSG("profanity_filter.msg"), // The text you entered contains words that others may find offensive and cannot be used. Please try again.
        ;
        private final String code; ProfanityFilter(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum TermsAndConditions implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") GOBACK("terms_and_conditions.goBack"), // Go Back
        @PowerNukkitOnly @Since("FUTURE") VIEWTERMSANDCONDITIONS("terms_and_conditions.viewTermsAndConditions"), // To view terms and conditions, please visit https://minecraft.net/terms in any web browser.
        ;
        private final String code; TermsAndConditions(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum TippedArrow implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") EFFECT_EMPTY("tipped_arrow.effect.empty"), // Tipped Arrow
        @PowerNukkitOnly @Since("FUTURE") EFFECT_MUNDANE("tipped_arrow.effect.mundane"), // Tipped Arrow
        @PowerNukkitOnly @Since("FUTURE") EFFECT_THICK("tipped_arrow.effect.thick"), // Tipped Arrow
        @PowerNukkitOnly @Since("FUTURE") EFFECT_AWKWARD("tipped_arrow.effect.awkward"), // Tipped Arrow
        @PowerNukkitOnly @Since("FUTURE") EFFECT_NIGHTVISION("tipped_arrow.effect.nightVision"), // Arrow of Night Vision
        @PowerNukkitOnly @Since("FUTURE") EFFECT_INVISIBILITY("tipped_arrow.effect.invisibility"), // Arrow of Invisibility
        @PowerNukkitOnly @Since("FUTURE") EFFECT_JUMP("tipped_arrow.effect.jump"), // Arrow of Leaping
        @PowerNukkitOnly @Since("FUTURE") EFFECT_FIRERESISTANCE("tipped_arrow.effect.fireResistance"), // Arrow of Fire Resistance
        @PowerNukkitOnly @Since("FUTURE") EFFECT_MOVESPEED("tipped_arrow.effect.moveSpeed"), // Arrow of Swiftness
        @PowerNukkitOnly @Since("FUTURE") EFFECT_MOVESLOWDOWN("tipped_arrow.effect.moveSlowdown"), // Arrow of Slowness
        @PowerNukkitOnly @Since("FUTURE") EFFECT_WATER("tipped_arrow.effect.water"), // Arrow of Splashing
        @PowerNukkitOnly @Since("FUTURE") EFFECT_WATERBREATHING("tipped_arrow.effect.waterBreathing"), // Arrow of Water Breathing
        @PowerNukkitOnly @Since("FUTURE") EFFECT_HEAL("tipped_arrow.effect.heal"), // Arrow of Healing
        @PowerNukkitOnly @Since("FUTURE") EFFECT_HARM("tipped_arrow.effect.harm"), // Arrow of Harming
        @PowerNukkitOnly @Since("FUTURE") EFFECT_POISON("tipped_arrow.effect.poison"), // Arrow of Poison
        @PowerNukkitOnly @Since("FUTURE") EFFECT_REGENERATION("tipped_arrow.effect.regeneration"), // Arrow of Regeneration
        @PowerNukkitOnly @Since("FUTURE") EFFECT_DAMAGEBOOST("tipped_arrow.effect.damageBoost"), // Arrow of Strength
        @PowerNukkitOnly @Since("FUTURE") EFFECT_WEAKNESS("tipped_arrow.effect.weakness"), // Arrow of Weakness
        @PowerNukkitOnly @Since("FUTURE") EFFECT_LEVITATION("tipped_arrow.effect.levitation"), // Arrow of Levitation
        @PowerNukkitOnly @Since("FUTURE") EFFECT_LUCK("tipped_arrow.effect.luck"), // Arrow of Luck
        @PowerNukkitOnly @Since("FUTURE") EFFECT_WITHER("tipped_arrow.effect.wither"), // Arrow of Decay
        @PowerNukkitOnly @Since("FUTURE") EFFECT_TURTLEMASTER("tipped_arrow.effect.turtleMaster"), // Arrow of the Turtle Master
        @PowerNukkitOnly @Since("FUTURE") EFFECT_SLOWFALLING("tipped_arrow.effect.slowFalling"), // Arrow of Slow Falling
        ;
        private final String code; TippedArrow(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum StructureBlock implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TITLE("structure_block.title"), // Structure Block
        @PowerNukkitOnly @Since("FUTURE") STRUCTURE_NAME("structure_block.structure_name"), // Structure Name
        @PowerNukkitOnly @Since("FUTURE") MODE("structure_block.mode"), // Mode:
        @PowerNukkitOnly @Since("FUTURE") MODE_SAVE("structure_block.mode.save"), // Save
        @PowerNukkitOnly @Since("FUTURE") MODE_LOAD("structure_block.mode.load"), // Load
        @PowerNukkitOnly @Since("FUTURE") MODE_CORNER("structure_block.mode.corner"), // Corner
        @PowerNukkitOnly @Since("FUTURE") MODE_DATA("structure_block.mode.data"), // Data
        @PowerNukkitOnly @Since("FUTURE") MODE_EXPORT("structure_block.mode.export"), // 3D Export
        @PowerNukkitOnly @Since("FUTURE") MODE_INVALID("structure_block.mode.invalid"), // Invalid mode
        @PowerNukkitOnly @Since("FUTURE") SIZE("structure_block.size"), // Size:
        @PowerNukkitOnly @Since("FUTURE") DATA_LABEL("structure_block.data_label"), // Data:
        @PowerNukkitOnly @Since("FUTURE") OFFSET("structure_block.offset"), // Offset:
        @PowerNukkitOnly @Since("FUTURE") INVISIBLE_BLOCKS("structure_block.invisible_blocks"), // Invisible Blocks:
        @PowerNukkitOnly @Since("FUTURE") INCLUDE_ENTITIES("structure_block.include_entities"), // Include Entities:
        @PowerNukkitOnly @Since("FUTURE") SHOW_BOUNDING_BOX("structure_block.show_bounding_box"), // Show Bounding Box:
        @PowerNukkitOnly @Since("FUTURE") MIRROR("structure_block.mirror"), // Mirror:
        @PowerNukkitOnly @Since("FUTURE") ANIMATION_MODE("structure_block.animation_mode"), // Animation Mode:
        @PowerNukkitOnly @Since("FUTURE") ANIMATION_TIME("structure_block.animation_time"), // Animation Time:
        @PowerNukkitOnly @Since("FUTURE") ANIMATION_TIME_TIP("structure_block.animation_time_tip"), // In Seconds
        @PowerNukkitOnly @Since("FUTURE") PLACE_BY_NONE("structure_block.place_by_none"), // None
        @PowerNukkitOnly @Since("FUTURE") PLACE_BY_LAYER("structure_block.place_by_layer"), // Place by Layer
        @PowerNukkitOnly @Since("FUTURE") PLACE_BY_BLOCK("structure_block.place_by_block"), // Place by Block
        @PowerNukkitOnly @Since("FUTURE") ROTATION("structure_block.rotation"), // Rotation
        @PowerNukkitOnly @Since("FUTURE") INTEGRITY("structure_block.integrity"), // Integrity:
        @PowerNukkitOnly @Since("FUTURE") SEED("structure_block.seed"), // Seed:
        @PowerNukkitOnly @Since("FUTURE") OFF("structure_block.off"), // Off
        @PowerNukkitOnly @Since("FUTURE") SHOW("structure_block.show"), // Show
        @PowerNukkitOnly @Since("FUTURE") INCLUDE("structure_block.include"), // Include
        @PowerNukkitOnly @Since("FUTURE") DETECT("structure_block.detect"), // Detect
        @PowerNukkitOnly @Since("FUTURE") EXPORT("structure_block.export"), // Export
        @PowerNukkitOnly @Since("FUTURE") CORNER("structure_block.corner"), // Corner
        @PowerNukkitOnly @Since("FUTURE") CORNER_TEXT_1_TITLE("structure_block.corner.text.1.title"), // Corner Mode:
        @PowerNukkitOnly @Since("FUTURE") CORNER_TEXT_2_PARAGRAPH("structure_block.corner.text.2.paragraph"), // Corner Mode is used with the Detect button in Save Mode to define the area to save. It will only detect Corner Blocks with the same name as the structure being saved.
        @PowerNukkitOnly @Since("FUTURE") EXPORT_DISABLED_MESSAGE("structure_block.export.disabled_message"), // Export is disabled on Minecraft Marketplace world templates.
        @PowerNukkitOnly @Since("FUTURE") RESET("structure_block.reset"), // Reset
        @PowerNukkitOnly @Since("FUTURE") SAVE("structure_block.save"), // Save
        @PowerNukkitOnly @Since("FUTURE") REDSTONE_SAVE_MODE("structure_block.redstone_save_mode"), // Redstone Save Mode
        @PowerNukkitOnly @Since("FUTURE") SAVE_TO_DISK("structure_block.save_to_disk"), // Save To Disk
        @PowerNukkitOnly @Since("FUTURE") SAVE_TO_MEMORY("structure_block.save_to_memory"), // Save In Memory
        @PowerNukkitOnly @Since("FUTURE") SAVE_SUCCESSFUL("structure_block.save.successful"), // Structure Saved!
        @PowerNukkitOnly @Since("FUTURE") LOAD("structure_block.load"), // Load
        @PowerNukkitOnly @Since("FUTURE") MIRROR_NONE("structure_block.mirror.none"), // None
        @PowerNukkitOnly @Since("FUTURE") MIRROR_LEFT_RIGHT("structure_block.mirror.left_right"), // Left Right
        @PowerNukkitOnly @Since("FUTURE") MIRROR_FRONT_BACK("structure_block.mirror.front_back"), // Front Back
        @PowerNukkitOnly @Since("FUTURE") ROTATION_NONE("structure_block.rotation.none"), // No Rotation
        @PowerNukkitOnly @Since("FUTURE") ROTATION_90("structure_block.rotation.90"), // 90
        @PowerNukkitOnly @Since("FUTURE") ROTATION_180("structure_block.rotation.180"), // 180
        @PowerNukkitOnly @Since("FUTURE") ROTATION_270("structure_block.rotation.270"), // 270
        @PowerNukkitOnly @Since("FUTURE") PROGRESS_GENERATING("structure_block.progress.generating"), // Generating your model...
        @PowerNukkitOnly @Since("FUTURE") EXTENSIONDESCRIPTION("structure_block.extensionDescription"), // Structure File
        @PowerNukkitOnly @Since("FUTURE") EXPORTFILETITLE("structure_block.exportFileTitle"), // Export Structure
        @PowerNukkitOnly @Since("FUTURE") EXPORTFAILEDTITLE("structure_block.exportFailedTitle"), // Export Failed
        @PowerNukkitOnly @Since("FUTURE") EXPORTFAILEDDESCRIPTION("structure_block.exportFailedDescription"), // We failed to export the structure.
        @PowerNukkitOnly @Since("FUTURE") EXPORTPROGRESSTITLE("structure_block.exportProgressTitle"), // Exporting Your Structure
        ;
        private final String code; StructureBlock(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Three_dExport implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TITLE("3d_export.title"), // 3D Export
        @PowerNukkitOnly @Since("FUTURE") INCLUDE_PLAYERS("3d_export.include_players"), // Include Players:
        @PowerNukkitOnly @Since("FUTURE") REMOVE_BLOCKS("3d_export.remove_blocks"), // Remove Blocks:
        @PowerNukkitOnly @Since("FUTURE") OFF("3d_export.off"), // Off
        @PowerNukkitOnly @Since("FUTURE") SHOW("3d_export.show"), // Show
        @PowerNukkitOnly @Since("FUTURE") INCLUDE("3d_export.include"), // Include
        @PowerNukkitOnly @Since("FUTURE") REMOVE("3d_export.remove"), // Remove
        @PowerNukkitOnly @Since("FUTURE") EXPORT("3d_export.export"), // Export
        @PowerNukkitOnly @Since("FUTURE") RESET("3d_export.reset"), // Reset
        @PowerNukkitOnly @Since("FUTURE") REMIXSERVICEDISCONTINUED("3d_export.remixServiceDiscontinued"), // Note: Remix3D Upload service is no longer available, use Export to save locally instead.
        ;
        private final String code; Three_dExport(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Title implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") OLDGL1("title.oldgl1"), // Old graphics card detected; this may prevent you from
        @PowerNukkitOnly @Since("FUTURE") OLDGL2("title.oldgl2"), // playing in the future as OpenGL 2.0 will be required.
        ;
        private final String code; Title(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum ToolboxMode implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TEXT("toolboxMode.text"), // coming soon
        ;
        private final String code; ToolboxMode(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Translation implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TEST_ARGS("translation.test.args"), // %s %s
        @PowerNukkitOnly @Since("FUTURE") TEST_COMPLEX("translation.test.complex"), // Prefix, %s%2$s again %s and %1$s lastly %s and also %1$s again!
        @PowerNukkitOnly @Since("FUTURE") TEST_ESCAPE("translation.test.escape"), // %%s %%%s %%%%s %%%%%s
        @PowerNukkitOnly @Since("FUTURE") TEST_INVALID("translation.test.invalid"), // hi %
        @PowerNukkitOnly @Since("FUTURE") TEST_INVALID2("translation.test.invalid2"), // hi %  s
        @PowerNukkitOnly @Since("FUTURE") TEST_NONE("translation.test.none"), // Hello, world!
        @PowerNukkitOnly @Since("FUTURE") TEST_WORLD("translation.test.world"), // world
        ;
        private final String code; Translation(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Typeface implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") MOJANGLES("typeface.mojangles"), // Mojangles
        @PowerNukkitOnly @Since("FUTURE") NOTOSANS("typeface.notoSans"), // Noto Sans
        ;
        private final String code; Typeface(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum WorldConversionErrorPrompt implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TITLE("worldConversionErrorPrompt.title"), // World Conversion Failed
        @PowerNukkitOnly @Since("FUTURE") MESSAGE("worldConversionErrorPrompt.message"), // Oops, something went wrong during world conversion. Try again later.
        @PowerNukkitOnly @Since("FUTURE") MESSAGE_UPLOAD("worldConversionErrorPrompt.message.upload"), // Something went wrong. We weren't able to convert your world. You can send us your world later by going to your old world and pressing :_gamepad_face_button_up:. Or send us your world now so we can investigate further.
        @PowerNukkitOnly @Since("FUTURE") SENDWORLD("worldConversionErrorPrompt.sendWorld"), // Send World Now
        @PowerNukkitOnly @Since("FUTURE") BACKTOWORLD("worldConversionErrorPrompt.backToWorld"), // Back to Worlds
        ;
        private final String code; WorldConversionErrorPrompt(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum WorldConversionErrorReport implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TITLE("worldConversionErrorReport.title"), // Report This World
        @PowerNukkitOnly @Since("FUTURE") BUTTON_REPORTANDSEND("worldConversionErrorReport.button.reportAndSend"), // Report and Send World
        @PowerNukkitOnly @Since("FUTURE") DROPDOWN_DEFAULT("worldConversionErrorReport.dropdown.default"), // What went wrong?
        @PowerNukkitOnly @Since("FUTURE") DROPDOWN_MOBS("worldConversionErrorReport.dropdown.mobs"), // Mobs were misbehaving or missing
        @PowerNukkitOnly @Since("FUTURE") DROPDOWN_TERRAIN("worldConversionErrorReport.dropdown.terrain"), // Terrain was broken or missing
        @PowerNukkitOnly @Since("FUTURE") DROPDOWN_ITEMSMISSING("worldConversionErrorReport.dropdown.itemsMissing"), // Lost my items, creations, and/or player stats
        @PowerNukkitOnly @Since("FUTURE") DROPDOWN_ITEMINTERACTION("worldConversionErrorReport.dropdown.itemInteraction"), // Couldn't interact with items
        @PowerNukkitOnly @Since("FUTURE") DROPDOWN_WORLDCONVERSION("worldConversionErrorReport.dropdown.worldConversion"), // World conversion failed
        @PowerNukkitOnly @Since("FUTURE") TERMS_AGREEMENT("worldConversionErrorReport.terms.agreement"), // By hitting Agree, you are uploading your world to the Minecraft Team. The Microsoft Services Agreement and Privacy Statement apply.
        @PowerNukkitOnly @Since("FUTURE") TERMS_AGREEMENTFORBETA("worldConversionErrorReport.terms.agreementForBeta"), // By uploading your World you hereby authorize Microsoft to test, reproduce, modify, distribute and publicly display your World in support of transferring your World to Minecraft.
        @PowerNukkitOnly @Since("FUTURE") TERMS_VIEWTERMS("worldConversionErrorReport.terms.viewTerms"), // View Terms
        @PowerNukkitOnly @Since("FUTURE") SENDING_TITLE("worldConversionErrorReport.sending.title"), // Sending Old World
        @PowerNukkitOnly @Since("FUTURE") SENDING_DESCRIPTION("worldConversionErrorReport.sending.description"), // Sending Old World to Minecraft...
        @PowerNukkitOnly @Since("FUTURE") SENDING_COMPLETE("worldConversionErrorReport.sending.complete"), // Send Completed
        @PowerNukkitOnly @Since("FUTURE") SENDING_COMPLETEMESSAGE_PART1("worldConversionErrorReport.sending.completeMessage.part1"), // Thank you! We are hard at work fixing things and won't be able to get back to you about this specific world. Here's your receipt confirming that we received it:
        @PowerNukkitOnly @Since("FUTURE") SENDING_COMPLETEMESSAGE_PART2("worldConversionErrorReport.sending.completeMessage.part2"), // Receipt: %s
        ;
        private final String code; WorldConversionErrorReport(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum WorldError implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") CORRUPTED("worldError.corrupted"), // is corrupted and can't be started.
        @PowerNukkitOnly @Since("FUTURE") INVALIDARGUMENTS("worldError.invalidArguments"), // was created with invalid arguments.
        @PowerNukkitOnly @Since("FUTURE") IO("worldError.IO"), // can't be opened.
        @PowerNukkitOnly @Since("FUTURE") NOTFOUND("worldError.notFound"), // can't be found.
        @PowerNukkitOnly @Since("FUTURE") NOTSUPPORTED("worldError.notSupported"), // has an unsupported format.
        @PowerNukkitOnly @Since("FUTURE") UNKNOWN("worldError.unknown"), // has an unknown problem.
        @PowerNukkitOnly @Since("FUTURE") WRITECORRUPTED("worldError.writeCorrupted"), // is corrupted and can't be saved.
        @PowerNukkitOnly @Since("FUTURE") WORLDRECOVERED("worldError.worldRecovered"), // World Recovered
        @PowerNukkitOnly @Since("FUTURE") RECOVEREDCORRUPTEDWORLD("worldError.recoveredCorruptedWorld"), // Successfully recovered your corrupted world.
        @PowerNukkitOnly @Since("FUTURE") RECOVEREDCORRUPTEDWORLDWARNING("worldError.recoveredCorruptedWorldWarning"), // Some of your most recent changes may have been lost in recovery.
        @PowerNukkitOnly @Since("FUTURE") WORLDFAILEDRECOVERY("worldError.worldFailedRecovery"), // Recovery Failed
        @PowerNukkitOnly @Since("FUTURE") WORLDFAILEDRECOVERYTEXT("worldError.worldFailedRecoveryText"), // We detected a corrupted world and failed to recover it.
        ;
        private final String code; WorldError(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum UserData implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") RECOVERED_TITLE("userData.recovered.title"), // Save Data Recovered
        @PowerNukkitOnly @Since("FUTURE") RECOVERED_TEXT("userData.recovered.text"), // Successfully recovered your corrupted user settings.
        @PowerNukkitOnly @Since("FUTURE") RECOVERED_WARNING("userData.recovered.warning"), // Some of your most recent changes may have been lost in recovery.
        @PowerNukkitOnly @Since("FUTURE") UNRECOVERABLE_TITLE("userData.unrecoverable.title"), // Save Data Recovery Failed
        ;
        private final String code; UserData(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Userdata implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") UNRECOVERABLE_TEXT("userdata.unrecoverable.text"), // We detected that your user settings have become corrupted but failed to recover them.
        ;
        private final String code; Userdata(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Trial implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") PAUSESCREEN_REMAININGTIME("trial.pauseScreen.remainingTime"), // Remaining Trial Time: %s
        @PowerNukkitOnly @Since("FUTURE") PAUSESCREEN_BUYGAME("trial.pauseScreen.buyGame"), // Unlock Full Game
        @PowerNukkitOnly @Since("FUTURE") SURVIVAL_WELCOME("trial.survival.welcome"), // Welcome to your Minecraft Trial!
        @PowerNukkitOnly @Since("FUTURE") SURVIVAL_REMAININGTIME("trial.survival.remainingTime"), // %d Minutes Remaining
        @PowerNukkitOnly @Since("FUTURE") NOINVITESORJOINING("trial.noInvitesOrJoining"), // To play with friends please purchase the full game
        @PowerNukkitOnly @Since("FUTURE") UPSELL_TRIALLABEL("trial.upsell.trialLabel"), // Minecraft Trial
        @PowerNukkitOnly @Since("FUTURE") UPSELL_TITLE("trial.upsell.title"), // Let the trial begin!
        @PowerNukkitOnly @Since("FUTURE") UPSELL_DESCRIPTION("trial.upsell.description"), // In this trial you are limited to 90 minutes of play time. Craft, build, explore, and have fun! Your world will be preserved if you choose to purchase the full version.
        @PowerNukkitOnly @Since("FUTURE") UPSELL_DESCRIPTION_UPDATED("trial.upsell.description.updated"), // Explore, craft, build, and have fun! In this trial you will have 90 minutes of play time.  Unlock the full game to continue playing as long as you want!
        @PowerNukkitOnly @Since("FUTURE") UPSELL_DESCRIPTION_WORLDSDONTTRANSFERTOFULLGAME_LINE1("trial.upsell.description.worldsDontTransferToFullGame.line1"), // Explore, craft, build, and have fun! In this trial you will have 90 minutes of play time. Unlock the full game to play an infinite amount of worlds for as long as you want!*
        @PowerNukkitOnly @Since("FUTURE") UPSELL_DESCRIPTION_WORLDSDONTTRANSFERTOFULLGAME_LINE2("trial.upsell.description.worldsDontTransferToFullGame.line2"), // *(This world will not transfer to the full game)
        @PowerNukkitOnly @Since("FUTURE") UPSELL_UNLOCK("trial.upsell.unlock"), // Unlock Full Game
        @PowerNukkitOnly @Since("FUTURE") UPSELL_STARTTRIAL("trial.upsell.startTrial"), // Start Trial
        @PowerNukkitOnly @Since("FUTURE") UPSELL_CONTINUETRIAL("trial.upsell.continueTrial"), // Continue Trial
        @PowerNukkitOnly @Since("FUTURE") UPSELL_EXPIREDDESCRIPTION_LINE1("trial.upsell.expiredDescription.line1"), // Time has expired. Please purchase to unlock the full game:
        @PowerNukkitOnly @Since("FUTURE") UPSELL_EXPIREDDESCRIPTION_LINE2("trial.upsell.expiredDescription.line2"), // -Explore limitless worlds
        @PowerNukkitOnly @Since("FUTURE") UPSELL_EXPIREDDESCRIPTION_LINE3("trial.upsell.expiredDescription.line3"), // -Play with your friends
        @PowerNukkitOnly @Since("FUTURE") UPSELL_EXPIREDDESCRIPTION_LINE4("trial.upsell.expiredDescription.line4"), // -Craft hundreds of items
        @PowerNukkitOnly @Since("FUTURE") UPSELL_EXPIREDDESCRIPTION_LINE5("trial.upsell.expiredDescription.line5"), // -Discover mysterious structures and realms
        @PowerNukkitOnly @Since("FUTURE") UPSELL_EXPIREDNEWDESCRIPTION("trial.upsell.expiredNewDescription"), // Do you want to continue exploring, crafting, and building?  Unlock the full game to play as long as you want!  This world will be saved for you to pick up where you left off but you can't modify it until you unlock the full game.
        @PowerNukkitOnly @Since("FUTURE") UPSELL_EXPIREDNEWDESCRIPTION_WORLDSDONTTRANSFERTOFULLGAME_LINE1("trial.upsell.expiredNewDescription.worldsDontTransferToFullGame.line1"), // Do you want to continue exploring, crafting, and building? Unlock the full game to play an infinite amount of worlds for as long as you want!*
        @PowerNukkitOnly @Since("FUTURE") UPSELL_EXPIREDTITLE("trial.upsell.expiredTitle"), // Time's Up!
        @PowerNukkitOnly @Since("FUTURE") UPSELL_EXPIREDVIEWWORLD("trial.upsell.expiredViewWorld"), // View World
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_TITLE("trial.tabbed_upsell.title"), // Unlock Full Game
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_BUTTON("trial.tabbed_upsell.button"), // Buy Minecraft!
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_BUTTONALTERNATE("trial.tabbed_upsell.buttonAlternate"), // Unlock Minecraft Full Game
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_MINECRAFT_TITLE("trial.tabbed_upsell.minecraft.title"), // MINECRAFT 
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_MINECRAFT_DESCRIPTION("trial.tabbed_upsell.minecraft.description"), // Endlessly explore your own unique worlds and construct anything you can imagine - from the simplest of homes to the grandest of castles! Play Creative mode to build wonders with unlimited resources. Or mine in Survival mode, crafting weapons and armor to fend off dangerous mobs and survive the nights. Plus, play with friends online! Unlock the full game today!
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_XBL_TITLE("trial.tabbed_upsell.xbl.title"), // Microsoft Account
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_XBL_DESCRIPTION("trial.tabbed_upsell.xbl.description"), // With the full Minecraft experience you get Creative mode, Achievements, and more, plus with a Microsoft Account you can meet others in the Minecraft community! Join your friends' worlds, make new friends on Servers, and sync your Marketplace purchases to everywhere you play Minecraft.
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_XBL_DESCRIPTION_LINE2("trial.tabbed_upsell.xbl.description.line2"), // *(in versions with Marketplace)
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_ACHIEVEMENTS_TITLE("trial.tabbed_upsell.achievements.title"), // ACHIEVEMENTS
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_ACHIEVEMENTS_DESCRIPTION("trial.tabbed_upsell.achievements.description"), // In addition to the full Minecraft experience with Creative mode, Multiplayer, and more, you'll earn Achievements and a Gamerscore to mark your Minecraft progress and show your Microsoft Account friends your accomplishments. Get the full game to start earning them!
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_MULTIPLAYER_TITLE("trial.tabbed_upsell.multiplayer.title"), // MULTIPLAYER
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_MULTIPLAYER_DESCRIPTION("trial.tabbed_upsell.multiplayer.description"), // The full Minecraft experience lets you enjoy Creative Mode, Achievements and Multiplayer with your friends across Minecraft devices! Play with friends on console, PC and mobile to create, explore and survive together. Unlock the full Minecraft experience today!
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_SERVER_TITLE("trial.tabbed_upsell.server.title"), // SERVERS
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_SERVER_DESCRIPTION("trial.tabbed_upsell.server.description"), // Servers offer some of the most creative ways to enjoy Minecraft! Play great mini-games, meet the Minecraft community and make new friends. Unlock the full Minecraft experience to try Servers today!
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_STORE_TITLE("trial.tabbed_upsell.store.title"), // STORE
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_STORE_DESCRIPTION("trial.tabbed_upsell.store.description"), // Get access to Minecraft Marketplace, our in-game store. Switch up your look with new skins, change your world, or explore incredible new maps from the best community creators! Get the full game today!
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_CREATIVE_TITLE("trial.tabbed_upsell.creative.title"), // CREATIVE
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_CREATIVE_DESCRIPTION("trial.tabbed_upsell.creative.description"), // Buy Minecraft and get Creative Mode! Access the entire inventory - the only limit to what you can build is your imagination! Fly around your world, make your dream home out of anything and everything, or just blow up a mountain with unlimited TNT! 
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_ADDON_TITLE("trial.tabbed_upsell.addon.title"), // ADD-ONS
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_ADDON_DESCRIPTION("trial.tabbed_upsell.addon.description"), // Want to make wolves act like bunnies? Turn all the trees into cotton candy? You can alter everything in the full Minecraft experience with add-ons! Plus get access to Multiplayer, Creative mode, Achievements and more! Buy Minecraft now for full access!
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_SEEDS_TITLE("trial.tabbed_upsell.seeds.title"), // SEEDS
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_SEEDS_DESCRIPTION("trial.tabbed_upsell.seeds.description"), // Unlock the full Minecraft experience and get access to Seeds! Seeds help you discover new biomes - survive on ice plains, ascend extreme hills, or trek across deserts. Start with unique templates or explore random new worlds! Access Seeds, Creative Mode, Multiplayer and more by buying Minecraft today!
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_NAVLEFT("trial.tabbed_upsell.navleft"), // Navigate Tab Left
        @PowerNukkitOnly @Since("FUTURE") TABBED_UPSELL_NAVRIGHT("trial.tabbed_upsell.navRight"), // Navigate Tab Right
        @PowerNukkitOnly @Since("FUTURE") STARTER_COLLECTION_TITLE("trial.starter.collection.title"), // Minecraft Starter Collection
        @PowerNukkitOnly @Since("FUTURE") MASTER_COLLECTION_TITLE("trial.master.collection.title"), // Minecraft Master Collection
        @PowerNukkitOnly @Since("FUTURE") STARTER_COLLECTION_BUTTON("trial.starter.collection.button"), // Buy Starter Collection
        @PowerNukkitOnly @Since("FUTURE") MASTER_COLLECTION_BUTTON("trial.master.collection.button"), // Buy Master Collection
        @PowerNukkitOnly @Since("FUTURE") STARTER_OFFER("trial.starter.offer"), // Get Minecraft, 700 Minecoins, 2 skin packs, 1 texture pack and 1 mash-up
        @PowerNukkitOnly @Since("FUTURE") MASTER_OFFER("trial.master.offer"), // Get Minecraft, 1000 Minecoins, 4 skin packs, 2 texture packs, 3 maps, and 1 mash-up
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_1_TITLE("trial.collection.1.title"), // 1000 Minecoins
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_1_DESCRIPTION("trial.collection.1.description"), // Buy skins, textures and worlds in the Marketplace!
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_2_TITLE("trial.collection.2.title"), // 700 Minecoins
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_2_DESCRIPTION("trial.collection.2.description"), // Buy skins, textures and worlds in the Marketplace!
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_3_TITLE("trial.collection.3.title"), // Wildlife: Savanna
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_3_DESCRIPTION("trial.collection.3.description"), // Go on safari in a rugged off-road vehicle that seats 4!
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_4_TITLE("trial.collection.4.title"), // Adventurer's Dream
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_4_DESCRIPTION("trial.collection.4.description"), // Explore Noxcrew's magical world full of ancient castles!
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_5_TITLE("trial.collection.5.title"), // PureBDcraft Pack
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_5_DESCRIPTION("trial.collection.5.description"), // Transform your Minecraft world into a comic!
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_6_TITLE("trial.collection.6.title"), // Relics of Privateers
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_6_DESCRIPTION("trial.collection.6.description"), // Vast tropical wilderness on a whirlwind hunt for treasure!
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_7_TITLE("trial.collection.7.title"), // Greek Mythology Mash-up
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_7_DESCRIPTION("trial.collection.7.description"), // Explore an ancient world, texture pack and skins!
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_8_TITLE("trial.collection.8.title"), // Winter Mini-Games Festival
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_8_DESCRIPTION("trial.collection.8.description"), // Playgrounds filled with games and challenges!
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_9_TITLE("trial.collection.9.title"), // Pastel Skin Pack
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_9_DESCRIPTION("trial.collection.9.description"), // Get ready for an explosion of rainbow pastel happiness!
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_10_TITLE("trial.collection.10.title"), // Plastic Texture Pack
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_10_DESCRIPTION("trial.collection.10.description"), // Make your worlds simple, colorful and vibrant!
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_11_TITLE("trial.collection.11.title"), // Skin Pack 1
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_11_DESCRIPTION("trial.collection.11.description"), // Customize your character with this selection of skins!
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_12_TITLE("trial.collection.12.title"), // Villains Skin Pack
        @PowerNukkitOnly @Since("FUTURE") COLLECTION_12_DESCRIPTION("trial.collection.12.description"), // Dress as a Cake Maniac, Frankencrafter, or Worse!
        @PowerNukkitOnly @Since("FUTURE") INCLUDES("trial.includes"), // Includes
        @PowerNukkitOnly @Since("FUTURE") SURVIVAL_MODE_TITLE("trial.survival.mode.title"), // SURVIVAL
        @PowerNukkitOnly @Since("FUTURE") CREATIVE_MODE_TITLE("trial.creative.mode.title"), // CREATIVE
        @PowerNukkitOnly @Since("FUTURE") SURVIVAL_MODE_1_INTRO_DESCRIPTION("trial.survival.mode.1.intro_description"), // The original Minecraft experience: collect resources to craft tools and build structures, find and farm food to manage your hunger, battle dangerous mobs, and explore a vast world.
        @PowerNukkitOnly @Since("FUTURE") SURVIVAL_MODE_2_INTRO_DESCRIPTION("trial.survival.mode.2.intro_description"), // Start by collecting some wood and dirt for a makeshift home to help you survive the first night! From there it's all up to you.
        @PowerNukkitOnly @Since("FUTURE") CREATIVE_MODE_1_INTRO_DESCRIPTION("trial.creative.mode.1.intro_description"), // Build anything you can imagine in Creative Mode. Take no damage, fly through the skies, and enjoy instant access to every block in the game! This mode lets you focus on crafting and gives you everything you need to build something beautiful!
        @PowerNukkitOnly @Since("FUTURE") CREATIVE_MODE_2_INTRO_DESCRIPTION("trial.creative.mode.2.intro_description"), // You'll also have access to Inspiration Island, a tutorial world and introduction to Creative mode that'll teach you how to be a master builder in no time! You can find more great worlds like this in Minecraft Marketplace.
        @PowerNukkitOnly @Since("FUTURE") TOUR_MARKETPLACE("trial.tour.marketplace"), // TOUR THE MARKETPLACE
        @PowerNukkitOnly @Since("FUTURE") WORLD_TITLE("trial.world.title"), // Which Trial World?
        ;
        private final String code; Trial(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum RatingPopUp implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TITLE("ratingPopUp.title"), // Are you enjoying Minecraft?
        ;
        private final String code; RatingPopUp(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum FeedbackPopup implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TITLE("feedbackPopup.title"), // Do you have any feedback for us?
        ;
        private final String code; FeedbackPopup(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Tutorial implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") EDU_MENUTITLE("tutorial.edu.menuTitle"), // Learn to Play
        @PowerNukkitOnly @Since("FUTURE") EDU_TITLE("tutorial.edu.title"), // Tutorials
        ;
        private final String code; Tutorial(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Utility implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ZIPFILE("utility.zipFile"), // Zip File
        @PowerNukkitOnly @Since("FUTURE") PDFFILE("utility.pdfFile"), // PDF File
        ;
        private final String code; Utility(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Verification implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") NOLICENSE_TITLE("verification.nolicense.title"), // License Error
        @PowerNukkitOnly @Since("FUTURE") NOLICENSE_DESCRIPTION("verification.nolicense.description"), // We're having trouble verifying that you own Minecraft on this device. Make sure you have downloaded and installed Minecraft from the store. Or simply reconnect to the internet and try again.
        ;
        private final String code; Verification(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Autosave implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TITLE("autosave.title"), // Autosave
        @PowerNukkitOnly @Since("FUTURE") INFO_GENERAL("autosave.info.general"), // When you see this icon, we are saving your game. Do not turn off your device while this icon is on screen.
        @PowerNukkitOnly @Since("FUTURE") INFO_NX("autosave.info.nx"), // When you see this icon, we are saving your game. Do not turn off your Nintendo Switch while this icon is on screen.
        @PowerNukkitOnly @Since("FUTURE") INFO_XBOX("autosave.info.xbox"), // When you see this icon, we are saving your game. Do not turn off your Xbox while this icon is on screen.
        @PowerNukkitOnly @Since("FUTURE") INFO_DESKTOP("autosave.info.desktop"), // When you see this icon, we are saving your game. Do not turn off your computer while this icon is on screen.
        ;
        private final String code; Autosave(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Xbox implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") SIGNIN_ERROR("xbox.signin.error"), // Please sign in with your Microsoft Account to play with friends, earn gamerscore and achievements.
        @PowerNukkitOnly @Since("FUTURE") SIGNIN_ERROR_POCKET_LINE1("xbox.signin.error.pocket.line1"), // Thanks for testing Realms! The features are not final and you might run into bugs.  Send us feedback! We're listening.
        @PowerNukkitOnly @Since("FUTURE") SIGNIN_ERROR_POCKET_LINE3("xbox.signin.error.pocket.line3"), // During this test, everyone will need to sign in with a Microsoft Account so they can be sent invites and added to Realms.
        @PowerNukkitOnly @Since("FUTURE") CONNECTION_ERROR("xbox.connection.error"), // Disconnected from Microsoft Account
        @PowerNukkitOnly @Since("FUTURE") SIGNIN("xbox.signin"), // Sign In
        @PowerNukkitOnly @Since("FUTURE") SIGNIN_BETA_BLOCKED("xbox.signin.beta.blocked"), // Signing in with a Microsoft Account is not available on the beta at this time.
        @PowerNukkitOnly @Since("FUTURE") SIGNIN_ENTERCODE("xbox.signin.enterCode"), // And enter this code:
        @PowerNukkitOnly @Since("FUTURE") SIGNIN_LETSPLAY("xbox.signin.letsPlay"), // Let's Play!
        @PowerNukkitOnly @Since("FUTURE") SIGNIN_MESSAGE("xbox.signin.message"), // Sign in with your Free Microsoft Account to experience the full world of Minecraft.
        @PowerNukkitOnly @Since("FUTURE") SIGNIN_URL("xbox.signin.url"), // https://aka.ms/remoteconnect
        @PowerNukkitOnly @Since("FUTURE") SIGNIN_USEDIFFERENTACCOUNT("xbox.signin.useDifferentAccount"), // Sign in with a different Microsoft Account
        @PowerNukkitOnly @Since("FUTURE") SIGNIN_WEBSITE("xbox.signin.website"), // Visit this website on another device:
        @PowerNukkitOnly @Since("FUTURE") SIGNIN_WELCOME("xbox.signin.welcome"), // Welcome!
        @PowerNukkitOnly @Since("FUTURE") SIGNIN_NEWACCOUNT_WELCOME("xbox.signin.newaccount.welcome"), // Welcome!
        @PowerNukkitOnly @Since("FUTURE") SIGNIN_NEWACCOUNT_INFO("xbox.signin.newaccount.info"), // Your friends and their friends can see if you're online. your game clips, and your recent apps and games. You can change these on Xbox.com.
        @PowerNukkitOnly @Since("FUTURE") SIGNINFIRST("xbox.signinFirst"), // Sign In First
        @PowerNukkitOnly @Since("FUTURE") SIGNINFREE("xbox.signinFree"), // Sign In For Free
        @PowerNukkitOnly @Since("FUTURE") SIGNOUT("xbox.signout"), // Sign Out
        @PowerNukkitOnly @Since("FUTURE") SIGNINQUESTION("xbox.signinquestion"), // Sign In?
        @PowerNukkitOnly @Since("FUTURE") NOTNOW("xbox.notnow"), // Not Now
        @PowerNukkitOnly @Since("FUTURE") SIGNINGIN("xbox.signingin"), // Signing in with your Microsoft Account...
        @PowerNukkitOnly @Since("FUTURE") SIGNINGIN_OFFLINE("xbox.signingin.offline"), // Signing in
        @PowerNukkitOnly @Since("FUTURE") FIRSTSIGNIN_LINE1("xbox.firstsignin.line1"), // Welcome to Minecraft! Use a Microsoft Account to start connecting with the Minecraft community, where PCs, consoles, phones, and tablets can all play together. And the best part?
        @PowerNukkitOnly @Since("FUTURE") FIRSTSIGNIN_LINE2("xbox.firstsignin.line2"), // It's FREE!
        @PowerNukkitOnly @Since("FUTURE") FIRSTSIGNIN_LINE3("xbox.firstsignin.line3"), // Don't have an account? Create one now to earn achievements and join Realms and Servers!
        @PowerNukkitOnly @Since("FUTURE") FIRSTSIGNIN_LINE3_NOREALMSORSERVERS("xbox.firstsignin.line3.norealmsOrServers"), // Don't have an account? Create one now to earn achievements and play with your cross-platform friends!
        @PowerNukkitOnly @Since("FUTURE") FAILEDSIGNIN_BODY("xbox.failedsignin.body"), // We could not sign you into your Microsoft Account. Access to Realms, Profiles, and your Marketplace items will be limited. Please try again later.
        @PowerNukkitOnly @Since("FUTURE") FAILEDSIGNIN_ERROR("xbox.failedsignin.error"), // Error Code:
        @PowerNukkitOnly @Since("FUTURE") DEV_WRONGSANDBOXSIGNINFAILED_TITLE("xbox.dev_wrongSandboxSigninFailed.title"), // Something Went Wrong
        @PowerNukkitOnly @Since("FUTURE") DEV_WRONGSANDBOXSIGNINFAILED_LINE1("xbox.dev_wrongSandboxSigninFailed.line1"), // Failed to sign in to %s sandbox. Please change sandboxes and restart Minecraft or sign in with a different account. Sandbox will be %s on restart. 
        @PowerNukkitOnly @Since("FUTURE") DEV_WRONGSANDBOXSIGNINFAILED_BUTTON_DEV("xbox.dev_wrongSandboxSigninFailed.button.dev"), // Change To Dev Sandbox
        @PowerNukkitOnly @Since("FUTURE") DEV_WRONGSANDBOXSIGNINFAILED_BUTTON_RETAIL("xbox.dev_wrongSandboxSigninFailed.button.retail"), // Change To Retail Sandbox
        @PowerNukkitOnly @Since("FUTURE") DEV_WRONGSANDBOXSIGNINFAILED_BUTTON_CLEARXBL("xbox.dev_wrongSandboxSigninFailed.button.clearXbl"), // Clear Account Sign in Data
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSSIGNIN_LINE1("xbox.achievementssignin.line1"), // Achievements and Gamerscore mark your progress through Minecraft.
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSSIGNIN_LINE2("xbox.achievementssignin.line2"), // Sign in with a Microsoft Account to start earning them!
        @PowerNukkitOnly @Since("FUTURE") ADDFRIENDSIGNIN_LINE1("xbox.addfriendsignin.line1"), // Find your friends by their Gamertag to see when they are online.
        @PowerNukkitOnly @Since("FUTURE") ADDFRIENDSIGNIN_LINE2("xbox.addfriendsignin.line2"), // Sign in with a Microsoft Account to start adding friends!
        @PowerNukkitOnly @Since("FUTURE") INVITESIGNIN_LINE1("xbox.invitesignin.line1"), // Invite your friends by their Gamertag to see their worlds when they are online.
        @PowerNukkitOnly @Since("FUTURE") INVITESIGNIN_LINE2("xbox.invitesignin.line2"), // Sign in with a Microsoft Account to start inviting friends!
        @PowerNukkitOnly @Since("FUTURE") THIRDPARTYSIGNIN_LINE1("xbox.thirdpartysignin.line1"), // Awesome mini-games and new players are waiting for you! But first, '%s' would like to know who you are.
        @PowerNukkitOnly @Since("FUTURE") THIRDPARTYSIGNIN_LINE2("xbox.thirdpartysignin.line2"), // You need to sign in with a Microsoft Account to connect!
        @PowerNukkitOnly @Since("FUTURE") SIGNINLONG("xbox.signInLong"), // Sign in for Free!
        @PowerNukkitOnly @Since("FUTURE") SIGNOUTLONG("xbox.signOutLong"), // Sign out of your Microsoft Account
        @PowerNukkitOnly @Since("FUTURE") EXTERNALSERVER_TITLE("xbox.externalServer.title"), // Play on a Server
        @PowerNukkitOnly @Since("FUTURE") EXTERNALSERVER_LINE1("xbox.externalServer.line1"), // Servers offer some of the most creative ways to play Minecraft! We just need you to sign in so that we can make sure you have permission to play online with new people.
        @PowerNukkitOnly @Since("FUTURE") GENERICSIGNIN_LINE1("xbox.genericsignin.line1"), // Your Minecraft account lets you play online multiplayer with friends on PCs and mobile devices. And the best part? 
        @PowerNukkitOnly @Since("FUTURE") GENERICSIGNIN_LINE2("xbox.genericsignin.line2"), // It's FREE!
        @PowerNukkitOnly @Since("FUTURE") GENERICSIGNIN_LINE3("xbox.genericsignin.line3"), // You can use it anywhere you play Minecraft.
        @PowerNukkitOnly @Since("FUTURE") DISCONECTIONSCREEN_NOTSIGNEDIN("xbox.disconectionscreen.notSignedIn"), // Sign in with your Microsoft Account to play with friends.
        @PowerNukkitOnly @Since("FUTURE") DISCONECTIONSCREEN_MULTIPLAYERNOTALLOWED("xbox.disconectionscreen.multiplayerNotAllowed"), // This Microsoft Account does not have permission to join multiplayer games.
        @PowerNukkitOnly @Since("FUTURE") DISCONECTIONSCREEN_ACCESSDENIED("xbox.disconectionscreen.accessDenied"), // You must be friends with someone in this game in order to join.
        @PowerNukkitOnly @Since("FUTURE") FRIENDFINDER_ENTERGAMERTAG("xbox.friendfinder.enterGamertag"), // Enter Gamertag
        @PowerNukkitOnly @Since("FUTURE") FRIENDFINDER_FINDFRIENDS("xbox.friendfinder.findFriends"), // Find Friends by Gamertag
        @PowerNukkitOnly @Since("FUTURE") FRIENDFINDER_SEARCHINGFORGAMERTAG("xbox.friendfinder.searchingForGamertag"), // Searching
        @PowerNukkitOnly @Since("FUTURE") FRIENDFINDER_GAMERTAGNOTFOUND("xbox.friendfinder.gamertagNotFound"), // Gamertag Not Found
        @PowerNukkitOnly @Since("FUTURE") PROFILE_ADDFRIEND("xbox.profile.addFriend"), // Add Friend
        @PowerNukkitOnly @Since("FUTURE") PROFILE_ADDFRIEND_SUCCESS("xbox.profile.addFriend.success"), // Success! %s was added to your friend list.
        @PowerNukkitOnly @Since("FUTURE") PROFILE_BLOCK("xbox.profile.block"), // Block
        @PowerNukkitOnly @Since("FUTURE") PROFILE_CURRENTLYPLAYING("xbox.profile.currentlyPlaying"), // Currently playing %s
        @PowerNukkitOnly @Since("FUTURE") PROFILE_FAVORITE("xbox.profile.favorite"), // Favorite
        @PowerNukkitOnly @Since("FUTURE") PROFILE_FAVORITEHELPERTEXT("xbox.profile.favoriteHelperText"), // Favorite friends go first on your friends list. You'll see when they go online or start broadcasting.
        @PowerNukkitOnly @Since("FUTURE") PROFILE_FRIEND("xbox.profile.friend"), // Friend
        @PowerNukkitOnly @Since("FUTURE") PROFILE_FRIENDHELPERTEXT("xbox.profile.friendHelperText"), // Follow %s. After you both are friends, you can invite them to your game.
        @PowerNukkitOnly @Since("FUTURE") PROFILE_MUTE("xbox.profile.mute"), // Mute
        @PowerNukkitOnly @Since("FUTURE") PROFILE_REALNAME("xbox.profile.realName"), // Manage your privacy settings for sharing your real name in the Xbox app.
        @PowerNukkitOnly @Since("FUTURE") PROFILE_REMOVEFRIEND("xbox.profile.removeFriend"), // Unfriend
        @PowerNukkitOnly @Since("FUTURE") PROFILE_REPORT("xbox.profile.report"), // Report
        @PowerNukkitOnly @Since("FUTURE") REPORT_GAMERTAG("xbox.report.gamertag"), // Report %s
        @PowerNukkitOnly @Since("FUTURE") REPORT_OPTIONALTEXT("xbox.report.optionalText"), // Enter Text Here (optional)
        @PowerNukkitOnly @Since("FUTURE") REPORT_TOAST("xbox.report.toast"), // You have reported %s
        @PowerNukkitOnly @Since("FUTURE") REPORT_TOASTERROR("xbox.report.toastError"), // We were unable to send your report. Try again soon.
        @PowerNukkitOnly @Since("FUTURE") REPORT_CHEATING("xbox.report.cheating"), // Cheating
        @PowerNukkitOnly @Since("FUTURE") REPORT_NAMEORGAMERTAG("xbox.report.nameOrGamertag"), // Player Name or Gamertag
        @PowerNukkitOnly @Since("FUTURE") REPORT_QUITTINGEARLY("xbox.report.quittingEarly"), // Quitting early
        @PowerNukkitOnly @Since("FUTURE") REPORT_UNSPORTINGBEHAVIOR("xbox.report.unsportingBehavior"), // Unsporting behavior
        @PowerNukkitOnly @Since("FUTURE") REPORT_VOICECOMMUNICATION("xbox.report.voiceCommunication"), // Voice communication
        @PowerNukkitOnly @Since("FUTURE") REPORT_WHYREPORT("xbox.report.whyReport"), // Why are you reporting %s?
        ;
        private final String code; Xbox(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Authserver implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") NOTAVAILABLE("authserver.notavailable"), // Something went wrong.  We can't verify that the server you are trying to connect to is one that we trust.  We recommend that you try again later.
        @PowerNukkitOnly @Since("FUTURE") AUTHFAILED("authserver.authfailed"), // This is bad.  This server failed our verification test.  Someone we don't trust might be pretending to be a trusted server.
        ;
        private final String code; Authserver(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Platform implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") MODEL_UNKNOWN("platform.model.unknown"), // UNKNOWN
        ;
        private final String code; Platform(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Packdiscoveryerror implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") MANIFEST_PACK_ERROR("packdiscoveryerror.manifest_pack_error"), // Unable to open pack.
        @PowerNukkitOnly @Since("FUTURE") INCOMPLETE_PACK("packdiscoveryerror.incomplete_pack"), // Incomplete pack.
        @PowerNukkitOnly @Since("FUTURE") UNSUPPORTED_FILE_FORMAT("packdiscoveryerror.unsupported_file_format"), // Not a valid zip archive.
        @PowerNukkitOnly @Since("FUTURE") MISSING_MANIFEST("packdiscoveryerror.missing_manifest"), // Unable to find manifest in pack.
        @PowerNukkitOnly @Since("FUTURE") MANIFEST_PARSE_ERROR("packdiscoveryerror.manifest_parse_error"), // Unable to parse pack manifest with stack: %s
        @PowerNukkitOnly @Since("FUTURE") REQUIRED_MANIFEST_PROPERTY_MISSING("packdiscoveryerror.required_manifest_property_missing"), // Missing '%s' element in pack manifest.
        @PowerNukkitOnly @Since("FUTURE") REQUIRED_MANIFEST_PROPERTY_WRONG_TYPE("packdiscoveryerror.required_manifest_property_wrong_type"), // Required '%s' element is the wrong type in pack manifest.
        @PowerNukkitOnly @Since("FUTURE") REQUIRED_MANIFEST_PROPERTY_EMPTY("packdiscoveryerror.required_manifest_property_empty"), // Required '%s' element is empty in pack manifest.
        @PowerNukkitOnly @Since("FUTURE") REQUIRED_MANIFEST_PROPERTY_INVALID_VALUE("packdiscoveryerror.required_manifest_property_invalid_value"), // Provided '%s' element has an invalid value in pack manifest.
        @PowerNukkitOnly @Since("FUTURE") MALFORMED_UUID("packdiscoveryerror.malformed_uuid"), // Provided '%s' element is not a valid UUID in pack manifest .
        @PowerNukkitOnly @Since("FUTURE") MALFORMED_VERSION("packdiscoveryerror.malformed_version"), // Provided '%s' element is not SemVer (semver.org) compliant in pack manifest.
        @PowerNukkitOnly @Since("FUTURE") MISSING_MODULES("packdiscoveryerror.missing_modules"), // Missing '%s' element in pack manifest; Defaulting to resource pack.
        @PowerNukkitOnly @Since("FUTURE") MISSING_DEPENDENCY("packdiscoveryerror.missing_dependency"), // Missing dependency with ID '%s' and version '%s'.
        @PowerNukkitOnly @Since("FUTURE") UNSUPPORTED_FORMAT_VERSION("packdiscoveryerror.unsupported_format_version"), // Provided format version '%s' is not supported.
        @PowerNukkitOnly @Since("FUTURE") DUPLICATE_UUID("packdiscoveryerror.duplicate_uuid"), // Provided UUID '%s' element already exists in pack manifest.
        @PowerNukkitOnly @Since("FUTURE") MULTIPLE_MODULES("packdiscoveryerror.multiple_modules"), // Multiple conflicting modules detected in pack manifest.
        @PowerNukkitOnly @Since("FUTURE") INVALID_CAPABILITY_VALUE("packdiscoveryerror.invalid_capability_value"), // Pack capability '%s' is not supported.
        @PowerNukkitOnly @Since("FUTURE") UNSUPPORTED_FORMAT_PATCH("packdiscoveryerror.unsupported_format_patch"), // Revision component provided in version '%s' will be ignored and treated as 0.
        @PowerNukkitOnly @Since("FUTURE") IGNORED_PROPERTY("packdiscoveryerror.ignored_property"), // The property '%s' is not used for this type of content. The field will be ignored.
        @PowerNukkitOnly @Since("FUTURE") VERSION_TOO_HIGH("packdiscoveryerror.version_too_high"), // The property '%s' has a version of '%s' which is too high.  The highest value we accept is '%s'.
        @PowerNukkitOnly @Since("FUTURE") VERSION_TOO_LOW("packdiscoveryerror.version_too_low"), // The property '%s' has a version of '%s' which is too low.  The lowest value we accept is '%s'.
        @PowerNukkitOnly @Since("FUTURE") FORMAT_VERSION_1_ENGINE_VERSION_CAP("packdiscoveryerror.format_version_1_engine_version_cap"), // The property '%s` must have a value set less than `%s`.  To use a higher version, you need to use format version 2.
        ;
        private final String code; Packdiscoveryerror(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Packupgradewarning implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") INVALIDPACKTYPE("packupgradewarning.invalidpacktype"), // Provided '%s' element has an invalid value in pack manifest; Defaulting to resource pack.
        @PowerNukkitOnly @Since("FUTURE") REQUIRED_MANIFEST_PROPERTY_MISSING("packupgradewarning.required_manifest_property_missing"), // Missing '%s' element in pack manifest; Defaulting to '%s'.
        @PowerNukkitOnly @Since("FUTURE") REQUIRED_MANIFEST_PROPERTY_EMPTY("packupgradewarning.required_manifest_property_empty"), // Required '%s' element is empty in pack manifest; Defaulting to '%s'.
        @PowerNukkitOnly @Since("FUTURE") MALFORMED_UUID("packupgradewarning.malformed_uuid"), // Provided '%s' element is not a valid UUID in pack manifest; Defaulting to '%s'.
        @PowerNukkitOnly @Since("FUTURE") MALFORMED_VERSION("packupgradewarning.malformed_version"), // Provided '%s' element is not SemVer (semver.org) compliant in pack manifest; Defaulting to '%s'.
        @PowerNukkitOnly @Since("FUTURE") MANIFEST_UPGRADED("packupgradewarning.manifest_upgraded"), // This pack manifest has been upgraded to a new version.
        @PowerNukkitOnly @Since("FUTURE") DUPLICATE_UUID("packupgradewarning.duplicate_uuid"), // Provided UUID '%s' element already exists in pack manifest; Defaulting to '%s'.
        @PowerNukkitOnly @Since("FUTURE") MULTIPLE_MODULES("packupgradewarning.multiple_modules"), // Multiple conflicting modules detected in pack manifest; Defaulting to '%s'.
        ;
        private final String code; Packupgradewarning(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Pack implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") AUTHORS_LABEL("pack.authors.label"), // Author: %s
        @PowerNukkitOnly @Since("FUTURE") AUTHORS_NONE("pack.authors.none"), // Unknown
        ;
        private final String code; Pack(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Manifestvalidation implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TITLE("manifestvalidation.title"), // Pack Info
        @PowerNukkitOnly @Since("FUTURE") ERROR("manifestvalidation.error"), // Error
        @PowerNukkitOnly @Since("FUTURE") INFO("manifestvalidation.info"), // Info
        @PowerNukkitOnly @Since("FUTURE") NOERROR("manifestvalidation.noerror"), // No errors were found
        @PowerNukkitOnly @Since("FUTURE") WARNING("manifestvalidation.warning"), // Warning
        @PowerNukkitOnly @Since("FUTURE") DELETE("manifestvalidation.delete"), // Delete
        @PowerNukkitOnly @Since("FUTURE") DELETE_CONFIRM_TITLE("manifestvalidation.delete.confirm_title"), // Delete Pack?
        @PowerNukkitOnly @Since("FUTURE") DELETE_CONFIRM_BODY("manifestvalidation.delete.confirm_body"), // You are about to delete this resource/behavior pack forever. Are you sure?
        @PowerNukkitOnly @Since("FUTURE") DELETE_CONFIRM_DELETE("manifestvalidation.delete.confirm_delete"), // Delete
        @PowerNukkitOnly @Since("FUTURE") DELETE_CONFIRM_GOBACK("manifestvalidation.delete.confirm_goBack"), // Go Back
        @PowerNukkitOnly @Since("FUTURE") PACKID("manifestvalidation.packid"), // Pack ID:
        @PowerNukkitOnly @Since("FUTURE") PACKVERSION("manifestvalidation.packversion"), // Pack Version:
        @PowerNukkitOnly @Since("FUTURE") FILELOCATION("manifestvalidation.filelocation"), // File Location:
        @PowerNukkitOnly @Since("FUTURE") ERRORLIST("manifestvalidation.errorlist"), // Error List
        @PowerNukkitOnly @Since("FUTURE") FILE("manifestvalidation.file"), // File:
        @PowerNukkitOnly @Since("FUTURE") ISSUE("manifestvalidation.issue"), // Issue:
        @PowerNukkitOnly @Since("FUTURE") UNKOWN_PACKTYPE("manifestvalidation.unkown.packtype"), // Unknown Pack Type
        @PowerNukkitOnly @Since("FUTURE") UNKOWN_PACKTITLE("manifestvalidation.unkown.packtitle"), // Unknown Pack Name
        @PowerNukkitOnly @Since("FUTURE") UNKOWN_PACKDESCRIPTION("manifestvalidation.unkown.packdescription"), // Unknown Pack Description
        @PowerNukkitOnly @Since("FUTURE") UNKOWN_PACKID("manifestvalidation.unkown.packid"), // Unknown Pack ID
        @PowerNukkitOnly @Since("FUTURE") UNKOWN_PACKVERSION("manifestvalidation.unkown.packversion"), // Unknown Pack Version
        @PowerNukkitOnly @Since("FUTURE") NONAME("manifestvalidation.noname"), // Missing Name
        ;
        private final String code; Manifestvalidation(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum UiPackError implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") INVALIDCHILDNAMES("uiPackError.invalidChildNames"), // %s: Child controls must have unique names: %sIn the future this will be an error and this file won't load.
        @PowerNukkitOnly @Since("FUTURE") PARSEERROR("uiPackError.parseError"), // %s: Unable to parse UI JSON file with stack: %s
        @PowerNukkitOnly @Since("FUTURE") MISSINGCONTROL("uiPackError.missingControl"), // %s: Can't find the control: %s
        @PowerNukkitOnly @Since("FUTURE") MISSINGCONTROLTARGET("uiPackError.missingControlTarget"), // %s (%s): Can't find the control '%s' during operation '%s'
        @PowerNukkitOnly @Since("FUTURE") MISSINGARRAYNAME("uiPackError.missingArrayName"), // %s (%s): Missing either the field 'array_name' or 'control_name'. 
        @PowerNukkitOnly @Since("FUTURE") MISSINGCONDITION("uiPackError.missingCondition"), // %s (%s): Missing condition on operation '%s'.
        @PowerNukkitOnly @Since("FUTURE") MISSINGVALUE("uiPackError.missingValue"), // %s (%s): Missing the value for the operation '%s'.
        @PowerNukkitOnly @Since("FUTURE") MISSINGOPERATION("uiPackError.missingOperation"), // %s (%s): Missing operation.
        @PowerNukkitOnly @Since("FUTURE") INVALIDOPERATIONNAME("uiPackError.invalidOperationName"), // %s (%s): Invalid operation '%s'.
        ;
        private final String code; UiPackError(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum JsonValidationError implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TYPEERROR("jsonValidationError.typeError"), // %s: Invalid type for property. Expected %s got %s
        @PowerNukkitOnly @Since("FUTURE") REQUIREDPROPERTYERROR("jsonValidationError.requiredPropertyError"), // %s: Could not find required property '%s'
        @PowerNukkitOnly @Since("FUTURE") INVALIDVALUEERROR("jsonValidationError.invalidValueError"), // %s: Did not find valid value for property. Expected %s
        ;
        private final String code; JsonValidationError(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum ServerUI implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ERRORTITLE("serverUI.errorTitle"), // Error creating form.
        @PowerNukkitOnly @Since("FUTURE") ERRORDESCRIPTION("serverUI.errorDescription"), // Recieved invalid form json. Error:%s
        ;
        private final String code; ServerUI(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Content implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") IMPORT_FAILED("content.import.failed"), // Failed to import '%s'
        @PowerNukkitOnly @Since("FUTURE") IMPORT_FAILED_SUBTITLE("content.import.failed.subtitle"), // See output log for more details
        @PowerNukkitOnly @Since("FUTURE") IMPORT_FAILED_SUBTITLE_DUPLICATE("content.import.failed.subtitle_duplicate"), // Duplicate pack detected
        @PowerNukkitOnly @Since("FUTURE") IMPORT_FAILED_SUBTITLE_MALFORMED_ZIP("content.import.failed.subtitle_malformed_zip"), // Not a valid zip archive
        @PowerNukkitOnly @Since("FUTURE") IMPORT_FAILED_SUBTITLE_PREMIUMCONTENT("content.import.failed.subtitle_premiumcontent"), // Content in this world is not supported by Minecraft: Education Edition.
        @PowerNukkitOnly @Since("FUTURE") IMPORT_FAILED_TITLE_PREMIUMCONTENT("content.import.failed.title_premiumcontent"), // Content Not Supported
        @PowerNukkitOnly @Since("FUTURE") IMPORT_SUCCEEDED("content.import.succeeded"), // Successfully imported '%s'
        @PowerNukkitOnly @Since("FUTURE") IMPORT_SUCCEEDED_WITH_WARNINGS("content.import.succeeded_with_warnings"), // Successfully imported '%s' with warnings
        @PowerNukkitOnly @Since("FUTURE") IMPORT_SUCCEEDED_WITH_WARNINGS_SUBTITLE("content.import.succeeded_with_warnings.subtitle"), // Click here for more info
        @PowerNukkitOnly @Since("FUTURE") IMPORT_STARTED("content.import.started"), // Import started...
        ;
        private final String code; Content(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum WorldTemplate implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") FESTIVEMASHUP2016_NAME("worldTemplate.festivemashup2016.name"), // Festive Mash-up 2016
        @PowerNukkitOnly @Since("FUTURE") REDSTONEMANSION_NAME("worldTemplate.redstonemansion.name"), // Redstone Mansion
        @PowerNukkitOnly @Since("FUTURE") CHINESEMYTHOLOGY_NAME("worldTemplate.chinesemythology.name"), // Chinese Mythology Mash-up
        @PowerNukkitOnly @Since("FUTURE") GREEKMYTHOLOGY_NAME("worldTemplate.GreekMythology.name"), // Greek Mythology Mash-up
        @PowerNukkitOnly @Since("FUTURE") SKYRIM_NAME("worldTemplate.Skyrim.name"), // Skyrim Mash-up
        ;
        private final String code; WorldTemplate(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum EduTemplateWorld implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") THEAGENTTRIALS_NAME("eduTemplateWorld.theAgentTrials.name"), // The Agent Trials
        @PowerNukkitOnly @Since("FUTURE") TUTORIALWORLD_NAME("eduTemplateWorld.tutorialWorld.name"), // Tutorial World
        @PowerNukkitOnly @Since("FUTURE") MUSHROOMISLAND_NAME("eduTemplateWorld.mushroomIsland.name"), // Mushroom Island
        @PowerNukkitOnly @Since("FUTURE") MOOSHROOMISLAND_NAME("eduTemplateWorld.mooshroomIsland.name"), // Mushroom Island
        @PowerNukkitOnly @Since("FUTURE") STARTERTOWN_NAME("eduTemplateWorld.starterTown.name"), // Starter Town
        @PowerNukkitOnly @Since("FUTURE") TUTORIALVOLUMEII_NAME("eduTemplateWorld.tutorialVolumeII.name"), // Tutorial Volume II
        @PowerNukkitOnly @Since("FUTURE") BLOCKSOFGRASS_NAME("eduTemplateWorld.blocksOfGrass.name"), // Blocks of Grass
        ;
        private final String code; EduTemplateWorld(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum WorldConversion implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") FEEDBACK_DONE_TITLE("worldConversion.feedback.done.title"), // World Submitted
        @PowerNukkitOnly @Since("FUTURE") FEEDBACK_FAILED_TITLE("worldConversion.feedback.failed.title"), // World Submission Failed
        @PowerNukkitOnly @Since("FUTURE") FEEDBACK_DONE_MSG("worldConversion.feedback.done.msg"), // Thank you for sending us a copy of your world and helping us find bugs! We are hard at work fixing things and won't be able to get back to you about this specific world. Here's your receipt confirming that we received it: %s
        @PowerNukkitOnly @Since("FUTURE") FEEDBACK_FAILED_MSG("worldConversion.feedback.failed.msg"), // Oops! We weren't able to receive your world. Try checking your internet connection or sending it again later.
        @PowerNukkitOnly @Since("FUTURE") FEEDBACK_PROMPT_TITLE("worldConversion.feedback.prompt.title"), // Submit World
        @PowerNukkitOnly @Since("FUTURE") FEEDBACK_PROMPT_MSG("worldConversion.feedback.prompt.msg"), // Did your old world not look or work the way it should have? Send us your world and help us find the bugs!
        ;
        private final String code; WorldConversion(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum WorldConversionComplete implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") TITLE("worldConversionComplete.title"), // Conversion Complete
        @PowerNukkitOnly @Since("FUTURE") LOAD_PROMPT("worldConversionComplete.load_prompt"), // Would you like to play your world now?
        ;
        private final String code; WorldConversionComplete(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum AddServer implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ADD("addServer.add"), // Done
        @PowerNukkitOnly @Since("FUTURE") ENTERIP("addServer.enterIp"), // Server Address
        @PowerNukkitOnly @Since("FUTURE") ENTERNAME("addServer.enterName"), // Server Name
        @PowerNukkitOnly @Since("FUTURE") HIDEADDRESS("addServer.hideAddress"), // Hide Address
        @PowerNukkitOnly @Since("FUTURE") RESOURCEPACK("addServer.resourcePack"), // Server Resource Packs
        @PowerNukkitOnly @Since("FUTURE") RESOURCEPACK_DISABLED("addServer.resourcePack.disabled"), // Disabled
        @PowerNukkitOnly @Since("FUTURE") RESOURCEPACK_ENABLED("addServer.resourcePack.enabled"), // Enabled
        @PowerNukkitOnly @Since("FUTURE") RESOURCEPACK_PROMPT("addServer.resourcePack.prompt"), // Prompt
        @PowerNukkitOnly @Since("FUTURE") TITLE("addServer.title"), // Edit Server Info
        @PowerNukkitOnly @Since("FUTURE") ALREADYADDED("addServer.alreadyAdded"), // This server has already been added
        ;
        private final String code; AddServer(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum ExternalServerScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ADDSERVER("externalServerScreen.addServer"), // Add Server
        @PowerNukkitOnly @Since("FUTURE") ADDSERVERTITLE("externalServerScreen.addServerTitle"), // Add Server:
        @PowerNukkitOnly @Since("FUTURE") ADDSERVERDESCRIPTION("externalServerScreen.addServerDescription"), // Adding an external server requires knowing the server name and server IP address. Once added, the server can be found in the server list for play.
        @PowerNukkitOnly @Since("FUTURE") HEADER("externalServerScreen.header"), // Add External Server
        @PowerNukkitOnly @Since("FUTURE") LABEL("externalServerScreen.label"), // Add server by IP/Address.
        @PowerNukkitOnly @Since("FUTURE") SERVERADDRESS("externalServerScreen.serverAddress"), // IP/Address
        @PowerNukkitOnly @Since("FUTURE") SERVERADDRESSINPUT("externalServerScreen.serverAddressInput"), // Server IP or Address
        @PowerNukkitOnly @Since("FUTURE") SERVERNAME("externalServerScreen.serverName"), // Name
        @PowerNukkitOnly @Since("FUTURE") SERVERNAMEINPUT("externalServerScreen.serverNameInput"), // Server Name
        @PowerNukkitOnly @Since("FUTURE") SERVERPORT("externalServerScreen.serverPort"), // Port
        @PowerNukkitOnly @Since("FUTURE") SERVERPORTINPUT("externalServerScreen.serverPortInput"), // Server Port
        ;
        private final String code; ExternalServerScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Survey implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") FEEDBACKBUTTON("survey.feedbackButton"), // Send Us Your Feedback
        @PowerNukkitOnly @Since("FUTURE") LABEL("survey.label"), // Select all that apply:
        @PowerNukkitOnly @Since("FUTURE") LINE1("survey.line1"), // Took too long to load
        @PowerNukkitOnly @Since("FUTURE") LINE2("survey.line2"), // Got stuck on an error message
        @PowerNukkitOnly @Since("FUTURE") LINE3("survey.line3"), // Asked too many questions
        @PowerNukkitOnly @Since("FUTURE") LINE4("survey.line4"), // I didn't know it was free
        @PowerNukkitOnly @Since("FUTURE") LINE5("survey.line5"), // I thought I needed a Xbox console
        @PowerNukkitOnly @Since("FUTURE") LINE6("survey.line6"), // Not interested
        @PowerNukkitOnly @Since("FUTURE") TITLE("survey.title"), // Feedback: Why didn't you sign in?
        ;
        private final String code; Survey(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Tips implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") EDU_1("tips.edu.1"), // You can hold down Shift to take a close up picture using the Camera.
        @PowerNukkitOnly @Since("FUTURE") EDU_2("tips.edu.2"), // Unlike Signs, you can edit Slates, Posters, and Boards over and over again.
        @PowerNukkitOnly @Since("FUTURE") EDU_3("tips.edu.3"), // Use Ctrl+B to turn on text-to-speech capabilities for in-game chat.
        @PowerNukkitOnly @Since("FUTURE") EDU_4("tips.edu.4"), // You can export your Minecraft world to share it with others.
        @PowerNukkitOnly @Since("FUTURE") EDU_5("tips.edu.5"), // To have your peers connect to your world, pause your game and share your join code.
        @PowerNukkitOnly @Since("FUTURE") EDU_6("tips.edu.6"), // Remember that to use slash commands, you need to enable cheats in your world.
        @PowerNukkitOnly @Since("FUTURE") EDU_7("tips.edu.7"), // Done with your creation? Have others tour your world as visitors to protect your work.
        @PowerNukkitOnly @Since("FUTURE") EDU_8("tips.edu.8"), // To use code builder, press C on your keyboard or touch the Agent icon at the top of your screen!
        @PowerNukkitOnly @Since("FUTURE") EDU_9("tips.edu.9"), // Use the Library to find new game worlds to build in.
        @PowerNukkitOnly @Since("FUTURE") EDU_10("tips.edu.10"), // Looking for a specific biome? Try the Library.
        @PowerNukkitOnly @Since("FUTURE") EDU_11("tips.edu.11"), // NPC stands for Non-Player Character.
        @PowerNukkitOnly @Since("FUTURE") EDU_12("tips.edu.12"), // In Survival Mode, players must find their own resources.
        @PowerNukkitOnly @Since("FUTURE") EDU_13("tips.edu.13"), // In Creative Mode, players can freely choose to build from any of the blocks in Minecraft.
        @PowerNukkitOnly @Since("FUTURE") EDU_14("tips.edu.14"), // Your code building robot helper is called the Agent.
        @PowerNukkitOnly @Since("FUTURE") EDU_15("tips.edu.15"), // Redstone can be used in Minecraft to create circuits and simple machines.
        @PowerNukkitOnly @Since("FUTURE") EDU_16("tips.edu.16"), // You can copy-and-paste from a text editor to a slate, poster, or board.
        @PowerNukkitOnly @Since("FUTURE") EDU_17("tips.edu.17"), // You can toggle Keyboard and Mouse Hints on or off in the Settings menu under Controls.
        @PowerNukkitOnly @Since("FUTURE") EDU_18("tips.edu.18"), // You can toggle Auto Jump on or off in the Settings menu under Controls.
        @PowerNukkitOnly @Since("FUTURE") EDU_19("tips.edu.19"), // While in Creative Mode, quickly press jump twice to fly.
        @PowerNukkitOnly @Since("FUTURE") EDU_20("tips.edu.20"), // Choose a Default Game Mode when creating world to specify the type of gameplay you want.
        @PowerNukkitOnly @Since("FUTURE") EDU_21("tips.edu.21"), // Use the command "/setworldspawn" to have new players begin playing where you are standing.
        @PowerNukkitOnly @Since("FUTURE") EDU_22("tips.edu.22"), // Choose a default player permission when creating your world to specify the permissions you want your classmates to have when they join.
        @PowerNukkitOnly @Since("FUTURE") EDU_23("tips.edu.23"), // Press I on your keyboard or touch the Immersive Reader icon to read or translate in-game text.
        @PowerNukkitOnly @Since("FUTURE") GAME_1("tips.game.1"), // Use seagrass to attract and breed sea turtles.
        @PowerNukkitOnly @Since("FUTURE") GAME_2("tips.game.2"), // Protect baby turtles from hostile mobs!
        @PowerNukkitOnly @Since("FUTURE") GAME_3("tips.game.3"), // Baby turtles will drop scutes when they grow - these can be crafted into turtle shells.
        @PowerNukkitOnly @Since("FUTURE") GAME_4("tips.game.4"), // Use a bed to set your respawn point during the day.
        @PowerNukkitOnly @Since("FUTURE") GAME_5("tips.game.5"), // Brew some water breathing potions for underwater exploration!
        @PowerNukkitOnly @Since("FUTURE") GAME_6("tips.game.6"), // Dolphins can lead you to shipwrecks and underwater ruins, feed them cod and follow their trail!
        @PowerNukkitOnly @Since("FUTURE") GAME_7("tips.game.7"), // Use shears to carve a pumpkin.
        @PowerNukkitOnly @Since("FUTURE") GAME_8("tips.game.8"), // Use phantom membranes to repair your elytra.
        @PowerNukkitOnly @Since("FUTURE") GAME_9("tips.game.9"), // There are 3587 types of tropical fish!
        @PowerNukkitOnly @Since("FUTURE") GAME_10("tips.game.10"), // Sea pickles can be smelted into lime green dye.
        @PowerNukkitOnly @Since("FUTURE") GAME_11("tips.game.11"), // Use haybales to breed Llamas!
        @PowerNukkitOnly @Since("FUTURE") GAME_12("tips.game.12"), // Compasses always point to a Lodestone or the world spawn - craft one to find your way!
        @PowerNukkitOnly @Since("FUTURE") GAME_13("tips.game.13"), // Trade with villagers to obtain food, tools, and even treasure maps!
        @PowerNukkitOnly @Since("FUTURE") GAME_14("tips.game.14"), // Did you know you can hold a map in your off-hand?
        @PowerNukkitOnly @Since("FUTURE") GAME_15("tips.game.15"), // Leads can be used on boats.
        @PowerNukkitOnly @Since("FUTURE") GAME_16("tips.game.16"), // Sneak or wear frost walker boots to walk safely on magma blocks.
        @PowerNukkitOnly @Since("FUTURE") GAME_17("tips.game.17"), // You can gather cob webs using shears.
        @PowerNukkitOnly @Since("FUTURE") GAME_18("tips.game.18"), // Need diamonds? Try mining on Y coordinate 11!
        @PowerNukkitOnly @Since("FUTURE") GAME_19("tips.game.19"), // Before you mine diamonds, redstone or gold, make sure you're using an iron, diamond, or netherite pickaxe or the ore won't drop.
        @PowerNukkitOnly @Since("FUTURE") GAME_20("tips.game.20"), // Need coal for torches or fuel? Try smelting wood logs in a furnace to make charcoal!
        @PowerNukkitOnly @Since("FUTURE") GAME_21("tips.game.21"), // Gold is more abundant in Badlands biomes!
        @PowerNukkitOnly @Since("FUTURE") GAME_22("tips.game.22"), // Elytra can be used to glide, find them in End City ships!
        @PowerNukkitOnly @Since("FUTURE") GAME_23("tips.game.23"), // Test out some new features by turning on some Experiments!
        @PowerNukkitOnly @Since("FUTURE") GAME_24("tips.game.24"), // Tridents are dropped by the Drowned, and can be held or thrown.
        @PowerNukkitOnly @Since("FUTURE") GAME_25("tips.game.25"), // You can breed Hoglins with Crimson Fungus, but it is dangerous!
        @PowerNukkitOnly @Since("FUTURE") GAME_26("tips.game.26"), // You can smelt 20 items in a furnace by using a block of dried kelp as fuel.
        @PowerNukkitOnly @Since("FUTURE") GAME_27("tips.game.27"), // Monsters that are killed by skeletons arrows have a chance of dropping music discs.
        @PowerNukkitOnly @Since("FUTURE") GAME_28("tips.game.28"), // People like YOU make Marketplace content!
        @PowerNukkitOnly @Since("FUTURE") GAME_29("tips.game.29"), // Did you know that several community creators make a living off the content in the Marketplace?
        @PowerNukkitOnly @Since("FUTURE") GAME_30("tips.game.30"), // You can find skins to customize your experience in-game, or on select platforms use your own!
        @PowerNukkitOnly @Since("FUTURE") GAME_31("tips.game.31"), // Texture packs change the way that blocks, items, and even the menus look in game. Try them out!
        @PowerNukkitOnly @Since("FUTURE") GAME_32("tips.game.32"), // Check out the Marketplace to find new worlds and adventures.
        @PowerNukkitOnly @Since("FUTURE") GAME_33("tips.game.33"), // Apply to become a Marketplace Creator!
        @PowerNukkitOnly @Since("FUTURE") GAME_34("tips.game.34"), // Mash-up packs come with a world to explore, skins, textures, and even new music.
        @PowerNukkitOnly @Since("FUTURE") GAME_35("tips.game.35"), // Did you know there are over 500 community-created Marketplace packs with more added every week?
        @PowerNukkitOnly @Since("FUTURE") GAME_36("tips.game.36"), // Join the discussion at discord.gg/Minecraft
        @PowerNukkitOnly @Since("FUTURE") GAME_37("tips.game.37"), // Emerald ores are the rarest ores in Minecraft! They can only be found in extreme hill biomes!
        @PowerNukkitOnly @Since("FUTURE") GAME_38("tips.game.38"), // Taming a skeleton horse doesn't require a saddle.
        @PowerNukkitOnly @Since("FUTURE") GAME_39("tips.game.39"), // Ocelots show creepers who's boss!
        @PowerNukkitOnly @Since("FUTURE") GAME_40("tips.game.40"), // Diorite, you either love it or hate it.
        @PowerNukkitOnly @Since("FUTURE") GAME_41("tips.game.41"), // Phantoms are dangerous mobs that appear during the night. Make sure to sleep regularly!
        @PowerNukkitOnly @Since("FUTURE") GAME_42("tips.game.42"), // Zombies turn into Drowned if they sink underwater.
        @PowerNukkitOnly @Since("FUTURE") GAME_43("tips.game.43"), // Minecraft Live takes place every year! Look out for the next one!
        @PowerNukkitOnly @Since("FUTURE") GAME_44("tips.game.44"), // Using fireworks boosts elytra speed in mid air. Just... make sure they don't explode, otherwise it'll hurt BADLY!
        @PowerNukkitOnly @Since("FUTURE") GAME_45("tips.game.45"), // Gold is most common in the Nether and Badlands biomes.
        @PowerNukkitOnly @Since("FUTURE") GAME_46("tips.game.46"), // Do people actually read these?
        @PowerNukkitOnly @Since("FUTURE") GAME_47("tips.game.47"), // Infinite wonders, Endless possibilities.
        @PowerNukkitOnly @Since("FUTURE") GAME_48("tips.game.48"), // DON'T LEAVE TREES FLOATING!
        @PowerNukkitOnly @Since("FUTURE") GAME_49("tips.game.49"), // Sprint in water to swim!
        @PowerNukkitOnly @Since("FUTURE") GAME_50("tips.game.50"), // Riptide enchantment will propel you through the air in the rain.
        @PowerNukkitOnly @Since("FUTURE") GAME_51("tips.game.51"), // Minecraft Live is a worldwide interactive live-streaming event. Grab your items and join the party!
        @PowerNukkitOnly @Since("FUTURE") GAME_52("tips.game.52"), // Be nice to animals!
        @PowerNukkitOnly @Since("FUTURE") GAME_53("tips.game.53"), // The Beacon is a powerful item that can only be crafted with a nether star from the Wither!
        @PowerNukkitOnly @Since("FUTURE") GAME_54("tips.game.54"), // Don't kill dolphins, you monster!
        @PowerNukkitOnly @Since("FUTURE") GAME_55("tips.game.55"), // Did you know that nether stars can't be destroyed by explosions?
        @PowerNukkitOnly @Since("FUTURE") GAME_56("tips.game.56"), // When digging straight up, place a torch at your feet to break any sand or gravel that could potentially fall down on you.
        @PowerNukkitOnly @Since("FUTURE") GAME_57("tips.game.57"), // You can barter with Piglins.
        @PowerNukkitOnly @Since("FUTURE") GAME_58("tips.game.58"), // Shear a Beehive or nest to get Honeycomb, use a Bottle to get honey.
        @PowerNukkitOnly @Since("FUTURE") GAME_59("tips.game.59"), // Place a Campfire under a Beehive or nest to harvest honey peacefully. Your bees will thank you.
        @PowerNukkitOnly @Since("FUTURE") GAME_60("tips.game.60"), // Respawning in the Nether requires a charged Respawn Anchor.
        @PowerNukkitOnly @Since("FUTURE") GAME_61("tips.game.61"), // You can charge a Respawn Anchor with Glowstone.
        @PowerNukkitOnly @Since("FUTURE") GAME_62("tips.game.62"), // Playing on iOS, Android, or FireOS? Get the free Minecraft Original Music Pack from the Marketplace for the full Minecraft experience.
        ;
        private final String code; Tips(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Splitscreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") JOINPROMPT("splitscreen.joinPrompt"), // Join as Player %s
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_TOASTHEADER("splitscreen.unavailable.toastHeader"), // Split Screen Is Unavailable
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_TOASTMESSAGE("splitscreen.unavailable.toastMessage"), // A second player can't join right now.
        @PowerNukkitOnly @Since("FUTURE") UNAVAILABLE_TOASTBODYINFO("splitscreen.unavailable.toastBodyInfo"), // Tap for more information.
        @PowerNukkitOnly @Since("FUTURE") JOYCONERROR_TOASTHEADER("splitscreen.joyconError.toastHeader"), // Can't Connect Joy-Con!
        @PowerNukkitOnly @Since("FUTURE") JOYCONERROR_TOASTMESSAGE("splitscreen.joyconError.toastMessage"), // You have too many controllers connected while in Local Network Mode to join this game.
        ;
        private final String code; Splitscreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Usermanagement implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") CHANGEUSER("usermanagement.changeUser"), // Change User
        ;
        private final String code; Usermanagement(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum LateJoinScreen implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") WAITINGFORUSERREADY("lateJoinScreen.waitingForUserReady"), // Getting things ready
        ;
        private final String code; LateJoinScreen(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Hbui implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTDETAILS_ANOTHERPLATFORM("hbui.AchievementDetails.anotherPlatform"), // Completed on another platform
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTDETAILS_COMPLETED("hbui.AchievementDetails.completed"), // Completed
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTDETAILS_GAMERSCORE("hbui.AchievementDetails.gamerscore"), // Gamerscore
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTDETAILS_LOCKED("hbui.AchievementDetails.locked"), // Locked
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTDETAILS_YES("hbui.AchievementDetails.yes"), // Yes
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTDETAILSROUTE_ERRORMESSAGE("hbui.AchievementDetailsRoute.errorMessage"), // Achievement couldn’t load. Please try again or check your internet connection.
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTDETAILSROUTE_NARRATION_COMPLETED("hbui.AchievementDetailsRoute.narration.completed"), // completed
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTDETAILSROUTE_NARRATION_GAMERSCORE("hbui.AchievementDetailsRoute.narration.gamerscore"), // gamerscore
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTDETAILSROUTE_NARRATION_LOADINGMESSAGE("hbui.AchievementDetailsRoute.narration.loadingMessage"), // Loading
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTDETAILSROUTE_NARRATION_LOCKED("hbui.AchievementDetailsRoute.narration.locked"), // locked
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTDETAILSROUTE_NARRATION_PERCENTAGE("hbui.AchievementDetailsRoute.narration.percentage"), // %1$s of %2$s
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTDETAILSROUTE_NARRATION_PROGRESS("hbui.AchievementDetailsRoute.narration.progress"), // progress
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTDETAILSROUTE_NARRATION_REWARDLOCKED("hbui.AchievementDetailsRoute.narration.rewardLocked"), // reward locked
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTDETAILSROUTE_NARRATION_REWARDUNLOCKED("hbui.AchievementDetailsRoute.narration.rewardUnlocked"), // reward unlocked
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTDETAILSROUTE_NARRATION_TITLE("hbui.AchievementDetailsRoute.narration.title"), // achievement details
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTDETAILSROUTE_REWARD("hbui.AchievementDetailsRoute.reward"), // Reward
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTDETAILSROUTE_TITLE("hbui.AchievementDetailsRoute.title"), // Achievement Details
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTDETAILSROUTE_TITLENARRATION("hbui.AchievementDetailsRoute.titleNarration"), // Achievement Details Screen
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTDETAILSROUTE_VIEWREWARD("hbui.AchievementDetailsRoute.viewReward"), // View reward
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTLISTITEM_COMPLETED("hbui.AchievementListItem.completed"), // Completed
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTLISTITEM_GAMERSCORENARRATION("hbui.AchievementListItem.gamerscoreNarration"), // gamerscore %1$s
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTLISTITEM_GROUPNARRATION("hbui.AchievementListItem.groupNarration"), // Group %1$s of %2$s
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTLISTITEM_INPROGRESS("hbui.AchievementListItem.inProgress"), // In progress
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTLISTITEM_LOCKED("hbui.AchievementListItem.locked"), // Locked
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTLISTITEM_NARRATIONCOMPLETED("hbui.AchievementListItem.narrationCompleted"), // %1$s of %2$s, unlocked, %3$s gamerscore
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTLISTITEM_NARRATIONLOCKED("hbui.AchievementListItem.narrationLocked"), // %1$s of %2$s, locked, %3$s gamerscore 
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTLISTITEM_PERCENTAGENARRATION("hbui.AchievementListItem.percentageNarration"), // progress of %1$s percent
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTLISTITEM_REWARDLOCKEDNARRATION("hbui.AchievementListItem.rewardLockedNarration"), // Reward locked
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTLISTITEM_REWARDUNLOCKEDNARRATION("hbui.AchievementListItem.rewardUnlockedNarration"), // Reward unlocked
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTLISTITEM_SIBLINGNARRATION("hbui.AchievementListItem.siblingNarration"), // Button %1$s of %2$s
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTLISTITEM_VIEW("hbui.AchievementListItem.view"), // View details
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTREWARD_NARRATION_REWARDLOCKED("hbui.AchievementReward.narration.rewardLocked"), // reward locked
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTREWARD_NARRATION_REWARDUNLOCKED("hbui.AchievementReward.narration.rewardUnlocked"), // reward unlocked
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTREWARD_REWARD("hbui.AchievementReward.reward"), // Reward
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTREWARD_VIEWREWARD("hbui.AchievementReward.viewReward"), // View reward
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTS_ALL("hbui.Achievements.all"), // All
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTS_COMPLETED("hbui.Achievements.completed"), // Completed
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTS_COMPLETEDEMPTYTEXT("hbui.Achievements.completedEmptyText"), // Complete achievements to admire them here.
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTS_COMPLETEDEMPTYTITLE("hbui.Achievements.completedEmptyTitle"), // Nothing to see here... yet!
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTS_ERRORMESSAGE("hbui.Achievements.errorMessage"), // Please try again or check your internet connection.
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTS_ERRORMESSAGETITLE("hbui.Achievements.errorMessageTitle"), // Uh oh! Achievements couldn’t load.
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTS_INPROGRESS("hbui.Achievements.inProgress"), // In progress
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTS_LOADING("hbui.Achievements.loading"), // Fetching achievements...
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTS_LOCKED("hbui.Achievements.locked"), // Locked
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTS_LOCKEDEMPTYTEXT("hbui.Achievements.lockedEmptyText"), // You've completed all achievements.
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTS_LOCKEDEMPTYTITLE("hbui.Achievements.lockedEmptyTitle"), // Wow, you're amazing!
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTS_NARRATION_LOADINGMESSAGE("hbui.Achievements.narration.loadingMessage"), // Loading
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTS_NARRATION_SELECTED("hbui.Achievements.narration.selected"), // selected
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTS_NARRATION_TAB("hbui.Achievements.narration.tab"), // %1$s, tab %2$s of %3$s
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTS_NARRATION_TITLE("hbui.Achievements.narration.title"), // Achievements screen
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTS_TITLE("hbui.Achievements.title"), // Achievements
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSSUMMARY_GAMERSCORE("hbui.AchievementsSummary.gamerscore"), // Gamerscore
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSSUMMARY_HOURSPLAYED("hbui.AchievementsSummary.hoursPlayed"), // %1$s hours
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSSUMMARY_NARRATORCOMPLETEDACHIEVEMENTS("hbui.AchievementsSummary.narratorCompletedAchievements"), // completed %1$s of %2$s
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSSUMMARY_NARRATORCOMPLETEDREWARDS("hbui.AchievementsSummary.narratorCompletedRewards"), // Rewards %1$s of %2$s
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSSUMMARY_NARRATORGAMERSCORE("hbui.AchievementsSummary.narratorGamerscore"), // Gamerscore %1$s of %2$s
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSSUMMARY_NARRATORINDEX("hbui.AchievementsSummary.narratorIndex"), // %1$s of %2$s
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSSUMMARY_NARRATORINPROGRESS("hbui.AchievementsSummary.narratorInProgress"), // In progress %1$s
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSSUMMARY_NARRATORPERCENTAGE("hbui.AchievementsSummary.narratorPercentage"), // %1$s percent progress
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSSUMMARY_NARRATORSUMMARY("hbui.AchievementsSummary.narratorSummary"), // Achievements summary
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSSUMMARY_NARRATORTEXTBLOCK("hbui.AchievementsSummary.narratorTextBlock"), // Text block
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSSUMMARY_NARRATORTIMEPLAYED("hbui.AchievementsSummary.narratorTimePlayed"), // Time played %1$s hours
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSSUMMARY_PERCENTAGE("hbui.AchievementsSummary.percentage"), // %1$s of %2$s completed
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSSUMMARY_PROGRESS("hbui.AchievementsSummary.progress"), // In progress
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSSUMMARY_REWARDS("hbui.AchievementsSummary.rewards"), // Rewards
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENTSSUMMARY_TIME("hbui.AchievementsSummary.time"), // Time played
        @PowerNukkitOnly @Since("FUTURE") BACKBUTTON_BACK("hbui.BackButton.back"), // Back
        @PowerNukkitOnly @Since("FUTURE") BACKBUTTON_NARRATION_BACKBUTTON("hbui.BackButton.narration.backButton"), // Back button
        @PowerNukkitOnly @Since("FUTURE") BASETEXTFIELD_DESELECT("hbui.BaseTextField.deselect"), // Deselect
        @PowerNukkitOnly @Since("FUTURE") BASETEXTFIELD_SELECT("hbui.BaseTextField.select"), // Select
        @PowerNukkitOnly @Since("FUTURE") BUTTON_BUTTON("hbui.Button.button"), // button
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_BONUSCHESTDESCRIPTION("hbui.CreateNewWorld.advanced.bonusChestDescription"), // Spawn close to a chest with items to get you started
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_BONUSCHESTTITLE("hbui.CreateNewWorld.advanced.bonusChestTitle"), // Bonus chest
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_FIRESSPREADSDESCRIPTION("hbui.CreateNewWorld.advanced.firesSpreadsDescription"), // Fire can spread between entities
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_FIRESSPREADSTITLE("hbui.CreateNewWorld.advanced.firesSpreadsTitle"), // Fire spreads
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_FRIENDLYFIREDESCRIPTION("hbui.CreateNewWorld.advanced.friendlyFireDescription"), // Players can damage each other
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_FRIENDLYFIRETITLE("hbui.CreateNewWorld.advanced.friendlyFireTitle"), // Friendly fire
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_IMMEDIATERESPAWNDESCRIPTION("hbui.CreateNewWorld.advanced.immediateRespawnDescription"), // Skip “You died!” menu and immediately respawn
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_IMMEDIATERESPAWNTITLE("hbui.CreateNewWorld.advanced.immediateRespawnTitle"), // Immediate respawn
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_MOBLOOTDESCRIPTION("hbui.CreateNewWorld.advanced.mobLootDescription"), // Mobs drop items when killed
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_MOBLOOTTITLE("hbui.CreateNewWorld.advanced.mobLootTitle"), // Mob loot
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_NATURALREGENERATIONDESCRIPTION("hbui.CreateNewWorld.advanced.naturalRegenerationDescription"), // Gain or lose health based on your hunger
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_NATURALREGENERATIONTITLE("hbui.CreateNewWorld.advanced.naturalRegenerationTitle"), // Natural regeneration
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_RESPAWNRADIUSDESCRIPTION("hbui.CreateNewWorld.advanced.respawnRadiusDescription"), // Respawn within this block radius when you die and no custom spawnpoint is set. Max value of 128.
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_RESPAWNRADIUSLABEL("hbui.CreateNewWorld.advanced.respawnRadiusLabel"), // Respawn radius
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_RESPAWNRADIUSPLACEHOLDER("hbui.CreateNewWorld.advanced.respawnRadiusPlaceholder"), // 5
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_SHOWCOORDINATESDESCRIPTION("hbui.CreateNewWorld.advanced.showCoordinatesDescription"), // Display your current position
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_SHOWCOORDINATESTITLE("hbui.CreateNewWorld.advanced.showCoordinatesTitle"), // Show coordinates
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_SIMULATIONDISTANCEDESCRIPTION("hbui.CreateNewWorld.advanced.simulationDistanceDescription"), // The game loads and applies changes within a 96×96 block radius
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_SIMULATIONDISTANCEOPTION("hbui.CreateNewWorld.advanced.simulationDistanceOption"), // %1$s chunks
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_SIMULATIONDISTANCETITEL("hbui.CreateNewWorld.advanced.simulationDistanceTitel"), // Simulation distance
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_STARTWITHMAPDESCRIPTION("hbui.CreateNewWorld.advanced.startWithMapDescription"), // Spawn with a blank map to explore your world
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_STARTWITHMAPTITLE("hbui.CreateNewWorld.advanced.startWithMapTitle"), // Starting map
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_TILEDROPSDESCRIPTION("hbui.CreateNewWorld.advanced.tileDropsDescription"), // Blocks drop when they’re broken
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_TILEDROPSTITLE("hbui.CreateNewWorld.advanced.tileDropsTitle"), // Tile drops
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_TITLE("hbui.CreateNewWorld.advanced.title"), // Advanced settings
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_TNTEXPLODESDESCRIPTION("hbui.CreateNewWorld.advanced.tntExplodesDescription"), // Red box goes boom
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_TNTEXPLODESTITLE("hbui.CreateNewWorld.advanced.tntExplodesTitle"), // TNT explodes
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_WORLDSEEDDESCRIPTION("hbui.CreateNewWorld.advanced.worldSeedDescription"), // Create a new world based on a specific seed or template. Can’t be changed after creating your world.
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_WORLDSEEDLABEL("hbui.CreateNewWorld.advanced.worldSeedLabel"), // World seed
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_WORLDSEEDPLACEHOLDER("hbui.CreateNewWorld.advanced.worldSeedPlaceholder"), // number
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_WORLDTYPEFLATDESCRIPTION("hbui.CreateNewWorld.advanced.worldTypeFlatDescription"), // <World type description>
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_WORLDTYPEFLATLABEL("hbui.CreateNewWorld.advanced.worldTypeFlatLabel"), // Flat
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_WORLDTYPEINFINITEDESCRIPTION("hbui.CreateNewWorld.advanced.worldTypeInfiniteDescription"), // <World type description>
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_WORLDTYPEINFINITELABEL("hbui.CreateNewWorld.advanced.worldTypeInfiniteLabel"), // Infinite
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_WORLDTYPELIMITEDDESCRIPTION("hbui.CreateNewWorld.advanced.worldTypeLimitedDescription"), // <World type description>
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_WORLDTYPELIMITEDLABEL("hbui.CreateNewWorld.advanced.worldTypeLimitedLabel"), // Limited
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_ADVANCED_WORLDTYPETITLE("hbui.CreateNewWorld.advanced.worldTypeTitle"), // WorldType
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_COMMANDBLOCKSDESCRIPTION("hbui.CreateNewWorld.cheats.commandBlocksDescription"), // Enable usage of command blocks
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_COMMANDBLOCKSTITLE("hbui.CreateNewWorld.cheats.commandBlocksTitle"), // Command blocks
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_DAYLIGHTCYCLEALWAYSNOONDESCRIPTION("hbui.CreateNewWorld.cheats.daylightCycleALwaysNoonDescription"), // In-game time is locked to noon
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_DAYLIGHTCYCLEALWAYSNOONLABEL("hbui.CreateNewWorld.cheats.daylightCycleAlwaysNoonLabel"), // Always noon
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_DAYLIGHTCYCLELOCKDESCRIPTION("hbui.CreateNewWorld.cheats.daylightCycleLockDescription"), // In-game time is locked to current time
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_DAYLIGHTCYCLELOCKLABEL("hbui.CreateNewWorld.cheats.daylightCycleLockLabel"), // Lock time
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_DAYLIGHTCYCLENORMALDESCRIPTION("hbui.CreateNewWorld.cheats.daylightCycleNormalDescription"), // In-game time passes normally, from day to night
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_DAYLIGHTCYCLENORMALLABEL("hbui.CreateNewWorld.cheats.daylightCycleNormalLabel"), // Normal
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_DAYLIGHTCYCLETITLE("hbui.CreateNewWorld.cheats.daylightCycleTitle"), // Daylight cycle
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_DESCRIPTION("hbui.CreateNewWorld.cheats.description"), // Customize the game with cheat settings
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_EDUCATIONDESCRIPTION("hbui.CreateNewWorld.cheats.educationDescription"), // Optimized for desktop devices with decent RAM
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_EDUCATIONTITLE("hbui.CreateNewWorld.cheats.educationTitle"), // Education edition
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_ENTITIESDROPLOOTDESCRIPTION("hbui.CreateNewWorld.cheats.entitiesDropLootDescription"), // Mobs and some other entities drop items when killed
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_ENTITIESDROPLOOTTITLE("hbui.CreateNewWorld.cheats.entitiesDropLootTitle"), // Entities drop loot
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_INVENTORYDESCRIPTION("hbui.CreateNewWorld.cheats.inventoryDescription"), // Keep all items in the inventory when you die
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_INVENTORYTITLE("hbui.CreateNewWorld.cheats.inventoryTitle"), // Keep inventory
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_MOBGRIEFINGDESCRIPTION("hbui.CreateNewWorld.cheats.mobGriefingDescription"), // Certain mobs are able to interact with your world
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_MOBGRIEFINGTITLE("hbui.CreateNewWorld.cheats.mobGriefingTitle"), // Mob griefing
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_MOBSPAWNINGDESCRIPTION("hbui.CreateNewWorld.cheats.mobSpawningDescription"), // Mobs spawn naturally
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_MOBSPAWNINGTITLE("hbui.CreateNewWorld.cheats.mobSpawningTitle"), // Mob spawning
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_REGENERATIONDESCRIPTION("hbui.CreateNewWorld.cheats.regenerationDescription"), // Gain health when your hunger bar is full
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_REGENERATIONTITLE("hbui.CreateNewWorld.cheats.regenerationTitle"), // Natural regeneration
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_SETTINGSTITLE("hbui.CreateNewWorld.cheats.settingsTitle"), // Cheat settings
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_TITLE("hbui.CreateNewWorld.cheats.title"), // Cheats
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_WEATHERDESCRIPTION("hbui.CreateNewWorld.cheats.weatherDescription"), // Enable precipitation and thunderstorms
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_CHEATS_WEATHERTITLE("hbui.CreateNewWorld.cheats.weatherTitle"), // Weather cycle
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_GENERAL_DIFFICULTYEASYTITLE("hbui.CreateNewWorld.general.difficultyEasyTitle"), // Easy
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_GENERAL_DIFFICULTYHARDTITLE("hbui.CreateNewWorld.general.difficultyHardTitle"), // Hard
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_GENERAL_DIFFICULTYNORMALTITLE("hbui.CreateNewWorld.general.difficultyNormalTitle"), // Normal
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_GENERAL_DIFFICULTYPEACEFULTITLE("hbui.CreateNewWorld.general.difficultyPeacefulTitle"), // Peaceful
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_GENERAL_WORLDTYPETITLE("hbui.CreateNewWorld.general.worldTypeTitle"), // World type
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLD_TITLE("hbui.CreateNewWorld.title"), // Create new world
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLDSIDEMENU_CREATE("hbui.CreateNewWorldSideMenu.create"), // Create
        @PowerNukkitOnly @Since("FUTURE") CREATENEWWORLDSIDEMENU_SELECTTAB("hbui.CreateNewWorldSideMenu.selectTab"), // Select
        @PowerNukkitOnly @Since("FUTURE") ERRORMODAL_GOBACK("hbui.ErrorModal.goBack"), // Go back
        @PowerNukkitOnly @Since("FUTURE") ERRORMODAL_GOINGBACK("hbui.ErrorModal.goingBack"), // Going back to the previous screen...
        @PowerNukkitOnly @Since("FUTURE") ERRORMODAL_TITLE("hbui.ErrorModal.title"), // An error has occurred
        @PowerNukkitOnly @Since("FUTURE") MENUBUTTON_MENU("hbui.MenuButton.menu"), // Menu
        @PowerNukkitOnly @Since("FUTURE") MENUBUTTON_TOGGLE("hbui.MenuButton.toggle"), // Toggle menu
        @PowerNukkitOnly @Since("FUTURE") MODAL_CLOSE("hbui.Modal.close"), // Close modal
        @PowerNukkitOnly @Since("FUTURE") SECTIONLIST_GROUPNARRATION("hbui.SectionList.groupNarration"), // %1$s, group %2$s of %3$s
        @PowerNukkitOnly @Since("FUTURE") SIDEMENU_SIDEMENUITEM_SELECTED("hbui.SideMenu.sideMenuItem.selected"), // selected
        @PowerNukkitOnly @Since("FUTURE") SWITCH_ELEMENTTYPE("hbui.Switch.elementType"), // switch
        @PowerNukkitOnly @Since("FUTURE") SWITCH_OFF("hbui.Switch.off"), // off
        @PowerNukkitOnly @Since("FUTURE") SWITCH_ON("hbui.Switch.on"), // on
        @PowerNukkitOnly @Since("FUTURE") SWITCH_TOGGLE("hbui.Switch.toggle"), // Toggle
        @PowerNukkitOnly @Since("FUTURE") TABBAR_NOTSELECTED("hbui.TabBar.notSelected"), // not selected
        @PowerNukkitOnly @Since("FUTURE") TABBAR_OPEN("hbui.TabBar.open"), // Open
        @PowerNukkitOnly @Since("FUTURE") TABBAR_SELECTED("hbui.TabBar.selected"), // selected
        @PowerNukkitOnly @Since("FUTURE") TABBAR_SELECTEDTAB("hbui.TabBar.selectedTab"), // %1$s of %2$s
        @PowerNukkitOnly @Since("FUTURE") TABBAR_TAB("hbui.TabBar.tab"), // tab
        @PowerNukkitOnly @Since("FUTURE") TEXTFIELD_CURRENTVALUE("hbui.TextField.currentValue"), // current value
        @PowerNukkitOnly @Since("FUTURE") TEXTFIELD_DISABLED("hbui.TextField.disabled"), // disabled
        @PowerNukkitOnly @Since("FUTURE") TEXTFIELD_EMPTY("hbui.TextField.empty"), // empty
        @PowerNukkitOnly @Since("FUTURE") TEXTFIELD_FIELD("hbui.TextField.field"), // Field
        @PowerNukkitOnly @Since("FUTURE") TOGGLE_COUNT("hbui.Toggle.count"), // %1$s of %2$s
        @PowerNukkitOnly @Since("FUTURE") TOGGLE_ELEMENTTYPE("hbui.Toggle.elementType"), // choice toggle
        @PowerNukkitOnly @Since("FUTURE") TOGGLE_SELECT("hbui.Toggle.select"), // Select
        @PowerNukkitOnly @Since("FUTURE") TOGGLE_SELECTED("hbui.Toggle.selected"), // selected
        ;
        private final String code; Hbui(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Trade implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") DOESNOTWANT("trade.doesNotWant"), // Trader does not want this
        @PowerNukkitOnly @Since("FUTURE") EXCALAMATION("trade.excalamation"), // !
        @PowerNukkitOnly @Since("FUTURE") EXPPROGRESS("trade.expProgress"), // Experience: %d/%d
        @PowerNukkitOnly @Since("FUTURE") EXPMAX("trade.expMax"), // Experience: MAX
        @PowerNukkitOnly @Since("FUTURE") LEVELPREFIX("trade.levelPrefix"), // Level %d
        @PowerNukkitOnly @Since("FUTURE") LEVELPREFIXANDNAME("trade.levelPrefixAndName"), // Level %d - %s
        @PowerNukkitOnly @Since("FUTURE") LEVELPREFIXANDNAME_MAX("trade.levelPrefixAndName.max"), // Max Level - %s
        @PowerNukkitOnly @Since("FUTURE") LEVEL_1("trade.level.1"), // Novice
        @PowerNukkitOnly @Since("FUTURE") LEVEL_2("trade.level.2"), // Apprentice
        @PowerNukkitOnly @Since("FUTURE") LEVEL_3("trade.level.3"), // Journeyman
        @PowerNukkitOnly @Since("FUTURE") LEVEL_4("trade.level.4"), // Expert
        @PowerNukkitOnly @Since("FUTURE") LEVEL_5("trade.level.5"), // Master
        @PowerNukkitOnly @Since("FUTURE") MYSTERIOUSTEXT("trade.mysteriousText"), // dab
        @PowerNukkitOnly @Since("FUTURE") NOTENOUGH("trade.notEnough"), // Not enough %s
        @PowerNukkitOnly @Since("FUTURE") QUESTION("trade.question"), // ?
        @PowerNukkitOnly @Since("FUTURE") TRADE("trade.trade"), // Trade
        ;
        private final String code; Trade(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Contentlog implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") HISTORY_TITLE("contentlog.history.title"), // Content Log History
        @PowerNukkitOnly @Since("FUTURE") HISTORY_COPYTOCLIPBOARD("contentlog.history.copyToClipboard"), // Copy to Clipboard
        @PowerNukkitOnly @Since("FUTURE") LOGLOCATIONSECTIONNAME("contentlog.logLocationSectionName"), // Content Log Location:
        @PowerNukkitOnly @Since("FUTURE") SETTINGSSECTIONNAME("contentlog.settingsSectionName"), // Content Log Settings
        @PowerNukkitOnly @Since("FUTURE") CLEAR_FILES("contentlog.clear_files"), // Delete Old Logs
        @PowerNukkitOnly @Since("FUTURE") DELETE_TITLE("contentlog.delete.title"), // Delete Old Log Files?
        @PowerNukkitOnly @Since("FUTURE") DELETE_BODY1("contentlog.delete.body1"), // Select "Delete Now" to delete all previous log files.
        @PowerNukkitOnly @Since("FUTURE") DELETE_BODY2("contentlog.delete.body2"), // Note: The log file for your currently active session will remain.
        @PowerNukkitOnly @Since("FUTURE") DELETE_DELETE("contentlog.delete.delete"), // Delete Now
        @PowerNukkitOnly @Since("FUTURE") DELETE_CANCEL("contentlog.delete.cancel"), // Cancel
        @PowerNukkitOnly @Since("FUTURE") DELETE_PROGRESS("contentlog.delete.progress"), // Deleting Content Logs
        ;
        private final String code; Contentlog(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Client implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") VERSION_GENERIC("client.version.generic"), // Update %s
        @PowerNukkitOnly @Since("FUTURE") VERSION_1_0("client.version.1.0"), // Ender Update (%s)
        @PowerNukkitOnly @Since("FUTURE") VERSION_1_1("client.version.1.1"), // Discovery Update (%s)
        @PowerNukkitOnly @Since("FUTURE") VERSION_1_2("client.version.1.2"), // Better Together Update (%s)
        @PowerNukkitOnly @Since("FUTURE") VERSION_1_4("client.version.1.4"), // Update Aquatic (%s)
        @PowerNukkitOnly @Since("FUTURE") VERSION_1_5("client.version.1.5"), // Update Aquatic (%s)
        @PowerNukkitOnly @Since("FUTURE") VERSION_1_11("client.version.1.11"), // Village & Pillage (%s)
        ;
        private final String code; Client(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Dr implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") BANNER_SALE("dr.banner.sale"), // Sale!
        @PowerNukkitOnly @Since("FUTURE") BANNER_LIMITEDTIMEOFFER("dr.banner.limitedTimeOffer"), // Limited Time Offer!
        @PowerNukkitOnly @Since("FUTURE") RIGHT_SIDE_CATEGORY_TITLE("dr.right_side.category_title"), // %s
        @PowerNukkitOnly @Since("FUTURE") RARITY("dr.rarity"), // Rarity
        @PowerNukkitOnly @Since("FUTURE") RARITY_COMMON("dr.rarity.common"), // Common
        @PowerNukkitOnly @Since("FUTURE") RARITY_EPIC("dr.rarity.epic"), // Epic
        @PowerNukkitOnly @Since("FUTURE") RARITY_LEGENDARY("dr.rarity.legendary"), // Legendary
        @PowerNukkitOnly @Since("FUTURE") RARITY_RARE("dr.rarity.rare"), // Rare
        @PowerNukkitOnly @Since("FUTURE") RARITY_UNCOMMON("dr.rarity.uncommon"), // Uncommon
        @PowerNukkitOnly @Since("FUTURE") LOADING("dr.loading"), // Loading...
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_ADDITION_SKIN_COUNT("dr.classic_skins.addition_skin_count"), // +%s
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_CHOOSE_CUSTOM_SKIN("dr.classic_skins.choose_custom_skin"), // Choose New Skin
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_CUSTOM_SKIN_TITLE("dr.classic_skins.custom_skin_title"), // Import Skin
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_CUSTOM_SKIN_DESCRIPTION("dr.classic_skins.custom_skin_description"), // Import an image file from your device to use as your skin. This will not sync between devices or games. Players with custom skins will not be visible to you if the "Only Allow Trusted Skins" option is enabled.
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_CUSTOM_SKIN_SECTION_TITLE("dr.classic_skins.custom_skin_section_title"), // Import
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_INVALIDCUSTOMSKIN("dr.classic_skins.invalidCustomSkin"), // That's not a Minecraft skin, silly.
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_OWNED("dr.classic_skins.owned"), // Owned
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_PURCHASABLE("dr.classic_skins.purchasable"), // Get More
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_REALMS_PLUS("dr.classic_skins.realms_plus"), // Realms Plus
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_RIGHT_SIDE_AUTHOR_NAME("dr.classic_skins.right_side.author_name"), // by %s
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_RIGHT_SIDE_AUTHOR_MINECRAFT("dr.classic_skins.right_side.author_minecraft"), // by Minecraft
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_RIGHT_SIDE_FEATURED_TITLE("dr.classic_skins.right_side.featured_title"), // Featured & Recommended Skin Packs
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_RIGHT_SIDE_LIMITED_USAGE("dr.classic_skins.right_side.limited_usage"), // Limited usage
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_RIGHT_SIDE_LIMITED_USAGE_TOOLTIP("dr.classic_skins.right_side.limited_usage.tooltip"), // This skin can be used here, but may not roam.
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_RIGHT_SIDE_FREE_USAGE("dr.classic_skins.right_side.free_usage"), // Usable everywhere
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_RIGHT_SIDE_FREE_USAGE_TOOLTIP("dr.classic_skins.right_side.free_usage.tooltip"), // This skin will roam wherever you've logged in.
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_RIGHT_SIDE_PURCHASING_DISCLAIMER("dr.classic_skins.right_side.purchasing_disclaimer"), // *Buys %s Minecoins for %s and redeems this pack for %s Minecoins leaving %s left over.
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_RIGHT_SIDE_SKIN_COUNT_PLURAL("dr.classic_skins.right_side.skin_count.plural"), // %s Skins
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_RIGHT_SIDE_SKIN_COUNT_SINGULAR("dr.classic_skins.right_side.skin_count.singular"), // %s Skin
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_RIGHT_SIDE_TEXTURE_COUNT_PLURAL("dr.classic_skins.right_side.texture_count.plural"), // %s Texture Packs
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_RIGHT_SIDE_TEXTURE_COUNT_SINGULAR("dr.classic_skins.right_side.texture_count.singular"), // %s Texture Pack
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_RIGHT_SIDE_WORLD_COUNT_PLURAL("dr.classic_skins.right_side.world_count.plural"), // %s Worlds
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_RIGHT_SIDE_WORLD_COUNT_SINGULAR("dr.classic_skins.right_side.world_count.singular"), // %s World
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_SEE_PACK_IN_STORE("dr.classic_skins.see_pack_in_store"), // See Pack in Store
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_REALMS_PLUS_BUTTON("dr.classic_skins.realms_plus_button"), // Realms Plus
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_SELECT_SKIN("dr.classic_skins.select_skin"), // Choose the correct model type for your skin
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_SELECT_SKIN_TITLE("dr.classic_skins.select_skin.title"), // Skin Type
        @PowerNukkitOnly @Since("FUTURE") CLASSIC_SKINS_UPSELLWITHOUTSTORE("dr.classic_skins.upsellWithoutStore"), // You must purchase the skin pack to use that skin, and we can't connect to the Marketplace.
        @PowerNukkitOnly @Since("FUTURE") COLLECT_ACHIEVEMENT_ITEM("dr.collect_achievement_item"), // Collect
        @PowerNukkitOnly @Since("FUTURE") EQUIP_PIECE("dr.equip_piece"), // Equip
        @PowerNukkitOnly @Since("FUTURE") EMOTES_PLAY_AGAIN("dr.emotes.play_again"), // Play Again
        @PowerNukkitOnly @Since("FUTURE") HEADER_ANIMATION("dr.header.animation"), // Emotes
        @PowerNukkitOnly @Since("FUTURE") HEADER_CAPES("dr.header.capes"), // Capes
        @PowerNukkitOnly @Since("FUTURE") ZOOMING("dr.zooming"), // Zooming
        @PowerNukkitOnly @Since("FUTURE") HEADER_CLASSIC_SKINS("dr.header.classic_skins"), // Classic Skins
        @PowerNukkitOnly @Since("FUTURE") HEADER_CREATOR_PIECE_LIST("dr.header.creator_piece_list"), // All by %s
        @PowerNukkitOnly @Since("FUTURE") HEADER_CUSTOMIZATION("dr.header.customization"), // Character Creator
        @PowerNukkitOnly @Since("FUTURE") HEADER_FEATURED("dr.header.featured"), // Featured Items
        @PowerNukkitOnly @Since("FUTURE") HEADER_PREVIEWAPPEARANCE("dr.header.previewAppearance"), // Preview Appearance
        @PowerNukkitOnly @Since("FUTURE") HEADER_COLORPICKER("dr.header.colorPicker"), // Color Picker
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENT_ACHIEVEMENT_LOCKED_NOT_SIGNED_IN("dr.achievement.achievement_locked.not_signed_in"), // This item is unlocked through completing an achievement.
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENT_ACHIEVEMENT_LOCKED_SIGNED_IN("dr.achievement.achievement_locked.signed_in"), // This item is unlocked by completing the %s Achievement.
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENT_ACHIEVEMENT_UNLOCKED("dr.achievement.achievement_unlocked"), // This item was unlocked by completing the %s Achievement.
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENT_CHALLENGE_LOCKED("dr.achievement.challenge_locked"), // This item is unlocked by completing a challenge from Minecraft Earth.
        @PowerNukkitOnly @Since("FUTURE") ACHIEVEMENT_CHALLENGE_UNLOCKED("dr.achievement.challenge_unlocked"), // This item was unlocked by completing a challenge from Minecraft Earth.
        @PowerNukkitOnly @Since("FUTURE") ARM_SIZE_LABEL_TEXT("dr.arm_size_label_text"), // Arm Size
        @PowerNukkitOnly @Since("FUTURE") BODY_SIZE_LABEL_TEXT("dr.body_size_label_text"), // Height
        @PowerNukkitOnly @Since("FUTURE") MOUTH_COLOR("dr.mouth_color"), // Mouth
        @PowerNukkitOnly @Since("FUTURE") IRIS_COLOR("dr.iris_color"), // Iris
        @PowerNukkitOnly @Since("FUTURE") SCLERA_COLOR("dr.sclera_color"), // Sclera
        @PowerNukkitOnly @Since("FUTURE") EYEBROWS_COLOR("dr.eyebrows_color"), // Eyebrows
        @PowerNukkitOnly @Since("FUTURE") HAIR_COLOR("dr.hair_color"), // Hair
        @PowerNukkitOnly @Since("FUTURE") FACIAL_HAIR_COLOR("dr.facial_hair_color"), // Facial Hair
        @PowerNukkitOnly @Since("FUTURE") SKIN_COLOR("dr.skin_color"), // Base
        @PowerNukkitOnly @Since("FUTURE") PRIMARY_CHANNEL("dr.primary_channel"), // Primary
        @PowerNukkitOnly @Since("FUTURE") SECONDARY_CHANNEL("dr.secondary_channel"), // Secondary
        @PowerNukkitOnly @Since("FUTURE") ACCENT_CHANNEL("dr.accent_channel"), // Accents
        @PowerNukkitOnly @Since("FUTURE") LEFT("dr.left"), // Left Side
        @PowerNukkitOnly @Since("FUTURE") RIGHT("dr.right"), // Right Side
        @PowerNukkitOnly @Since("FUTURE") LEFT_ARM("dr.left_arm"), // Left Arm
        @PowerNukkitOnly @Since("FUTURE") RIGHT_ARM("dr.right_arm"), // Right Arm
        @PowerNukkitOnly @Since("FUTURE") LEFT_LEG("dr.left_leg"), // Left Leg
        @PowerNukkitOnly @Since("FUTURE") RIGHT_LEG("dr.right_leg"), // Right Leg
        @PowerNukkitOnly @Since("FUTURE") NONE_BUTTON_TEXT("dr.none_button_text"), // None
        @PowerNukkitOnly @Since("FUTURE") GO_TO_PROFILE_SETTINGS_TEXT("dr.go_to_profile_settings_text"), // Go to Profile Settings
        @PowerNukkitOnly @Since("FUTURE") DEFAULT_PIECE_BUTTON_TEXT("dr.default_piece_button_text"), // Default
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_BODY("dr.categories.body"), // Body
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_STYLE("dr.categories.style"), // Style
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_BASE("dr.categories.base"), // Base
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_EYES("dr.categories.eyes"), // Eyes
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_MOUTH("dr.categories.mouth"), // Mouth
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_HAIR("dr.categories.hair"), // Hair
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_FACIAL_HAIR("dr.categories.facial_hair"), // Facial Hair
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_ARMS("dr.categories.arms"), // Arms
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_LEGS("dr.categories.legs"), // Legs
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_SIZE("dr.categories.size"), // Size
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_TOP("dr.categories.top"), // Top
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_BOTTOM("dr.categories.bottom"), // Bottom
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_OUTERWEAR("dr.categories.outerwear"), // Outerwear
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_HEADWEAR("dr.categories.headwear"), // Headwear
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_GLOVES("dr.categories.gloves"), // Gloves
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_FOOTWEAR("dr.categories.footwear"), // Footwear
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_BACK_ITEM("dr.categories.back_item"), // Back Item
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_FACE_ITEM("dr.categories.face_item"), // Face Item
        @PowerNukkitOnly @Since("FUTURE") CATEGORIES_CAPES("dr.categories.capes"), // Capes
        @PowerNukkitOnly @Since("FUTURE") NOTIFICATION_TO_SKINS("dr.notification.to_skins"), // Switching to Classic Skins
        @PowerNukkitOnly @Since("FUTURE") NOTIFICATION_TO_PERSONA("dr.notification.to_persona"), // Switching to Character Creator
        @PowerNukkitOnly @Since("FUTURE") NOTIFICATION_PERSONA_SAVE("dr.notification.persona_save"), // The Character has been saved
        @PowerNukkitOnly @Since("FUTURE") NOTIFICATION_PERSONA_CREATE("dr.notification.persona_create"), // The Character has been created
        @PowerNukkitOnly @Since("FUTURE") NOTIFICATION_PERSONA_DELETE("dr.notification.persona_delete"), // The Character has been deleted
        @PowerNukkitOnly @Since("FUTURE") NOTIFICATION_ITEM_SELECTION_FAILED("dr.notification.item_selection_failed"), // Failed to select item
        @PowerNukkitOnly @Since("FUTURE") NOTIFICATION_CHARACTER_FAILED("dr.notification.character_failed"), // Failed to load character %s
        @PowerNukkitOnly @Since("FUTURE") NOTIFICATION_CHARACTER_FAILED_START("dr.notification.character_failed_start"), // Failed to load character %s. You can reload it from your Profile.
        @PowerNukkitOnly @Since("FUTURE") NOTIFICATION_EQUIPPED_PIECE("dr.notification.equipped_piece"), // You just equipped the %s
        @PowerNukkitOnly @Since("FUTURE") MODAL_PERSONA_DELETE_CONFIRM("dr.modal.persona_delete_confirm"), // The current character will be deleted
        @PowerNukkitOnly @Since("FUTURE") DEFAULT_ALEX_BOTTOM("dr.default.alex.bottom"), // Alex's Pants
        @PowerNukkitOnly @Since("FUTURE") DEFAULT_ALEX_HAIR("dr.default.alex.hair"), // Alex's Hair
        @PowerNukkitOnly @Since("FUTURE") DEFAULT_ALEX_MOUTH("dr.default.alex.mouth"), // Alex's Mouth
        @PowerNukkitOnly @Since("FUTURE") DEFAULT_ALEX_SHOES("dr.default.alex.shoes"), // Alex's Shoes
        @PowerNukkitOnly @Since("FUTURE") DEFAULT_ALEX_SKIN("dr.default.alex.skin"), // Alex
        @PowerNukkitOnly @Since("FUTURE") DEFAULT_ALEX_TOP("dr.default.alex.top"), // Alex's Shirt
        @PowerNukkitOnly @Since("FUTURE") DEFAULT_EYES("dr.default.eyes"), // Standard Stare
        @PowerNukkitOnly @Since("FUTURE") DEFAULT_STEVE_BOTTOM("dr.default.steve.bottom"), // Steve's Pants
        @PowerNukkitOnly @Since("FUTURE") DEFAULT_STEVE_HAIR("dr.default.steve.hair"), // Steve's Hair
        @PowerNukkitOnly @Since("FUTURE") DEFAULT_STEVE_MOUTH("dr.default.steve.mouth"), // Steve's Mouth
        @PowerNukkitOnly @Since("FUTURE") DEFAULT_STEVE_SHOES("dr.default.steve.shoes"), // Steve's Shoes
        @PowerNukkitOnly @Since("FUTURE") DEFAULT_STEVE_SKIN("dr.default.steve.skin"), // Steve
        @PowerNukkitOnly @Since("FUTURE") DEFAULT_STEVE_TOP("dr.default.steve.top"), // Steve's Shirt
        @PowerNukkitOnly @Since("FUTURE") EMOTES_SLOT("dr.emotes.slot"), // Emote %d
        @PowerNukkitOnly @Since("FUTURE") DEEP_LINK_FAIL_PROFILE("dr.deep_link_fail.profile"), // Deep Linking Failed: Unable to load profile
        @PowerNukkitOnly @Since("FUTURE") DEEP_LINK_FAIL_DRESSING_ROOM("dr.deep_link_fail.dressing_room"), // Deep Linking Failed: Unable to open offer
        @PowerNukkitOnly @Since("FUTURE") COLOR_BUTTON_NAME("dr.color.button_name"), // Color
        @PowerNukkitOnly @Since("FUTURE") COLOR_AIR_FORCE_BLUE("dr.color.air_force_blue"), // Air Force Blue
        @PowerNukkitOnly @Since("FUTURE") COLOR_ALEX_GREEN("dr.color.alex_green"), // Alex Green
        @PowerNukkitOnly @Since("FUTURE") COLOR_ALEX_MOUTH("dr.color.alex_mouth"), // Alex Mouth
        @PowerNukkitOnly @Since("FUTURE") COLOR_ALEX_ORANGE("dr.color.alex_orange"), // Alex Orange
        @PowerNukkitOnly @Since("FUTURE") COLOR_ALEX_SKIN("dr.color.alex_skin"), // Alex Skin
        @PowerNukkitOnly @Since("FUTURE") COLOR_AMULET_GREEN("dr.color.amulet_green"), // Amulet Green
        @PowerNukkitOnly @Since("FUTURE") COLOR_AUBURN_RED("dr.color.auburn_red"), // Auburn Red
        @PowerNukkitOnly @Since("FUTURE") COLOR_BRONCO_VANILLA("dr.color.bronco_vanilla"), // Bronco Vanilla
        @PowerNukkitOnly @Since("FUTURE") COLOR_BRONZE_OLIVE("dr.color.bronze_olive"), // Bronze Olive
        @PowerNukkitOnly @Since("FUTURE") COLOR_BROWN_POD_BLACK("dr.color.brown_pod_black"), // Brown Pod Black
        @PowerNukkitOnly @Since("FUTURE") COLOR_BUNKER_BLUEISH_BLACK("dr.color.bunker_blueish_black"), // Bunker Blueish Black
        @PowerNukkitOnly @Since("FUTURE") COLOR_CAPE_BROWN("dr.color.cape_brown"), // Cape Brown
        @PowerNukkitOnly @Since("FUTURE") COLOR_CELERY_GREEN("dr.color.celery_green"), // Celery Green
        @PowerNukkitOnly @Since("FUTURE") COLOR_CHALKY_BLONDE("dr.color.chalky_blonde"), // Chalky Blonde
        @PowerNukkitOnly @Since("FUTURE") COLOR_COCOA_BROWN("dr.color.cocoa_brown"), // Deep Brown
        @PowerNukkitOnly @Since("FUTURE") COLOR_COOL_BROWN_POD("dr.color.cool_brown_pod"), // Cool Dark Brown
        @PowerNukkitOnly @Since("FUTURE") COLOR_COOL_CHOCOLATE("dr.color.cool_chocolate"), // Cool Chestnut
        @PowerNukkitOnly @Since("FUTURE") COLOR_COOL_MELON("dr.color.cool_melon"), // Cool Melon
        @PowerNukkitOnly @Since("FUTURE") COLOR_COOL_TUFT_BUSH("dr.color.cool_tuft_bush"), // Cool Birch
        @PowerNukkitOnly @Since("FUTURE") COLOR_COOL_TUSCANY("dr.color.cool_tuscany"), // Cool Tuscany
        @PowerNukkitOnly @Since("FUTURE") COLOR_COPPER_RED("dr.color.copper_red"), // Copper Red
        @PowerNukkitOnly @Since("FUTURE") COLOR_DARK_BROWN("dr.color.dark_brown"), // Dark Brown
        @PowerNukkitOnly @Since("FUTURE") COLOR_DARK_BROWN_POD("dr.color.dark_brown_pod"), // Drak Brown Pod
        @PowerNukkitOnly @Since("FUTURE") COLOR_DARK_COMET_GREY("dr.color.dark_comet_grey"), // Dark Comet Grey
        @PowerNukkitOnly @Since("FUTURE") COLOR_DARK_RED("dr.color.dark_red"), // Dark Red
        @PowerNukkitOnly @Since("FUTURE") COLOR_DARK_SALMON("dr.color.dark_salmon"), // Dark Salmon
        @PowerNukkitOnly @Since("FUTURE") COLOR_DARK_WARM_MADRAS("dr.color.dark_warm_madras"), // Drak Warm Madras
        @PowerNukkitOnly @Since("FUTURE") COLOR_DARK_WARM_MIKADO("dr.color.dark_warm_mikado"), // Dark Warm Hazel
        @PowerNukkitOnly @Since("FUTURE") COLOR_DUTCH_BLONDE("dr.color.dutch_blonde"), // Dutch Blonde
        @PowerNukkitOnly @Since("FUTURE") COLOR_GREEN_HOUSE("dr.color.green_house"), // Green House
        @PowerNukkitOnly @Since("FUTURE") COLOR_LIGHT_BROWN("dr.color.light_brown"), // Light Brown
        @PowerNukkitOnly @Since("FUTURE") COLOR_LIGHT_COMET_GREY("dr.color.light_comet_grey"), // Light Comet Grey
        @PowerNukkitOnly @Since("FUTURE") COLOR_LIGHT_GOLD("dr.color.light_gold"), // Light Gold
        @PowerNukkitOnly @Since("FUTURE") COLOR_LIGHT_JORDY_BLUE("dr.color.light_jordy_blue"), // Light Jordy Blue
        @PowerNukkitOnly @Since("FUTURE") COLOR_MAGNOLIA_WHITE("dr.color.magnolia_white"), // Magnolia White
        @PowerNukkitOnly @Since("FUTURE") COLOR_MEDIUM_BLONDE("dr.color.medium_blonde"), // Medium Blonde
        @PowerNukkitOnly @Since("FUTURE") COLOR_MEDIUM_BROWN("dr.color.medium_brown"), // Medium Brown
        @PowerNukkitOnly @Since("FUTURE") COLOR_MINECRAFT_BLACK("dr.color.minecraft_black"), // Minecraft Black
        @PowerNukkitOnly @Since("FUTURE") COLOR_MINECRAFT_BLUE("dr.color.minecraft_blue"), // Minecraft Blue
        @PowerNukkitOnly @Since("FUTURE") COLOR_MINECRAFT_CYAN("dr.color.minecraft_cyan"), // Minecraft Cyan
        @PowerNukkitOnly @Since("FUTURE") COLOR_MINECRAFT_GREEN("dr.color.minecraft_green"), // Minecraft Green
        @PowerNukkitOnly @Since("FUTURE") COLOR_MINECRAFT_GREY("dr.color.minecraft_grey"), // Minecraft Grey
        @PowerNukkitOnly @Since("FUTURE") COLOR_MINECRAFT_LIGHT_BLUE("dr.color.minecraft_light_blue"), // Minecraft Light Blue
        @PowerNukkitOnly @Since("FUTURE") COLOR_MINECRAFT_LIGHT_GREY("dr.color.minecraft_light_grey"), // Minecraft Light Grey
        @PowerNukkitOnly @Since("FUTURE") COLOR_MINECRAFT_LIME_GREEN("dr.color.minecraft_lime_green"), // Minecraft Lime Green
        @PowerNukkitOnly @Since("FUTURE") COLOR_MINECRAFT_MAGENTA("dr.color.minecraft_magenta"), // Minecraft Magenta
        @PowerNukkitOnly @Since("FUTURE") COLOR_MINECRAFT_ORANGE("dr.color.minecraft_orange"), // Minecraft Orange
        @PowerNukkitOnly @Since("FUTURE") COLOR_MINECRAFT_PINK("dr.color.minecraft_pink"), // Minecraft Pink
        @PowerNukkitOnly @Since("FUTURE") COLOR_MINECRAFT_PURPLE("dr.color.minecraft_purple"), // Minecraft Purple
        @PowerNukkitOnly @Since("FUTURE") COLOR_MINECRAFT_RED("dr.color.minecraft_red"), // Minecraft Red
        @PowerNukkitOnly @Since("FUTURE") COLOR_MINECRAFT_WHITE("dr.color.minecraft_white"), // Minecraft White
        @PowerNukkitOnly @Since("FUTURE") COLOR_MINECRAFT_YELLOW("dr.color.minecraft_yellow"), // Minecraft Yellow
        @PowerNukkitOnly @Since("FUTURE") COLOR_MUDDY_WATERS("dr.color.muddy_waters"), // Polished Granite
        @PowerNukkitOnly @Since("FUTURE") COLOR_NEPAL_GREY_BLUE("dr.color.nepal_grey_blue"), // Nepal Grey Blue
        @PowerNukkitOnly @Since("FUTURE") COLOR_NUGGET_BLONDE("dr.color.nugget_blonde"), // Nugget Blonde
        @PowerNukkitOnly @Since("FUTURE") COLOR_PALE_BROWN("dr.color.pale_brown"), // Pale Brown
        @PowerNukkitOnly @Since("FUTURE") COLOR_PEACH_ORANGE("dr.color.peach_orange"), // Peach Orange
        @PowerNukkitOnly @Since("FUTURE") COLOR_PURPLEISH_BLACK("dr.color.purpleish_black"), // Purpleish Black
        @PowerNukkitOnly @Since("FUTURE") COLOR_SALMON("dr.color.salmon"), // Salmon
        @PowerNukkitOnly @Since("FUTURE") COLOR_SEAL_BROWN("dr.color.seal_brown"), // Deep Twilight
        @PowerNukkitOnly @Since("FUTURE") COLOR_SPANISH_WHITE("dr.color.spanish_white"), // Spanish White
        @PowerNukkitOnly @Since("FUTURE") COLOR_SPRING_RAIN_GREEN("dr.color.spring_rain_green"), // Spring Rain Green
        @PowerNukkitOnly @Since("FUTURE") COLOR_STEVE_BLUE("dr.color.steve_blue"), // Steve Blue
        @PowerNukkitOnly @Since("FUTURE") COLOR_STEVE_BROWN("dr.color.steve_brown"), // Steve Brown
        @PowerNukkitOnly @Since("FUTURE") COLOR_STEVE_MOUTH("dr.color.steve_mouth"), // Steve Mouth
        @PowerNukkitOnly @Since("FUTURE") COLOR_STEVE_SKIN("dr.color.steve_skin"), // Steve Skin
        @PowerNukkitOnly @Since("FUTURE") COLOR_STRAWBERRY_BLONDE("dr.color.strawberry_blonde"), // Strawberry Blonde
        @PowerNukkitOnly @Since("FUTURE") COLOR_TANGAROA_DARK_BLUE("dr.color.tangaroa_dark_blue"), // Tangaroa Dark Blue
        @PowerNukkitOnly @Since("FUTURE") COLOR_VANILLA("dr.color.vanilla"), // Vanilla
        @PowerNukkitOnly @Since("FUTURE") COLOR_WARM_BISQUE("dr.color.warm_bisque"), // Warm Bisque
        ;
        private final String code; Dr(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum DressingRoom implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") SKIN_COLOR_PICKER_TITLE("dressingRoom.skin_color_picker_title"), // Skin Color
        ;
        private final String code; DressingRoom(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum OnlinePlay implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") NOTRATED("onlinePlay.notRated"), // Online play is not rated
        @PowerNukkitOnly @Since("FUTURE") MESSAGE("onlinePlay.message"), // During online play you may be exposed to chat messages or other types of user generated content that has not been rated, and may not be suitable for all ages.
        @PowerNukkitOnly @Since("FUTURE") DONOTSHOWAGAIN("onlinePlay.doNotShowAgain"), // Do not show this screen again
        @PowerNukkitOnly @Since("FUTURE") PROCEED("onlinePlay.proceed"), // Proceed
        @PowerNukkitOnly @Since("FUTURE") BACK("onlinePlay.Back"), // Back
        ;
        private final String code; OnlinePlay(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum Emotes implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") CHANGE_EMOTES("emotes.change_emotes"), // Change Emotes
        @PowerNukkitOnly @Since("FUTURE") EXECUTE("emotes.execute"), // Execute
        @PowerNukkitOnly @Since("FUTURE") HEADER_TEXT("emotes.header_text"), // Emotes
        ;
        private final String code; Emotes(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum DynamicPackage implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_STATE_UNKNOWN("dynamicPackage.download.android.state_unknown"), // Starting...
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_STATE_IDLE("dynamicPackage.download.android.state_idle"), // Waiting for download...
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_STATE_FETCHINGURL("dynamicPackage.download.android.state_fetchingUrl"), // Looking for resources...
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_STATE_CONNECTING("dynamicPackage.download.android.state_connecting"), // Connecting
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_STATE_DOWNLOADING("dynamicPackage.download.android.state_downloading"), // Updating
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_STATE_COMPLETED("dynamicPackage.download.android.state_completed"), // Update finished!
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_STATE_PAUSED_NETWORKUNAVAILABLE("dynamicPackage.download.android.state_paused_networkUnavailable"), // Paused – No network available
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_STATE_PAUSED_NETWORKSETUPFAILURE("dynamicPackage.download.android.state_paused_networkSetupFailure"), // Paused – No network available
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_STATE_PAUSED_BYREQUEST("dynamicPackage.download.android.state_paused_byRequest"), // Paused
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_STATE_PAUSED_WIFIUNAVAILABLE("dynamicPackage.download.android.state_paused_wifiUnavailable"), // Paused – No Wi-Fi available
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_STATE_PAUSED_WIFIDISABLED("dynamicPackage.download.android.state_paused_wifiDisabled"), // Paused – No Wi-Fi available
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_STATE_PAUSED_ROAMING("dynamicPackage.download.android.state_paused_roaming"), // Paused – Check roaming settings
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_STATE_PAUSED_SDCARDUNAVAILABLE("dynamicPackage.download.android.state_paused_sdcardUnavailable"), // Paused – Storage unavailable
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_STATE_FAILED_UNLICENSED("dynamicPackage.download.android.state_failed_unlicensed"), // Failed – Unlicensed app
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_STATE_FAILED_FETCHINGURL("dynamicPackage.download.android.state_failed_fetchingUrl"), // Failed – Resources could not be found
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_STATE_FAILED_SDCARDFULL("dynamicPackage.download.android.state_failed_sdcardFull"), // Failed – Storage full
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_STATE_FAILED_CANCELLED("dynamicPackage.download.android.state_failed_cancelled"), // Canceled
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_STATE_FAILED("dynamicPackage.download.android.state_failed"), // Update failed
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_KILOBYTESPERSECOND("dynamicPackage.download.android.kilobytesPerSecond"), // %1$s KB/s					## %1$s is the download speed in kbps
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_TIMEREMAININGNOTIFICATION("dynamicPackage.download.android.timeRemainingNotification"), // %1$s remaining				## %1$s is the time remaining
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_NOTIFICATIONCHANNELNAME("dynamicPackage.download.android.notificationChannelName"), // Update status
        @PowerNukkitOnly @Since("FUTURE") DOWNLOAD_ANDROID_NOTIFICATIONCHANNELDESCRIPTION("dynamicPackage.download.android.NotificationChannelDescription"), // Show update status and progress
        ;
        private final String code; DynamicPackage(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    @PowerNukkitOnly @Since("FUTURE")
    enum GameTest implements TranslationKey {
        @PowerNukkitOnly @Since("FUTURE") DESCRIPTION("gameTest.description"), // Interacts with gametest.
        @PowerNukkitOnly @Since("FUTURE") ERROR_UNKNOWNCOMMANDMODE("gameTest.error.unknownCommandMode"), // Unknown command mode provided
        @PowerNukkitOnly @Since("FUTURE") ERROR_MISSINGSTRUCTURE("gameTest.error.missingStructure"), // Couldn't find any structure block within %s radius
        @PowerNukkitOnly @Since("FUTURE") ERROR_CANNOTFINDLOOKEDATBLOCK("gameTest.error.cannotFindLookedAtBlock"), // Can't find the block you're looking at
        @PowerNukkitOnly @Since("FUTURE") ERROR_CANNOTFINDSTUCTUREBLOCKCONTAININGBLOCK("gameTest.error.cannotFindStuctureBlockContainingBlock"), // Can't find a structure block that contains the targeted pos %s, %s, %s
        @PowerNukkitOnly @Since("FUTURE") ERROR_STRUCTURETOOBIG("gameTest.error.structureTooBig"), // The structure must be less than %s blocks big in each axis
        @PowerNukkitOnly @Since("FUTURE") ERROR_REPEATCOUNTTOOSMALL("gameTest.error.repeatCountTooSmall"), // Repeat count must be greater than 0
        @PowerNukkitOnly @Since("FUTURE") ERROR_FAILCONDITIONMET("gameTest.error.failConditionMet"), // Fail conditions met
        @PowerNukkitOnly @Since("FUTURE") ERROR_TIMEOUT("gameTest.error.timeout"), // Didn't succeed or fail within %s ticks
        @PowerNukkitOnly @Since("FUTURE") ERROR_NOFINISHEDSEQUENCES("gameTest.error.noFinishedSequences"), // No sequences finished
        @PowerNukkitOnly @Since("FUTURE") ERROR_FLAKYTESTERROR("gameTest.error.flakyTestError"), // Not enough successes: %s out of %s attempts. Required successes: %s. Max attempts: %s.
        @PowerNukkitOnly @Since("FUTURE") ASSERT_COULDNOTSETBLOCK("gameTest.assert.couldNotSetBlock"), // Could not setBlock '%s'
        @PowerNukkitOnly @Since("FUTURE") ASSERT_MISSINGBUTTON("gameTest.assert.missingButton"), // Expected a button
        @PowerNukkitOnly @Since("FUTURE") ASSERT_MISSINGLEVER("gameTest.assert.missingLever"), // Expected a lever
        @PowerNukkitOnly @Since("FUTURE") ASSERT_COULDNOTSPAWNENTITY("gameTest.assert.couldNotSpawnEntity"), // Could not spawn Entity of type '%s'
        @PowerNukkitOnly @Since("FUTURE") ASSERT_ONLYWORKSWITHMOBS("gameTest.assert.onlyWorksWithMobs"), // spawnWithoutBehaviors() only works with mobs
        @PowerNukkitOnly @Since("FUTURE") ASSERT_MOBWONTMOVE("gameTest.assert.mobWontMove"), // Could not make the mob move '%s'
        @PowerNukkitOnly @Since("FUTURE") ASSERT_EXPECTENTITYOFTYPE("gameTest.assert.expectEntityOfType"), // Expected Entity of type '%s'
        @PowerNukkitOnly @Since("FUTURE") ASSERT_UNEXPECTEDDATARESULT("gameTest.assert.unexpectedDataResult"), // Unexpected Entity data result
        @PowerNukkitOnly @Since("FUTURE") ASSERT_DIDNOTEXPECTENTITYOFTYPE("gameTest.assert.didNotExpectEntityOfType"), // Did not expect Entity of type '%s'
        @PowerNukkitOnly @Since("FUTURE") ASSERT_EXPECTBLOCK("gameTest.assert.expectBlock"), // Expected Block '%s'
        @PowerNukkitOnly @Since("FUTURE") ASSERT_UNEXPECTEDBLOCK("gameTest.assert.unexpectedBlock"), // Did not expect Block '%s'
        @PowerNukkitOnly @Since("FUTURE") ASSERT_UNEXPECTEDBLOCKSTATE("gameTest.assert.unexpectedBlockState"), // Block does not have the expected Block State
        @PowerNukkitOnly @Since("FUTURE") ASSERT_EXPECTITEMOFTYPE("gameTest.assert.expectItemOfType"), // Expected Item Entity of type %s
        @PowerNukkitOnly @Since("FUTURE") ASSERT_UNEXPECTEDITEMOFTYPE("gameTest.assert.unexpectedItemOfType"), // Did not expect Item Entity of type %s
        @PowerNukkitOnly @Since("FUTURE") ASSERT_WRONGENTITYITEMCOUNT("gameTest.assert.wrongEntityItemCount"), // Unexpected Item Entity count of type %s. Expected: %s. Actual: %s.
        @PowerNukkitOnly @Since("FUTURE") ASSERT_NOCONTAINERFOUND("gameTest.assert.noContainerFound"), // No container found
        @PowerNukkitOnly @Since("FUTURE") ASSERT_EXPECTEMPTYCONTAINER("gameTest.assert.expectEmptyContainer"), // Expected empty container
        @PowerNukkitOnly @Since("FUTURE") ASSERT_EXPECTITEMINCONTAINER("gameTest.assert.expectItemInContainer"), // Container does not contain item of type %s
        @PowerNukkitOnly @Since("FUTURE") ASSERT_MISSINGCOMPONENT("gameTest.assert.missingComponent"), // Entity missing component '%s'
        @PowerNukkitOnly @Since("FUTURE") ASSERT_HASCOMPONENT("gameTest.assert.hasComponent"), // Entity has component '%s'
        @PowerNukkitOnly @Since("FUTURE") ASSERT_MISSINGARMOR("gameTest.assert.missingArmor"), // Entity missing armor %s in slot %s with data %s
        @PowerNukkitOnly @Since("FUTURE") ASSERT_HASARMOR("gameTest.assert.hasArmor"), // Entity has armor %s in slot %s with data %s
        @PowerNukkitOnly @Since("FUTURE") ASSERT_UNEXPECTEDREDSTONEPOWERLEVEL("gameTest.assert.unexpectedRedstonePowerLevel"), // Unexpected Redstone power level. Expected: %s. Actual: %s.
        @PowerNukkitOnly @Since("FUTURE") ASSERT_EXPECTWATERLOGGED("gameTest.assert.expectWaterLogged"), // Expected waterlogged block
        @PowerNukkitOnly @Since("FUTURE") ASSERT_UNEXPECTEDWATERLOGGED("gameTest.assert.unexpectedWaterLogged"), // Did not expect waterlogged block
        @PowerNukkitOnly @Since("FUTURE") SUCCESS_RUNNINGTESTS("gameTest.success.runningTests"), // Running %s tests...
        @PowerNukkitOnly @Since("FUTURE") SUCCESS_RELATIVEPOSITION("gameTest.success.relativePosition"), // Position relative to %s: %s					## first %s is the name of the test and the second %s is the local location in the test structure
        ;
        private final String code; GameTest(final String code) {this.code = code;}
        @PowerNukkitOnly @Since("FUTURE") @Nonnull @Override public String getCode() { return this.code; }
        @Override @Nonnull public String toString() { return "%" + getCode(); }
    }

    //</editor-fold>

    @PowerNukkitOnly
    @Since("FUTURE")
    @Nonnull
    String getCode();

    @PowerNukkitOnly
    @Since("FUTURE")
    @Nonnull
    default String withPrefix(@Nonnull String prefix) {
        return prefix + "%" + getCode();
    }

    @PowerNukkitOnly
    @Since("FUTURE")
    @Nonnull
    default String withFormat(@Nonnull TextFormat format) {
        return withPrefix(format.toString());
    }

    @PowerNukkitOnly
    @Since("FUTURE")
    @Nonnull
    default String withFormat(@Nonnull TextFormat... formats) {
        String code = getCode();
        StringBuilder sb = new StringBuilder(formats.length*2 + 1 + code.length());
        for (TextFormat format : formats) {
            if (format != null) {
                sb.append(format);
            }
        }
        return sb.append('%').append(code).toString();
    }

    @PowerNukkitOnly
    @Since("FUTURE")
    @NonNull
    default TranslationContainer container() {
        return new TranslationContainer(getCode());
    }

    @PowerNukkitOnly
    @Since("FUTURE")
    @NonNull
    default TranslationContainer with(String... params) {
        return new TranslationContainer(getCode(), params);
    }

    @PowerNukkitOnly
    @Since("FUTURE")
    @NonNull
    default TranslationContainer with(TextFormat format) {
        return new TranslationContainer(withFormat(format));
    }


    @PowerNukkitOnly
    @Since("FUTURE")
    @NonNull
    default TranslationContainer with(TextFormat format, String... params) {
        return new TranslationContainer(withFormat(format), params);
    }

    @PowerNukkitOnly
    @Since("FUTURE")
    @NonNull
    default TranslationContainer with(TextFormat format1, TextFormat format2) {
        return new TranslationContainer(withFormat(format1, format2));
    }


    @PowerNukkitOnly
    @Since("FUTURE")
    @NonNull
    default TranslationContainer with(TextFormat format1, TextFormat format2, String... params) {
        return new TranslationContainer(withFormat(format1, format2), params);
    }
}
